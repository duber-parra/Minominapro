{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAEA;AACA;AASA;AACA;;;AAfA;;;;;;AAiBA,MAAM,OAAO,iKAAA,CAAA,eAAY;AASzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EACzC,CAAC;AAGH,MAAM,YAAY,CAGhB,EACA,GAAG,OACkC;IACrC,qBACE,6LAAC,iBAAiB,QAAQ;QAAC,OAAO;YAAE,MAAM,MAAM,IAAI;QAAC;kBACnD,cAAA,6LAAC,iKAAA,CAAA,aAAU;YAAE,GAAG,KAAK;;;;;;;;;;;AAG3B;KAXM;AAaN,MAAM,eAAe;;IACnB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IACtC,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IACrC,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,iBAAc,AAAD;IAElD,MAAM,aAAa,cAAc,aAAa,IAAI,EAAE;IAEpD,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,OAAO;QACL;QACA,MAAM,aAAa,IAAI;QACvB,YAAY,GAAG,GAAG,UAAU,CAAC;QAC7B,mBAAmB,GAAG,GAAG,sBAAsB,CAAC;QAChD,eAAe,GAAG,GAAG,kBAAkB,CAAC;QACxC,GAAG,UAAU;IACf;AACF;GArBM;;QAGiC,iKAAA,CAAA,iBAAc;;;AAwBrD,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EACxC,CAAC;AAGH,MAAM,yBAAW,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,KAAK,CAAA,GAAA,6JAAA,CAAA,QAAW,AAAD;IAErB,qBACE,6LAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAG;kBACpC,cAAA,6LAAC;YAAI,KAAK;YAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;YAAa,GAAG,KAAK;;;;;;;;;;;AAGrE;;AACA,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;IAE9B,qBACE,6LAAC,oIAAA,CAAA,QAAK;QACJ,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,SAAS,oBAAoB;QAC3C,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;;QAVgC;;;;QAAA;;;;AAWhC,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGjC,CAAC,EAAE,GAAG,OAAO,EAAE;;IACf,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG;IAEhE,qBACE,6LAAC,mKAAA,CAAA,OAAI;QACH,KAAK;QACL,IAAI;QACJ,oBACE,CAAC,QACG,GAAG,mBAAmB,GACtB,GAAG,kBAAkB,CAAC,EAAE,eAAe;QAE7C,gBAAc,CAAC,CAAC;QACf,GAAG,KAAK;;;;;;AAGf;;QAfkE;;;;QAAA;;;;AAgBlE,YAAY,WAAW,GAAG;AAE1B,MAAM,gCAAkB,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,EAAE,iBAAiB,EAAE,GAAG;IAE9B,qBACE,6LAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;;QAVgC;;;;QAAA;;;;AAWhC,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;;IACpC,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,OAAO,QAAQ,OAAO,OAAO,WAAW,MAAM;IAEpD,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,wCAAwC;QACrD,GAAG,KAAK;kBAER;;;;;;AAGP;;QAjBmC;;;;QAAA;;;;AAkBnC,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker, type DateFormatter, type DayModifiers, type Matcher } from \"react-day-picker\" // Added DayModifiers, Matcher\nimport type { Locale } from 'date-fns'; // Import Locale type\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\n// --- Added modifier props ---\nexport type CalendarProps = React.ComponentProps<typeof DayPicker> & {\n    locale?: Locale; // Add locale prop\n    modifiers?: DayModifiers; // Allow passing custom modifiers\n    modifiersClassNames?: Record<string, string>; // Allow passing class names for modifiers\n}\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  locale, // Destructure locale\n  modifiers, // Destructure modifiers\n  modifiersClassNames, // Destructure modifier class names\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      locale={locale} // Pass locale to DayPicker\n      modifiers={modifiers} // Pass modifiers\n      modifiersClassNames={{\n          // Adjusted holiday style: use primary text color, medium font weight, and primary border\n          holiday: 'text-primary font-medium border border-primary',\n          ...modifiersClassNames // Merge with any passed modifier classes\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAIA;AAAA;AACA,wRAAkG,8BAA8B;AAGhI;AACA;AARA;;;;;;AAiBA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,MAAM,EACN,SAAS,EACT,mBAAmB,EACnB,GAAG,OACW;IACd,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACA,QAAQ;QACR,WAAW;QACX,qBAAqB;YACjB,yFAAyF;YACzF,SAAS;YACT,GAAG,oBAAoB,yCAAyC;QACpE;QACC,GAAG,KAAK;;;;;;AAGf;KAjES;AAkET,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/calculate-workday.ts"],"sourcesContent":["\n'use server';\n\nimport {\n    parse, format, addHours, addDays,\n    isBefore, isAfter, isEqual, isSameDay,\n    startOfDay, endOfDay, getDay, getHours, getMinutes,\n    differenceInSeconds, setHours, setMinutes, setSeconds, setMilliseconds,\n    isValid, getYear\n} from 'date-fns';\nimport type { z } from 'zod';\nimport type { WorkdayFormValues } from '@/components/workday-form'; // Adjust path if needed\nimport type { CalculationResults, CalculationError } from '@/types';\nimport { getColombianHolidays } from '@/services/colombian-holidays';\nimport { VALORES } from '@/config/payroll-values'; // Import from new location\n\n\n// --- Constantes y Parámetros ---\nconst HORAS_JORNADA_BASE = 7.66; // Horas base antes de considerar extras\nconst HORA_NOCTURNA_INICIO = 21; // 9 PM (inclusive)\nconst HORA_NOCTURNA_FIN = 6;   // 6 AM (exclusive)\n\n// Valores por hora (pesos colombianos)\n// ESTE ES EL OBJETO QUE DEBES ACTUALIZAR SI LOS VALORES CAMBIAN:\n// const VALORES = { ... } // Now imported from @/config/payroll-values\n\n// Cache para festivos\nlet festivosCache: { [year: number]: Set<string> } = {};\n\nasync function getFestivosSet(year: number): Promise<Set<string>> {\n    if (festivosCache[year]) {\n        return festivosCache[year];\n    }\n    try {\n        const holidays = await getColombianHolidays(year);\n        if (!Array.isArray(holidays)) {\n             console.error(`[getFestivosSet] Error: getColombianHolidays(${year}) no devolvió un array.`);\n             throw new Error(`Formato de respuesta inválido para festivos de ${year}.`);\n        }\n        const festivosSet = new Set(holidays.map(h => {\n             if (!h || typeof h.year !== 'number' || typeof h.month !== 'number' || typeof h.day !== 'number') {\n                 console.error(`[getFestivosSet] Error: Estructura de objeto festivo inválida para ${year}:`, h);\n                 return '';\n             }\n             try {\n                const dateToFormat = new Date(h.year, h.month - 1, h.day);\n                if (!isValid(dateToFormat) || getYear(dateToFormat) !== h.year) {\n                    console.error(`[getFestivosSet] Error: Componentes de fecha inválidos para festivo en ${year}:`, h);\n                    return '';\n                }\n                return format(dateToFormat, 'yyyy-MM-dd');\n             } catch (formatError) {\n                 console.error(`[getFestivosSet] Error formateando fecha festiva para ${year}:`, h, formatError);\n                 return '';\n             }\n        }));\n        const validFestivosSet = new Set(Array.from(festivosSet).filter(dateStr => dateStr !== ''));\n        festivosCache[year] = validFestivosSet;\n        return validFestivosSet;\n    } catch (error) {\n        console.error(`[getFestivosSet] Error al obtener o procesar festivos para ${year}:`, error);\n        const userMessage = `Error consultando festivos para ${year}. Verifique la fuente de datos.`;\n        throw new Error(userMessage + ` Detalle: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n\nasync function esFestivo(fecha: Date): Promise<boolean> {\n    const year = getYear(fecha);\n    try {\n        const festivos = await getFestivosSet(year);\n        const fechaStr = format(fecha, 'yyyy-MM-dd');\n        return festivos.has(fechaStr);\n    } catch (error) {\n        console.error(`[esFestivo] Error verificando si ${format(fecha, 'yyyy-MM-dd')} es festivo:`, error);\n        throw new Error(`Error al verificar festivo: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\nfunction esDominical(fecha: Date): boolean {\n    return getDay(fecha) === 0; // 0 = Domingo\n}\n\nfunction parseTimeString(timeStr: string | undefined): { hours: number; minutes: number } | null {\n    if (!timeStr || !/^\\d{2}:\\d{2}$/.test(timeStr)) return null;\n    const [hours, minutes] = timeStr.split(':').map(Number);\n    return { hours, minutes };\n}\n\n\n// --- Lógica Principal de Cálculo ---\nexport async function calculateSingleWorkday(\n    values: WorkdayFormValues,\n    id: string\n): Promise<CalculationResults | CalculationError> {\n\n    try {\n        const { startDate, startTime, endTime, endsNextDay, includeBreak, breakStartTime, breakEndTime } = values;\n\n        // --- Parseo y Validación Inicial ---\n        if (!startDate || !isValid(startDate)) {\n            return { error: `ID ${id}: Fecha de inicio inválida.` };\n        }\n        const inicioDtStr = `${format(startDate, 'yyyy-MM-dd')} ${startTime}`;\n        const inicioDt = parse(inicioDtStr, 'yyyy-MM-dd HH:mm', new Date());\n\n        if (!isValid(inicioDt)) {\n            return { error: `ID ${id}: Fecha u hora de inicio inválida (${inicioDtStr}).` };\n        }\n\n        let finDtBase = startDate;\n        if (endsNextDay) {\n            finDtBase = addDays(startDate, 1);\n        }\n        const finDtStr = `${format(finDtBase, 'yyyy-MM-dd')} ${endTime}`;\n        const finDt = parse(finDtStr, 'yyyy-MM-dd HH:mm', new Date());\n\n\n        if (!isValid(finDt)) {\n            return { error: `ID ${id}: Fecha u hora de fin inválida (${finDtStr}).` };\n        }\n\n        if (isBefore(finDt, inicioDt) || isEqual(finDt, inicioDt)) {\n            return { error: `ID ${id}: La hora de fin debe ser posterior a la hora de inicio.` };\n        }\n\n        let parsedBreakStart: { hours: number; minutes: number } | null = null;\n        let parsedBreakEnd: { hours: number; minutes: number } | null = null;\n        let breakDurationSeconds = 0;\n\n        if (includeBreak) {\n            parsedBreakStart = parseTimeString(breakStartTime);\n            parsedBreakEnd = parseTimeString(breakEndTime);\n\n            if (!parsedBreakStart || !parsedBreakEnd) {\n                 return { error: `ID ${id}: Formato de hora de descanso inválido (HH:mm).` };\n            }\n\n             const breakStartTotalMinutes = parsedBreakStart.hours * 60 + parsedBreakStart.minutes;\n             const breakEndTotalMinutes = parsedBreakEnd.hours * 60 + parsedBreakEnd.minutes;\n             if (breakEndTotalMinutes > breakStartTotalMinutes) {\n                breakDurationSeconds = (breakEndTotalMinutes - breakStartTotalMinutes) * 60;\n             } else {\n                 console.warn(`ID ${id}: Hora fin descanso (${breakEndTime}) no posterior a inicio (${breakStartTime}), ignorando descanso.`);\n                 breakDurationSeconds = 0;\n             }\n        }\n\n        // --- Obtener Festivos ---\n        await getFestivosSet(getYear(inicioDt));\n        if (!isSameDay(inicioDt, finDt)) {\n            await getFestivosSet(getYear(finDt));\n        }\n\n        // --- Inicializar contadores ---\n        let horasClasificadas: CalculationResults['horasDetalladas'] = {\n            \"Ordinaria_Diurna_Base\": 0.0, \"Recargo_Noct_Base\": 0.0, \"Recargo_Dom_Diurno_Base\": 0.0,\n            \"Recargo_Dom_Noct_Base\": 0.0, \"HED\": 0.0, \"HEN\": 0.0, \"HEDD_F\": 0.0, \"HEND_F\": 0.0\n        };\n        let duracionTotalTrabajadaSegundos = 0;\n        let segundosTrabajadosAcumulados = 0;\n\n        // --- Iterar minuto a minuto ---\n        let cursorDt = inicioDt;\n        while (isBefore(cursorDt, finDt)) {\n            const cursorPlusOneMin = addHours(cursorDt, 1 / 60);\n            const puntoEvaluacion = addHours(cursorDt, 1 / 120);\n            const horaEval = getHours(puntoEvaluacion);\n            const minutoEval = getMinutes(puntoEvaluacion);\n\n            let esDescanso = false;\n            if (includeBreak && parsedBreakStart && parsedBreakEnd && breakDurationSeconds > 0) {\n                 const horaActualTotalMinutos = horaEval * 60 + minutoEval;\n                 const inicioDescansoTotalMinutos = parsedBreakStart.hours * 60 + parsedBreakStart.minutes;\n                 const finDescansoTotalMinutos = parsedBreakEnd.hours * 60 + parsedBreakEnd.minutes;\n                 esDescanso = horaActualTotalMinutos >= inicioDescansoTotalMinutos && horaActualTotalMinutos < finDescansoTotalMinutos;\n            }\n\n            if (!esDescanso) {\n                duracionTotalTrabajadaSegundos += 60;\n                segundosTrabajadosAcumulados += 60;\n                const horasTrabajadasAcumuladas = segundosTrabajadosAcumulados / 3600.0;\n                const esHoraExtra = horasTrabajadasAcumuladas > HORAS_JORNADA_BASE;\n\n                let esFestivoDominical: boolean;\n                try {\n                    esFestivoDominical = await esFestivo(puntoEvaluacion) || esDominical(puntoEvaluacion);\n                } catch (holidayError) {\n                     console.error(`ID ${id}: Error verificando festivo/dominical para ${format(puntoEvaluacion, 'yyyy-MM-dd')}:`, holidayError);\n                     // Decide how to handle: throw, return error, or default to false? Returning error is safer.\n                     return { error: `ID ${id}: Error al verificar si ${format(puntoEvaluacion, 'dd/MM')} es festivo/domingo. ${holidayError instanceof Error ? holidayError.message : ''}` };\n                }\n\n                const esNocturna = horaEval >= HORA_NOCTURNA_INICIO || horaEval < HORA_NOCTURNA_FIN;\n\n                let categoria: keyof typeof horasClasificadas | null = null;\n\n                if (esHoraExtra) {\n                    if (esFestivoDominical) categoria = esNocturna ? \"HEND_F\" : \"HEDD_F\";\n                    else categoria = esNocturna ? \"HEN\" : \"HED\";\n                } else {\n                    if (esFestivoDominical) categoria = esNocturna ? \"Recargo_Dom_Noct_Base\" : \"Recargo_Dom_Diurno_Base\";\n                    else if (esNocturna) categoria = \"Recargo_Noct_Base\";\n                    else horasClasificadas[\"Ordinaria_Diurna_Base\"] += 1 / 60;\n                }\n\n                if (categoria && categoria !== \"Ordinaria_Diurna_Base\") {\n                    horasClasificadas[categoria] += 1 / 60;\n                }\n            }\n            cursorDt = cursorPlusOneMin;\n        }\n\n         // --- Calcular Pagos ---\n         let pagoTotalRecargosExtras = 0;\n         const pagoDetallado: { [key: string]: number } = {};\n\n         for (const key in horasClasificadas) {\n             const horas = horasClasificadas[key as keyof typeof horasClasificadas];\n             const valorHora = VALORES[key as keyof typeof VALORES];\n\n             if (valorHora === undefined && key !== \"Ordinaria_Diurna_Base\") {\n                 console.error(`ID ${id}: No se encontró valor para la categoría '${key}' en VALORES.`);\n                 // Consider throwing an error for missing critical configuration\n                 return { error: `ID ${id}: Configuración de pagos incompleta. Falta valor para '${key}'.` };\n             }\n\n             if (horas > 0 && key !== \"Ordinaria_Diurna_Base\") {\n                 const pagoCategoria = horas * (valorHora ?? 0);\n                 pagoTotalRecargosExtras += pagoCategoria;\n                 pagoDetallado[key] = pagoCategoria;\n             } else {\n                 pagoDetallado[key] = 0; // Ensure all keys exist, base diurnal has 0 extra payment\n             }\n         }\n\n        return {\n            id: id,\n            inputData: { ...values, startDate }, // Ensure startDate is passed as Date\n            horasDetalladas: horasClasificadas,\n            pagoDetallado: pagoDetallado,\n            pagoTotalRecargosExtras: pagoTotalRecargosExtras,\n            pagoTotalConSalario: pagoTotalRecargosExtras, // Represents only extras for the day\n            duracionTotalTrabajadaHoras: duracionTotalTrabajadaSegundos / 3600.0,\n        };\n\n    } catch (error) {\n        console.error(`[calculateSingleWorkday: ID ${id}] Error inesperado:`, error);\n        // Provide a more generic but informative error message for unexpected issues\n        const errorMessage = `ID ${id}: Error inesperado en el servidor durante el cálculo. Detalles: ${error instanceof Error ? error.message : String(error)}`;\n        return { error: errorMessage };\n    }\n}\n"],"names":[],"mappings":";;;;;IA2FsB","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/colombian-holidays.ts"],"sourcesContent":["/**\n * Representa una fecha.\n */\nexport interface Date {\n  year: number;\n  month: number; // 1-12\n  day: number;\n}\n\n/**\n * Obtiene de forma asíncrona una lista de festivos colombianos para un año dado.\n *\n * @param year El año para el cual obtener los festivos.\n * @returns Una promesa que resuelve a un array de objetos Date representando los festivos.\n */\nexport async function getColombianHolidays(year: number): Promise<Date[]> {\n  // TODO: Implementar esto llamando a una API externa o usando una biblioteca confiable.\n  // Ejemplo de estructura placeholder:\n  // const response = await fetch(`https://api.example.com/holidays/co/${year}`);\n  // if (!response.ok) {\n  //   throw new Error('Fallo al obtener los festivos');\n  // }\n  // const holidays = await response.json();\n  // return holidays.map(holiday => ({ year: year, month: ..., day: ... }));\n\n   console.warn(`Obteniendo festivos para ${year} - Usando datos de ejemplo. Implementar llamada API.`);\n\n   // Datos de ejemplo SOLO para desarrollo/pruebas\n   if (year === 2024) {\n        return [\n            { year: 2024, month: 1, day: 1 }, { year: 2024, month: 1, day: 8 }, // Año Nuevo, Reyes Magos\n            { year: 2024, month: 3, day: 25 }, { year: 2024, month: 3, day: 28 }, // San José, Jueves Santo\n            { year: 2024, month: 3, day: 29 }, { year: 2024, month: 5, day: 1 }, // Viernes Santo, Día del Trabajo\n            { year: 2024, month: 5, day: 13 }, { year: 2024, month: 6, day: 3 }, // Ascensión del Señor, Corpus Christi\n            { year: 2024, month: 6, day: 10 }, { year: 2024, month: 7, day: 1 }, // Sagrado Corazón, San Pedro y San Pablo\n            { year: 2024, month: 7, day: 20 }, { year: 2024, month: 8, day: 7 }, // Independencia, Batalla de Boyacá\n            { year: 2024, month: 8, day: 19 }, { year: 2024, month: 10, day: 14 }, // Asunción de la Virgen, Día de la Raza\n            { year: 2024, month: 11, day: 4 }, { year: 2024, month: 11, day: 11 }, // Todos los Santos, Independencia de Cartagena\n            { year: 2024, month: 12, day: 8 }, { year: 2024, month: 12, day: 25 } // Inmaculada Concepción, Navidad\n        ];\n   }\n   if (year === 2025) {\n     return [\n       { year: 2025, month: 1, day: 1 }, { year: 2025, month: 1, day: 6 }, // Año Nuevo, Reyes Magos\n       { year: 2025, month: 3, day: 24 }, { year: 2025, month: 4, day: 17 }, // San José, Jueves Santo\n       { year: 2025, month: 4, day: 18 }, { year: 2025, month: 5, day: 1 }, // Viernes Santo, Día del Trabajo\n       { year: 2025, month: 6, day: 2 }, { year: 2025, month: 6, day: 23 }, // Ascensión del Señor, Corpus Christi\n       { year: 2025, month: 6, day: 30 }, { year: 2025, month: 7, day: 20 }, // Sagrado Corazón, San Pedro y San Pablo (Nota: 20 Julio cae Domingo, no se traslada)\n       { year: 2025, month: 8, day: 7 }, { year: 2025, month: 8, day: 18 }, // Batalla de Boyacá, Asunción de la Virgen\n       { year: 2025, month: 10, day: 13 }, { year: 2025, month: 11, day: 3 }, // Día de la Raza, Todos los Santos\n       { year: 2025, month: 11, day: 17 }, { year: 2025, month: 12, day: 8 }, // Independencia de Cartagena, Inmaculada Concepción\n       { year: 2025, month: 12, day: 25 } // Navidad\n     ];\n   }\n    if (year === 2023) {\n        return [\n            { year: 2023, month: 1, day: 1 }, { year: 2023, month: 1, day: 9 },\n            { year: 2023, month: 3, day: 20 }, { year: 2023, month: 4, day: 6 },\n            { year: 2023, month: 4, day: 7 }, { year: 2023, month: 5, day: 1 },\n            { year: 2023, month: 5, day: 22 }, { year: 2023, month: 6, day: 12 },\n            { year: 2023, month: 6, day: 19 }, { year: 2023, month: 7, day: 3 },\n            { year: 2023, month: 7, day: 20 }, { year: 2023, month: 8, day: 7 },\n            { year: 2023, month: 8, day: 21 }, { year: 2023, month: 10, day: 16 },\n            { year: 2023, month: 11, day: 6 }, { year: 2023, month: 11, day: 13 },\n            { year: 2023, month: 12, day: 8 }, { year: 2023, month: 12, day: 25 }\n        ];\n    }\n\n\n  // Retorna array vacío si no hay datos de ejemplo o la API falla en el futuro\n  return [];\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 683, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/time-utils.ts"],"sourcesContent":["// src/lib/time-utils.ts\n\nimport { format as formatFns, parse as parseFns } from 'date-fns';\nimport { es } from 'date-fns/locale'; // Import Spanish locale if needed for 'am/pm'\n\n/**\n * Formats a time string (HH:mm) into 12-hour format (h:mm a).\n * Handles invalid input gracefully.\n *\n * @param timeString - The time string in \"HH:mm\" format.\n * @returns The formatted time string (e.g., \"8:00 AM\") or the original string if invalid.\n */\nexport function formatTo12Hour(timeString: string | undefined): string {\n  if (!timeString || !/^\\d{2}:\\d{2}$/.test(timeString)) {\n    return timeString || ''; // Return original or empty string if invalid/undefined\n  }\n\n  try {\n    // Create a dummy date object with the time to use date-fns formatting\n    const dummyDate = parseFns(timeString, 'HH:mm', new Date());\n    // Format using 'h:mm a' for 12-hour format with AM/PM\n    // Use locale 'es' if you want 'a. m.'/'p. m.' instead of AM/PM\n    return formatFns(dummyDate, 'h:mm a', { locale: es });\n  } catch (error) {\n    console.error(`Error formatting time string \"${timeString}\":`, error);\n    return timeString; // Return original string on error\n  }\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;AAExB;AAAA;AACA,0PAAsC,8CAA8C;;;AAS7E,SAAS,eAAe,UAA8B;IAC3D,IAAI,CAAC,cAAc,CAAC,gBAAgB,IAAI,CAAC,aAAa;QACpD,OAAO,cAAc,IAAI,uDAAuD;IAClF;IAEA,IAAI;QACF,sEAAsE;QACtE,MAAM,YAAY,CAAA,GAAA,wJAAA,CAAA,QAAQ,AAAD,EAAE,YAAY,SAAS,IAAI;QACpD,sDAAsD;QACtD,+DAA+D;QAC/D,OAAO,CAAA,GAAA,yJAAA,CAAA,SAAS,AAAD,EAAE,WAAW,UAAU;YAAE,QAAQ,+IAAA,CAAA,KAAE;QAAC;IACrD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,8BAA8B,EAAE,WAAW,EAAE,CAAC,EAAE;QAC/D,OAAO,YAAY,kCAAkC;IACvD;AACF","debugId":null}},
    {"offset": {"line": 718, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/workday-form.tsx"],"sourcesContent":["\n'use client';\n\nimport type { FC } from 'react';\nimport React, { useState, useEffect, useRef } from 'react'; // Added useRef\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm, useWatch } from 'react-hook-form';\nimport { z } from 'zod';\nimport { format, parse, addHours, isValid, isSameDay, getYear, isSunday, addDays } from 'date-fns'; // Added addDays and isSameDay\nimport { es } from 'date-fns/locale'; // Import Spanish locale\n\nimport { Button } from '@/components/ui/button';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\n// Removed Checkbox import as Switch is used\nimport { Calendar } from '@/components/ui/calendar';\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover';\nimport { cn } from '@/lib/utils';\nimport { CalendarIcon, Loader2, Save, Plus } from 'lucide-react';\nimport { calculateSingleWorkday } from '@/actions/calculate-workday'; // Updated action name\nimport type { CalculationResults, CalculationError } from '@/types';\nimport { useToast } from '@/hooks/use-toast';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Switch } from '@/components/ui/switch';\nimport { getColombianHolidays } from '@/services/colombian-holidays'; // Import holiday service\nimport { formatTo12Hour } from '@/lib/time-utils'; // Import the time formatting helper\n\nconst timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\nconst timeErrorMessage = 'Formato de hora inválido (HH:mm).';\n\n// Export the schema\nexport const formSchema = z.object({\n  startDate: z.date({\n    required_error: 'La fecha de inicio es requerida.',\n  }),\n  startTime: z.string().regex(timeRegex, { message: timeErrorMessage }),\n  endTime: z.string().regex(timeRegex, { message: timeErrorMessage }),\n  endsNextDay: z.boolean().default(false),\n  includeBreak: z.boolean().default(false),\n  breakStartTime: z.string().optional(),\n  breakEndTime: z.string().optional(),\n})\n.refine(\n  (data) => {\n    if (data.includeBreak) {\n      // Check if both times are provided and match the regex format\n      const isBreakStartTimeValid = data.breakStartTime ? timeRegex.test(data.breakStartTime) : false;\n      const isBreakEndTimeValid = data.breakEndTime ? timeRegex.test(data.breakEndTime) : false;\n      return isBreakStartTimeValid && isBreakEndTimeValid;\n    }\n    return true; // No validation needed if break is not included\n  },\n  {\n    // This message appears if either time is missing or format is wrong when includeBreak is true\n    message: \"Si incluye descanso, las horas de inicio y fin son requeridas (formato HH:mm).\",\n    // Apply this error check to both fields, but path targets one for display logic\n    path: [\"breakStartTime\"],\n  }\n)\n.refine(\n    (data) => {\n        // Only validate if break is included AND both times are provided and valid format\n        if (data.includeBreak && data.breakStartTime && timeRegex.test(data.breakStartTime) && data.breakEndTime && timeRegex.test(data.breakEndTime)) {\n             const [startH, startM] = data.breakStartTime.split(':').map(Number);\n             const [endH, endM] = data.breakEndTime.split(':').map(Number);\n             // Check if end time is strictly after start time\n             return endH > startH || (endH === startH && endM > startM);\n        }\n        return true; // Pass validation if break not included or times are invalid/missing (handled by previous refine)\n    },\n    {\n        message: \"La hora de fin del descanso debe ser posterior a la hora de inicio.\",\n        path: [\"breakEndTime\"], // Show error associated with the end time field\n    }\n);\n\n\nexport type WorkdayFormValues = z.infer<typeof formSchema>;\n\ninterface WorkdayFormProps {\n  onCalculationStart: () => void;\n  onCalculationComplete: (results: CalculationResults | CalculationError) => void;\n  isLoading: boolean;\n  initialData?: WorkdayFormValues; // Optional data for editing\n  existingId?: string | null; // Optional ID for editing\n  isDateCalculated?: (date: Date) => boolean; // Function to check if date is already calculated\n}\n\n// Cache for holidays\nlet holidaysCache: { [year: number]: Set<string> } = {};\n\nasync function fetchAndCacheHolidays(year: number): Promise<Set<string>> {\n    if (holidaysCache[year]) {\n        return holidaysCache[year];\n    }\n    try {\n        const holidays = await getColombianHolidays(year);\n        if (!Array.isArray(holidays)) {\n            console.error(`Error: getColombianHolidays(${year}) did not return an array.`);\n            throw new Error(`Formato de respuesta inválido para festivos de ${year}.`);\n        }\n        const holidaySet = new Set(holidays.map(h => format(new Date(h.year, h.month - 1, h.day), 'yyyy-MM-dd')));\n        holidaysCache[year] = holidaySet;\n        return holidaySet;\n    } catch (error) {\n        console.error(`Error fetching or caching holidays for ${year}:`, error);\n        return new Set(); // Return empty set on error\n    }\n}\n\n\nexport const WorkdayForm: FC<WorkdayFormProps> = ({\n  onCalculationStart,\n  onCalculationComplete,\n  isLoading,\n  initialData,\n  existingId,\n  isDateCalculated, // Receive the check function\n}) => {\n  const { toast } = useToast();\n  const form = useForm<WorkdayFormValues>({\n    resolver: zodResolver(formSchema),\n    // Use initialData if provided (editing), otherwise use defaults (adding)\n    defaultValues: initialData ? {\n      ...initialData,\n      startDate: initialData.startDate instanceof Date ? initialData.startDate : new Date(initialData.startDate), // Ensure Date object\n      // Ensure optional break times are empty strings if null/undefined in initial data\n      breakStartTime: initialData.breakStartTime ?? '',\n      breakEndTime: initialData.breakEndTime ?? '',\n    } : {\n      startDate: new Date(),\n      startTime: '12:00', // Default start time 12:00 PM\n      endTime: '22:00',   // Default end time 10:00 PM\n      endsNextDay: false, // Recalculated based on default times if needed\n      includeBreak: false,\n      breakStartTime: '15:00', // Default break start if enabled\n      breakEndTime: '18:00',   // Default break end if enabled\n    },\n  });\n\n   // --- State for Holiday Check ---\n   const [isHoliday, setIsHoliday] = useState<boolean>(false);\n   const [isCheckingHoliday, setIsCheckingHoliday] = useState<boolean>(false);\n\n  // Reset form when initialData changes (i.e., when switching between add/edit or editing different days)\n   useEffect(() => {\n       const resetValues = initialData ? {\n           ...initialData,\n           startDate: initialData.startDate instanceof Date ? initialData.startDate : new Date(initialData.startDate),\n           // Ensure optional break times are handled correctly on reset\n           breakStartTime: initialData.breakStartTime ?? '',\n           breakEndTime: initialData.breakEndTime ?? '',\n       } : {\n           startDate: new Date(),\n           startTime: '12:00', // Reset to default start time\n           endTime: '22:00',   // Reset to default end time\n           endsNextDay: false, // Calculate based on defaults\n           includeBreak: false,\n           breakStartTime: '15:00', // Default break start if enabled\n           breakEndTime: '18:00',   // Default break end if enabled\n       };\n\n       // Calculate endsNextDay based on reset values\n       if (timeRegex.test(resetValues.startTime) && timeRegex.test(resetValues.endTime)) {\n           const [startH] = resetValues.startTime.split(':').map(Number);\n           const [endH] = resetValues.endTime.split(':').map(Number);\n           resetValues.endsNextDay = endH < startH;\n       }\n\n       form.reset(resetValues);\n\n   }, [initialData, form]); // form is stable, but reset is from it\n\n\n  const { control, setValue, trigger, watch, getValues } = form;\n  // Watch fields using the hook for effects\n  const startDate = watch('startDate');\n  const startTime = watch('startTime');\n  const includeBreak = watch('includeBreak');\n\n   // --- Effect to check if startDate is a holiday ---\n   useEffect(() => {\n       if (startDate && isValid(startDate)) {\n           const year = getYear(startDate);\n           const dateStr = format(startDate, 'yyyy-MM-dd');\n           setIsCheckingHoliday(true); // Indicate loading\n\n           fetchAndCacheHolidays(year)\n               .then(holidaySet => {\n                   setIsHoliday(holidaySet.has(dateStr));\n               })\n               .catch(error => {\n                   console.error(\"Error checking holiday status:\", error);\n                   setIsHoliday(false); // Assume not holiday on error\n               })\n               .finally(() => {\n                   setIsCheckingHoliday(false); // Finish loading\n               });\n       } else {\n           setIsHoliday(false); // Not a holiday if date is invalid\n       }\n   }, [startDate]);\n\n\n  // Effect to update endsNextDay when times change\n  useEffect(() => {\n      const currentEndTime = getValues('endTime');\n      if (startTime && timeRegex.test(startTime) && currentEndTime && timeRegex.test(currentEndTime)) {\n          const [startH] = startTime.split(':').map(Number);\n          const [endH] = currentEndTime.split(':').map(Number);\n          setValue('endsNextDay', endH < startH);\n      }\n  }, [startTime, watch('endTime'), setValue, getValues]); // Rerun when startTime or endTime changes\n\n\n   // Ref to track the previous state of includeBreak\n   const prevIncludeBreak = useRef(includeBreak);\n\n   // Effect to trigger validation and set defaults for break times\n   useEffect(() => {\n       if (includeBreak) {\n           // If the switch was just turned ON, set defaults\n           if (!prevIncludeBreak.current) {\n               setValue('breakStartTime', '15:00', { shouldValidate: true });\n               setValue('breakEndTime', '18:00', { shouldValidate: true });\n           } else {\n               // If the switch was already on, just trigger validation when times change\n               trigger([\"breakStartTime\", \"breakEndTime\"]);\n           }\n       }\n       // Update the previous state ref *after* the logic runs\n       prevIncludeBreak.current = includeBreak;\n   }, [includeBreak, trigger, setValue, watch('breakStartTime'), watch('breakEndTime')]); // Trigger also when break times change\n\n\n  async function onSubmit(values: WorkdayFormValues) {\n     // Check if the date is already calculated, only if NOT editing\n     if (!existingId && isDateCalculated && isDateCalculated(values.startDate)) {\n         toast({\n             title: 'Fecha Ya Calculada',\n             description: `Ya existe un cálculo para el ${format(values.startDate, 'PPP', { locale: es })}. Si deseas modificarlo, usa la opción de editar en la lista de turnos.`,\n             variant: 'destructive',\n             duration: 7000,\n         });\n         // Automatically advance to the next day in the form\n         const nextDay = addDays(values.startDate, 1);\n         setValue('startDate', nextDay, { shouldValidate: true, shouldDirty: true });\n         return; // Stop the submission process\n     }\n\n    onCalculationStart();\n    // Generate a new ID if adding, use existing ID if editing\n    const calculationId = existingId || `day_${Date.now()}_${Math.random().toString(36).substring(2, 7)}`;\n    try {\n        // Use the modified action that accepts values and ID\n        const result = await calculateSingleWorkday(values, calculationId);\n        onCalculationComplete(result); // Pass the full result back to the page\n\n        // If adding was successful (no error), automatically set date to the next day\n        if (!existingId && !('error' in result)) {\n             const nextDay = addDays(values.startDate, 1);\n             setValue('startDate', nextDay, { shouldValidate: true, shouldDirty: true });\n             // Optionally reset times or keep them? Resetting might be safer.\n             // setValue('startTime', '12:00');\n             // setValue('endTime', '22:00');\n             // setValue('endsNextDay', false);\n             // setValue('includeBreak', false);\n             // setValue('breakStartTime', '15:00');\n             // setValue('breakEndTime', '18:00');\n             toast({\n                 title: 'Día Agregado, Fecha Avanzada',\n                 description: `Se agregó el turno y la fecha se movió al ${format(nextDay, 'PPP', { locale: es })}.`,\n                 variant: 'default'\n             })\n        }\n    } catch (error) {\n        console.error(\"Calculation error:\", error);\n        const genericServerError = \"Hubo un error en el servidor al calcular.\";\n        const errorMessage = error instanceof Error && error.message ? error.message : genericServerError;\n        onCalculationComplete({ error: errorMessage });\n    }\n  }\n\n\n  return (\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <FormField\n              control={control}\n              name=\"startDate\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-col\">\n                  <FormLabel>Fecha</FormLabel>\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <FormControl>\n                        <Button\n                          variant={'outline'}\n                          className={cn(\n                            'w-full pl-3 text-left font-normal',\n                            !field.value && 'text-muted-foreground',\n                             // Conditional border for holiday and Sunday\n                             isHoliday && 'border-primary border-2', // Use primary border for holiday\n                             !isHoliday && startDate && isSunday(startDate) && 'border-primary border-2' // Keep primary border for Sunday\n                          )}\n                          disabled={isCheckingHoliday} // Disable while checking\n                        >\n                          {isCheckingHoliday ? (\n                              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                          ) : field.value ? (\n                            format(field.value instanceof Date ? field.value : new Date(field.value), 'PPP', { locale: es }) // Ensure it's a Date object\n                          ) : (\n                            <span>Selecciona una fecha</span>\n                          )}\n                          <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                        </Button>\n                      </FormControl>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                      <Calendar\n                        mode=\"single\"\n                        selected={field.value instanceof Date ? field.value : new Date(field.value)} // Ensure Date object\n                        onSelect={(date) => {\n                           if (date) {\n                              field.onChange(date)\n                           }\n                        }} // Handle null case\n                        disabled={(date) =>\n                          date < new Date('1900-01-01')\n                        }\n                        initialFocus\n                        locale={es}\n                         modifiers={{ holiday: (date) => holidaysCache[getYear(date)]?.has(format(date, 'yyyy-MM-dd')) ?? false, sunday: isSunday }}\n                         modifiersClassNames={{\n                             holiday: 'text-primary font-semibold border border-primary', // Style holiday with primary color\n                             sunday: 'text-primary'\n                         }}\n                      />\n                    </PopoverContent>\n                  </Popover>\n                  {/* Display holiday/Sunday indicator */}\n                  {isHoliday && !isCheckingHoliday && (\n                      <p className=\"text-xs text-primary font-semibold mt-1 pl-1\"> • Día festivo</p> // Use primary color text\n                  )}\n                   {!isHoliday && startDate && isSunday(startDate) && !isCheckingHoliday && (\n                      <p className=\"text-xs text-primary font-semibold mt-1 pl-1\"> • Domingo</p> // Use primary text color\n                  )}\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormField\n                control={control}\n                name=\"startTime\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Hora de Inicio</FormLabel>\n                    <FormControl>\n                       {/* Use a text input to display 12-hour format, but store 24-hour */}\n                        <Input\n                            type=\"text\"\n                            value={formatTo12Hour(field.value)}\n                            onFocus={(e) => { e.target.type = 'time' }}\n                            onBlur={(e) => {\n                                if (timeRegex.test(e.target.value)) {\n                                    field.onChange(e.target.value);\n                                }\n                                e.target.type = 'text'; // Revert back to text to show 12-hour format\n                            }}\n                            onChange={(e) => {\n                                // Allow direct changes if type is time\n                                if (e.target.type === 'time') {\n                                     field.onChange(e.target.value);\n                                }\n                                // Basic parsing attempt if user types in text field (less robust)\n                                // Might need a dedicated time picker component for better UX\n                            }}\n                            className=\"text-base\"\n                        />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={control}\n                name=\"endTime\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Hora de Fin</FormLabel>\n                    <FormControl>\n                       {/* Use a text input to display 12-hour format, but store 24-hour */}\n                        <Input\n                            type=\"text\"\n                            value={formatTo12Hour(field.value)}\n                             onFocus={(e) => { e.target.type = 'time' }}\n                             onBlur={(e) => {\n                                if (timeRegex.test(e.target.value)) {\n                                    field.onChange(e.target.value);\n                                }\n                                e.target.type = 'text';\n                            }}\n                            onChange={(e) => {\n                                if (e.target.type === 'time') {\n                                    field.onChange(e.target.value);\n                                }\n                            }}\n                            className=\"text-base\"\n                        />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <FormField\n              control={control}\n              name=\"endsNextDay\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-3 shadow-sm bg-secondary/50\">\n                   <div className=\"space-y-0.5\">\n                    <FormLabel>¿Termina al día siguiente?</FormLabel>\n                   </div>\n                  <FormControl>\n                    <Switch\n                      checked={field.value}\n                      onCheckedChange={field.onChange}\n                      aria-readonly // Although interactive, indicates calculated nature\n                    />\n                  </FormControl>\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={control}\n              name=\"includeBreak\"\n              render={({ field }) => (\n                 <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-3 shadow-sm bg-secondary/50\">\n                   <div className=\"space-y-0.5\">\n                       <FormLabel>Incluir descanso</FormLabel>\n                   </div>\n                   <FormControl>\n                       <Switch\n                           checked={field.value}\n                           onCheckedChange={field.onChange}\n                       />\n                   </FormControl>\n                 </FormItem>\n              )}\n            />\n\n           {/* Conditional rendering based on the watched value */}\n           {includeBreak && (\n             <Card className=\"bg-muted/30 border-dashed\">\n                <CardHeader className=\"pb-2 pt-4\">\n                   <CardTitle className=\"text-base\">Configurar Descanso</CardTitle>\n                 </CardHeader>\n               <CardContent className=\"space-y-4 pt-0 pb-4\">\n                 <div className=\"grid grid-cols-2 gap-4\">\n                   <FormField\n                     control={control}\n                     name=\"breakStartTime\"\n                     render={({ field }) => (\n                       <FormItem>\n                         <FormLabel>Inicio Descanso</FormLabel>\n                         <FormControl>\n                            <Input\n                                type=\"text\"\n                                value={field.value ? formatTo12Hour(field.value) : ''}\n                                onFocus={(e) => { e.target.type = 'time' }}\n                                onBlur={(e) => {\n                                    if (timeRegex.test(e.target.value)) {\n                                        field.onChange(e.target.value);\n                                    } else if (e.target.value === '') {\n                                        field.onChange(undefined); // Clear if empty\n                                    }\n                                    e.target.type = 'text';\n                                }}\n                                onChange={(e) => {\n                                    if (e.target.type === 'time') {\n                                         field.onChange(e.target.value);\n                                    }\n                                }}\n                                className=\"text-base\"\n                            />\n                         </FormControl>\n                         <FormMessage />\n                       </FormItem>\n                     )}\n                   />\n                   <FormField\n                     control={control}\n                     name=\"breakEndTime\"\n                     render={({ field }) => (\n                       <FormItem>\n                         <FormLabel>Fin Descanso</FormLabel>\n                         <FormControl>\n                             <Input\n                                type=\"text\"\n                                value={field.value ? formatTo12Hour(field.value) : ''}\n                                onFocus={(e) => { e.target.type = 'time' }}\n                                onBlur={(e) => {\n                                    if (timeRegex.test(e.target.value)) {\n                                        field.onChange(e.target.value);\n                                    } else if (e.target.value === '') {\n                                        field.onChange(undefined);\n                                    }\n                                    e.target.type = 'text';\n                                }}\n                                onChange={(e) => {\n                                     if (e.target.type === 'time') {\n                                        field.onChange(e.target.value);\n                                     }\n                                }}\n                                className=\"text-base\"\n                            />\n                         </FormControl>\n                         <FormMessage />\n                       </FormItem>\n                     )}\n                   />\n                 </div>\n               </CardContent>\n             </Card>\n           )}\n\n\n            <Button type=\"submit\" className=\"w-full bg-primary hover:bg-primary/90 text-primary-foreground\" disabled={isLoading || isCheckingHoliday}> {/* Use theme color & Disable submit while checking holiday */}\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  {existingId ? 'Guardando Cambios...' : 'Agregando Día...'}\n                </>\n              ) : isCheckingHoliday ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Verificando Festivo...\n                  </>\n              ) : (\n                 existingId ? <><Save className=\"mr-2 h-4 w-4\" /> Guardar Cambios</> : <><Plus className=\"mr-2 h-4 w-4\" /> Agregar Día a la Quincena</>\n              )}\n            </Button>\n          </form>\n        </Form>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1635, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/index.ts"],"sourcesContent":["\n// src/types/index.ts\n\nimport type { WorkdayFormValues } from '@/components/workday-form';\nimport type { Employee } from './schedule'; // Import Employee type\n\n export interface CalculationResults {\n   id: string; // Unique identifier for this specific calculation (e.g., timestamp or UUID)\n   inputData: Omit<WorkdayFormValues, 'startDate'> & { startDate: Date }; // Use Date object consistently\n   horasDetalladas: {\n     Ordinaria_Diurna_Base: number;      // Horas dentro de jornada (7.66h), diurnas, sin recargo base adicional\n     Recargo_Noct_Base: number;            // Horas dentro de jornada (7.66h), nocturnas (solo valor del recargo)\n     Recargo_Dom_Diurno_Base: number;      // Horas dentro de jornada (7.66h), dominical/festivo diurno (solo valor del recargo)\n     Recargo_Dom_Noct_Base: number;      // Horas dentro de jornada (7.66h), dominical/festivo nocturno (solo valor del recargo)\n     HED: number;                          // Horas extras (después de 7.66h), diurnas, laborales\n     HEN: number;                          // Horas extras (después de 7.66h), nocturnas, laborales\n     HEDD_F: number;                       // Horas extras (después de 7.66h), diurnas, dominicales/festivas\n     HEND_F: number;                       // Horas extras (después de 7.66h), nocturnas, dominicales/festivas\n   };\n   pagoDetallado: {\n     [key in keyof CalculationResults['horasDetalladas']]: number; // Pago por cada categoría de hora\n   };\n   pagoTotalRecargosExtras: number; // Suma del pago por recargos y horas extras únicamente para este día\n   pagoTotalConSalario: number; // Represents ONLY the extra pay for the day\n   duracionTotalTrabajadaHoras: number; // Duración total trabajada en horas (descontando descansos) para este día\n }\n\n export interface CalculationError {\n   error: string; // Mensaje de error\n }\n\n // Represents the aggregated results for the entire pay period (quincena) BEFORE manual adjustments AND transport allowance\n export interface QuincenalCalculationSummary {\n    totalHorasDetalladas: CalculationResults['horasDetalladas'];\n    totalPagoDetallado: CalculationResults['pagoDetallado'];\n    totalPagoRecargosExtrasQuincena: number;\n    salarioBaseQuincenal: number; // Assuming this is fixed for the period\n    pagoTotalConSalarioQuincena: number; // Represents Base + Extras/Recargos only. Transport, other income/deductions are handled separately.\n    totalDuracionTrabajadaHorasQuincena: number;\n    diasCalculados: number; // Number of days included in this summary\n }\n\n // Type guard to check if an object is a CalculationError\n export function isCalculationError(obj: any): obj is CalculationError {\n    // Check if obj exists and has an 'error' property that is a string\n    return obj && typeof obj === 'object' && typeof obj.error === 'string';\n }\n\n // Interface for individual adjustment items (Income or Deduction)\n export interface AdjustmentItem {\n     id: string; // Unique ID for the item (e.g., timestamp + random)\n     monto: number; // Amount (always positive)\n     descripcion: string; // Optional description\n }\n\n\n // Represents the data structure for a saved payroll entry in localStorage\n export interface SavedPayrollData {\n    key: string; // The localStorage key for this entry (e.g., payroll_123_2023-10-01_2023-10-15)\n    employeeId: string;\n    employeeName?: string; // Optional: Employee's name for display\n    periodStart: Date;\n    periodEnd: Date;\n    summary: QuincenalCalculationSummary; // The calculated summary BEFORE adjustments and transport allowance\n    otrosIngresosLista: AdjustmentItem[]; // List of other income items\n    otrasDeduccionesLista: AdjustmentItem[]; // List of other deduction items\n    incluyeAuxTransporte: boolean; // Flag indicating if transport allowance was included for this saved period\n    createdAt?: Date; // Optional: Timestamp when the payroll was saved/calculated\n }\n\n // Re-export Employee type if needed elsewhere\n export type { Employee };\n"],"names":[],"mappings":"AACA,qBAAqB;;;;AA0Cb,SAAS,mBAAmB,GAAQ;IACxC,mEAAmE;IACnE,OAAO,OAAO,OAAO,QAAQ,YAAY,OAAO,IAAI,KAAK,KAAK;AACjE","debugId":null}},
    {"offset": {"line": 1652, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1804, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/config/payroll-values.ts"],"sourcesContent":["// src/config/payroll-values.ts\n\n/**\n * @fileOverview Configuration file for payroll values.\n * This file exports constants used in payroll calculations, specifically the hourly rates for different types of work hours.\n * It is separated from 'use server' files to allow importing constants into client components without violating 'use server' rules.\n */\n\n// Valores por hora (pesos colombianos)\n// ESTE ES EL OBJETO QUE DEBES ACTUALIZAR SI LOS VALORES CAMBIAN:\nexport const VALORES = {\n    \"Recargo_Noct_Base\": 2166,          // Recargo Nocturno (dentro de las 7.66h base, laboral)\n    \"HED\": 7736.41,                        // Hora Extra Diurna (después de 7.66h, laboral, hasta las 9 pm)\n    \"HEN\": 10830.98,                       // Hora Extra Nocturna (después de 7.66h, laboral)\n    \"Recargo_Dom_Diurno_Base\": 4642,    // Recargo Dominical/Festivo Diurno (dentro de 7.66h)\n    \"Recargo_Dom_Noct_Base\": 6808,    // Recargo Dominical/Festivo Nocturno (dentro de 7.66h)\n    \"HEDD_F\": 12378.26,                    // Hora Extra Dominical/Festiva Diurna (después de 7.66h)\n    \"HEND_F\": 15472.83,                    // Hora Extra Dominical/Festiva Nocturna (después de 7.66h)\n    \"Ordinaria_Diurna_Base\": 0          // Horas base diurnas laborales (sin recargo adicional sobre el salario)\n};\n"],"names":[],"mappings":"AAAA,+BAA+B;AAE/B;;;;CAIC,GAED,uCAAuC;AACvC,iEAAiE;;;;AAC1D,MAAM,UAAU;IACnB,qBAAqB;IACrB,OAAO;IACP,OAAO;IACP,2BAA2B;IAC3B,yBAAyB;IACzB,UAAU;IACV,UAAU;IACV,yBAAyB,EAAW,wEAAwE;AAChH","debugId":null}},
    {"offset": {"line": 1833, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/pdf-exporter.ts"],"sourcesContent":["// src/lib/pdf-exporter.ts\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { format, parse } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport type { QuincenalCalculationSummary, AdjustmentItem, SavedPayrollData, Employee } from '@/types'; // Added Employee type\nimport { labelMap, displayOrder, formatCurrency, formatHours } from '@/components/results-display'; // Import helpers\nimport { formatTo12Hour } from './time-utils'; // Import the helper\n\n// Extend jsPDF interface for autoTable\ndeclare module 'jspdf' {\n  interface jsPDF {\n    autoTable: (options: any) => jsPDF;\n  }\n}\n\n// Interface representing all data needed for a single payroll page\ninterface PayrollPageData {\n    employeeId: string;\n    employeeName?: string; // Optional employee name\n    periodStart: Date;\n    periodEnd: Date;\n    summary: QuincenalCalculationSummary;\n    otrosIngresosLista: AdjustmentItem[];\n    otrasDeduccionesLista: AdjustmentItem[];\n    auxTransporteAplicado: number; // Amount of transport allowance applied\n}\n\n// Helper to add the watermark header and company logo/name\nfunction addHeaderAndWatermark(doc: jsPDF, initialY: number = 10): number {\n    const pageHeight = doc.internal.pageSize.height;\n    const pageWidth = doc.internal.pageSize.width;\n    const watermarkText = \"Desarrollado por Duber Parra, Dpana company © 2025 Calculadora de Turnos y Recargos\";\n    const leftMargin = 14;\n    let currentYPos = initialY;\n\n    // --- Company Logo and Name (if available) ---\n    if (typeof window !== 'undefined') {\n        const companyLogoDataUrl = localStorage.getItem('companyLogo');\n        const companyName = localStorage.getItem('companyName');\n\n        if (companyLogoDataUrl) {\n            try {\n                // Assuming logo is square, adjust dimensions as needed\n                const logoSize = 15; // Adjust size as needed\n                doc.addImage(companyLogoDataUrl, 'PNG', leftMargin, currentYPos, logoSize, logoSize);\n                if (companyName) {\n                    doc.setFontSize(10);\n                    doc.setFont('helvetica', 'bold');\n                    doc.text(companyName, leftMargin + logoSize + 3, currentYPos + logoSize / 2 + 3);\n                }\n                currentYPos += logoSize + 5; // Space after logo/name\n            } catch (e) {\n                console.error(\"Error adding company logo to PDF:\", e);\n                // Proceed without logo if it fails\n            }\n        } else if (companyName) {\n            doc.setFontSize(10);\n            doc.setFont('helvetica', 'bold');\n            doc.text(companyName, leftMargin, currentYPos + 5);\n            currentYPos += 10; // Space after name\n        }\n    }\n\n\n    // --- Watermark ---\n    doc.setFontSize(8);\n    doc.setFont('helvetica', 'italic');\n    doc.setTextColor(150);\n    doc.text(watermarkText, pageWidth / 2, currentYPos, { align: 'center' });\n    doc.setTextColor(0);\n    doc.setFont('helvetica', 'normal');\n    return currentYPos + 8; // Return the Y position below the watermark\n}\n\n// Helper function to draw a single payroll report page\nfunction drawPayrollPage(doc: jsPDF, data: PayrollPageData): number { // Use the new combined interface\n    const pageHeight = doc.internal.pageSize.height;\n    const pageWidth = doc.internal.pageSize.width;\n    let currentY = 10; // Start position for content\n    const leftMargin = 14;\n    const rightMargin = 14;\n\n    // --- Header with Watermark, Logo, Name ---\n    currentY = addHeaderAndWatermark(doc, 10);\n\n    // --- Main Header ---\n    doc.setFontSize(16);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Comprobante de Nómina Quincenal', pageWidth / 2, currentY, { align: 'center' });\n    currentY += 10;\n\n    doc.setFontSize(11);\n    doc.setFont('helvetica', 'normal');\n    // Use employee name if available, otherwise fallback to ID\n    const employeeIdentifier = data.employeeName || data.employeeId;\n    doc.text(`Colaborador: ${employeeIdentifier}`, leftMargin, currentY);\n    currentY += 6;\n    doc.text(`Período: ${format(data.periodStart, 'dd/MM/yyyy', { locale: es })} - ${format(data.periodEnd, 'dd/MM/yyyy', { locale: es })}`, leftMargin, currentY);\n    currentY += 10;\n\n    // --- Devengado Table (Base + Extras/Recargos) ---\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Resumen Horas y Recargos/Extras', leftMargin, currentY);\n    currentY += 6;\n\n    const head = [['Categoría', 'Horas', 'Pago (Recargo/Extra)']];\n    const bodyHours = displayOrder\n        .map(key => {\n            const horasCategoria = data.summary.totalHorasDetalladas[key];\n            const pagoCategoria = data.summary.totalPagoDetallado[key];\n\n             // Conditionally display rows based on whether they have values\n             if (key === 'Ordinaria_Diurna_Base' && horasCategoria <= 0) return null;\n             if (key !== 'Ordinaria_Diurna_Base' && horasCategoria <= 0 && pagoCategoria <= 0) return null;\n\n\n            const label = labelMap[key] || key; // Use labelMap\n            const formattedHours = formatHours(horasCategoria);\n            const formattedPayment = key === 'Ordinaria_Diurna_Base' ? '-' : formatCurrency(pagoCategoria);\n\n            return [label, formattedHours, formattedPayment];\n        })\n        .filter(row => row !== null) as (string | number)[][]; // Filter out null rows and assert type\n\n    // Add Totals for Hours section\n     bodyHours.push(\n         ['-', '-', '-'], // Separator line visually in the table\n         [\n              { content: 'Total Horas Trabajadas en Quincena:', styles: { fontStyle: 'bold' } },\n              { content: formatHours(data.summary.totalDuracionTrabajadaHorasQuincena), styles: { halign: 'right', fontStyle: 'bold' } },\n              ''\n         ],\n         [\n             { content: 'Total Recargos y Horas Extras Quincenales:', styles: { fontStyle: 'bold' } },\n             '',\n             { content: formatCurrency(data.summary.totalPagoRecargosExtrasQuincena), styles: { halign: 'right', fontStyle: 'bold', textColor: [76, 67, 223] } } // Use primary color\n         ]\n    );\n\n    autoTable(doc, {\n        head: head,\n        body: bodyHours,\n        startY: currentY,\n        theme: 'grid',\n        headStyles: { fillColor: [226, 232, 240], textColor: [30, 41, 59] }, // Adjusted colors (example: slate)\n        columnStyles: {\n            0: { cellWidth: 'auto' },\n            1: { halign: 'right' },\n            2: { halign: 'right' },\n        },\n        didDrawPage: (hookData) => {\n            currentY = hookData.cursor?.y ?? currentY;\n             // Add watermark to subsequent pages\n             if (hookData.pageNumber > 1) {\n                addHeaderAndWatermark(doc, 10);\n             }\n        },\n        didParseCell: (hookData) => {\n             // Style separator rows\n             if (hookData.cell.raw === '-') {\n                 hookData.cell.styles.fillColor = [230, 230, 230]; // Light gray fill\n                 hookData.cell.styles.minCellHeight = 1; // Make separator thin\n                 hookData.cell.styles.cellPadding = 0;\n                 hookData.cell.text = ''; // Clear the text\n            }\n         }\n    });\n\n    currentY = doc.lastAutoTable.finalY + 5; // Use finalY from autotable\n\n    // --- Otros Devengados Section ---\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Otros Devengados', leftMargin, currentY);\n    currentY += 6;\n\n    const baseMasExtras = data.summary.pagoTotalConSalarioQuincena;\n    const totalOtrosIngresosManuales = (data.otrosIngresosLista || []).reduce((sum, item) => sum + item.monto, 0);\n    const totalDevengadoBruto = baseMasExtras + data.auxTransporteAplicado + totalOtrosIngresosManuales;\n    const ibcEstimado = baseMasExtras + totalOtrosIngresosManuales; // IBC excludes transport allowance\n\n    const devengadoBody = [\n         ['Salario Base Quincenal', formatCurrency(data.summary.salarioBaseQuincenal)],\n         ['(+) Total Recargos/Extras', formatCurrency(data.summary.totalPagoRecargosExtrasQuincena)],\n    ];\n    if (data.auxTransporteAplicado > 0) {\n        devengadoBody.push(['(+) Auxilio de Transporte', formatCurrency(data.auxTransporteAplicado)]);\n    }\n    if ((data.otrosIngresosLista || []).length > 0) {\n        (data.otrosIngresosLista).forEach(item => {\n             devengadoBody.push([`(+) ${item.descripcion || 'Otro Ingreso'}`, formatCurrency(item.monto)]);\n        });\n    }\n    devengadoBody.push(\n         ['-', '-'], // Separator\n         [{ content: 'Total Devengado Bruto Estimado:', styles: { fontStyle: 'bold' } }, { content: formatCurrency(totalDevengadoBruto), styles: { fontStyle: 'bold' } }]\n    );\n\n\n    autoTable(doc, {\n        body: devengadoBody,\n        startY: currentY,\n        theme: 'plain',\n        columnStyles: { 1: { halign: 'right' } },\n        didDrawPage: (hookData) => {\n            currentY = hookData.cursor?.y ?? currentY;\n             // Add watermark to subsequent pages\n             if (hookData.pageNumber > 1) {\n                 addHeaderAndWatermark(doc, 10);\n             }\n         },\n        didParseCell: (hookData) => {\n            // Style separator rows\n             if (hookData.cell.raw === '-') {\n                 hookData.cell.styles.fontStyle = 'normal'; // Ensure separator is not bold\n                 hookData.cell.styles.minCellHeight = 1;\n                 hookData.cell.styles.cellPadding = 0;\n                 // Draw a line instead of text for separator\n                 if (hookData.column.index === 0 && hookData.cell.width) { // Check width exists\n                    const lineY = hookData.cell.y + hookData.cell.height / 2;\n                    doc.setDrawColor(200, 200, 200); // Light gray line\n                    doc.line(hookData.cell.x, lineY, hookData.cell.x + hookData.cell.width, lineY);\n                 }\n                 hookData.cell.text = ''; // Clear text\n            }\n        }\n    });\n\n    currentY = doc.lastAutoTable.finalY + 5; // Use finalY from autotable\n\n\n    // --- Deducciones Legales ---\n    const deduccionSaludQuincenal = ibcEstimado * 0.04;\n    const deduccionPensionQuincenal = ibcEstimado * 0.04;\n    const totalDeduccionesLegales = deduccionSaludQuincenal + deduccionPensionQuincenal;\n\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Deducciones Legales (Estimadas)', leftMargin, currentY);\n    currentY += 6;\n\n    autoTable(doc, {\n        body: [\n            [`Deducción Salud (4% s/IBC: ${formatCurrency(ibcEstimado)})`, formatCurrency(deduccionSaludQuincenal)],\n            [`Deducción Pensión (4% s/IBC: ${formatCurrency(ibcEstimado)})`, formatCurrency(deduccionPensionQuincenal)],\n            [{ content: 'Total Deducciones Legales:', styles: { fontStyle: 'bold' } }, { content: formatCurrency(totalDeduccionesLegales), styles: { fontStyle: 'bold' } }]\n        ],\n        startY: currentY,\n        theme: 'plain',\n        columnStyles: { 1: { halign: 'right' } },\n        didDrawPage: (hookData) => {\n            currentY = hookData.cursor?.y ?? currentY;\n             // Add watermark to subsequent pages\n             if (hookData.pageNumber > 1) {\n                 addHeaderAndWatermark(doc, 10);\n             }\n         },\n    });\n\n    currentY = doc.lastAutoTable.finalY + 5; // Use finalY from autotable\n\n    // --- Subtotal Neto Parcial ---\n    const subtotalNetoParcial = totalDevengadoBruto - totalDeduccionesLegales;\n    doc.setFontSize(11);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Subtotal (Dev. Bruto - Ded. Ley):', leftMargin, currentY);\n    doc.text(formatCurrency(subtotalNetoParcial), pageWidth - rightMargin, currentY, { align: 'right' });\n    currentY += 10;\n\n\n    // --- Otras Deducciones (Manuales) ---\n    const totalOtrasDeduccionesManuales = (data.otrasDeduccionesLista || []).reduce((sum, item) => sum + item.monto, 0);\n     if ((data.otrasDeduccionesLista || []).length > 0) {\n        doc.setFontSize(12);\n        doc.setFont('helvetica', 'bold');\n        doc.text('Otras Deducciones / Descuentos', leftMargin, currentY);\n        currentY += 6;\n        autoTable(doc, {\n            body: (data.otrasDeduccionesLista || []).map(item => [`(-) ${item.descripcion || 'Deducción'}`, formatCurrency(item.monto)]),\n            startY: currentY,\n            theme: 'plain',\n            columnStyles: { 1: { halign: 'right', textColor: [200, 0, 0] } }, // Reddish color\n            didDrawPage: (hookData) => {\n                currentY = hookData.cursor?.y ?? currentY;\n                 // Add watermark to subsequent pages\n                 if (hookData.pageNumber > 1) {\n                     addHeaderAndWatermark(doc, 10);\n                 }\n            },\n        });\n        currentY = doc.lastAutoTable.finalY; // Use finalY from autotable\n        doc.setFontSize(11);\n        doc.setFont('helvetica', 'bold');\n        doc.text('Total Otras Deducciones:', leftMargin, currentY + 5);\n        doc.text(formatCurrency(totalOtrasDeduccionesManuales), pageWidth - rightMargin, currentY + 5, { align: 'right' });\n        currentY += 10;\n    }\n\n    // --- Neto a Pagar Final ---\n     const netoAPagar = subtotalNetoParcial - totalOtrasDeduccionesManuales;\n     doc.setFontSize(14);\n     doc.setFont('helvetica', 'bold');\n     doc.text('Neto a Pagar Estimado Quincenal:', leftMargin, currentY);\n     doc.text(formatCurrency(netoAPagar), pageWidth - rightMargin, currentY, { align: 'right', textColor: [76, 67, 223] }); // Use primary color #4C43DF\n     currentY += 15;\n\n    // --- Signature Area ---\n    let signatureY = currentY;\n    // Check if signature area fits on the current page, add new page if necessary\n    if (signatureY > pageHeight - 35) {\n        doc.addPage();\n        addHeaderAndWatermark(doc, 10); // Add watermark to new page\n        signatureY = 25; // Reset Y for new page, below watermark\n    }\n    const signatureXMargin = 30;\n    const signatureWidth = (pageWidth - signatureXMargin * 2) / 2 - 10;\n    doc.setLineWidth(0.3);\n    doc.line(signatureXMargin, signatureY, signatureXMargin + signatureWidth, signatureY);\n    doc.line(pageWidth - signatureXMargin - signatureWidth, signatureY, pageWidth - signatureXMargin, signatureY);\n    doc.setFontSize(10);\n    doc.setFont('helvetica', 'normal');\n    doc.text('Firma Empleador', signatureXMargin + signatureWidth / 2, signatureY + 5, { align: 'center' });\n    doc.text('Firma Colaborador', pageWidth - signatureXMargin - signatureWidth / 2, signatureY + 5, { align: 'center' });\n    currentY = signatureY + 15; // Update currentY after signatures\n\n    // --- Footer Note ---\n    // Check if footer note fits, add new page if necessary BEFORE drawing\n     if (currentY > pageHeight - 10) {\n        doc.addPage();\n        addHeaderAndWatermark(doc, 10); // Add watermark to new page\n        currentY = pageHeight - 10; // Position at bottom of new page\n     } else {\n         currentY = pageHeight - 10; // Position at bottom of current page\n     }\n    doc.setFontSize(8);\n    doc.setTextColor(150);\n    const footerText = `Nota: Cálculo bruto estimado para ${data.summary.diasCalculados} días. IBC (*sin aux. transporte) y deducciones legales son aproximadas. Incluye ajustes manuales.`;\n    doc.text(footerText, leftMargin, currentY);\n\n    return currentY; // Return the Y position after drawing this page's content\n}\n\n// --- Single Payroll Export ---\nexport function exportPayrollToPDF(\n    summary: QuincenalCalculationSummary,\n    employeeId: string,\n    employeeName: string | undefined, // Add employeeName parameter\n    periodStart: Date,\n    periodEnd: Date,\n    otrosIngresosLista: AdjustmentItem[], // Add income list parameter\n    otrasDeduccionesLista: AdjustmentItem[], // Add deduction list parameter\n    auxTransporteAplicado: number // Add transport allowance parameter\n): void {\n    const doc = new jsPDF();\n    // Construct the full data object needed by drawPayrollPage\n    const payrollData: PayrollPageData = {\n        employeeId,\n        employeeName, // Pass the name\n        periodStart,\n        periodEnd,\n        summary,\n        otrosIngresosLista,\n        otrasDeduccionesLista,\n        auxTransporteAplicado\n    };\n\n    drawPayrollPage(doc, payrollData);\n\n    // --- Save the PDF ---\n    const filename = `Nomina_${employeeName || employeeId}_${format(periodStart, 'yyyyMMdd')}-${format(periodEnd, 'yyyyMMdd')}.pdf`;\n    doc.save(filename);\n}\n\n// Helper function to calculate final net pay and total deductions for display/export\nconst calculateNetoYTotalDeducciones = (payroll: SavedPayrollData): { neto: number; totalDeducciones: number } => {\n    const baseMasExtras = payroll.summary.pagoTotalConSalarioQuincena;\n    const auxTransporteValorConfig = 100000; // Assuming this value, ideally get from config\n    const auxTransporteAplicado = payroll.incluyeAuxTransporte ? auxTransporteValorConfig : 0;\n    const totalOtrosIngresos = (payroll.otrosIngresosLista || []).reduce((sum, item) => sum + item.monto, 0);\n    const totalOtrasDeduccionesManuales = (payroll.otrasDeduccionesLista || []).reduce((sum, item) => sum + item.monto, 0);\n\n    // Calculate Total Devengado Bruto\n    const totalDevengadoBruto = baseMasExtras + auxTransporteAplicado + totalOtrosIngresos;\n\n    // Estimate legal deductions (IBC excludes transport allowance)\n    const ibcEstimadoQuincenal = baseMasExtras + totalOtrosIngresos;\n    const deduccionSaludQuincenal = ibcEstimadoQuincenal * 0.04;\n    const deduccionPensionQuincenal = ibcEstimadoQuincenal * 0.04;\n    const totalDeduccionesLegales = deduccionSaludQuincenal + deduccionPensionQuincenal;\n\n    // Calculate total deductions (Legal + Manual)\n    const totalDeducciones = totalDeduccionesLegales + totalOtrasDeduccionesManuales;\n\n    // Calculate Subtotal Neto Parcial\n    const subtotalNetoParcial = totalDevengadoBruto - totalDeduccionesLegales;\n\n    // Calculate final net pay\n    const neto = subtotalNetoParcial - totalOtrasDeduccionesManuales;\n\n    return { neto, totalDeducciones };\n};\n\n\n// --- Bulk Payroll Export (List Format) ---\nexport function exportAllPayrollsToPDF(\n    allPayrollData: SavedPayrollData[],\n    employees: Employee[] // Pass the full employee list\n): void {\n    if (!allPayrollData || allPayrollData.length === 0) {\n        console.warn(\"No payroll data provided for bulk export.\");\n        return;\n    }\n\n    const doc = new jsPDF();\n    let currentY = 10; // Start position\n    const pageWidth = doc.internal.pageSize.width;\n    const pageHeight = doc.internal.pageSize.height;\n    const leftMargin = 14;\n    const rightMargin = 14;\n    const signatureColumnWidth = 35; // Reduced signature column width\n    const firmaHeight = 15; // Height reserved for signature line/space\n\n    // --- Header with Watermark, Logo, Name ---\n    currentY = addHeaderAndWatermark(doc, 10);\n\n    // --- Main Header ---\n    doc.setFontSize(16);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Lista de Pago de Nómina', pageWidth / 2, currentY, { align: 'center' });\n    currentY += 8;\n    doc.setFontSize(10);\n    doc.setFont('helvetica', 'normal');\n    // Add Company Name if available\n    if (typeof window !== 'undefined') {\n        const companyName = localStorage.getItem('companyName');\n        if (companyName) {\n            doc.text(companyName, pageWidth / 2, currentY, { align: 'center' });\n            currentY += 6;\n        }\n    }\n    doc.text(`Fecha: ${format(new Date(), 'dd/MM/yyyy')}`, pageWidth / 2, currentY, { align: 'center' });\n    currentY += 15;\n\n    // --- Table Setup ---\n    const head = [['Empleado', 'Periodo', 'T. Horas', 'Base', 'Recargos', 'Ded.', 'Total', 'Firma']]; // Added T. Horas, Ded.\n\n    let totalBase = 0;\n    let totalRecargos = 0;\n    let totalDeduccionesGlobal = 0; // Total deductions\n    let totalGeneral = 0; // Total net pay\n\n    const employeeMap = new Map(employees.map(emp => [emp.id, emp.name])); // Create a map for quick name lookup\n\n    const body = allPayrollData.map(payroll => {\n        const { neto: netoFinal, totalDeducciones } = calculateNetoYTotalDeducciones(payroll); // Use helper\n        // Get employee name from the map, fallback to ID if not found\n        const employeeName = employeeMap.get(payroll.employeeId) || payroll.employeeId; // Use Name\n\n        const periodoStr = `${format(payroll.periodStart, 'd')} - ${format(payroll.periodEnd, 'd MMM', { locale: es })}`; // Shortened period\n\n        const base = payroll.summary.salarioBaseQuincenal;\n        // Calculate 'Recargos' as extras + other income + transport\n        const auxTransporteAplicado = payroll.incluyeAuxTransporte ? 100000 : 0;\n        const totalOtrosIngresos = (payroll.otrosIngresosLista || []).reduce((s, i) => s + i.monto, 0);\n        const recargos = payroll.summary.totalPagoRecargosExtrasQuincena + auxTransporteAplicado + totalOtrosIngresos; // Include transport and other income here\n\n        const totalHoras = payroll.summary.totalDuracionTrabajadaHorasQuincena;\n        const totalRow = netoFinal; // Use calculated Neto Final\n\n        totalBase += base;\n        totalRecargos += recargos;\n        totalDeduccionesGlobal += totalDeducciones; // Accumulate total deductions\n        totalGeneral += totalRow;\n\n        return [\n            employeeName, // Display Name\n            periodoStr,\n            formatHours(totalHoras), // Format total hours\n            formatCurrency(base),\n            formatCurrency(recargos),\n            formatCurrency(totalDeducciones), // Display total deductions\n            formatCurrency(totalRow),\n            '', // Empty cell for signature space\n        ];\n    });\n\n    autoTable(doc, {\n        head: head,\n        body: body,\n        startY: currentY,\n        theme: 'plain', // Use plain theme for minimal lines like the image\n        styles: { fontSize: 8, cellPadding: 2 }, // Reduced font size\n        headStyles: {\n            fontStyle: 'bold',\n            halign: 'left',\n            fillColor: false, // No background fill for header\n            textColor: [0, 0, 0], // Black text\n            lineWidth: 0, // No header lines\n        },\n        columnStyles: {\n            0: { cellWidth: 'auto', halign: 'left' }, // Empleado\n            1: { cellWidth: 'auto', halign: 'left' }, // Periodo\n            2: { halign: 'right' }, // T. Horas\n            3: { halign: 'right' }, // Base\n            4: { halign: 'right' }, // Recargos\n            5: { halign: 'right' }, // Ded.\n            6: { halign: 'right', fontStyle: 'bold' }, // Total\n            7: { cellWidth: signatureColumnWidth, minCellHeight: firmaHeight }, // Firma\n        },\n        didDrawCell: (data) => {\n            // Add a line in the signature cell for signing\n            if (data.column.index === 7 && data.cell.section === 'body') { // Index 7 is Firma now\n                const cell = data.cell;\n                const signatureLineY = cell.y + cell.height - 4; // Position line near bottom\n                const signatureLineXStart = cell.x + 2;\n                const signatureLineXEnd = cell.x + cell.width - 2;\n                doc.setDrawColor(200, 200, 200); // Light gray line\n                doc.setLineWidth(0.5);\n                doc.line(signatureLineXStart, signatureLineY, signatureLineXEnd, signatureLineY);\n            }\n        },\n        didDrawPage: (hookData) => {\n            currentY = hookData.cursor?.y ?? currentY;\n            // Add page numbers and watermark to all pages (including subsequent ones)\n            const pageNum = doc.internal.getNumberOfPages();\n            addHeaderAndWatermark(doc, 10); // Add watermark near top\n            doc.setFontSize(8);\n            doc.setTextColor(150); // Keep footer text gray\n            doc.text(`Página ${pageNum}`, pageWidth - rightMargin, pageHeight - 10, { align: 'right' });\n            doc.setTextColor(0); // Reset text color\n        },\n        willDrawCell: (data) => {\n             // Prevent drawing borders for plain theme\n             if (data.cell.section === 'head' || data.cell.section === 'body') {\n                 // No border drawing needed for plain theme\n             }\n         },\n         // Add Totals Row using foot option\n         foot: [\n             [\n                 { content: 'Totales:', colSpan: 3, styles: { halign: 'right', fontStyle: 'bold', fontSize: 9 } }, // Span 3 columns\n                 { content: formatCurrency(totalBase), styles: { halign: 'right', fontStyle: 'bold', fontSize: 9 } },\n                 { content: formatCurrency(totalRecargos), styles: { halign: 'right', fontStyle: 'bold', fontSize: 9 } },\n                 { content: formatCurrency(totalDeduccionesGlobal), styles: { halign: 'right', fontStyle: 'bold', fontSize: 9 } }, // Show total deductions\n                 { content: formatCurrency(totalGeneral), styles: { halign: 'right', fontStyle: 'bold', fontSize: 9 } },\n                 '' // Empty cell for signature column in footer\n             ],\n         ],\n         footStyles: {\n             fillColor: false, // No background for footer\n             textColor: [0, 0, 0],\n             lineWidth: { top: 0.5 }, // Only top border for totals row\n             lineColor: [0, 0, 0],\n         },\n    });\n\n    // --- Save the combined PDF ---\n    const timestamp = format(new Date(), 'yyyyMMdd_HHmmss');\n    const filename = `Lista_Pago_Nominas_${timestamp}.pdf`;\n    doc.save(filename);\n}\n\n\n// Helper to parse HH:MM to minutes (same as in page.tsx, consider moving to utils)\nconst parseTimeToMinutes = (timeStr: string): number => {\n    if (!timeStr || !/^\\d{2}:\\d{2}$/.test(timeStr)) return 0;\n    const [hours, minutes] = timeStr.split(':').map(Number);\n    return hours * 60 + minutes;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2568, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/payroll-utils.ts"],"sourcesContent":["// src/lib/payroll-utils.ts\n\nimport type { CalculationResults, QuincenalCalculationSummary } from '@/types';\n\n// Example fixed salary for demonstration - consider making this configurable if needed elsewhere\nconst SALARIO_BASE_QUINCENAL_FIJO = 711750;\n\n/**\n * Calculates the quincenal summary from an array of daily calculation results.\n * @param calculatedDays - Array of CalculationResults for the period.\n * @param salarioBase - The base fortnightly salary. Defaults to SALARIO_BASE_QUINCENAL_FIJO.\n * @returns The QuincenalCalculationSummary or null if no days are provided.\n */\nexport function calculateQuincenalSummary(\n    calculatedDays: CalculationResults[],\n    salarioBase: number = SALARIO_BASE_QUINCENAL_FIJO\n): QuincenalCalculationSummary | null {\n    if (!calculatedDays || calculatedDays.length === 0) {\n        return null;\n    }\n\n    const initialSummary: QuincenalCalculationSummary = {\n        totalHorasDetalladas: {\n            Ordinaria_Diurna_Base: 0, Recargo_Noct_Base: 0, Recargo_Dom_Diurno_Base: 0,\n            Recargo_Dom_Noct_Base: 0, HED: 0, HEN: 0, HEDD_F: 0, HEND_F: 0,\n        },\n        totalPagoDetallado: {\n            Ordinaria_Diurna_Base: 0, Recargo_Noct_Base: 0, Recargo_Dom_Diurno_Base: 0,\n            Recargo_Dom_Noct_Base: 0, HED: 0, HEN: 0, HEDD_F: 0, HEND_F: 0,\n        },\n        totalPagoRecargosExtrasQuincena: 0,\n        salarioBaseQuincenal: salarioBase,\n        pagoTotalConSalarioQuincena: salarioBase, // Start with base salary\n        totalDuracionTrabajadaHorasQuincena: 0,\n        diasCalculados: calculatedDays.length,\n    };\n\n    return calculatedDays.reduce((summary, currentDay) => {\n        // Use Object.keys on the summary's structure to ensure all categories are processed\n        Object.keys(summary.totalHorasDetalladas).forEach(key => {\n            const category = key as keyof CalculationResults['horasDetalladas'];\n            // Accumulate hours and payments safely, defaulting to 0 if a category is somehow missing in currentDay\n            summary.totalHorasDetalladas[category] += currentDay.horasDetalladas[category] ?? 0;\n            summary.totalPagoDetallado[category] += currentDay.pagoDetallado[category] ?? 0;\n        });\n        summary.totalPagoRecargosExtrasQuincena += currentDay.pagoTotalRecargosExtras;\n        summary.totalDuracionTrabajadaHorasQuincena += currentDay.duracionTotalTrabajadaHoras;\n        summary.pagoTotalConSalarioQuincena += currentDay.pagoTotalRecargosExtras; // Add only the extras/surcharges\n        return summary;\n    }, initialSummary);\n}\n"],"names":[],"mappings":"AAAA,2BAA2B;;;;AAI3B,iGAAiG;AACjG,MAAM,8BAA8B;AAQ7B,SAAS,0BACZ,cAAoC,EACpC,cAAsB,2BAA2B;IAEjD,IAAI,CAAC,kBAAkB,eAAe,MAAM,KAAK,GAAG;QAChD,OAAO;IACX;IAEA,MAAM,iBAA8C;QAChD,sBAAsB;YAClB,uBAAuB;YAAG,mBAAmB;YAAG,yBAAyB;YACzE,uBAAuB;YAAG,KAAK;YAAG,KAAK;YAAG,QAAQ;YAAG,QAAQ;QACjE;QACA,oBAAoB;YAChB,uBAAuB;YAAG,mBAAmB;YAAG,yBAAyB;YACzE,uBAAuB;YAAG,KAAK;YAAG,KAAK;YAAG,QAAQ;YAAG,QAAQ;QACjE;QACA,iCAAiC;QACjC,sBAAsB;QACtB,6BAA6B;QAC7B,qCAAqC;QACrC,gBAAgB,eAAe,MAAM;IACzC;IAEA,OAAO,eAAe,MAAM,CAAC,CAAC,SAAS;QACnC,oFAAoF;QACpF,OAAO,IAAI,CAAC,QAAQ,oBAAoB,EAAE,OAAO,CAAC,CAAA;YAC9C,MAAM,WAAW;YACjB,uGAAuG;YACvG,QAAQ,oBAAoB,CAAC,SAAS,IAAI,WAAW,eAAe,CAAC,SAAS,IAAI;YAClF,QAAQ,kBAAkB,CAAC,SAAS,IAAI,WAAW,aAAa,CAAC,SAAS,IAAI;QAClF;QACA,QAAQ,+BAA+B,IAAI,WAAW,uBAAuB;QAC7E,QAAQ,mCAAmC,IAAI,WAAW,2BAA2B;QACrF,QAAQ,2BAA2B,IAAI,WAAW,uBAAuB,EAAE,iCAAiC;QAC5G,OAAO;IACX,GAAG;AACP","debugId":null}},
    {"offset": {"line": 2628, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/saved-payroll-list.tsx"],"sourcesContent":["// src/components/saved-payroll-list.tsx\n'use client';\n\nimport type { FC } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { FileSearch, FileDown, Trash2, Users, Download, FolderUp, FileJson } from 'lucide-react';\nimport type { SavedPayrollData } from '@/types';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { formatCurrency } from './results-display';\nimport { AlertDialog, AlertDialogTrigger } from '@/components/ui/alert-dialog';\n\ninterface SavedPayrollListProps {\n  payrolls: SavedPayrollData[];\n  onLoad: (key: string) => void;\n  onDelete: (key: string) => void;\n  onBulkExport: () => void; // For PDF\n  onExportJson: () => void; // Function to trigger JSON export\n  onImportJsonClick: () => void; // Function to trigger the file input click for JSON import\n}\n\nexport const SavedPayrollList: FC<SavedPayrollListProps> = ({\n    payrolls,\n    onLoad,\n    onDelete,\n    onBulkExport,\n    onExportJson, // Receive JSON export function\n    onImportJsonClick, // Receive JSON import click function\n}) => {\n\n    // Helper function to calculate final net pay for display\n    const calculateNetoAPagar = (payroll: SavedPayrollData): number => {\n        const baseMasExtras = payroll.summary.pagoTotalConSalarioQuincena;\n        const auxTransporteValorConfig = 100000; // Assuming this value, ideally get from config\n        const auxTransporteAplicado = payroll.incluyeAuxTransporte ? auxTransporteValorConfig : 0;\n        const totalOtrosIngresos = (payroll.otrosIngresosLista || []).reduce((sum, item) => sum + item.monto, 0);\n        const totalOtrasDeduccionesManuales = (payroll.otrasDeduccionesLista || []).reduce((sum, item) => sum + item.monto, 0);\n        const totalDevengadoBruto = baseMasExtras + auxTransporteAplicado + totalOtrosIngresos;\n        const ibcEstimadoQuincenal = baseMasExtras + totalOtrosIngresos; // IBC excludes transport allowance\n        const deduccionSaludQuincenal = ibcEstimadoQuincenal * 0.04;\n        const deduccionPensionQuincenal = ibcEstimadoQuincenal * 0.04;\n        const totalDeduccionesLegales = deduccionSaludQuincenal + deduccionPensionQuincenal;\n        const subtotalNetoParcial = totalDevengadoBruto - totalDeduccionesLegales;\n        return subtotalNetoParcial - totalOtrasDeduccionesManuales;\n    };\n\n\n  return (\n    <Card className=\"shadow-lg bg-card\">\n      <CardHeader className=\"relative flex flex-col items-start justify-between pb-4\"> {/* Changed to flex-col */}\n         {/* Buttons first */}\n         <div className=\"absolute top-4 right-4 flex items-center gap-1\">\n             {/* JSON Import Button */}\n             <Button\n                 variant=\"outline\"\n                 size=\"sm\"\n                 onClick={onImportJsonClick} // Trigger file input click\n                 className=\"px-2 py-1 h-auto hover:bg-blue-600 hover:text-white\" // Blue hover\n                 title=\"Importar Nóminas (JSON)\"\n             >\n                 <FolderUp className=\"mr-1 h-3 w-3\" /> JSON\n             </Button>\n             {/* JSON Export Button */}\n             <Button\n                 variant=\"outline\"\n                 size=\"sm\"\n                 onClick={onExportJson} // Call JSON export handler\n                 disabled={payrolls.length === 0}\n                 className=\"px-2 py-1 h-auto hover:bg-green-600 hover:text-white\" // Green hover\n                 title=\"Exportar Nóminas (JSON)\"\n             >\n                 <Download className=\"mr-1 h-3 w-3\" /> JSON\n             </Button>\n              {/* PDF Export Button */}\n              <Button\n                 variant=\"outline\"\n                 size=\"sm\"\n                 onClick={onBulkExport}\n                 disabled={payrolls.length === 0}\n                 className=\"px-2 py-1 h-auto hover:bg-red-600 hover:text-white\" // Red hover for PDF\n                 title=\"Exportar Lista Nóminas (PDF)\"\n              >\n                 <FileDown className=\"mr-1 h-3 w-3\" /> PDF\n              </Button>\n        </div>\n         {/* Title and Description below buttons */}\n        <div className=\"flex-1 pr-24 pt-12\"> {/* Added padding-top to make space for buttons */}\n            <CardTitle className=\"flex items-center gap-2 text-lg text-foreground\">\n              <Users className=\"h-4 w-4\" /> Nóminas Guardadas ({payrolls.length})\n            </CardTitle>\n            <CardDescription> Carga, elimina o exporta nóminas guardadas. </CardDescription>\n        </div>\n      </CardHeader>\n      <CardContent>\n        {payrolls.length > 0 ? (\n          <ul className=\"space-y-4 max-h-[70vh] lg:max-h-[calc(100vh-250px)] overflow-y-auto pr-2\">\n            {payrolls.map((payroll) => {\n                 const netoFinal = calculateNetoAPagar(payroll);\n                 return (\n                    <li key={payroll.key} className=\"relative p-4 border rounded-lg shadow-sm bg-secondary/30 flex flex-col justify-between gap-3\">\n                      <div className=\"flex-grow min-w-0 pr-16\">\n                        <p className=\"font-semibold text-lg truncate text-foreground\">{payroll.employeeName || payroll.employeeId}</p> {/* Display name or ID */}\n                        <p className=\"text-sm text-muted-foreground\"> Período: {format(payroll.periodStart, 'dd MMM', { locale: es })} - {format(payroll.periodEnd, 'dd MMM yyyy', { locale: es })} </p>\n                         <div className=\"mt-2 grid grid-cols-2 gap-x-4 gap-y-1 text-sm\">\n                            <span className=\"text-muted-foreground\">Dev. Bruto:</span><span className=\"font-medium text-foreground text-right\">{formatCurrency(payroll.summary.pagoTotalConSalarioQuincena + (payroll.incluyeAuxTransporte ? 100000 : 0) + (payroll.otrosIngresosLista || []).reduce((s,i)=>s+i.monto, 0) )}</span>\n                            <span className=\"text-muted-foreground\">Neto Estimado:</span><span className=\"font-semibold text-primary text-right\">{formatCurrency(netoFinal)}</span>\n                         </div>\n                        <p className=\"text-xs text-muted-foreground mt-1\"> Guardado: {payroll.createdAt ? format(payroll.createdAt, 'dd/MM/yyyy HH:mm', { locale: es }) : 'Fecha no disponible'} </p>\n                      </div>\n                      <div className=\"absolute top-2 right-2 flex flex-col gap-1 flex-shrink-0\"> {/* Changed to flex-col */}\n                        {/* Load Button */}\n                        <Button variant=\"ghost\" size=\"icon\" onClick={() => onLoad(payroll.key)} title=\"Cargar y Editar Nómina\" className=\"h-8 w-8\">\n                          <FileSearch className=\"h-4 w-4\" />\n                        </Button>\n                        {/* Delete Button Trigger */}\n                        <AlertDialog>\n                          <AlertDialogTrigger asChild>\n                              <Button variant=\"ghost\" size=\"icon\" title=\"Eliminar Nómina Guardada\" className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\"\n                                   onClick={() => onDelete(payroll.key)} // Trigger delete confirmation\n                              >\n                                  <Trash2 className=\"h-4 w-4\" />\n                              </Button>\n                          </AlertDialogTrigger>\n                           {/* The AlertDialogContent is defined in page.tsx */}\n                        </AlertDialog>\n                      </div>\n                    </li>\n                 )\n              })}\n          </ul>\n        ) : (\n          <p className=\"text-center text-muted-foreground italic py-4\">No hay nóminas guardadas.</p>\n        )}\n      </CardContent>\n    </Card>\n  );\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2997, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger // Export DialogTrigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close // Export DialogClose\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      {/* Removed the explicit close button with X icon */}\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose, // Export DialogClose (still needed for programmatic closing)\n  DialogTrigger, // Export DialogTrigger\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAGA;AANA;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,sKAAwB,uBAAuB;AAA/C,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,sKAAsB,qBAAqB;AAA3C,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;0BAER;;;;;;;;;;;;;AAKP,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3122, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50', // Removed text-base and md:text-sm for consistency\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3157, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/adjustment-modal.tsx"],"sourcesContent":["\n// src/components/adjustment-modal.tsx\n'use client';\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea'; // Use Textarea for description\nimport type { AdjustmentItem } from '@/types';\nimport { Save, X } from 'lucide-react';\nimport { cn } from '@/lib/utils'; // Import cn for conditional classes\n\n// Schema for the modal form\nconst adjustmentSchema = z.object({\n  monto: z.coerce // Coerce input to number\n    .number({ invalid_type_error: 'El monto debe ser un número.' })\n    .positive({ message: 'El monto debe ser mayor que cero.' }),\n  descripcion: z.string().optional(), // Description is optional\n});\n\ntype AdjustmentFormValues = z.infer<typeof adjustmentSchema>;\n\ninterface AdjustmentModalProps {\n  type: 'ingreso' | 'deduccion';\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (data: Omit<AdjustmentItem, 'id'>) => void;\n  initialData?: Omit<AdjustmentItem, 'id'>; // For editing\n}\n\nexport const AdjustmentModal: React.FC<AdjustmentModalProps> = ({\n  type,\n  isOpen,\n  onClose,\n  onSave,\n  initialData,\n}) => {\n  const form = useForm<AdjustmentFormValues>({\n    resolver: zodResolver(adjustmentSchema),\n    // Initial default values - these will be overridden by useEffect\n    defaultValues: {\n      monto: undefined,\n      descripcion: '',\n    },\n  });\n\n  // Reset form when initialData changes or modal opens/closes\n   React.useEffect(() => {\n        if (isOpen) {\n            let resetValues: Partial<AdjustmentFormValues>;\n            if (initialData) {\n                // Editing existing item\n                resetValues = {\n                    monto: initialData.monto,\n                    descripcion: initialData.descripcion || '',\n                };\n            } else {\n                // Adding NEW item (income or deduction) - clear defaults\n                resetValues = {\n                    monto: undefined, // Use undefined to clear number input properly\n                    descripcion: '', // Clear description\n                };\n            }\n            form.reset(resetValues);\n            form.clearErrors(); // Clear previous errors\n        }\n    }, [isOpen, initialData, form, type]); // Added `type` dependency\n\n\n  const onSubmit = (values: AdjustmentFormValues) => {\n    onSave({\n      monto: values.monto,\n      descripcion: values.descripcion || '', // Ensure empty string if undefined\n    });\n    onClose(); // Close modal after saving\n  };\n\n  const title = type === 'ingreso' ? 'Agregar Otro Ingreso / Ajuste a Favor' : 'Agregar Otra Deducción / Descuento';\n  const description = type === 'ingreso' ? 'Ingresa el monto y una descripción opcional para el ingreso adicional.' : 'Ingresa el monto y una descripción opcional para la deducción adicional.';\n  const amountLabel = type === 'ingreso' ? 'Monto a Sumar' : 'Monto a Descontar';\n\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>{title}</DialogTitle>\n          <DialogDescription>{description}</DialogDescription>\n        </DialogHeader>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"grid gap-4 py-4\">\n            <FormField\n              control={form.control}\n              name=\"monto\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{amountLabel}</FormLabel>\n                  <FormControl>\n                     {/* Use type=\"number\", step=\"any\" for decimals */}\n                     {/* Apply destructive ring color only on focus for deduction */}\n                    <Input\n                      type=\"number\"\n                      step=\"any\"\n                      min=\"0.01\" // Ensure positive\n                      placeholder=\"0.00\"\n                      className={cn(\n                        // Apply focus ring color, not border by default\n                        type === 'deduccion' && 'focus-visible:ring-destructive border-border hover:border-destructive focus:border-destructive'\n                      )}\n                      {...field}\n                      // Handle undefined case for initial render if default is undefined\n                      value={field.value === undefined ? '' : field.value}\n                      onChange={e => field.onChange(e.target.value === '' ? undefined : parseFloat(e.target.value))}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"descripcion\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Descripción (Opcional)</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"Ej: Bonificación, Préstamo...\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n             <DialogFooter className=\"mt-4\">\n                 <DialogClose asChild>\n                     {/* Cancel button: outline variant, red on hover */}\n                    <Button type=\"button\" variant=\"outline\" > {/* Removed custom hover */}\n                        {/* Icon removed */} Cancelar\n                    </Button>\n                  </DialogClose>\n                 {/* Save button: default variant, gradient on hover */}\n                <Button\n                    type=\"submit\"\n                    // Use default variant for income, destructive for deduction\n                    variant={type === 'deduccion' ? \"destructive\" : \"default\"}\n                    // Removed custom background/hover classes\n                    className={cn(\n                        // Optionally add text color if needed, but variants should handle it\n                        // type === 'deduccion' ? \"text-destructive-foreground\" : \"text-primary-foreground\"\n                        type === 'deduccion' && 'hover:bg-green-600', // Apply green hover only to deduction save button\n                    )}\n                 >\n                  <Save className=\"mr-2 h-4 w-4\" /> Guardar {type === 'ingreso' ? 'Ingreso' : 'Deducción'}\n                </Button>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3464, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3692, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useCallback, useMemo, ChangeEvent, useEffect, useRef, DragEvent } from 'react';\nimport Image from 'next/image'; // Import next/image\nimport { WorkdayForm } from '@/components/workday-form'; // Removed formSchema import as it's now local\nimport { ResultsDisplay, labelMap as fullLabelMap, abbreviatedLabelMap, displayOrder, formatHours, formatCurrency } from '@/components/results-display'; // Import helpers and rename labelMap\nimport type { CalculationResults, CalculationError, QuincenalCalculationSummary, AdjustmentItem, SavedPayrollData, Employee } from '@/types'; // Added AdjustmentItem, SavedPayrollData, Employee\nimport type { ScheduleData, ShiftAssignment } from '@/types/schedule'; // Import schedule types\nimport { isCalculationError } from '@/types'; // Import the type guard\nimport { Toaster } from '@/components/ui/toaster';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Separator } from '@/components/ui/separator';\nimport { Input } from '@/components/ui/input'; // Import Input for editing hours and employee ID\nimport { Label } from '@/components/ui/label'; // Import Label for editing hours and employee ID\nimport { Trash2, Edit, PlusCircle, Calculator, DollarSign, Clock, Calendar as CalendarIcon, Save, X, PencilLine, User, FolderSync, Eraser, FileDown, Library, FileSearch, MinusCircle, CopyPlus, Loader2, Copy, Upload, Coffee, FileUp, Download, FolderUp, FileJson } from 'lucide-react'; // Added Library, FileSearch, Upload, Coffee, Download, FolderUp, FileJson\nimport { format, parseISO, startOfMonth, endOfMonth, setDate, parse as parseDateFns, addDays, isSameDay as isSameDayFns, isWithinInterval, isValid as isValidDate } from 'date-fns'; // Renamed isValid to avoid conflict, added isValidDate alias and isSameDayFns\nimport { es } from 'date-fns/locale';\nimport { calculateSingleWorkday } from '@/actions/calculate-workday';\nimport { useToast } from '@/hooks/use-toast';\nimport type { WorkdayFormValues } from '@/components/workday-form'; // Import form values type\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Calendar } from '@/components/ui/calendar';\nimport { cn } from '@/lib/utils';\nimport { VALORES } from '@/config/payroll-values'; // Import VALORES from new location\nimport { exportPayrollToPDF, exportAllPayrollsToPDF } from '@/lib/pdf-exporter'; // Import PDF export functions\nimport { calculateQuincenalSummary } from '@/lib/payroll-utils'; // Import the summary calculation utility\nimport { SavedPayrollList } from '@/components/saved-payroll-list'; // Import the new component\nimport { AdjustmentModal } from '@/components/adjustment-modal'; // Import the new modal component\nimport { formatTo12Hour } from '@/lib/time-utils'; // Import the time formatting helper\nimport { useForm } from 'react-hook-form'; // Import useForm\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuLabel,\n    DropdownMenuSeparator,\n    DropdownMenuTrigger,\n  } from \"@/components/ui/dropdown-menu\"; // Import DropdownMenu components\nimport { z } from 'zod'; // Import zod for form schema\n\n\n// Constants\nconst SALARIO_BASE_QUINCENAL_FIJO = 711750; // Example fixed salary\nconst AUXILIO_TRANSPORTE_VALOR = 100000; // User-defined value for transport allowance\nconst SCHEDULE_DATA_KEY = 'schedulePlannerData'; // LocalStorage key for schedule data\n\n// Define keys for local storage\nconst EMPLOYEES_KEY = 'schedulePlannerEmployees'; // Key for employees in local storage\n\n// Helper function to load employees from localStorage safely\nconst loadEmployeesFromLocalStorage = (defaultValue: Employee[]): Employee[] => {\n    if (typeof window === 'undefined') {\n        return defaultValue; // Return default during SSR\n    }\n    try {\n        const savedData = localStorage.getItem(EMPLOYEES_KEY);\n        if (!savedData) return defaultValue;\n        const parsed = JSON.parse(savedData);\n        if (Array.isArray(parsed)) {\n            return parsed.map((emp: any) => ({\n                ...emp,\n                locationIds: Array.isArray(emp.locationIds) ? emp.locationIds : [],\n                departmentIds: Array.isArray(emp.departmentIds) ? emp.departmentIds : [],\n            })) as Employee[];\n        }\n        return defaultValue;\n    } catch (error) {\n        console.error(`Error loading employees from localStorage:`, error);\n        return defaultValue;\n    }\n};\n\n\n// LocalStorage Key Generation\nconst getStorageKey = (employeeId: string, periodStart: Date | undefined, periodEnd: Date | undefined): string | null => {\n    if (!employeeId || !periodStart || !periodEnd) return null;\n    if (isNaN(periodStart.getTime()) || isNaN(periodEnd.getTime())) return null;\n    try {\n        const startStr = format(periodStart, 'yyyy-MM-dd');\n        const endStr = format(periodEnd, 'yyyy-MM-dd');\n        const safeEmployeeId = employeeId.replace(/[^a-zA-Z0-9_-]/g, '');\n        return `payroll_${safeEmployeeId}_${startStr}_${endStr}`;\n    } catch (e) {\n        console.error(\"Error generando la clave de almacenamiento:\", e);\n        return null;\n    }\n};\n\n// --- Function to revive Date objects from JSON string representation ---\nfunction reviveSavedPayrollDates(data: any[]): SavedPayrollData[] {\n    return data.map(item => ({\n        ...item,\n        periodStart: typeof item.periodStart === 'string' ? parseISO(item.periodStart) : item.periodStart,\n        periodEnd: typeof item.periodEnd === 'string' ? parseISO(item.periodEnd) : item.periodEnd,\n        createdAt: item.createdAt && typeof item.createdAt === 'string' ? parseISO(item.createdAt) : item.createdAt,\n        // Revive startDate within calculatedDays.inputData\n        summary: {\n             ...item.summary,\n             // Ensure nested calculatedDays have their startDate revived too\n              // This part is tricky as summary doesn't store days.\n              // We need to handle day revival in parseStoredData or when loading.\n        }\n    })).filter(item => item.periodStart && isValidDate(item.periodStart) && item.periodEnd && isValidDate(item.periodEnd)); // Filter out invalid entries\n}\n\nconst parseStoredData = (jsonData: string | null): { days: CalculationResults[], income: AdjustmentItem[], deductions: AdjustmentItem[], includeTransport: boolean } => {\n    if (!jsonData) return { days: [], income: [], deductions: [], includeTransport: false };\n    try {\n        const storedObject = JSON.parse(jsonData) as {\n             calculatedDays: any[], // Expect dates as strings here initially\n             otrosIngresosLista?: AdjustmentItem[],\n             otrasDeduccionesLista?: AdjustmentItem[],\n             incluyeAuxTransporte?: boolean\n        };\n\n        // Revive dates within calculatedDays\n        const revivedDays = (storedObject.calculatedDays || []).map(day => ({\n            ...day,\n            inputData: {\n                ...day.inputData,\n                startDate: day.inputData.startDate && typeof day.inputData.startDate === 'string'\n                            ? parseISO(day.inputData.startDate)\n                            : (day.inputData.startDate instanceof Date ? day.inputData.startDate : new Date()),\n            }\n        })).filter(day => day.inputData.startDate && isValidDate(day.inputData.startDate)) as CalculationResults[];\n\n        const incomeList = Array.isArray(storedObject.otrosIngresosLista) ? storedObject.otrosIngresosLista : [];\n        const deductionList = Array.isArray(storedObject.otrasDeduccionesLista) ? storedObject.otrasDeduccionesLista : [];\n        const includeTransport = typeof storedObject.incluyeAuxTransporte === 'boolean' ? storedObject.incluyeAuxTransporte : false;\n\n        return { days: revivedDays, income: incomeList, deductions: deductionList, includeTransport };\n\n    } catch (error) {\n        console.error(\"Error parseando datos de localStorage:\", error);\n        return { days: [], income: [], deductions: [], includeTransport: false };\n    }\n};\n\nconst storageKeyRegex = /^payroll_([a-zA-Z0-9_-]+)_(\\d{4}-\\d{2}-\\d{2})_(\\d{4}-\\d{2}-\\d{2})$/;\n\nconst loadAllSavedPayrolls = (employees: Employee[]): SavedPayrollData[] => { // Accept employees list\n    if (typeof window === 'undefined') return [];\n\n    const employeeMap = new Map(employees.map(emp => [emp.id, emp.name])); // Create a map for quick name lookup\n\n    const savedPayrolls: SavedPayrollData[] = [];\n    try {\n        for (let i = 0; i < localStorage.length; i++) {\n            const key = localStorage.key(i);\n            if (key && key.startsWith('payroll_')) {\n                const match = key.match(storageKeyRegex);\n                if (match) {\n                    const employeeId = match[1];\n                    const startStr = match[2];\n                    const endStr = match[3];\n                    const startDate = parseDateFns(startStr, 'yyyy-MM-dd', new Date());\n                    const endDate = parseDateFns(endStr, 'yyyy-MM-dd', new Date());\n\n                    if (!employeeId || isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {\n                        console.warn(`Omitiendo clave de almacenamiento inválida: ${key}`);\n                        continue;\n                    }\n\n                    const storedData = localStorage.getItem(key);\n                    const { days: parsedDays, income: parsedIncome, deductions: parsedDeductions, includeTransport: parsedIncludeTransport } = parseStoredData(storedData);\n\n                    // Determine createdAt - use the start date of the first calculated day if available, otherwise use periodStart\n                    let createdAtDate: Date | undefined = startDate; // Default to period start\n                    if (parsedDays.length > 0 && parsedDays[0].inputData.startDate instanceof Date && isValidDate(parsedDays[0].inputData.startDate)) {\n                         createdAtDate = parsedDays[0].inputData.startDate;\n                    }\n\n                    if (parsedDays.length > 0 || parsedIncome.length > 0 || parsedDeductions.length > 0 || parsedIncludeTransport) {\n                        const summary = calculateQuincenalSummary(parsedDays, SALARIO_BASE_QUINCENAL_FIJO);\n                         const savedPayrollItem: SavedPayrollData = {\n                            key: key,\n                            employeeId: employeeId,\n                            employeeName: employeeMap.get(employeeId), // Add employee name\n                            periodStart: startDate,\n                            periodEnd: endDate,\n                            summary: summary || {\n                                totalHorasDetalladas: { Ordinaria_Diurna_Base: 0, Recargo_Noct_Base: 0, Recargo_Dom_Diurno_Base: 0, Recargo_Dom_Noct_Base: 0, HED: 0, HEN: 0, HEDD_F: 0, HEND_F: 0 },\n                                totalPagoDetallado: { Ordinaria_Diurna_Base: 0, Recargo_Noct_Base: 0, Recargo_Dom_Diurno_Base: 0, Recargo_Dom_Noct_Base: 0, HED: 0, HEN: 0, HEDD_F: 0, HEND_F: 0 },\n                                totalPagoRecargosExtrasQuincena: 0,\n                                salarioBaseQuincenal: SALARIO_BASE_QUINCENAL_FIJO,\n                                pagoTotalConSalarioQuincena: SALARIO_BASE_QUINCENAL_FIJO,\n                                totalDuracionTrabajadaHorasQuincena: 0,\n                                diasCalculados: 0,\n                            },\n                            otrosIngresosLista: parsedIncome,\n                            otrasDeduccionesLista: parsedDeductions,\n                            incluyeAuxTransporte: parsedIncludeTransport,\n                            createdAt: createdAtDate // Use the determined date\n                         };\n                        savedPayrolls.push(savedPayrollItem);\n                    }\n                }\n            }\n        }\n    } catch (error) {\n        console.error(\"Error cargando nóminas guardadas de localStorage:\", error);\n    }\n    return savedPayrolls.sort((a, b) => {\n       const dateDiff = (b.createdAt?.getTime() || b.periodStart.getTime()) - (a.createdAt?.getTime() || a.periodStart.getTime());\n       if (dateDiff !== 0) return dateDiff;\n       return a.employeeId.localeCompare(b.employeeId);\n    });\n};\n\nexport default function Home() {\n    const [employeeId, setEmployeeId] = useState<string>('');\n    const [employees, setEmployees] = useState<Employee[]>([]); // State for employees list\n    const [payPeriodStart, setPayPeriodStart] = useState<Date | undefined>(() => {\n        const now = new Date();\n        return now.getDate() <= 15 ? startOfMonth(now) : setDate(startOfMonth(now), 16);\n    });\n    const [payPeriodEnd, setPayPeriodEnd] = useState<Date | undefined>(() => {\n         const now = new Date();\n         return now.getDate() <= 15 ? setDate(startOfMonth(now), 15) : endOfMonth(now);\n    });\n    const [calculatedDays, setCalculatedDays] = useState<CalculationResults[]>([]);\n    const [editingDayId, setEditingDayId] = useState<string | null>(null);\n    const [editingResultsId, setEditingResultsId] = useState<string | null>(null);\n    const [editedHours, setEditedHours] = useState<CalculationResults['horasDetalladas'] | null>(null);\n    const [dayToDeleteId, setDayToDeleteId] = useState<string | null>(null);\n    const [isLoadingDay, setIsLoadingDay] = useState<boolean>(false);\n    const [isImporting, setIsImporting] = useState<boolean>(false);\n    const [errorDay, setErrorDay] = useState<string | null>(null);\n    const [isDataLoaded, setIsDataLoaded] = useState<boolean>(false);\n    const [savedPayrolls, setSavedPayrolls] = useState<SavedPayrollData[]>([]);\n    const [payrollToDeleteKey, setPayrollToDeleteKey] = useState<string | null>(null);\n\n    const [otrosIngresos, setOtrosIngresos] = useState<AdjustmentItem[]>([]);\n    const [otrasDeducciones, setOtrasDeducciones] = useState<AdjustmentItem[]>([]);\n    const [isIncomeModalOpen, setIsIncomeModalOpen] = useState(false);\n    const [isDeductionModalOpen, setIsDeductionModalOpen] = useState(false);\n\n    const [incluyeAuxTransporte, setIncluyeAuxTransporte] = useState<boolean>(false);\n\n    const fileInputRef = useRef<HTMLInputElement>(null); // Ref for file input\n    const importJsonInputRef = useRef<HTMLInputElement>(null); // Ref for JSON import\n\n    const { toast } = useToast();\n    const { setValue } = useForm<WorkdayFormValues>(); // Use useForm hook to get setValue\n\n    // Load ALL saved payrolls and employees on initial mount\n    useEffect(() => {\n        const loadedEmployees = loadEmployeesFromLocalStorage([]);\n        setEmployees(loadedEmployees);\n        setSavedPayrolls(loadAllSavedPayrolls(loadedEmployees)); // Pass employees to loader\n    }, []); // Only on mount\n\n    // Load current employee/period data from localStorage when employee/period changes\n    useEffect(() => {\n        if (typeof window !== 'undefined') {\n            const storageKey = getStorageKey(employeeId, payPeriodStart, payPeriodEnd);\n            if (storageKey) {\n                console.log(`Intentando cargar datos para la clave: ${storageKey}`);\n                const storedData = localStorage.getItem(storageKey);\n                const { days: parsedDays, income: parsedIncome, deductions: parsedDeductions, includeTransport: parsedIncludeTransport } = parseStoredData(storedData);\n                setCalculatedDays(parsedDays);\n                setOtrosIngresos(parsedIncome);\n                setOtrasDeducciones(parsedDeductions);\n                setIncluyeAuxTransporte(parsedIncludeTransport);\n                setIsDataLoaded(true);\n                 if (employeeId && payPeriodStart && payPeriodEnd && !isDataLoaded) {\n                     toast({\n                         title: storedData ? 'Datos Cargados' : 'Datos No Encontrados',\n                         description: storedData ? `Se cargaron turnos, ajustes y estado de auxilio para ${employeeId}.` : `No se encontraron datos guardados para ${employeeId} en este período.`,\n                         variant: 'default',\n                     });\n                 }\n            } else {\n                setCalculatedDays([]);\n                setOtrosIngresos([]);\n                setOtrasDeducciones([]);\n                setIncluyeAuxTransporte(false);\n                setIsDataLoaded(true);\n            }\n             setEditingDayId(null);\n             setEditingResultsId(null);\n             setIsIncomeModalOpen(false);\n             setIsDeductionModalOpen(false);\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [employeeId, payPeriodStart, payPeriodEnd]); // Removed toast, isDataLoaded dependencies\n\n    // Save current employee/period data to localStorage\n    useEffect(() => {\n        if (typeof window !== 'undefined' && isDataLoaded) {\n            const storageKey = getStorageKey(employeeId, payPeriodStart, payPeriodEnd);\n             // Only save if there's a valid key AND some data to save OR aux transport is enabled\n            if (storageKey && (calculatedDays.length > 0 || otrosIngresos.length > 0 || otrasDeducciones.length > 0 || incluyeAuxTransporte)) {\n                try {\n                     console.log(`Intentando guardar datos (incluye transporte: ${incluyeAuxTransporte}) en la clave: ${storageKey}`);\n                     // Prepare data for storage: Dates must be ISO strings\n                     const dataToSave = {\n                         calculatedDays: calculatedDays.map(day => ({\n                             ...day,\n                             inputData: {\n                                 ...day.inputData,\n                                 startDate: day.inputData.startDate instanceof Date ? day.inputData.startDate.toISOString() : day.inputData.startDate,\n                             },\n                              // Ensure summary related dates are strings if they exist\n                              summary: day.inputData.startDate instanceof Date ? day.inputData.startDate.toISOString() : day.inputData.startDate, // Just example, adapt based on actual summary structure if needed\n                         })),\n                         otrosIngresosLista: otrosIngresos,\n                         otrasDeduccionesLista: otrasDeducciones,\n                         incluyeAuxTransporte: incluyeAuxTransporte,\n                     };\n                    localStorage.setItem(storageKey, JSON.stringify(dataToSave));\n                    // Reload saved payrolls to update the list immediately\n                    const loadedEmployees = loadEmployeesFromLocalStorage([]); // Need employees for name mapping\n                    setSavedPayrolls(loadAllSavedPayrolls(loadedEmployees));\n                } catch (error) {\n                    console.error(\"Error guardando datos en localStorage:\", error);\n                    toast({\n                        title: 'Error al Guardar',\n                        description: 'No se pudieron guardar los cambios localmente.',\n                        variant: 'destructive',\n                    });\n                }\n            } else if (storageKey && calculatedDays.length === 0 && otrosIngresos.length === 0 && otrasDeducciones.length === 0 && !incluyeAuxTransporte) {\n                 // Remove item if all data is cleared and transport is off\n                if (localStorage.getItem(storageKey)) {\n                    localStorage.removeItem(storageKey);\n                    console.log(`Clave ${storageKey} eliminada porque no hay datos ni auxilio de transporte activo.`);\n                     const loadedEmployees = loadEmployeesFromLocalStorage([]); // Need employees for name mapping\n                     setSavedPayrolls(loadAllSavedPayrolls(loadedEmployees));\n                }\n            }\n        }\n    }, [calculatedDays, otrosIngresos, otrasDeducciones, incluyeAuxTransporte, employeeId, payPeriodStart, payPeriodEnd, isDataLoaded, toast]);\n\n\n    // Function to check if a date is already calculated\n    const isDateCalculated = useCallback((dateToCheck: Date): boolean => {\n        if (!dateToCheck || !isValidDate(dateToCheck)) return false;\n        return calculatedDays.some(day =>\n             day.inputData.startDate instanceof Date && isValidDate(day.inputData.startDate) &&\n             isSameDayFns(day.inputData.startDate, dateToCheck) // Use aliased import\n        );\n    }, [calculatedDays]);\n\n\n    // --- Import Schedule Handler ---\n    const handleImportSchedule = useCallback(async () => {\n        if (!employeeId || !payPeriodStart || !payPeriodEnd) {\n            toast({ title: 'Información Incompleta', description: 'Selecciona colaborador y período antes de importar.', variant: 'destructive' });\n            return;\n        }\n        setIsImporting(true);\n        try {\n            if (typeof window !== 'undefined') {\n                const savedScheduleRaw = localStorage.getItem(SCHEDULE_DATA_KEY);\n                if (!savedScheduleRaw) throw new Error('No se encontraron datos de horario planificado.');\n\n                const scheduleDataMap = JSON.parse(savedScheduleRaw) as { [dateKey: string]: ScheduleData };\n                let importedCount = 0;\n                let skippedCount = 0;\n                let errorCount = 0;\n                const newCalculatedDays: CalculationResults[] = [];\n\n                let currentDate = new Date(payPeriodStart);\n                while (currentDate <= payPeriodEnd) {\n                    const dateKey = format(currentDate, 'yyyy-MM-dd');\n                    const daySchedule = scheduleDataMap[dateKey];\n\n                    if (isDateCalculated(currentDate)) {\n                         skippedCount++;\n                         currentDate = addDays(currentDate, 1);\n                         continue;\n                     }\n\n                    if (daySchedule) {\n                        let employeeShift: ShiftAssignment | undefined;\n                        for (const deptId in daySchedule.assignments) {\n                            const assignment = daySchedule.assignments[deptId].find(a => a.employee.id === employeeId);\n                            if (assignment) { employeeShift = assignment; break; }\n                        }\n\n                        if (employeeShift) {\n                            const shiftValues: WorkdayFormValues = {\n                                startDate: parseDateFns(dateKey, 'yyyy-MM-dd', new Date()),\n                                startTime: employeeShift.startTime,\n                                endTime: employeeShift.endTime,\n                                endsNextDay: parseInt(employeeShift.endTime.split(':')[0]) < parseInt(employeeShift.startTime.split(':')[0]),\n                                includeBreak: employeeShift.includeBreak,\n                                breakStartTime: employeeShift.breakStartTime,\n                                breakEndTime: employeeShift.breakEndTime,\n                            };\n                            const calculationId = `day_${Date.now()}_${Math.random().toString(36).substring(2, 7)}`;\n                            const result = await calculateSingleWorkday(shiftValues, calculationId);\n\n                            if (isCalculationError(result)) {\n                                console.error(`Error calculando turno importado para ${dateKey}:`, result.error);\n                                errorCount++;\n                                toast({\n                                    title: `Error Importando Turno (${format(currentDate, 'dd/MM')})`,\n                                    description: result.error.includes(\":\") ? result.error.split(':').slice(1).join(':').trim() : result.error, // Show error message after ID\n                                    variant: 'destructive',\n                                    duration: 5000\n                                });\n                            } else {\n                                newCalculatedDays.push(result);\n                                importedCount++;\n                            }\n                        }\n                    }\n                    currentDate = addDays(currentDate, 1);\n                }\n\n                setCalculatedDays(prevDays => [...prevDays, ...newCalculatedDays].sort((a, b) => a.inputData.startDate.getTime() - b.inputData.startDate.getTime()));\n\n                 let toastDescription = `${importedCount} turno(s) importado(s) y calculado(s).`;\n                 if (skippedCount > 0) toastDescription += ` ${skippedCount} día(s) ya calculado(s) omitido(s).`;\n                 if (errorCount > 0) toastDescription += ` ${errorCount} error(es) al calcular.`;\n                 toast({ title: 'Importación de Horario Completa', description: toastDescription, variant: errorCount > 0 ? 'destructive' : 'default', duration: 7000 });\n            } else {\n                throw new Error('Operación solo disponible en el navegador.');\n            }\n        } catch (error) {\n            console.error(\"Error importando horario:\", error);\n             const message = error instanceof Error ? error.message : 'No se pudo importar el horario planificado.';\n            toast({ title: 'Error al Importar', description: message, variant: 'destructive' });\n        } finally {\n            setIsImporting(false);\n        }\n    }, [employeeId, payPeriodStart, payPeriodEnd, toast, isDateCalculated, setCalculatedDays]);\n\n\n     const handleClearPeriodData = () => {\n         const storageKey = getStorageKey(employeeId, payPeriodStart, payPeriodEnd);\n         if (storageKey && typeof window !== 'undefined') {\n            localStorage.removeItem(storageKey);\n         }\n         setCalculatedDays([]);\n         setOtrosIngresos([]);\n         setOtrasDeducciones([]);\n         setIncluyeAuxTransporte(false);\n         setEditingDayId(null);\n         setEditingResultsId(null);\n         setEditedHours(null);\n         const loadedEmployees = loadEmployeesFromLocalStorage([]); // Need employees for name mapping\n         setSavedPayrolls(loadAllSavedPayrolls(loadedEmployees));\n         toast({\n            title: 'Datos del Período Eliminados',\n            description: `Se han borrado los turnos, ajustes y estado de auxilio de transporte guardados localmente para ${employeeId} en este período.`,\n            variant: 'destructive',\n         });\n    };\n\n    const handleDayCalculationComplete = (data: CalculationResults | CalculationError) => {\n        setIsLoadingDay(false);\n        if (isCalculationError(data)) {\n            const errorMessage = data.error || 'Error desconocido en el cálculo.';\n            const displayMessage = errorMessage.includes(\":\")\n                ? errorMessage.split(':').slice(1).join(':').trim() // Show message after ID prefix\n                : errorMessage;\n            setErrorDay(displayMessage); // Store just the message for display\n             toast({\n                 title: 'Error en el Cálculo',\n                 description: displayMessage, // Show user-friendly message\n                 variant: 'destructive',\n                 duration: 7000 // Longer duration for errors\n             });\n        } else {\n             if (!payPeriodStart || !payPeriodEnd || !isValidDate(data.inputData.startDate) || data.inputData.startDate < payPeriodStart || data.inputData.startDate > payPeriodEnd) {\n                setErrorDay(`La fecha del turno (${format(data.inputData.startDate, 'PPP', { locale: es })}) está fuera del período seleccionado.`);\n                toast({\n                    title: 'Fecha Fuera de Período',\n                    description: `El turno del ${format(data.inputData.startDate, 'PPP', { locale: es })} no pertenece al período quincenal (${format(payPeriodStart!, 'dd/MM')} - ${format(payPeriodEnd!, 'dd/MM/yyyy')}). No se agregó.`,\n                    variant: 'destructive',\n                    duration: 5000,\n                });\n                setEditingDayId(null);\n                return;\n            }\n\n            setErrorDay(null);\n            setCalculatedDays((prevDays) => {\n                const existingIndex = prevDays.findIndex((day) => day.id === data.id);\n                let updatedDays;\n                if (existingIndex > -1) {\n                    updatedDays = [...prevDays];\n                    updatedDays[existingIndex] = data;\n                } else {\n                    updatedDays = [...prevDays, data];\n                }\n                return updatedDays.sort((a, b) => a.inputData.startDate.getTime() - b.inputData.startDate.getTime());\n            });\n            const isEditing = !!editingDayId; // Check if we were editing\n            setEditingDayId(null);\n\n             // Handle toast and date advance based on add/edit\n             if (!isEditing) {\n                const nextDay = addDays(data.inputData.startDate, 1);\n                setValue('startDate', nextDay, { shouldValidate: true, shouldDirty: true });\n                 toast({\n                     title: 'Día Agregado, Fecha Avanzada',\n                     description: `Se agregó el turno y la fecha se movió al ${format(nextDay, 'PPP', { locale: es })}.`,\n                     variant: 'default'\n                 });\n             } else {\n                 // Show a different toast for successful EDIT\n                 toast({\n                     title: 'Turno Actualizado',\n                     description: `Turno para ${format(data.inputData.startDate, 'PPP', { locale: es })} actualizado.`,\n                 });\n             }\n        }\n    };\n\n\n  const handleDayCalculationStart = () => {\n    setIsLoadingDay(true);\n    setErrorDay(null);\n  };\n\n  const handleEditDay = (id: string) => {\n    setEditingResultsId(null);\n    setEditedHours(null);\n    setEditingDayId(id);\n  };\n\n   const handleEditResults = (id: string) => {\n     const dayToEdit = calculatedDays.find(day => day.id === id);\n     if (dayToEdit) {\n       setEditingDayId(null);\n       setEditingResultsId(id);\n       setEditedHours({ ...dayToEdit.horasDetalladas });\n     }\n   };\n\n   const handleHourChange = (e: ChangeEvent<HTMLInputElement>, key: keyof CalculationResults['horasDetalladas']) => {\n     const value = e.target.value;\n     if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\n        setEditedHours(prev => {\n            if (!prev) return null;\n            const numericValue = value === '' ? 0 : parseFloat(value);\n            return { ...prev, [key]: isNaN(numericValue) ? 0 : numericValue };\n        });\n     }\n   };\n\n    const handleSaveResults = () => {\n        if (!editingResultsId || !editedHours) return;\n        setCalculatedDays(prevDays => {\n            const index = prevDays.findIndex(day => day.id === editingResultsId);\n            if (index === -1) return prevDays;\n            const updatedDays = [...prevDays];\n            const originalDay = updatedDays[index];\n            let newPagoTotalRecargosExtras = 0;\n            const newPagoDetallado: CalculationResults['pagoDetallado'] = { ...originalDay.pagoDetallado };\n            let newTotalHorasTrabajadas = 0;\n            for (const key in editedHours) {\n                const category = key as keyof CalculationResults['horasDetalladas'];\n                const hours = editedHours[category];\n                newTotalHorasTrabajadas += hours;\n                if (category !== \"Ordinaria_Diurna_Base\") {\n                    const valorHora = VALORES[category] ?? 0;\n                    const pagoCategoria = hours * valorHora;\n                    newPagoDetallado[category] = pagoCategoria;\n                    newPagoTotalRecargosExtras += pagoCategoria;\n                } else {\n                    newPagoDetallado[category] = 0;\n                }\n            }\n            updatedDays[index] = {\n                ...originalDay,\n                horasDetalladas: editedHours,\n                pagoDetallado: newPagoDetallado,\n                pagoTotalRecargosExtras: newPagoTotalRecargosExtras,\n                pagoTotalConSalario: newPagoTotalRecargosExtras,\n                duracionTotalTrabajadaHoras: newTotalHorasTrabajadas,\n            };\n            return updatedDays.sort((a, b) => a.inputData.startDate.getTime() - b.inputData.startDate.getTime());\n        });\n        toast({ title: 'Detalles Actualizados', description: `Las horas para el turno han sido modificadas manualmente.` });\n        setEditingResultsId(null);\n        setEditedHours(null);\n    };\n\n  const handleCancelResults = () => {\n    setEditingResultsId(null);\n    setEditedHours(null);\n  };\n\n   const confirmDeleteDay = (id: string) => {\n     setDayToDeleteId(id);\n   };\n\n   const handleDeleteDay = () => {\n     if (!dayToDeleteId) return;\n     setCalculatedDays((prevDays) => prevDays.filter((day) => day.id !== dayToDeleteId));\n     toast({ title: 'Día Eliminado', description: 'El cálculo del día ha sido eliminado de la quincena.', variant: 'destructive' });\n     setDayToDeleteId(null);\n     if (editingDayId === dayToDeleteId) setEditingDayId(null);\n     if (editingResultsId === dayToDeleteId) { setEditingResultsId(null); setEditedHours(null); }\n   };\n\n   const handleAddIngreso = (data: Omit<AdjustmentItem, 'id'>) => {\n        const newItem: AdjustmentItem = { ...data, id: `ingreso_${Date.now()}` };\n        setOtrosIngresos(prev => [...prev, newItem]);\n        toast({ title: 'Ingreso Agregado', description: `${data.descripcion || 'Ingreso'}: ${formatCurrency(data.monto)}` });\n   };\n\n   const handleAddDeduccion = (data: Omit<AdjustmentItem, 'id'>) => {\n         const newItem: AdjustmentItem = { ...data, id: `deduccion_${Date.now()}` };\n         setOtrasDeducciones(prev => [...prev, newItem]);\n         toast({ title: 'Deducción Agregada', description: `${data.descripcion || 'Deducción'}: ${formatCurrency(data.monto)}`, variant: 'default' });\n   };\n\n   const handleDeleteIngreso = (id: string) => {\n        setOtrosIngresos(prev => prev.filter(item => item.id !== id));\n        toast({ title: 'Ingreso Eliminado', variant: 'destructive' });\n   };\n\n   const handleDeleteDeduccion = (id: string) => {\n        setOtrasDeducciones(prev => prev.filter(item => item.id !== id));\n        toast({ title: 'Deducción Eliminada', variant: 'destructive' });\n   };\n\n    const handleToggleTransporte = () => {\n        setIncluyeAuxTransporte(prev => !prev);\n        toast({\n            title: `Auxilio de Transporte ${!incluyeAuxTransporte ? 'Activado' : 'Desactivado'}`,\n            description: !incluyeAuxTransporte\n                         ? `Se sumará ${formatCurrency(AUXILIO_TRANSPORTE_VALOR)} al total devengado.`\n                         : 'El auxilio de transporte no se incluirá en el cálculo.',\n        });\n    };\n\n  const quincenalSummary = useMemo(() => {\n        if (calculatedDays.length === 0 && !incluyeAuxTransporte && otrosIngresos.length === 0 && otrasDeducciones.length === 0) return null;\n       const baseSummary = calculateQuincenalSummary(calculatedDays, SALARIO_BASE_QUINCENAL_FIJO);\n       const finalSummary: QuincenalCalculationSummary = baseSummary || {\n           totalHorasDetalladas: { Ordinaria_Diurna_Base: 0, Recargo_Noct_Base: 0, Recargo_Dom_Diurno_Base: 0, Recargo_Dom_Noct_Base: 0, HED: 0, HEN: 0, HEDD_F: 0, HEND_F: 0 },\n           totalPagoDetallado: { Ordinaria_Diurna_Base: 0, Recargo_Noct_Base: 0, Recargo_Dom_Diurno_Base: 0, Recargo_Dom_Noct_Base: 0, HED: 0, HEN: 0, HEDD_F: 0, HEND_F: 0 },\n           totalPagoRecargosExtrasQuincena: 0,\n           salarioBaseQuincenal: SALARIO_BASE_QUINCENAL_FIJO,\n           pagoTotalConSalarioQuincena: SALARIO_BASE_QUINCENAL_FIJO,\n           totalDuracionTrabajadaHorasQuincena: 0,\n           diasCalculados: 0,\n       };\n       if (baseSummary) { finalSummary.pagoTotalConSalarioQuincena = baseSummary.pagoTotalConSalarioQuincena; }\n       const auxTransporteAplicado = incluyeAuxTransporte ? AUXILIO_TRANSPORTE_VALOR : 0;\n       const totalOtrosIngresos = otrosIngresos.reduce((sum, item) => sum + item.monto, 0);\n       return finalSummary;\n  }, [calculatedDays, incluyeAuxTransporte, otrosIngresos]);\n\n  const editingDayData = useMemo(() => {\n    if (!editingDayId) return undefined;\n    return calculatedDays.find(day => day.id === editingDayId)?.inputData;\n  }, [editingDayId, calculatedDays]);\n\n  const handleDuplicateToNextDay = useCallback(async () => {\n    const lastDay = calculatedDays.length > 0 ? calculatedDays[calculatedDays.length - 1] : null;\n    if (!lastDay || !payPeriodStart || !payPeriodEnd) {\n        toast({ title: 'No se puede duplicar', description: calculatedDays.length === 0 ? 'Agrega al menos un turno primero.' : 'Selecciona un período válido.', variant: 'destructive' });\n        return;\n    }\n    handleDayCalculationStart();\n    const nextDayDate = addDays(lastDay.inputData.startDate, 1);\n    if (nextDayDate > payPeriodEnd) {\n        setIsLoadingDay(false);\n        toast({ title: 'Fecha Fuera de Período', description: `El siguiente día (${format(nextDayDate, 'PPP', { locale: es })}) está fuera del período quincenal. No se puede duplicar.`, variant: 'destructive', duration: 5000 });\n        return;\n    }\n     if (isDateCalculated(nextDayDate)) {\n        setIsLoadingDay(false);\n        toast({ title: 'Fecha Ya Calculada', description: `Ya existe un cálculo para el ${format(nextDayDate, 'PPP', { locale: es })}. No se puede duplicar.`, variant: 'destructive', duration: 5000 });\n        // Automatically advance the date in the form even if duplication fails due to existing date\n        setValue('startDate', addDays(nextDayDate, 1), { shouldValidate: true, shouldDirty: true });\n        return;\n     }\n    const nextDayValues: WorkdayFormValues = { ...lastDay.inputData, startDate: nextDayDate };\n    const newDayId = `day_${Date.now()}_${Math.random().toString(36).substring(2, 7)}`;\n    try {\n        const result = await calculateSingleWorkday(nextDayValues, newDayId);\n        handleDayCalculationComplete(result);\n        // No separate toast here, handleDayCalculationComplete now handles the success toast and date advance\n    } catch (error) {\n        console.error(\"Error duplicando el turno:\", error);\n        const errorMessage = error instanceof Error ? error.message : \"Hubo un error al duplicar.\";\n        // Pass error object structure to the completion handler\n        handleDayCalculationComplete({ error: `Error duplicando: ${errorMessage}` });\n    } finally {\n        setIsLoadingDay(false);\n    }\n}, [calculatedDays, payPeriodStart, payPeriodEnd, toast, handleDayCalculationStart, handleDayCalculationComplete, isDateCalculated, setValue]);\n\n\n  const isFormDisabled = !employeeId || !payPeriodStart || !payPeriodEnd;\n  const showSummary = quincenalSummary !== null || otrosIngresos.length > 0 || otrasDeducciones.length > 0 || incluyeAuxTransporte;\n\n  const handleExportPDF = () => {\n      const currentSummary = quincenalSummary;\n     if (!currentSummary || !employeeId || !payPeriodStart || !payPeriodEnd) {\n         toast({ title: 'Datos Incompletos para Exportar', description: 'Asegúrate de tener colaborador, período, cálculo y ajustes completados.', variant: 'destructive' });\n         return;\n     }\n     try {\n          const auxTransporteAplicado = incluyeAuxTransporte ? AUXILIO_TRANSPORTE_VALOR : 0;\n          const currentEmployee = employees.find(emp => emp.id === employeeId); // Find employee details\n        exportPayrollToPDF(currentSummary, employeeId, currentEmployee?.name, payPeriodStart, payPeriodEnd, otrosIngresos, otrasDeducciones, auxTransporteAplicado); // Pass name\n        toast({ title: 'PDF Exportado', description: `Comprobante de nómina para ${currentEmployee?.name || employeeId} generado.` });\n     } catch (error) {\n        console.error(\"Error exportando PDF:\", error);\n         toast({ title: 'Error al Exportar PDF', description: 'No se pudo generar el archivo PDF.', variant: 'destructive' });\n     }\n  };\n\n  const handleBulkExportPDF = () => {\n    const allPayrollDataToExport: SavedPayrollData[] = loadAllSavedPayrolls(employees); // Pass current employees list\n    if (allPayrollDataToExport.length === 0) {\n        toast({ title: 'No Hay Datos para Exportar', description: 'No se encontraron nóminas guardadas.', variant: 'default' });\n        return;\n    }\n    try {\n        exportAllPayrollsToPDF(allPayrollDataToExport, employees); // Pass employees list\n        toast({ title: 'Exportación Masiva Completa', description: `Se generó un PDF con ${allPayrollDataToExport.length} comprobantes.` });\n    } catch (error) {\n        console.error(\"Error durante la exportación masiva de PDF:\", error);\n        toast({ title: 'Error en Exportación Masiva', description: 'Ocurrió un error al generar el PDF combinado.', variant: 'destructive' });\n    }\n  };\n\n   const handleLoadSavedPayroll = (payrollKey: string) => {\n     const payrollToLoad = savedPayrolls.find(p => p.key === payrollKey);\n     if (!payrollToLoad || typeof window === 'undefined') return;\n     setEmployeeId(payrollToLoad.employeeId);\n     setPayPeriodStart(payrollToLoad.periodStart);\n     setPayPeriodEnd(payrollToLoad.periodEnd);\n     setIsDataLoaded(false);\n     toast({ title: 'Nómina Cargada', description: `Se cargaron los datos de ${payrollToLoad.employeeName || payrollToLoad.employeeId} para ${format(payrollToLoad.periodStart, 'dd/MM/yy')} - ${format(payrollToLoad.periodEnd, 'dd/MM/yy')}.` });\n   };\n\n    const handleDeleteSavedPayroll = () => {\n      if (!payrollToDeleteKey || typeof window === 'undefined') return;\n      try {\n         const payrollInfo = savedPayrolls.find(p => p.key === payrollToDeleteKey);\n         localStorage.removeItem(payrollToDeleteKey);\n         const updatedSavedPayrolls = savedPayrolls.filter(p => p.key !== payrollToDeleteKey);\n         setSavedPayrolls(updatedSavedPayrolls);\n         setPayrollToDeleteKey(null);\n         toast({ title: 'Nómina Guardada Eliminada', description: payrollInfo ? `La nómina de ${payrollInfo.employeeName || payrollInfo.employeeId} (${format(payrollInfo.periodStart, 'dd/MM/yy')}) fue eliminada.` : 'Nómina eliminada.', variant: 'destructive' });\n         const currentKey = getStorageKey(employeeId, payPeriodStart, payPeriodEnd);\n         if (currentKey === payrollToDeleteKey) {\n             setCalculatedDays([]); setOtrosIngresos([]); setOtrasDeducciones([]); setIncluyeAuxTransporte(false);\n             // Optionally clear employee/period selection if the current one was deleted\n             // setEmployeeId(''); setPayPeriodStart(undefined); setPayPeriodEnd(undefined);\n         }\n      } catch (error) {\n          console.error(\"Error deleting saved payroll:\", error);\n          toast({ title: 'Error al Eliminar', description: 'No se pudo eliminar la nómina guardada.', variant: 'destructive' });\n          setPayrollToDeleteKey(null);\n      }\n    };\n\n     // --- Handlers for Export/Import JSON ---\n     const handleExportSavedPayrolls = () => {\n        try {\n            const allPayrolls = loadAllSavedPayrolls(employees);\n            if (allPayrolls.length === 0) {\n                toast({ title: \"Nada que Exportar\", description: \"No hay nóminas guardadas para exportar.\", variant: \"default\" });\n                return;\n            }\n            // Prepare data for export: Dates must be ISO strings\n            const dataToExport = allPayrolls.map(payroll => ({\n                ...payroll,\n                periodStart: payroll.periodStart instanceof Date ? payroll.periodStart.toISOString() : payroll.periodStart,\n                periodEnd: payroll.periodEnd instanceof Date ? payroll.periodEnd.toISOString() : payroll.periodEnd,\n                createdAt: payroll.createdAt instanceof Date ? payroll.createdAt.toISOString() : payroll.createdAt,\n                // Revive dates within calculatedDays (needed for nested structures)\n                 summary: {\n                     ...payroll.summary,\n                    // Note: summary itself doesn't contain the full days array typically.\n                    // The data is loaded/parsed correctly via parseStoredData when loaded.\n                 }\n            }));\n\n            const jsonString = JSON.stringify(dataToExport, null, 2);\n            const blob = new Blob([jsonString], { type: 'application/json' });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = `nominas_guardadas_${format(new Date(), 'yyyyMMdd_HHmmss')}.json`;\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            URL.revokeObjectURL(url);\n            toast({ title: \"Exportación Exitosa\", description: `Se exportaron ${allPayrolls.length} nóminas guardadas.` });\n        } catch (error) {\n            console.error(\"Error exportando nóminas guardadas:\", error);\n            toast({ title: \"Error al Exportar\", description: \"No se pudieron exportar las nóminas guardadas.\", variant: \"destructive\" });\n        }\n    };\n\n    const handleImportSavedPayrolls = (event: ChangeEvent<HTMLInputElement>) => {\n        const file = event.target.files?.[0];\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            try {\n                const jsonString = e.target?.result as string;\n                const importedDataRaw = JSON.parse(jsonString);\n\n                if (!Array.isArray(importedDataRaw)) {\n                    throw new Error(\"El archivo JSON no contiene un array de nóminas válido.\");\n                }\n\n                const importedPayrolls = reviveSavedPayrollDates(importedDataRaw); // Revive dates\n\n                if (importedPayrolls.length === 0 && importedDataRaw.length > 0) {\n                     throw new Error(\"No se pudieron parsear nóminas válidas del archivo.\");\n                }\n\n                let addedCount = 0;\n                let skippedCount = 0;\n\n                 // Merge imported data with existing data (overwrite based on key)\n                 const currentKeys = new Set(savedPayrolls.map(p => p.key));\n\n                importedPayrolls.forEach(payroll => {\n                    // Generate the key based on imported data to check for duplicates\n                    const storageKey = getStorageKey(payroll.employeeId, payroll.periodStart, payroll.periodEnd);\n                    if (!storageKey) {\n                        console.warn(\"Omitiendo nómina importada con datos inválidos:\", payroll);\n                        skippedCount++;\n                        return;\n                    }\n                    payroll.key = storageKey; // Ensure key matches standard format\n\n                     // Prepare data for storage (stringify dates)\n                     // Extract the calculatedDays from the corresponding stored item if it exists, otherwise use empty array.\n                     // The logic to parse the *full* stored data including days happens later when loading.\n                     // This import function should only focus on storing the main payroll metadata.\n                      const dataToStore = {\n                          // We only store the metadata and adjustments here.\n                          // calculatedDays are part of the individual storage item, not the bulk import directly.\n                         employeeId: payroll.employeeId,\n                         employeeName: payroll.employeeName,\n                         periodStart: payroll.periodStart instanceof Date ? payroll.periodStart.toISOString() : payroll.periodStart,\n                         periodEnd: payroll.periodEnd instanceof Date ? payroll.periodEnd.toISOString() : payroll.periodEnd,\n                         createdAt: payroll.createdAt instanceof Date ? payroll.createdAt.toISOString() : payroll.createdAt,\n                         otrosIngresosLista: payroll.otrosIngresosLista,\n                         otrasDeduccionesLista: payroll.otrasDeduccionesLista,\n                         incluyeAuxTransporte: payroll.incluyeAuxTransporte,\n                          // Summary is recalculated on load, so we don't strictly need to store it here\n                          // unless the JSON format *requires* it.\n                          // If the JSON source includes calculatedDays, we'd need to handle that.\n                           calculatedDays: [], // Assuming bulk JSON doesn't include daily details for simplicity here.\n                     };\n\n\n                    try {\n                        // Retrieve existing data to potentially merge calculatedDays if needed\n                        const existingDataRaw = localStorage.getItem(storageKey);\n                        const { days: existingDays } = parseStoredData(existingDataRaw);\n\n                        // Save the imported metadata along with existing or empty calculatedDays\n                         localStorage.setItem(storageKey, JSON.stringify({\n                             ...dataToStore,\n                             calculatedDays: existingDays.map(d => ({ // Re-stringify dates for storage\n                                 ...d,\n                                 inputData: {\n                                    ...d.inputData,\n                                     startDate: d.inputData.startDate instanceof Date ? d.inputData.startDate.toISOString() : d.inputData.startDate\n                                 }\n                             }))\n                         }));\n\n                        if (!currentKeys.has(storageKey)) {\n                            addedCount++;\n                        } else {\n                            skippedCount++; // Count as skipped if key already existed (updated)\n                        }\n                    } catch (storageError) {\n                         console.error(`Error guardando nómina importada ${storageKey} en localStorage:`, storageError);\n                         skippedCount++;\n                         // Optionally show a specific error for this item\n                    }\n                });\n\n                 // Reload the state from localStorage to reflect changes\n                 const loadedEmployees = loadEmployeesFromLocalStorage([]);\n                 setSavedPayrolls(loadAllSavedPayrolls(loadedEmployees));\n\n                toast({\n                     title: \"Importación Completada\",\n                     description: `${addedCount} nóminas nuevas importadas. ${skippedCount} nóminas actualizadas o ignoradas.`,\n                     variant: \"default\"\n                 });\n\n            } catch (error) {\n                console.error(\"Error importando nóminas:\", error);\n                const message = error instanceof Error ? error.message : \"No se pudo importar el archivo JSON.\";\n                toast({ title: \"Error al Importar\", description: message, variant: \"destructive\" });\n            } finally {\n                // Reset file input\n                if (importJsonInputRef.current) {\n                    importJsonInputRef.current.value = '';\n                }\n            }\n        };\n        reader.readAsText(file);\n    };\n\n\n  return (\n    <main\n        className=\"container mx-auto p-4 md:p-8 max-w-7xl relative\" // Added relative for overlay positioning\n    >\n\n        {/* Decorative Images */}\n        <div className=\"absolute top-[-30px] left-8 -z-10 opacity-70 dark:opacity-30 pointer-events-none sm:opacity-70 md:opacity-70 lg:opacity-70 xl:opacity-70 2xl:opacity-70\" aria-hidden=\"true\"> {/* Adjusted opacity for small screens */}\n           <Image\n               src=\"https://i.postimg.cc/NFs0pvpq/Recurso-4.png\" // Updated image source\n               alt=\"Ilustración de taza de café\"\n               width={120} // Adjust size as needed\n               height={120} // Adjust size as needed\n               className=\"object-contain transform -rotate-12\" // Adjusted vertical position slightly\n               data-ai-hint=\"coffee cup illustration\"\n           />\n        </div>\n        <div className=\"absolute top-[-90px] right-[-20px] -z-10 opacity-70 dark:opacity-30 pointer-events-none sm:opacity-70 md:opacity-70 lg:opacity-70 xl:opacity-70 2xl:opacity-70\" aria-hidden=\"true\"> {/* Updated opacity for small screens */}\n            <Image\n               src=\"https://i.postimg.cc/J0xsLzGz/Recurso-3.png\" // Replaced image URL\n               alt=\"Ilustración de elementos de oficina\" // Updated alt text\n               width={150} // Adjust size as needed\n               height={150} // Adjust size as needed\n               className=\"object-contain transform rotate-12\" // Removed relative positioning\n               data-ai-hint=\"office elements illustration\" // Updated hint\n            />\n        </div>\n\n\n      <div className=\"text-center mb-8\">\n         <h1 className=\"text-2xl sm:text-3xl md:text-4xl font-bold tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-primary via-foreground/80 to-primary\">\n            Calculadora de Nómina Quincenal\n         </h1>\n      </div>\n\n      <Card className=\"mb-8 shadow-lg bg-card\">\n          <CardHeader>\n              <CardTitle className=\"flex items-center gap-2 text-lg text-foreground\"> <User className=\"h-5 w-5\" /> Selección de Colaborador y Período </CardTitle>\n              <CardDescription> Ingresa el ID del colaborador y selecciona el período para cargar/guardar o importar turnos. </CardDescription>\n          </CardHeader>\n          <CardContent className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-end\">\n              <div className=\"space-y-2\">\n                  <Label htmlFor=\"employeeId\" className=\"text-foreground\">ID Colaborador</Label>\n                  <Input id=\"employeeId\" value={employeeId} onChange={(e) => setEmployeeId(e.target.value)} placeholder=\"Ej: 12345678\" />\n              </div>\n              <div className=\"space-y-2\">\n                  <Label className=\"text-foreground\">Inicio Período</Label>\n                  <Popover>\n                      <PopoverTrigger asChild>\n                          <Button variant={'outline'} className={cn('w-full justify-start text-left font-normal', !payPeriodStart && 'text-muted-foreground')}>\n                              <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                              {payPeriodStart ? format(payPeriodStart, 'PPP', { locale: es }) : <span>Selecciona fecha</span>}\n                          </Button>\n                      </PopoverTrigger>\n                      <PopoverContent className=\"w-auto p-0\"> <Calendar mode=\"single\" selected={payPeriodStart} onSelect={setPayPeriodStart} initialFocus locale={es} /> </PopoverContent>\n                  </Popover>\n              </div>\n              <div className=\"space-y-2\">\n                  <Label className=\"text-foreground\">Fin Período</Label>\n                   <Popover>\n                      <PopoverTrigger asChild>\n                          <Button variant={'outline'} className={cn('w-full justify-start text-left font-normal', !payPeriodEnd && 'text-muted-foreground')}>\n                              <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                              {payPeriodEnd ? format(payPeriodEnd, 'PPP', { locale: es }) : <span>Selecciona fecha</span>}\n                          </Button>\n                      </PopoverTrigger>\n                      <PopoverContent className=\"w-auto p-0\"> <Calendar mode=\"single\" selected={payPeriodEnd} onSelect={setPayPeriodEnd} initialFocus locale={es} disabled={(date) => payPeriodStart ? date < payPeriodStart : false} /> </PopoverContent>\n                  </Popover>\n              </div>\n\n                <div className=\"md:col-span-3 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-2 mt-4\"> {/* Increased to 4 columns */}\n                   {/* Import Schedule Button */}\n                   <Button onClick={handleImportSchedule} variant=\"outline\" className=\"w-full hover:bg-primary hover:text-primary-foreground\" disabled={isFormDisabled || isImporting}>\n                        {isImporting ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <FolderSync className=\"mr-2 h-4 w-4\" />}\n                        Importar Horario Planificado\n                   </Button>\n                   {/* Clear Period Button */}\n                   <AlertDialog>\n                        <AlertDialogTrigger asChild>\n                             <Button variant=\"outline\" className=\"w-full hover:bg-destructive hover:text-destructive-foreground\" disabled={isFormDisabled || (calculatedDays.length === 0 && otrosIngresos.length === 0 && otrasDeducciones.length === 0 && !incluyeAuxTransporte) }>\n                                <Eraser className=\"mr-2 h-4 w-4\" /> Limpiar Período Actual\n                            </Button>\n                        </AlertDialogTrigger>\n                       <AlertDialogContent>\n                         <AlertDialogHeader> <AlertDialogTitle>¿Limpiar Datos del Período?</AlertDialogTitle> <AlertDialogDescription> Esta acción eliminará turnos, ajustes y aux. transporte para <strong>{employeeId || 'colaborador'}</strong> en período <strong>{payPeriodStart ? format(payPeriodStart, 'dd/MM/yy') : '?'}</strong> - <strong>{payPeriodEnd ? format(payPeriodEnd, 'dd/MM/yy') : '?'}</strong>. No se puede deshacer. </AlertDialogDescription> </AlertDialogHeader>\n                         <AlertDialogFooter> <AlertDialogCancel>Cancelar</AlertDialogCancel> <AlertDialogAction onClick={handleClearPeriodData} className=\"bg-destructive hover:bg-destructive/90\"> Limpiar Datos </AlertDialogAction> </AlertDialogFooter>\n                       </AlertDialogContent>\n                   </AlertDialog>\n                    {/* Export Saved Payrolls Button */}\n                    <Button\n                         onClick={handleExportSavedPayrolls}\n                         variant=\"outline\"\n                         className=\"w-full hover:bg-green-600 hover:text-white\" // Green hover\n                         disabled={savedPayrolls.length === 0}\n                         title=\"Exportar todas las nóminas guardadas (JSON)\"\n                    >\n                         <Download className=\"mr-2 h-4 w-4\" /> Exportar Nóminas\n                    </Button>\n                    {/* Import Saved Payrolls Button */}\n                     <input\n                       type=\"file\"\n                       accept=\".json\"\n                       ref={importJsonInputRef}\n                       onChange={handleImportSavedPayrolls}\n                       className=\"hidden\"\n                       id=\"import-payrolls-input\"\n                    />\n                    <Button\n                        variant=\"outline\"\n                        className=\"w-full hover:bg-blue-600 hover:text-white\" // Blue hover\n                        onClick={() => importJsonInputRef.current?.click()}\n                        title=\"Importar nóminas guardadas desde archivo JSON\"\n                    >\n                        <FolderUp className=\"mr-2 h-4 w-4\" /> Importar Nóminas\n                    </Button>\n               </div>\n          </CardContent>\n      </Card>\n\n      {/* Main Content Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-7 gap-8 mb-8\">\n\n         {/* Left Column: Add/Edit Turno */}\n         <div className=\"lg:col-span-2\">\n            <Card className={`shadow-lg bg-card ${isFormDisabled ? 'opacity-50 pointer-events-none' : ''}`}>\n               <CardHeader>\n                 <CardTitle className=\"flex items-center gap-2 text-lg text-foreground\"> {editingDayId ? <Edit className=\"h-4 w-4\" /> : <PlusCircle className=\"h-4 w-4\" />} {editingDayId ? 'Editar Turno' : 'Agregar Turno'} </CardTitle>\n                 <CardDescription> {isFormDisabled ? 'Selecciona colaborador y período.' : editingDayId ? `Modifica fecha/horas.` : 'Ingresa detalles del turno.'} </CardDescription>\n               </CardHeader>\n               <CardContent>\n                  {isFormDisabled ? ( <div className=\"text-center text-muted-foreground italic py-4\"> Selección pendiente. </div> ) : (\n                     <WorkdayForm\n                       key={editingDayId || 'new'}\n                       onCalculationStart={handleDayCalculationStart}\n                       onCalculationComplete={handleDayCalculationComplete}\n                       isLoading={isLoadingDay}\n                       initialData={editingDayData}\n                       existingId={editingDayId}\n                       isDateCalculated={isDateCalculated}\n                     /> )}\n                 {errorDay && ( <p className=\"text-sm font-medium text-destructive mt-4\">{errorDay}</p> )}\n               </CardContent>\n            </Card>\n         </div>\n\n         {/* Center Column: Calculated Days List */}\n         <div className=\"lg:col-span-3 space-y-8\">\n            {calculatedDays.length > 0 && (\n               <Card className=\"shadow-lg bg-card\">\n                 <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2 text-lg text-foreground\"> <Clock className=\"h-4 w-4\"/> Turnos Agregados ({calculatedDays.length}) </CardTitle>\n                   <CardDescription>Lista de turnos. Edita horas o elimina.</CardDescription>\n                 </CardHeader>\n                 <CardContent>\n                   <ul className=\"space-y-4 max-h-[60vh] overflow-y-auto pr-2\">\n                     {calculatedDays.map((day, index) => (\n                       <li key={day.id} className={`p-4 border rounded-lg shadow-sm transition-colors ${editingResultsId === day.id ? 'bg-primary/10 border-primary' : 'bg-card'}`}>\n                          <div className=\"flex items-start justify-between mb-3\">\n                            <div>\n                              <p className=\"font-semibold text-lg mb-1 text-foreground\">Turno {index + 1}</p>\n                              <div className=\"flex items-center text-sm text-muted-foreground gap-2 mb-1\"> <CalendarIcon className=\"h-4 w-4\" /> {format(day.inputData.startDate, 'PPPP', { locale: es })} </div>\n                              <div className=\"flex items-center text-sm text-muted-foreground gap-2\"> <Clock className=\"h-4 w-4\" /> {formatTo12Hour(day.inputData.startTime)} - {formatTo12Hour(day.inputData.endTime)} {day.inputData.endsNextDay ? ' (+1d)' : ''} </div>\n                               {day.inputData.includeBreak && day.inputData.breakStartTime && day.inputData.breakEndTime && (\n                                   <div className=\"flex items-center text-sm text-muted-foreground/80 gap-2 mt-1\">\n                                       <Coffee className=\"h-4 w-4 text-blue-500\" /> {/* Break icon */}\n                                       Descanso: {formatTo12Hour(day.inputData.breakStartTime)} - {formatTo12Hour(day.inputData.breakEndTime)}\n                                   </div>\n                               )}\n                            </div>\n                            <div className=\"text-right flex-shrink-0 ml-4\">\n                                <div className=\"text-sm text-muted-foreground mb-1\">Recargos/Extras:</div>\n                                <div className=\"font-semibold text-primary text-lg flex items-center justify-end gap-1\"> {formatCurrency(day.pagoTotalRecargosExtras)} </div>\n                               <div className=\"flex items-center justify-end gap-1 mt-2\">\n                                  <Button variant=\"ghost\" size=\"icon\" onClick={() => handleEditDay(day.id)} title=\"Editar Fecha/Horas\" className={`h-8 w-8 ${editingDayId === day.id ? 'text-primary bg-primary/10' : ''}`} disabled={editingResultsId === day.id}> <Edit className=\"h-4 w-4\" /> </Button>\n                                  <Button variant=\"ghost\" size=\"icon\" onClick={() => handleEditResults(day.id)} title=\"Editar Horas Calculadas\" className={`h-8 w-8 ${editingResultsId === day.id ? 'text-primary bg-primary/10' : ''}`} disabled={editingDayId === day.id}> <PencilLine className=\"h-4 w-4\" /> </Button>\n                                  <AlertDialog>\n                                     <AlertDialogTrigger asChild>\n                                       <Button variant=\"ghost\" size=\"icon\" className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\" onClick={() => confirmDeleteDay(day.id)} title=\"Eliminar turno\" disabled={editingDayId === day.id || editingResultsId === day.id}> <Trash2 className=\"h-4 w-4\" /> </Button>\n                                     </AlertDialogTrigger>\n                                    <AlertDialogContent> <AlertDialogHeader> <AlertDialogTitle>¿Estás seguro?</AlertDialogTitle> <AlertDialogDescription> Eliminar cálculo para turno iniciado el {calculatedDays.find(d => d.id === dayToDeleteId)?.inputData?.startDate ? format(calculatedDays.find(d => d.id === dayToDeleteId)!.inputData.startDate, 'PPP', { locale: es }) : 'seleccionado'}? No se puede deshacer. </AlertDialogDescription> </AlertDialogHeader> <AlertDialogFooter> <AlertDialogCancel onClick={() => setDayToDeleteId(null)}>Cancelar</AlertDialogCancel> <AlertDialogAction onClick={handleDeleteDay} className=\"bg-destructive hover:bg-destructive/90\"> Eliminar </AlertDialogAction> </AlertDialogFooter> </AlertDialogContent>\n                                  </AlertDialog>\n                                </div>\n                            </div>\n                         </div>\n                          <Separator className=\"my-3\"/>\n                          {editingResultsId === day.id && editedHours ? (\n                              <div className=\"space-y-3\">\n                                  <p className=\"text-sm font-medium text-foreground\">Editando horas calculadas:</p>\n                                  <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-x-4 gap-y-3\">\n                                      {displayOrder.map(key => (\n                                          <div key={key} className=\"space-y-1\">\n                                              <Label htmlFor={`edit-hours-${day.id}-${key}`} className=\"text-xs text-muted-foreground\"> {abbreviatedLabelMap[key] || key} </Label>\n                                              <Input id={`edit-hours-${day.id}-${key}`} type=\"number\" step=\"0.01\" min=\"0\" value={editedHours[key] ?? 0} onChange={(e) => handleHourChange(e, key)} className=\"h-8 text-sm\" placeholder=\"0.00\" />\n                                          </div>\n                                      ))}\n                                  </div>\n                                  <div className=\"flex justify-end gap-2 mt-3\">\n                                      <Button variant=\"ghost\" size=\"sm\" onClick={handleCancelResults}> <X className=\"mr-1 h-4 w-4\" /> Cancelar </Button>\n                                      <Button variant=\"default\" size=\"sm\" onClick={handleSaveResults}> <Save className=\"mr-1 h-4 w-4\" /> Guardar Horas </Button>\n                                  </div>\n                              </div>\n                          ) : (\n                              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-x-4 gap-y-1 text-sm\">\n                                  {displayOrder.map(key => {\n                                      const hours = day.horasDetalladas[key];\n                                      if (hours > 0) { return ( <div key={key} className=\"flex justify-between items-center space-x-1\"> <span className=\"text-muted-foreground truncate mr-1\">{abbreviatedLabelMap[key] || key}:</span> <span className=\"font-medium text-right text-foreground flex-shrink-0\">{formatHours(hours)}h</span> </div> ); }\n                                      return null;\n                                  })}\n                                  <div className=\"flex justify-between items-center col-span-full mt-1 pt-1 border-t border-dashed\"> <span className=\"text-muted-foreground font-medium\">Total Horas Trabajadas:</span> <span className=\"font-semibold text-right text-foreground\">{formatHours(day.duracionTotalTrabajadaHoras)}h</span> </div>\n                              </div>\n                          )}\n                       </li>\n                     ))}\n                   </ul>\n                    <Button variant=\"outline\" onClick={handleDuplicateToNextDay} className=\"mt-6 w-full md:w-auto hover:bg-primary hover:text-primary-foreground\" disabled={isFormDisabled || isLoadingDay || calculatedDays.length === 0}>\n                       {isLoadingDay ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <CopyPlus className=\"mr-2 h-4 w-4\" />} Duplicar Turno Sig. Día\n                     </Button>\n                 </CardContent>\n               </Card>\n             )}\n             {calculatedDays.length === 0 && !editingDayId && !isFormDisabled && (\n                <Card className=\"text-center p-8 border-dashed mt-8 bg-card\"> <CardHeader> <CardTitle className=\"text-lg text-foreground\">Comienza a Calcular</CardTitle> <CardDescription>Agrega el primer turno para {employeeId} o importa.</CardDescription> </CardHeader> </Card>\n             )}\n              {isFormDisabled && calculatedDays.length === 0 && (\n                <Card className=\"text-center p-8 border-dashed mt-8 bg-muted/50\"> <CardHeader> <CardTitle className=\"text-lg text-foreground\">Selección Pendiente</CardTitle> <CardDescription>Ingresa ID y período para empezar.</CardDescription> </CardHeader> </Card>\n             )}\n         </div>\n\n         {/* Right Column: Saved Payroll List */}\n         <div className=\"lg:col-span-2\">\n              <SavedPayrollList\n                  payrolls={savedPayrolls}\n                  onLoad={handleLoadSavedPayroll}\n                  onDelete={(key) => setPayrollToDeleteKey(key)}\n                  onBulkExport={() => handleBulkExportPDF()} // Pass simple function call for PDF\n                   onExportJson={handleExportSavedPayrolls} // Pass JSON export handler\n                   onImportJsonClick={() => importJsonInputRef.current?.click()} // Pass function to trigger input click\n              />\n               <AlertDialog open={!!payrollToDeleteKey} onOpenChange={(open) => !open && setPayrollToDeleteKey(null)}>\n                  <AlertDialogContent> <AlertDialogHeader> <AlertDialogTitle>¿Eliminar Nómina Guardada?</AlertDialogTitle> <AlertDialogDescription> Eliminar nómina de <strong>{savedPayrolls.find(p => p.key === payrollToDeleteKey)?.employeeName || savedPayrolls.find(p => p.key === payrollToDeleteKey)?.employeeId}</strong> ({savedPayrolls.find(p => p.key === payrollToDeleteKey)?.periodStart ? format(savedPayrolls.find(p => p.key === payrollToDeleteKey)!.periodStart, 'dd/MM/yy') : '?'} - {savedPayrolls.find(p => p.key === payrollToDeleteKey)?.periodEnd ? format(savedPayrolls.find(p => p.key === payrollToDeleteKey)!.periodEnd, 'dd/MM/yy') : '?'})? No se puede deshacer. </AlertDialogDescription> </AlertDialogHeader> <AlertDialogFooter> <AlertDialogCancel onClick={() => setPayrollToDeleteKey(null)}>Cancelar</AlertDialogCancel> <AlertDialogAction onClick={handleDeleteSavedPayroll} className=\"bg-destructive hover:bg-destructive/90\"> Eliminar Nómina </AlertDialogAction> </AlertDialogFooter> </AlertDialogContent>\n              </AlertDialog>\n         </div>\n\n     </div>\n\n      {/* Summary Section */}\n      {showSummary && (\n         <Card className=\"shadow-lg mt-8 bg-card lg:col-span-7\"> {/* Span full width on large screens */}\n            <CardHeader className=\"flex flex-row items-center justify-between\">\n               <div>\n                 <CardTitle className=\"flex items-center gap-2 text-lg text-foreground\"><Calculator className=\"h-4 w-4\" /> Resumen Quincenal</CardTitle>\n                 <CardDescription>Resultados para {employees.find(emp => emp.id === employeeId)?.name || employeeId} ({payPeriodStart ? format(payPeriodStart, 'dd/MM') : ''} - {payPeriodEnd ? format(payPeriodEnd, 'dd/MM') : ''}).</CardDescription>\n               </div>\n                {/* PDF Export Dropdown */}\n                 <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                        <Button\n                            variant=\"secondary\"\n                            size=\"sm\"\n                            disabled={!quincenalSummary || !employeeId || !payPeriodStart || !payPeriodEnd}\n                        >\n                             <FileDown className=\"mr-2 h-4 w-4\" /> PDF <span className=\"ml-1 text-xs\">(Actual)</span>\n                        </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent>\n                       <DropdownMenuItem onClick={handleExportPDF} disabled={!quincenalSummary || !employeeId || !payPeriodStart || !payPeriodEnd}> Exportar Nómina Actual </DropdownMenuItem>\n                       <DropdownMenuSeparator />\n                       <DropdownMenuItem onClick={handleBulkExportPDF} disabled={savedPayrolls.length === 0} className=\"text-red-600 focus:text-red-700\"> Exportar Lista Guardadas </DropdownMenuItem>\n                    </DropdownMenuContent>\n                 </DropdownMenu>\n\n            </CardHeader>\n            <CardContent>\n               <ResultsDisplay\n                   results={quincenalSummary}\n                   error={null}\n                   isLoading={false}\n                   isSummary={true}\n                   otrosIngresos={otrosIngresos}\n                   otrasDeducciones={otrasDeducciones}\n                   onAddIngreso={() => setIsIncomeModalOpen(true)}\n                   onAddDeduccion={() => setIsDeductionModalOpen(true)}\n                   onDeleteIngreso={handleDeleteIngreso}\n                   onDeleteDeduccion={handleDeleteDeduccion}\n                   incluyeAuxTransporte={incluyeAuxTransporte}\n                   onToggleTransporte={handleToggleTransporte}\n                   auxTransporteValor={AUXILIO_TRANSPORTE_VALOR}\n                />\n            </CardContent>\n         </Card>\n       )}\n\n      {/* Adjustment Modals */}\n      <AdjustmentModal type=\"ingreso\" isOpen={isIncomeModalOpen} onClose={() => setIsIncomeModalOpen(false)} onSave={handleAddIngreso} />\n       <AdjustmentModal type=\"deduccion\" isOpen={isDeductionModalOpen} onClose={() => setIsDeductionModalOpen(false)} onSave={handleAddDeduccion} />\n\n    </main>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}