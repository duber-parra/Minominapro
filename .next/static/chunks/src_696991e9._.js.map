{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\", // Changed text-base md:text-sm to just text-sm\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qXACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker, type DateFormatter, type DayModifiers, type Matcher } from \"react-day-picker\" // Added DayModifiers, Matcher\nimport type { Locale } from 'date-fns'; // Import Locale type\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\n// --- Added modifier props ---\nexport type CalendarProps = React.ComponentProps<typeof DayPicker> & {\n    locale?: Locale; // Add locale prop\n    modifiers?: DayModifiers; // Allow passing custom modifiers\n    modifiersClassNames?: Record<string, string>; // Allow passing class names for modifiers\n}\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  locale, // Destructure locale\n  modifiers, // Destructure modifiers\n  modifiersClassNames, // Destructure modifier class names\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      locale={locale} // Pass locale to DayPicker\n      modifiers={modifiers} // Pass modifiers\n      modifiersClassNames={modifiersClassNames} // Pass modifier class names\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n\n"],"names":[],"mappings":";;;;AAIA;AAAA;AACA,wRAAkG,8BAA8B;AAGhI;AACA;AARA;;;;;;AAiBA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,MAAM,EACN,SAAS,EACT,mBAAmB,EACnB,GAAG,OACW;IACd,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACA,QAAQ;QACR,WAAW;QACX,qBAAqB;QACpB,GAAG,KAAK;;;;;;AAGf;KA7DS;AA8DT,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 456, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 504, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/actions/calculate-workday.ts"],"sourcesContent":["\n'use server';\n\nimport {\n    parse, format, addHours, addDays,\n    isBefore, isAfter, isEqual, isSameDay,\n    startOfDay, endOfDay, getDay, getHours, getMinutes,\n    differenceInSeconds, setHours, setMinutes, setSeconds, setMilliseconds,\n    isValid, getYear\n} from 'date-fns';\nimport type { z } from 'zod';\nimport type { WorkdayFormValues } from '@/components/workday-form'; // Adjust path if needed\nimport type { CalculationResults, CalculationError } from '@/types';\nimport { getColombianHolidays } from '@/services/colombian-holidays';\nimport { VALORES } from '@/config/payroll-values'; // Import from new location\n\n\n// --- Constantes y Parámetros ---\nconst HORAS_JORNADA_BASE = 7.66; // Horas base antes de considerar extras\nconst HORA_NOCTURNA_INICIO = 21; // 9 PM (inclusive)\nconst HORA_NOCTURNA_FIN = 6;   // 6 AM (exclusive)\n\n// Valores por hora (pesos colombianos)\n// ESTE ES EL OBJETO QUE DEBES ACTUALIZAR SI LOS VALORES CAMBIAN:\n// Removed export keyword from VALORES constant\n// const VALORES = { // Now imported from @/config/payroll-values\n//     \"Recargo_Noct_Base\": 2166,          // Recargo Nocturno (dentro de las 7.66h base, laboral)\n//     \"HED\": 7736.41,                        // Hora Extra Diurna (después de 7.66h,laboral, hasta las 9 pm )\n//     \"HEN\": 10830.98,                        // Hora Extra Nocturna (después de 7.66h, laboral)\n//     \"Recargo_Dom_Diurno_Base\": 4642,    // Recargo Dominical/Festivo Diurno (dentro de 7.66h)\n//     \"Recargo_Dom_Noct_Base\": 6808,    // Recargo Dominical/Festivo Nocturno (dentro de 7.66h)\n//     \"HEDD_F\": 12378.26,                     // Hora Extra Dominical/Festiva Diurna (después de 7.66h)\n//     \"HEND_F\": 15472.83,                     // Hora Extra Dominical/Festiva Nocturna (después de 7.66h)\n//     \"Ordinaria_Diurna_Base\": 0          // Horas base diurnas laborales (sin recargo adicional sobre el salario)\n// };\n// const SALARIO_BASE_QUINCENAL = 711750; // Salario base quincenal will be handled at the summary level\n\n// Cache para festivos\nlet festivosCache: { [year: number]: Set<string> } = {};\n\nasync function getFestivosSet(year: number): Promise<Set<string>> {\n    if (festivosCache[year]) {\n        return festivosCache[year];\n    }\n    try {\n        const holidays = await getColombianHolidays(year);\n        // Ensure holidays is an array before mapping\n        if (!Array.isArray(holidays)) {\n             console.error(`Error: getColombianHolidays(${year}) did not return an array.`);\n             throw new Error(`Formato de respuesta inválido para festivos de ${year}.`);\n        }\n        const festivosSet = new Set(holidays.map(h => {\n             // Add validation for holiday object structure if needed\n             if (!h || typeof h.year !== 'number' || typeof h.month !== 'number' || typeof h.day !== 'number') {\n                 console.error(`Error: Invalid holiday object structure for year ${year}:`, h);\n                 // Depending on strictness, you might throw or just skip this entry\n                 // throw new Error(`Estructura de festivo inválida.`);\n                 return ''; // Skip invalid entry if Set creation handles empty strings ok\n             }\n             try {\n                // Validate date components before formatting\n                const dateToFormat = new Date(h.year, h.month - 1, h.day);\n                if (!isValid(dateToFormat) || getYear(dateToFormat) !== h.year) {\n                    console.error(`Error: Invalid date components for holiday in year ${year}:`, h);\n                    return ''; // Skip invalid date\n                }\n                return format(dateToFormat, 'yyyy-MM-dd');\n             } catch (formatError) {\n                 console.error(`Error formatting holiday date for year ${year}:`, h, formatError);\n                 return ''; // Skip on formatting error\n             }\n        }));\n        // Filter out any empty strings added due to errors\n        const validFestivosSet = new Set(Array.from(festivosSet).filter(dateStr => dateStr !== ''));\n        festivosCache[year] = validFestivosSet;\n        return validFestivosSet;\n    } catch (error) {\n        console.error(`Error al obtener o procesar festivos para ${year}:`, error);\n        // Re-lanzar el error para que sea capturado por el try-catch principal\n        // Provide a more user-friendly message if possible, or keep technical detail for logs\n        const userMessage = `Error consultando/procesando festivos para ${year}. Verifique la fuente de datos.`;\n        throw new Error(userMessage + ` Detalle: ${error instanceof Error ? error.message : String(error)}`);\n    }\n}\n\n\nasync function esFestivo(fecha: Date): Promise<boolean> {\n    const year = getYear(fecha);\n    try {\n        const festivos = await getFestivosSet(year); // Can throw if getFestivosSet fails\n        const fechaStr = format(fecha, 'yyyy-MM-dd');\n        return festivos.has(fechaStr);\n    } catch (error) {\n        // Log the specific error and re-throw to be caught by the main handler\n        console.error(`Error checking if date ${format(fecha, 'yyyy-MM-dd')} is a holiday:`, error);\n        throw error; // Re-throw the original error (which should include details from getFestivosSet)\n    }\n}\n\nfunction esDominical(fecha: Date): boolean {\n    return getDay(fecha) === 0; // 0 = Domingo\n}\n\n// Helper to parse HH:mm time string into hours and minutes\nfunction parseTimeString(timeStr: string | undefined): { hours: number; minutes: number } | null {\n    if (!timeStr || !/^\\d{2}:\\d{2}$/.test(timeStr)) return null;\n    const [hours, minutes] = timeStr.split(':').map(Number);\n    return { hours, minutes };\n}\n\n\n// --- Lógica Principal de Cálculo ---\n// Returns calculation for a SINGLE workday\nexport async function calculateSingleWorkday(\n    values: WorkdayFormValues,\n    id: string // Pass the unique ID for this calculation\n): Promise<CalculationResults | CalculationError> {\n\n    try { // <--- Start of main try block\n        const { startDate, startTime, endTime, endsNextDay, includeBreak, breakStartTime, breakEndTime } = values;\n\n        // --- Parseo y Validación Inicial ---\n        const inicioDtStr = `${format(startDate, 'yyyy-MM-dd')} ${startTime}`;\n        const inicioDt = parse(inicioDtStr, 'yyyy-MM-dd HH:mm', new Date());\n\n        if (!isValid(inicioDt)) {\n            return { error: `ID ${id}: Fecha u hora de inicio inválida.` };\n        }\n\n        let finDt: Date;\n        let finDtStr = `${format(startDate, 'yyyy-MM-dd')} ${endTime}`;\n        if (endsNextDay) {\n            finDtStr = `${format(addDays(startDate, 1), 'yyyy-MM-dd')} ${endTime}`;\n        }\n        finDt = parse(finDtStr, 'yyyy-MM-dd HH:mm', new Date());\n\n\n        if (!isValid(finDt)) {\n            return { error: `ID ${id}: Fecha u hora de fin inválida.` };\n        }\n\n        if (isBefore(finDt, inicioDt) || isEqual(finDt, inicioDt)) {\n            return { error: `ID ${id}: La hora de fin debe ser posterior a la hora de inicio.` };\n        }\n\n        // --- Validar y parsear horas de descanso si aplica ---\n        let parsedBreakStart: { hours: number; minutes: number } | null = null;\n        let parsedBreakEnd: { hours: number; minutes: number } | null = null;\n        let breakDurationSeconds = 0; // Initialize break duration\n\n        if (includeBreak) {\n            parsedBreakStart = parseTimeString(breakStartTime);\n            parsedBreakEnd = parseTimeString(breakEndTime);\n\n            if (!parsedBreakStart || !parsedBreakEnd) {\n                 return { error: `ID ${id}: Formato de hora de descanso inválido (HH:mm).` };\n            }\n            // Break end time check moved to form validation, but keep a basic check here maybe?\n            // if (parsedBreakEnd.hours < parsedBreakStart.hours || (parsedBreakEnd.hours === parsedBreakStart.hours && parsedBreakEnd.minutes <= parsedBreakStart.minutes)) {\n            //      return { error: `ID ${id}: La hora de fin del descanso debe ser posterior a la hora de inicio.` };\n            // }\n\n             // Calculate break duration in seconds ONLY if valid times were parsed\n             const breakStartTotalMinutes = parsedBreakStart.hours * 60 + parsedBreakStart.minutes;\n             const breakEndTotalMinutes = parsedBreakEnd.hours * 60 + parsedBreakEnd.minutes;\n             // Check again if end is after start before calculating duration\n             if (breakEndTotalMinutes > breakStartTotalMinutes) {\n                breakDurationSeconds = (breakEndTotalMinutes - breakStartTotalMinutes) * 60;\n             } else {\n                 // This case should ideally be caught by form validation, but as a fallback:\n                 console.warn(`ID ${id}: Hora de fin de descanso no es posterior a la de inicio, ignorando descanso.`);\n                 breakDurationSeconds = 0;\n                 // Optionally return an error instead:\n                 // return { error: `ID ${id}: La hora de fin del descanso debe ser posterior a la hora de inicio.` };\n             }\n\n        }\n\n\n        // --- Obtener Festivos para los años involucrados ---\n        // This will throw if getFestivosSet fails internally\n        await getFestivosSet(getYear(inicioDt));\n        if (!isSameDay(inicioDt, finDt)) {\n            await getFestivosSet(getYear(finDt));\n        }\n\n\n        // --- Inicializar contadores ---\n        let horasClasificadas: CalculationResults['horasDetalladas'] = {\n            \"Ordinaria_Diurna_Base\": 0.0,\n            \"Recargo_Noct_Base\": 0.0,\n            \"Recargo_Dom_Diurno_Base\": 0.0,\n            \"Recargo_Dom_Noct_Base\": 0.0,\n            \"HED\": 0.0,\n            \"HEN\": 0.0,\n            \"HEDD_F\": 0.0,\n            \"HEND_F\": 0.0\n        };\n        let duracionTotalSegundosBrutos = differenceInSeconds(finDt, inicioDt);\n        let duracionTotalTrabajadaSegundos = 0; // Calculate based on iteration below\n\n        // let duracionTotalTrabajadaSegundos = duracionTotalSegundosBrutos - (includeBreak ? breakDurationSeconds : 0);\n        // if (duracionTotalTrabajadaSegundos < 0) duracionTotalTrabajadaSegundos = 0; // Ensure it doesn't go negative\n\n        let segundosTrabajadosAcumulados = 0; // To track the extra hours threshold\n\n        // --- Iterar minuto a minuto sobre el tiempo BRUTO (antes de descontar descanso) ---\n        let cursorDt = inicioDt;\n\n        while (isBefore(cursorDt, finDt)) {\n            const cursorPlusOneMin = addHours(cursorDt, 1 / 60); // Siguiente minuto\n\n            // Punto medio del intervalo de 1 minuto para evaluar condiciones\n            const puntoEvaluacion = addHours(cursorDt, 1 / 120); // +30 segundos\n            const horaEval = getHours(puntoEvaluacion);\n            const minutoEval = getMinutes(puntoEvaluacion); // Necesario para descansos precisos\n\n            // Verificar si es Descanso usando los tiempos parseados si includeBreak es true y times are valid\n            let esDescanso = false;\n            if (includeBreak && parsedBreakStart && parsedBreakEnd && breakDurationSeconds > 0) { // Only check if break times were valid\n                 const horaActualTotalMinutos = horaEval * 60 + minutoEval;\n                 const inicioDescansoTotalMinutos = parsedBreakStart.hours * 60 + parsedBreakStart.minutes;\n                 const finDescansoTotalMinutos = parsedBreakEnd.hours * 60 + parsedBreakEnd.minutes;\n\n                 // El descanso es inclusivo en el inicio y exclusivo en el fin\n                 esDescanso = horaActualTotalMinutos >= inicioDescansoTotalMinutos && horaActualTotalMinutos < finDescansoTotalMinutos;\n            }\n\n            if (!esDescanso) {\n                // Solo clasificar y acumular si NO es descanso\n                duracionTotalTrabajadaSegundos += 60; // Sumar segundos efectivamente trabajados\n                segundosTrabajadosAcumulados += 60; // Sumar un minuto efectivamente trabajado\n                const horasTrabajadasAcumuladas = segundosTrabajadosAcumulados / 3600.0;\n                const esHoraExtra = horasTrabajadasAcumuladas > HORAS_JORNADA_BASE;\n                // The call to esFestivo is within the try-catch; if it fails, it will be caught.\n                const esFestivoDominical = await esFestivo(puntoEvaluacion) || esDominical(puntoEvaluacion);\n                const esNocturna = horaEval >= HORA_NOCTURNA_INICIO || horaEval < HORA_NOCTURNA_FIN;\n\n                // --- Clasificación del minuto ---\n                let categoria: keyof typeof horasClasificadas | null = null;\n\n                if (esHoraExtra) {\n                    if (esFestivoDominical) {\n                        categoria = esNocturna ? \"HEND_F\" : \"HEDD_F\";\n                    } else {\n                        categoria = esNocturna ? \"HEN\" : \"HED\";\n                    }\n                } else { // Dentro de la jornada base\n                    if (esFestivoDominical) {\n                        categoria = esNocturna ? \"Recargo_Dom_Noct_Base\" : \"Recargo_Dom_Diurno_Base\";\n                    } else { // Día laboral\n                        if (esNocturna) {\n                            categoria = \"Recargo_Noct_Base\";\n                        } else {\n                             // Para las horas base diurnas, no sumamos recargo, pero sí contamos las horas.\n                             horasClasificadas[\"Ordinaria_Diurna_Base\"] += 1 / 60;\n                             // No asignamos categoría para no sumar recargo de VALORES[\"Ordinaria_Diurna_Base\"] que es 0\n                        }\n                    }\n                }\n\n                // Sumar el minuto a la categoría correspondiente (si no es Ordinaria_Diurna_Base)\n                if (categoria && categoria !== \"Ordinaria_Diurna_Base\") {\n                    horasClasificadas[categoria] += 1 / 60;\n                }\n            }\n\n            cursorDt = cursorPlusOneMin; // Avanzar al siguiente minuto\n        }\n\n         // --- Calcular Pagos ---\n         let pagoTotalRecargosExtras = 0;\n         const pagoDetallado: { [key: string]: number } = {};\n\n         for (const key in horasClasificadas) {\n             const horas = horasClasificadas[key as keyof typeof horasClasificadas];\n             if (horas > 0) {\n                  const valorHora = VALORES[key as keyof typeof VALORES] ?? 0; // Usar VALORES directos\n                  // Agregar validación por si acaso VALORES no tuviera una clave esperada\n                  if (valorHora === undefined && key !== \"Ordinaria_Diurna_Base\") {\n                       console.warn(`ID ${id}: No se encontró valor para la categoría '${key}' en VALORES.`);\n                       // Podrías lanzar un error aquí si es crítico\n                       // throw new Error(`ID ${id}: Configuración de VALORES incompleta. Falta '${key}'.`);\n                  }\n                  // Calculate payment only for surcharges/extras, not base hours\n                  if (key !== \"Ordinaria_Diurna_Base\") {\n                    const pagoCategoria = horas * (valorHora ?? 0);\n                    pagoTotalRecargosExtras += pagoCategoria;\n                    pagoDetallado[key] = pagoCategoria;\n                  } else {\n                     pagoDetallado[key] = 0; // Base diurnal hours have 0 extra payment\n                  }\n\n             } else {\n                pagoDetallado[key] = 0; // Asegurar que todas las claves existan en el resultado\n             }\n         }\n\n\n        // No sumar el salario base aquí, se hará en el resumen quincenal\n        // const pagoTotalConSalario = pagoTotalRecargosExtras + SALARIO_BASE_QUINCENAL;\n\n        // --- Retornar Resultados ---\n        return {\n            id: id, // Include the ID in the result\n            inputData: values, // Store the input data used\n            horasDetalladas: horasClasificadas,\n            pagoDetallado: pagoDetallado,\n            pagoTotalRecargosExtras: pagoTotalRecargosExtras, // Only extras/surcharges for this day\n            pagoTotalConSalario: pagoTotalRecargosExtras, // Represents only the extra pay for the day, not total daily salary\n            duracionTotalTrabajadaHoras: duracionTotalTrabajadaSegundos / 3600.0, // Include actual worked duration for the day\n        };\n\n    } catch (error) { // <--- Catch block for the main try\n        console.error(`ID ${id}: Error inesperado durante el cálculo:`, error);\n        // Return a CalculationError object with a specific or generic message\n        // Include the ID in the error message for better tracking\n        const errorMessage = `ID ${id}: Error inesperado durante el cálculo. ${error instanceof Error ? error.message : String(error)}`;\n        return {\n            error: errorMessage // Return the detailed error message\n        };\n    }\n}\n"],"names":[],"mappings":";;;;;IAiHsB","debugId":null}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-xl font-semibold leading-none tracking-tight\", // Changed from text-2xl to text-xl\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 619, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,6LAAC,qKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 662, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/colombian-holidays.ts"],"sourcesContent":["/**\n * Representa una fecha.\n */\nexport interface Date {\n  year: number;\n  month: number; // 1-12\n  day: number;\n}\n\n/**\n * Obtiene de forma asíncrona una lista de festivos colombianos para un año dado.\n *\n * @param year El año para el cual obtener los festivos.\n * @returns Una promesa que resuelve a un array de objetos Date representando los festivos.\n */\nexport async function getColombianHolidays(year: number): Promise<Date[]> {\n  // TODO: Implementar esto llamando a una API externa o usando una biblioteca confiable.\n  // Ejemplo de estructura placeholder:\n  // const response = await fetch(`https://api.example.com/holidays/co/${year}`);\n  // if (!response.ok) {\n  //   throw new Error('Fallo al obtener los festivos');\n  // }\n  // const holidays = await response.json();\n  // return holidays.map(holiday => ({ year: year, month: ..., day: ... }));\n\n   console.warn(`Obteniendo festivos para ${year} - Usando datos de ejemplo. Implementar llamada API.`);\n\n   // Datos de ejemplo SOLO para desarrollo/pruebas\n   if (year === 2024) {\n        return [\n            { year: 2024, month: 1, day: 1 }, { year: 2024, month: 1, day: 8 }, // Año Nuevo, Reyes Magos\n            { year: 2024, month: 3, day: 25 }, { year: 2024, month: 3, day: 28 }, // San José, Jueves Santo\n            { year: 2024, month: 3, day: 29 }, { year: 2024, month: 5, day: 1 }, // Viernes Santo, Día del Trabajo\n            { year: 2024, month: 5, day: 13 }, { year: 2024, month: 6, day: 3 }, // Ascensión del Señor, Corpus Christi\n            { year: 2024, month: 6, day: 10 }, { year: 2024, month: 7, day: 1 }, // Sagrado Corazón, San Pedro y San Pablo\n            { year: 2024, month: 7, day: 20 }, { year: 2024, month: 8, day: 7 }, // Independencia, Batalla de Boyacá\n            { year: 2024, month: 8, day: 19 }, { year: 2024, month: 10, day: 14 }, // Asunción de la Virgen, Día de la Raza\n            { year: 2024, month: 11, day: 4 }, { year: 2024, month: 11, day: 11 }, // Todos los Santos, Independencia de Cartagena\n            { year: 2024, month: 12, day: 8 }, { year: 2024, month: 12, day: 25 } // Inmaculada Concepción, Navidad\n        ];\n   }\n   if (year === 2025) {\n     return [\n       { year: 2025, month: 1, day: 1 }, { year: 2025, month: 1, day: 6 }, // Año Nuevo, Reyes Magos\n       { year: 2025, month: 3, day: 24 }, { year: 2025, month: 4, day: 17 }, // San José, Jueves Santo\n       { year: 2025, month: 4, day: 18 }, { year: 2025, month: 5, day: 1 }, // Viernes Santo, Día del Trabajo\n       { year: 2025, month: 6, day: 2 }, { year: 2025, month: 6, day: 23 }, // Ascensión del Señor, Corpus Christi\n       { year: 2025, month: 6, day: 30 }, { year: 2025, month: 7, day: 20 }, // Sagrado Corazón, San Pedro y San Pablo (Nota: 20 Julio cae Domingo, no se traslada)\n       { year: 2025, month: 8, day: 7 }, { year: 2025, month: 8, day: 18 }, // Batalla de Boyacá, Asunción de la Virgen\n       { year: 2025, month: 10, day: 13 }, { year: 2025, month: 11, day: 3 }, // Día de la Raza, Todos los Santos\n       { year: 2025, month: 11, day: 17 }, { year: 2025, month: 12, day: 8 }, // Independencia de Cartagena, Inmaculada Concepción\n       { year: 2025, month: 12, day: 25 } // Navidad\n     ];\n   }\n    if (year === 2023) {\n        return [\n            { year: 2023, month: 1, day: 1 }, { year: 2023, month: 1, day: 9 },\n            { year: 2023, month: 3, day: 20 }, { year: 2023, month: 4, day: 6 },\n            { year: 2023, month: 4, day: 7 }, { year: 2023, month: 5, day: 1 },\n            { year: 2023, month: 5, day: 22 }, { year: 2023, month: 6, day: 12 },\n            { year: 2023, month: 6, day: 19 }, { year: 2023, month: 7, day: 3 },\n            { year: 2023, month: 7, day: 20 }, { year: 2023, month: 8, day: 7 },\n            { year: 2023, month: 8, day: 21 }, { year: 2023, month: 10, day: 16 },\n            { year: 2023, month: 11, day: 6 }, { year: 2023, month: 11, day: 13 },\n            { year: 2023, month: 12, day: 8 }, { year: 2023, month: 12, day: 25 }\n        ];\n    }\n\n\n  // Retorna array vacío si no hay datos de ejemplo o la API falla en el futuro\n  return [];\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 967, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/workday-form.tsx"],"sourcesContent":["\n'use client';\n\nimport type { FC } from 'react';\nimport React, { useState, useEffect, useRef } from 'react'; // Added useRef\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm, useWatch } from 'react-hook-form';\nimport { z } from 'zod';\nimport { format, parse, addHours, isValid, isSameDay, getYear, isSunday, addDays } from 'date-fns'; // Added addDays\nimport { es } from 'date-fns/locale'; // Import Spanish locale\n\nimport { Button } from '@/components/ui/button';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\n// Removed Checkbox import as Switch is used\nimport { Calendar } from '@/components/ui/calendar';\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from '@/components/ui/popover';\nimport { cn } from '@/lib/utils';\nimport { CalendarIcon, Loader2, Save, Plus } from 'lucide-react';\nimport { calculateSingleWorkday } from '@/actions/calculate-workday'; // Updated action name\nimport type { CalculationResults, CalculationError } from '@/types';\nimport { useToast } from '@/hooks/use-toast';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Switch } from '@/components/ui/switch';\nimport { getColombianHolidays } from '@/services/colombian-holidays'; // Import holiday service\n\nconst timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\nconst timeErrorMessage = 'Formato de hora inválido (HH:mm).';\n\nconst formSchema = z.object({\n  startDate: z.date({\n    required_error: 'La fecha de inicio es requerida.',\n  }),\n  startTime: z.string().regex(timeRegex, { message: timeErrorMessage }),\n  endTime: z.string().regex(timeRegex, { message: timeErrorMessage }),\n  endsNextDay: z.boolean().default(false),\n  includeBreak: z.boolean().default(false),\n  breakStartTime: z.string().optional(),\n  breakEndTime: z.string().optional(),\n})\n.refine(\n  (data) => {\n    if (data.includeBreak) {\n      // Check if both times are provided and match the regex format\n      const isBreakStartTimeValid = data.breakStartTime ? timeRegex.test(data.breakStartTime) : false;\n      const isBreakEndTimeValid = data.breakEndTime ? timeRegex.test(data.breakEndTime) : false;\n      return isBreakStartTimeValid && isBreakEndTimeValid;\n    }\n    return true; // No validation needed if break is not included\n  },\n  {\n    // This message appears if either time is missing or format is wrong when includeBreak is true\n    message: \"Si incluye descanso, las horas de inicio y fin son requeridas (formato HH:mm).\",\n    // Apply this error check to both fields, but path targets one for display logic\n    path: [\"breakStartTime\"],\n  }\n)\n.refine(\n    (data) => {\n        // Only validate if break is included AND both times are provided and valid format\n        if (data.includeBreak && data.breakStartTime && timeRegex.test(data.breakStartTime) && data.breakEndTime && timeRegex.test(data.breakEndTime)) {\n             const [startH, startM] = data.breakStartTime.split(':').map(Number);\n             const [endH, endM] = data.breakEndTime.split(':').map(Number);\n             // Check if end time is strictly after start time\n             return endH > startH || (endH === startH && endM > startM);\n        }\n        return true; // Pass validation if break not included or times are invalid/missing (handled by previous refine)\n    },\n    {\n        message: \"La hora de fin del descanso debe ser posterior a la hora de inicio.\",\n        path: [\"breakEndTime\"], // Show error associated with the end time field\n    }\n);\n\n\nexport type WorkdayFormValues = z.infer<typeof formSchema>;\n\ninterface WorkdayFormProps {\n  onCalculationStart: () => void;\n  onCalculationComplete: (results: CalculationResults | CalculationError) => void;\n  isLoading: boolean;\n  initialData?: WorkdayFormValues; // Optional data for editing\n  existingId?: string | null; // Optional ID for editing\n  isDateCalculated?: (date: Date) => boolean; // Function to check if date is already calculated\n}\n\n// Cache for holidays\nlet holidaysCache: { [year: number]: Set<string> } = {};\n\nasync function fetchAndCacheHolidays(year: number): Promise<Set<string>> {\n    if (holidaysCache[year]) {\n        return holidaysCache[year];\n    }\n    try {\n        const holidays = await getColombianHolidays(year);\n        if (!Array.isArray(holidays)) {\n            console.error(`Error: getColombianHolidays(${year}) did not return an array.`);\n            throw new Error(`Formato de respuesta inválido para festivos de ${year}.`);\n        }\n        const holidaySet = new Set(holidays.map(h => format(new Date(h.year, h.month - 1, h.day), 'yyyy-MM-dd')));\n        holidaysCache[year] = holidaySet;\n        return holidaySet;\n    } catch (error) {\n        console.error(`Error fetching or caching holidays for ${year}:`, error);\n        return new Set(); // Return empty set on error\n    }\n}\n\n\nexport const WorkdayForm: FC<WorkdayFormProps> = ({\n  onCalculationStart,\n  onCalculationComplete,\n  isLoading,\n  initialData,\n  existingId,\n  isDateCalculated, // Receive the check function\n}) => {\n  const { toast } = useToast();\n  const form = useForm<WorkdayFormValues>({\n    resolver: zodResolver(formSchema),\n    // Use initialData if provided (editing), otherwise use defaults (adding)\n    defaultValues: initialData ? {\n      ...initialData,\n      startDate: initialData.startDate instanceof Date ? initialData.startDate : new Date(initialData.startDate), // Ensure Date object\n      // Ensure optional break times are empty strings if null/undefined in initial data\n      breakStartTime: initialData.breakStartTime ?? '',\n      breakEndTime: initialData.breakEndTime ?? '',\n    } : {\n      startDate: new Date(),\n      startTime: '12:00', // Default start time 12:00 PM\n      endTime: '22:00',   // Default end time 10:00 PM\n      endsNextDay: false, // Recalculated based on default times if needed\n      includeBreak: false,\n      breakStartTime: '', // Default to empty for new entries\n      breakEndTime: '',   // Default to empty for new entries\n    },\n  });\n\n   // --- State for Holiday Check ---\n   const [isHoliday, setIsHoliday] = useState<boolean>(false);\n   const [isCheckingHoliday, setIsCheckingHoliday] = useState<boolean>(false);\n\n  // Reset form when initialData changes (i.e., when switching between add/edit or editing different days)\n   useEffect(() => {\n       const resetValues = initialData ? {\n           ...initialData,\n           startDate: initialData.startDate instanceof Date ? initialData.startDate : new Date(initialData.startDate),\n           // Ensure optional break times are handled correctly on reset\n           breakStartTime: initialData.breakStartTime ?? '',\n           breakEndTime: initialData.breakEndTime ?? '',\n       } : {\n           startDate: new Date(),\n           startTime: '12:00', // Reset to default start time\n           endTime: '22:00',   // Reset to default end time\n           endsNextDay: false, // Calculate based on defaults\n           includeBreak: false,\n           breakStartTime: '15:00', // Default break start if enabled\n           breakEndTime: '18:00',   // Default break end if enabled\n       };\n\n       // Calculate endsNextDay based on reset values\n       if (timeRegex.test(resetValues.startTime) && timeRegex.test(resetValues.endTime)) {\n           const [startH] = resetValues.startTime.split(':').map(Number);\n           const [endH] = resetValues.endTime.split(':').map(Number);\n           resetValues.endsNextDay = endH < startH;\n       }\n\n       form.reset(resetValues);\n\n   }, [initialData, form]); // form is stable, but reset is from it\n\n\n  const { control, setValue, trigger, watch, getValues } = form;\n  // Watch fields using the hook for effects\n  const startDate = watch('startDate');\n  const startTime = watch('startTime');\n  const includeBreak = watch('includeBreak');\n\n   // --- Effect to check if startDate is a holiday ---\n   useEffect(() => {\n       if (startDate && isValid(startDate)) {\n           const year = getYear(startDate);\n           const dateStr = format(startDate, 'yyyy-MM-dd');\n           setIsCheckingHoliday(true); // Indicate loading\n\n           fetchAndCacheHolidays(year)\n               .then(holidaySet => {\n                   setIsHoliday(holidaySet.has(dateStr));\n               })\n               .catch(error => {\n                   console.error(\"Error checking holiday status:\", error);\n                   setIsHoliday(false); // Assume not holiday on error\n               })\n               .finally(() => {\n                   setIsCheckingHoliday(false); // Finish loading\n               });\n       } else {\n           setIsHoliday(false); // Not a holiday if date is invalid\n       }\n   }, [startDate]);\n\n\n  // Effect to update endsNextDay when times change\n  useEffect(() => {\n      const currentEndTime = getValues('endTime');\n      if (startTime && timeRegex.test(startTime) && currentEndTime && timeRegex.test(currentEndTime)) {\n          const [startH] = startTime.split(':').map(Number);\n          const [endH] = currentEndTime.split(':').map(Number);\n          setValue('endsNextDay', endH < startH);\n      }\n  }, [startTime, watch('endTime'), setValue, getValues]); // Rerun when startTime or endTime changes\n\n\n   // Ref to track the previous state of includeBreak\n   const prevIncludeBreak = useRef(includeBreak);\n\n   // Effect to trigger validation and set defaults for break times\n   useEffect(() => {\n       if (includeBreak) {\n           // If the switch was just turned ON, set defaults\n           if (!prevIncludeBreak.current) {\n               setValue('breakStartTime', '15:00', { shouldValidate: true });\n               setValue('breakEndTime', '18:00', { shouldValidate: true });\n           } else {\n               // If the switch was already on, just trigger validation when times change\n               trigger([\"breakStartTime\", \"breakEndTime\"]);\n           }\n       }\n       // Update the previous state ref *after* the logic runs\n       prevIncludeBreak.current = includeBreak;\n   }, [includeBreak, trigger, setValue, watch('breakStartTime'), watch('breakEndTime')]); // Trigger also when break times change\n\n\n  async function onSubmit(values: WorkdayFormValues) {\n     // Check if the date is already calculated, only if NOT editing\n     if (!existingId && isDateCalculated && isDateCalculated(values.startDate)) {\n         toast({\n             title: 'Fecha Ya Calculada',\n             description: `Ya existe un cálculo para el ${format(values.startDate, 'PPP', { locale: es })}. Si deseas modificarlo, usa la opción de editar en la lista de turnos.`,\n             variant: 'destructive',\n             duration: 7000,\n         });\n         // Automatically advance to the next day in the form\n         const nextDay = addDays(values.startDate, 1);\n         setValue('startDate', nextDay, { shouldValidate: true, shouldDirty: true });\n         return; // Stop the submission process\n     }\n\n    onCalculationStart();\n    // Generate a new ID if adding, use existing ID if editing\n    const calculationId = existingId || `day_${Date.now()}_${Math.random().toString(36).substring(2, 7)}`;\n    try {\n        // Use the modified action that accepts values and ID\n        const result = await calculateSingleWorkday(values, calculationId);\n        onCalculationComplete(result); // Pass the full result back to the page\n\n        // If adding was successful (no error), automatically set date to the next day\n        if (!existingId && !('error' in result)) {\n             const nextDay = addDays(values.startDate, 1);\n             setValue('startDate', nextDay, { shouldValidate: true, shouldDirty: true });\n             // Optionally reset times or keep them? Resetting might be safer.\n             // setValue('startTime', '12:00');\n             // setValue('endTime', '22:00');\n             // setValue('endsNextDay', false);\n             // setValue('includeBreak', false);\n             // setValue('breakStartTime', '15:00');\n             // setValue('breakEndTime', '18:00');\n             toast({\n                 title: 'Día Agregado, Fecha Avanzada',\n                 description: `Se agregó el turno y la fecha se movió al ${format(nextDay, 'PPP', { locale: es })}.`,\n                 variant: 'default'\n             })\n        }\n    } catch (error) {\n        console.error(\"Calculation error:\", error);\n        const genericServerError = \"Hubo un error en el servidor al calcular.\";\n        const errorMessage = error instanceof Error && error.message ? error.message : genericServerError;\n        onCalculationComplete({ error: errorMessage });\n    }\n  }\n\n\n  return (\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <FormField\n              control={control}\n              name=\"startDate\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-col\">\n                  <FormLabel>Fecha</FormLabel>\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <FormControl>\n                        <Button\n                          variant={'outline'}\n                          className={cn(\n                            'w-full pl-3 text-left font-normal',\n                            !field.value && 'text-muted-foreground',\n                             // Conditional border for Sunday (if not holiday)\n                             !isHoliday && startDate && isSunday(startDate) && 'border-primary border'\n                          )}\n                          disabled={isCheckingHoliday} // Disable while checking\n                        >\n                          {isCheckingHoliday ? (\n                              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                          ) : field.value ? (\n                            format(field.value instanceof Date ? field.value : new Date(field.value), 'PPP', { locale: es }) // Ensure it's a Date object\n                          ) : (\n                            <span>Selecciona una fecha</span>\n                          )}\n                          <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                        </Button>\n                      </FormControl>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                      <Calendar\n                        mode=\"single\"\n                        selected={field.value instanceof Date ? field.value : new Date(field.value)} // Ensure Date object\n                        onSelect={(date) => {\n                           if (date) {\n                              field.onChange(date)\n                           }\n                        }} // Handle null case\n                        disabled={(date) =>\n                          date < new Date('1900-01-01')\n                        }\n                        initialFocus\n                        locale={es}\n                         modifiers={{ holiday: (date) => holidaysCache[getYear(date)]?.has(format(date, 'yyyy-MM-dd')) ?? false, sunday: isSunday }}\n                         modifiersClassNames={{\n                             holiday: 'ring-2 ring-offset-1 ring-accent text-accent font-bold', // Use ring utility\n                             sunday: 'text-primary'\n                         }}\n                      />\n                    </PopoverContent>\n                  </Popover>\n                  {/* Display holiday/Sunday indicator */}\n                  {isHoliday && !isCheckingHoliday && (\n                      <p className=\"text-xs text-accent font-semibold mt-1 pl-1\"> • Día festivo</p>\n                  )}\n                   {!isHoliday && startDate && isSunday(startDate) && !isCheckingHoliday && (\n                      <p className=\"text-xs text-primary font-semibold mt-1 pl-1\"> • Domingo</p> // Use primary text color\n                  )}\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormField\n                control={control}\n                name=\"startTime\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Hora de Inicio</FormLabel>\n                    <FormControl>\n                      <Input type=\"time\" {...field} className=\"text-base\"/>\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={control}\n                name=\"endTime\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Hora de Fin</FormLabel>\n                    <FormControl>\n                      <Input type=\"time\" {...field} className=\"text-base\"/>\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <FormField\n              control={control}\n              name=\"endsNextDay\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-3 shadow-sm bg-secondary/50\">\n                   <div className=\"space-y-0.5\">\n                    <FormLabel>¿Termina al día siguiente?</FormLabel>\n                   </div>\n                  <FormControl>\n                    <Switch\n                      checked={field.value}\n                      onCheckedChange={field.onChange}\n                      aria-readonly // Although interactive, indicates calculated nature\n                    />\n                  </FormControl>\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={control}\n              name=\"includeBreak\"\n              render={({ field }) => (\n                 <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-3 shadow-sm bg-secondary/50\">\n                   <div className=\"space-y-0.5\">\n                       <FormLabel>Incluir descanso</FormLabel>\n                   </div>\n                   <FormControl>\n                       <Switch\n                           checked={field.value}\n                           onCheckedChange={field.onChange}\n                       />\n                   </FormControl>\n                 </FormItem>\n              )}\n            />\n\n           {/* Conditional rendering based on the watched value */}\n           {includeBreak && (\n             <Card className=\"bg-muted/30 border-dashed\">\n                <CardHeader className=\"pb-2 pt-4\">\n                   <CardTitle className=\"text-base\">Configurar Descanso</CardTitle>\n                 </CardHeader>\n               <CardContent className=\"space-y-4 pt-0 pb-4\">\n                 <div className=\"grid grid-cols-2 gap-4\">\n                   <FormField\n                     control={control}\n                     name=\"breakStartTime\"\n                     render={({ field }) => (\n                       <FormItem>\n                         <FormLabel>Inicio Descanso</FormLabel>\n                         <FormControl>\n                           {/* Ensure value is controlled and never null/undefined for input[type=time] */}\n                           <Input type=\"time\" {...field} value={field.value ?? ''} className=\"text-base\" />\n                         </FormControl>\n                         <FormMessage />\n                       </FormItem>\n                     )}\n                   />\n                   <FormField\n                     control={control}\n                     name=\"breakEndTime\"\n                     render={({ field }) => (\n                       <FormItem>\n                         <FormLabel>Fin Descanso</FormLabel>\n                         <FormControl>\n                           {/* Ensure value is controlled and never null/undefined for input[type=time] */}\n                           <Input type=\"time\" {...field} value={field.value ?? ''} className=\"text-base\" />\n                         </FormControl>\n                         <FormMessage />\n                       </FormItem>\n                     )}\n                   />\n                 </div>\n               </CardContent>\n             </Card>\n           )}\n\n\n            <Button type=\"submit\" className=\"w-full bg-primary hover:bg-primary/90 text-primary-foreground\" disabled={isLoading || isCheckingHoliday}> {/* Use theme color & Disable submit while checking holiday */}\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  {existingId ? 'Guardando Cambios...' : 'Agregando Día...'}\n                </>\n              ) : isCheckingHoliday ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Verificando Festivo...\n                  </>\n              ) : (\n                 existingId ? <><Save className=\"mr-2 h-4 w-4\" /> Guardar Cambios</> : <><Plus className=\"mr-2 h-4 w-4\" /> Agregar Día a la Quincena</>\n              )}\n            </Button>\n          </form>\n        </Form>\n  );\n};\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1827, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/index.ts"],"sourcesContent":["\n// src/types/index.ts\n\nimport type { WorkdayFormValues } from '@/components/workday-form';\n\n export interface CalculationResults {\n   id: string; // Unique identifier for this specific calculation (e.g., timestamp or UUID)\n   inputData: Omit<WorkdayFormValues, 'startDate'> & { startDate: Date }; // Use Date object consistently\n   horasDetalladas: {\n     Ordinaria_Diurna_Base: number;      // Horas dentro de jornada (7.66h), diurnas, sin recargo base adicional\n     Recargo_Noct_Base: number;            // Horas dentro de jornada (7.66h), nocturnas (solo valor del recargo)\n     Recargo_Dom_Diurno_Base: number;      // Horas dentro de jornada (7.66h), dominical/festivo diurno (solo valor del recargo)\n     Recargo_Dom_Noct_Base: number;      // Horas dentro de jornada (7.66h), dominical/festivo nocturno (solo valor del recargo)\n     HED: number;                          // Horas extras (después de 7.66h), diurnas, laborales\n     HEN: number;                          // Horas extras (después de 7.66h), nocturnas, laborales\n     HEDD_F: number;                       // Horas extras (después de 7.66h), diurnas, dominicales/festivas\n     HEND_F: number;                       // Horas extras (después de 7.66h), nocturnas, dominicales/festivas\n   };\n   pagoDetallado: {\n     [key in keyof CalculationResults['horasDetalladas']]: number; // Pago por cada categoría de hora\n   };\n   pagoTotalRecargosExtras: number; // Suma del pago por recargos y horas extras únicamente para este día\n   pagoTotalConSalario: number; // Represents ONLY the extra pay for the day\n   duracionTotalTrabajadaHoras: number; // Duración total trabajada en horas (descontando descansos) para este día\n }\n\n export interface CalculationError {\n   error: string; // Mensaje de error\n }\n\n // Represents the aggregated results for the entire pay period (quincena) BEFORE manual adjustments AND transport allowance\n export interface QuincenalCalculationSummary {\n    totalHorasDetalladas: CalculationResults['horasDetalladas'];\n    totalPagoDetallado: CalculationResults['pagoDetallado'];\n    totalPagoRecargosExtrasQuincena: number;\n    salarioBaseQuincenal: number; // Assuming this is fixed for the period\n    pagoTotalConSalarioQuincena: number; // Represents Base + Extras/Recargos only. Transport, other income/deductions are handled separately.\n    totalDuracionTrabajadaHorasQuincena: number;\n    diasCalculados: number; // Number of days included in this summary\n }\n\n // Type guard to check if an object is a CalculationError\n export function isCalculationError(obj: any): obj is CalculationError {\n    // Check if obj exists and has an 'error' property that is a string\n    return obj && typeof obj === 'object' && typeof obj.error === 'string';\n }\n\n // Interface for individual adjustment items (Income or Deduction)\n export interface AdjustmentItem {\n     id: string; // Unique ID for the item (e.g., timestamp + random)\n     monto: number; // Amount (always positive)\n     descripcion: string; // Optional description\n }\n\n\n // Represents the data structure for a saved payroll entry in localStorage\n export interface SavedPayrollData {\n    key: string; // The localStorage key for this entry (e.g., payroll_123_2023-10-01_2023-10-15)\n    employeeId: string;\n    periodStart: Date;\n    periodEnd: Date;\n    summary: QuincenalCalculationSummary; // The calculated summary BEFORE adjustments and transport allowance\n    otrosIngresosLista: AdjustmentItem[]; // List of other income items\n    otrasDeduccionesLista: AdjustmentItem[]; // List of other deduction items\n    incluyeAuxTransporte: boolean; // Flag indicating if transport allowance was included for this saved period\n    createdAt?: Date; // Optional: Timestamp when the payroll was saved/calculated\n }\n"],"names":[],"mappings":"AACA,qBAAqB;;;;AAyCb,SAAS,mBAAmB,GAAQ;IACxC,mEAAmE;IACnE,OAAO,OAAO,OAAO,QAAQ,YAAY,OAAO,IAAI,KAAK,KAAK;AACjE","debugId":null}},
    {"offset": {"line": 1844, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;AAIf,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1882, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2034, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/config/payroll-values.ts"],"sourcesContent":["// src/config/payroll-values.ts\n\n/**\n * @fileOverview Configuration file for payroll values.\n * This file exports constants used in payroll calculations, specifically the hourly rates for different types of work hours.\n * It is separated from 'use server' files to allow importing constants into client components without violating 'use server' rules.\n */\n\n// Valores por hora (pesos colombianos)\n// ESTE ES EL OBJETO QUE DEBES ACTUALIZAR SI LOS VALORES CAMBIAN:\nexport const VALORES = {\n    \"Recargo_Noct_Base\": 2166,          // Recargo Nocturno (dentro de las 7.66h base, laboral)\n    \"HED\": 7736.41,                        // Hora Extra Diurna (después de 7.66h, laboral, hasta las 9 pm)\n    \"HEN\": 10830.98,                       // Hora Extra Nocturna (después de 7.66h, laboral)\n    \"Recargo_Dom_Diurno_Base\": 4642,    // Recargo Dominical/Festivo Diurno (dentro de 7.66h)\n    \"Recargo_Dom_Noct_Base\": 6808,    // Recargo Dominical/Festivo Nocturno (dentro de 7.66h)\n    \"HEDD_F\": 12378.26,                    // Hora Extra Dominical/Festiva Diurna (después de 7.66h)\n    \"HEND_F\": 15472.83,                    // Hora Extra Dominical/Festiva Nocturna (después de 7.66h)\n    \"Ordinaria_Diurna_Base\": 0          // Horas base diurnas laborales (sin recargo adicional sobre el salario)\n};\n"],"names":[],"mappings":"AAAA,+BAA+B;AAE/B;;;;CAIC,GAED,uCAAuC;AACvC,iEAAiE;;;;AAC1D,MAAM,UAAU;IACnB,qBAAqB;IACrB,OAAO;IACP,OAAO;IACP,2BAA2B;IAC3B,yBAAyB;IACzB,UAAU;IACV,UAAU;IACV,yBAAyB,EAAW,wEAAwE;AAChH","debugId":null}},
    {"offset": {"line": 2063, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/pdf-exporter.ts"],"sourcesContent":["\n// src/lib/pdf-exporter.ts\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { format, parse } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport type { QuincenalCalculationSummary, AdjustmentItem, SavedPayrollData } from '@/types'; // Added AdjustmentItem and SavedPayrollData\nimport { labelMap, displayOrder, formatCurrency, formatHours } from '@/components/results-display'; // Import helpers\n\n// Extend jsPDF interface for autoTable\ndeclare module 'jspdf' {\n  interface jsPDF {\n    autoTable: (options: any) => jsPDF;\n  }\n}\n\n// Interface representing all data needed for a single payroll page\ninterface PayrollPageData {\n    employeeId: string;\n    periodStart: Date;\n    periodEnd: Date;\n    summary: QuincenalCalculationSummary;\n    otrosIngresosLista: AdjustmentItem[];\n    otrasDeduccionesLista: AdjustmentItem[];\n    auxTransporteAplicado: number; // Amount of transport allowance applied\n}\n\n\n// Helper function to draw a single payroll report page\nfunction drawPayrollPage(doc: jsPDF, data: PayrollPageData): number { // Use the new combined interface\n    const pageHeight = doc.internal.pageSize.height;\n    const pageWidth = doc.internal.pageSize.width;\n    let currentY = 15; // Start position for content\n\n    // --- Header ---\n    doc.setFontSize(16);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Comprobante de Nómina Quincenal', pageWidth / 2, currentY, { align: 'center' });\n    currentY += 10;\n\n    doc.setFontSize(11);\n    doc.setFont('helvetica', 'normal');\n    doc.text(`Colaborador: ${data.employeeId}`, 14, currentY);\n    currentY += 6;\n    doc.text(`Período: ${format(data.periodStart, 'dd/MM/yyyy', { locale: es })} - ${format(data.periodEnd, 'dd/MM/yyyy', { locale: es })}`, 14, currentY);\n    currentY += 10;\n\n    // --- Devengado Table (Base + Extras/Recargos) ---\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Resumen Horas y Recargos/Extras', 14, currentY);\n    currentY += 6;\n\n    const head = [['Categoría', 'Horas', 'Pago (Recargo/Extra)']];\n    const bodyHours = displayOrder\n        .map(key => {\n            const horasCategoria = data.summary.totalHorasDetalladas[key];\n            const pagoCategoria = data.summary.totalPagoDetallado[key];\n\n             // Conditionally display rows based on whether they have values\n             if (key === 'Ordinaria_Diurna_Base' && horasCategoria <= 0) return null;\n             if (key !== 'Ordinaria_Diurna_Base' && horasCategoria <= 0 && pagoCategoria <= 0) return null;\n\n\n            const label = labelMap[key] || key; // Use labelMap\n            const formattedHours = formatHours(horasCategoria);\n            const formattedPayment = key === 'Ordinaria_Diurna_Base' ? '-' : formatCurrency(pagoCategoria);\n\n            return [label, formattedHours, formattedPayment];\n        })\n        .filter(row => row !== null) as (string | number)[][]; // Filter out null rows and assert type\n\n    // Add Totals for Hours section\n     bodyHours.push(\n         ['-', '-', '-'], // Separator line visually in the table\n         [\n              { content: 'Total Horas Trabajadas en Quincena:', styles: { fontStyle: 'bold' } },\n              { content: formatHours(data.summary.totalDuracionTrabajadaHorasQuincena), styles: { halign: 'right', fontStyle: 'bold' } },\n              ''\n         ],\n         [\n             { content: 'Total Recargos y Horas Extras Quincenales:', styles: { fontStyle: 'bold' } },\n             '',\n             { content: formatCurrency(data.summary.totalPagoRecargosExtrasQuincena), styles: { halign: 'right', fontStyle: 'bold', textColor: [0, 128, 128] } } // Teal color\n         ]\n    );\n\n    autoTable(doc, {\n        head: head,\n        body: bodyHours,\n        startY: currentY,\n        theme: 'grid',\n        headStyles: { fillColor: [210, 221, 234], textColor: [40, 54, 123] }, // Light blue header, dark blue text\n        columnStyles: {\n            0: { cellWidth: 'auto' },\n            1: { halign: 'right' },\n            2: { halign: 'right' },\n        },\n        didDrawPage: (hookData) => { currentY = hookData.cursor?.y ?? currentY; },\n        didParseCell: (hookData) => {\n             // Style separator rows\n             if (hookData.cell.raw === '-') {\n                 hookData.cell.styles.fillColor = [230, 230, 230]; // Light gray fill\n                 hookData.cell.styles.minCellHeight = 1; // Make separator thin\n                 hookData.cell.styles.cellPadding = 0;\n                 hookData.cell.text = ''; // Clear the text\n            }\n         }\n    });\n\n    currentY += 5; // Add some space\n\n    // --- Otros Devengados Section ---\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Otros Devengados', 14, currentY);\n    currentY += 6;\n\n    const baseMasExtras = data.summary.pagoTotalConSalarioQuincena;\n    const totalOtrosIngresosManuales = (data.otrosIngresosLista || []).reduce((sum, item) => sum + item.monto, 0);\n    const totalDevengadoBruto = baseMasExtras + data.auxTransporteAplicado + totalOtrosIngresosManuales;\n    const ibcEstimado = baseMasExtras + totalOtrosIngresosManuales; // IBC excludes transport allowance\n\n    const devengadoBody = [\n         ['Salario Base Quincenal', formatCurrency(data.summary.salarioBaseQuincenal)],\n         ['(+) Total Recargos/Extras', formatCurrency(data.summary.totalPagoRecargosExtrasQuincena)],\n    ];\n    if (data.auxTransporteAplicado > 0) {\n        devengadoBody.push(['(+) Auxilio de Transporte', formatCurrency(data.auxTransporteAplicado)]);\n    }\n    if ((data.otrosIngresosLista || []).length > 0) {\n        (data.otrosIngresosLista).forEach(item => {\n             devengadoBody.push([`(+) ${item.descripcion || 'Otro Ingreso'}`, formatCurrency(item.monto)]);\n        });\n    }\n    devengadoBody.push(\n         ['-', '-'], // Separator\n         [{ content: 'Total Devengado Bruto Estimado:', styles: { fontStyle: 'bold' } }, { content: formatCurrency(totalDevengadoBruto), styles: { fontStyle: 'bold' } }]\n    );\n\n\n    autoTable(doc, {\n        body: devengadoBody,\n        startY: currentY,\n        theme: 'plain',\n        columnStyles: { 1: { halign: 'right' } },\n        didDrawPage: (hookData) => { currentY = hookData.cursor?.y ?? currentY; },\n        didParseCell: (hookData) => {\n            // Style separator rows\n             if (hookData.cell.raw === '-') {\n                 hookData.cell.styles.fontStyle = 'normal'; // Ensure separator is not bold\n                 hookData.cell.styles.minCellHeight = 1;\n                 hookData.cell.styles.cellPadding = 0;\n                 // Draw a line instead of text for separator\n                 if (hookData.column.index === 0) {\n                    doc.setDrawColor(200, 200, 200); // Light gray line\n                    doc.line(hookData.cell.x, hookData.cell.y + hookData.cell.height / 2, hookData.cell.x + hookData.cell.width, hookData.cell.y + hookData.cell.height / 2);\n                 }\n                 hookData.cell.text = ''; // Clear text\n            }\n        }\n    });\n\n    currentY += 5; // Add space\n\n\n    // --- Deducciones Legales ---\n    const deduccionSaludQuincenal = ibcEstimado * 0.04;\n    const deduccionPensionQuincenal = ibcEstimado * 0.04;\n    const totalDeduccionesLegales = deduccionSaludQuincenal + deduccionPensionQuincenal;\n\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Deducciones Legales (Estimadas)', 14, currentY);\n    currentY += 6;\n\n    autoTable(doc, {\n        body: [\n            [`Deducción Salud (4% s/IBC: ${formatCurrency(ibcEstimado)})`, formatCurrency(deduccionSaludQuincenal)],\n            [`Deducción Pensión (4% s/IBC: ${formatCurrency(ibcEstimado)})`, formatCurrency(deduccionPensionQuincenal)],\n            [{ content: 'Total Deducciones Legales:', styles: { fontStyle: 'bold' } }, { content: formatCurrency(totalDeduccionesLegales), styles: { fontStyle: 'bold' } }]\n        ],\n        startY: currentY,\n        theme: 'plain',\n        columnStyles: { 1: { halign: 'right' } },\n        didDrawPage: (hookData) => { currentY = hookData.cursor?.y ?? currentY; },\n    });\n\n    currentY += 5; // Add space\n\n    // --- Subtotal Neto Parcial ---\n    const subtotalNetoParcial = totalDevengadoBruto - totalDeduccionesLegales;\n    doc.setFontSize(11);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Subtotal (Dev. Bruto - Ded. Ley):', 14, currentY);\n    doc.text(formatCurrency(subtotalNetoParcial), pageWidth - 14, currentY, { align: 'right' });\n    currentY += 10;\n\n\n    // --- Otras Deducciones (Manuales) ---\n    const totalOtrasDeduccionesManuales = (data.otrasDeduccionesLista || []).reduce((sum, item) => sum + item.monto, 0);\n     if ((data.otrasDeduccionesLista || []).length > 0) {\n        doc.setFontSize(12);\n        doc.setFont('helvetica', 'bold');\n        doc.text('Otras Deducciones / Descuentos', 14, currentY);\n        currentY += 6;\n        autoTable(doc, {\n            body: (data.otrasDeduccionesLista || []).map(item => [`(-) ${item.descripcion || 'Deducción'}`, formatCurrency(item.monto)]),\n            startY: currentY,\n            theme: 'plain',\n            columnStyles: { 1: { halign: 'right', textColor: [200, 0, 0] } }, // Reddish color\n            didDrawPage: (hookData) => { currentY = hookData.cursor?.y ?? currentY; },\n        });\n        doc.setFontSize(11);\n        doc.setFont('helvetica', 'bold');\n        doc.text('Total Otras Deducciones:', 14, currentY + 5);\n        doc.text(formatCurrency(totalOtrasDeduccionesManuales), pageWidth - 14, currentY + 5, { align: 'right' });\n        currentY += 10;\n    }\n\n    // --- Neto a Pagar Final ---\n     const netoAPagar = subtotalNetoParcial - totalOtrasDeduccionesManuales;\n     doc.setFontSize(14);\n     doc.setFont('helvetica', 'bold');\n     doc.text('Neto a Pagar Estimado Quincenal:', 14, currentY);\n     doc.text(formatCurrency(netoAPagar), pageWidth - 14, currentY, { align: 'right', textColor: [76, 67, 223] }); // Use primary color #4C43DF\n     currentY += 15;\n\n    // --- Signature Area ---\n    let signatureY = currentY;\n    // Check if signature area fits on the current page, add new page if necessary\n    if (signatureY > pageHeight - 35) {\n        doc.addPage();\n        signatureY = 15; // Reset Y for new page\n    }\n    const signatureXMargin = 30;\n    const signatureWidth = (pageWidth - signatureXMargin * 2) / 2 - 10;\n    doc.setLineWidth(0.3);\n    doc.line(signatureXMargin, signatureY, signatureXMargin + signatureWidth, signatureY);\n    doc.line(pageWidth - signatureXMargin - signatureWidth, signatureY, pageWidth - signatureXMargin, signatureY);\n    doc.setFontSize(10);\n    doc.setFont('helvetica', 'normal');\n    doc.text('Firma Empleador', signatureXMargin + signatureWidth / 2, signatureY + 5, { align: 'center' });\n    doc.text('Firma Colaborador', pageWidth - signatureXMargin - signatureWidth / 2, signatureY + 5, { align: 'center' });\n    currentY = signatureY + 15; // Update currentY after signatures\n\n    // --- Footer Note ---\n    // Check if footer note fits, add new page if necessary BEFORE drawing\n     if (currentY > pageHeight - 10) {\n        doc.addPage();\n        currentY = pageHeight - 10; // Position at bottom of new page\n     } else {\n         currentY = pageHeight - 10; // Position at bottom of current page\n     }\n    doc.setFontSize(8);\n    doc.setTextColor(150);\n    const footerText = `Nota: Cálculo bruto estimado para ${data.summary.diasCalculados} días. IBC (*sin aux. transporte) y deducciones legales son aproximadas. Incluye ajustes manuales.`;\n    doc.text(footerText, 14, currentY);\n\n    return currentY; // Return the Y position after drawing this page's content\n}\n\n// --- Single Payroll Export ---\nexport function exportPayrollToPDF(\n    summary: QuincenalCalculationSummary,\n    employeeId: string,\n    periodStart: Date,\n    periodEnd: Date,\n    otrosIngresosLista: AdjustmentItem[], // Add income list parameter\n    otrasDeduccionesLista: AdjustmentItem[], // Add deduction list parameter\n    auxTransporteAplicado: number // Add transport allowance parameter\n): void {\n    const doc = new jsPDF();\n    // Construct the full data object needed by drawPayrollPage\n    const payrollData: PayrollPageData = {\n        employeeId,\n        periodStart,\n        periodEnd,\n        summary,\n        otrosIngresosLista,\n        otrasDeduccionesLista,\n        auxTransporteAplicado\n    };\n\n    drawPayrollPage(doc, payrollData);\n\n    // --- Save the PDF ---\n    const filename = `Nomina_${employeeId}_${format(periodStart, 'yyyyMMdd')}-${format(periodEnd, 'yyyyMMdd')}.pdf`;\n    doc.save(filename);\n}\n\n// --- Bulk Payroll Export ---\n// exportAllPayrollsToPDF now directly uses SavedPayrollData which includes adjustments and transport flag\nexport function exportAllPayrollsToPDF(allPayrollData: SavedPayrollData[]): void {\n    if (!allPayrollData || allPayrollData.length === 0) {\n        console.warn(\"No payroll data provided for bulk export.\");\n        return;\n    }\n\n    const doc = new jsPDF();\n    let isFirstPage = true;\n\n    allPayrollData.forEach((savedData) => { // Use savedData which is SavedPayrollData\n        if (!isFirstPage) {\n            doc.addPage(); // Add a new page for each subsequent payroll report\n        }\n        // Determine transport allowance value based on the saved flag\n        const auxTransporteValorConfig = 100000; // Use the configured value\n        const auxTransporteAplicado = savedData.incluyeAuxTransporte ? auxTransporteValorConfig : 0;\n\n        // Construct the PayrollPageData object from SavedPayrollData\n        const payrollPageData: PayrollPageData = {\n            employeeId: savedData.employeeId,\n            periodStart: savedData.periodStart,\n            periodEnd: savedData.periodEnd,\n            summary: savedData.summary,\n            otrosIngresosLista: savedData.otrosIngresosLista,\n            otrasDeduccionesLista: savedData.otrasDeduccionesLista,\n            auxTransporteAplicado: auxTransporteAplicado // Pass the calculated value\n        };\n\n        drawPayrollPage(doc, payrollPageData); // Pass the constructed data\n        isFirstPage = false;\n    });\n\n    // --- Save the combined PDF ---\n    const timestamp = format(new Date(), 'yyyyMMdd_HHmmss');\n    const filename = `Reporte_Nominas_${timestamp}.pdf`;\n    doc.save(filename);\n}\n\n\n    \n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2490, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/payroll-utils.ts"],"sourcesContent":["// src/lib/payroll-utils.ts\n\nimport type { CalculationResults, QuincenalCalculationSummary } from '@/types';\n\n// Example fixed salary for demonstration - consider making this configurable if needed elsewhere\nconst SALARIO_BASE_QUINCENAL_FIJO = 711750;\n\n/**\n * Calculates the quincenal summary from an array of daily calculation results.\n * @param calculatedDays - Array of CalculationResults for the period.\n * @param salarioBase - The base fortnightly salary. Defaults to SALARIO_BASE_QUINCENAL_FIJO.\n * @returns The QuincenalCalculationSummary or null if no days are provided.\n */\nexport function calculateQuincenalSummary(\n    calculatedDays: CalculationResults[],\n    salarioBase: number = SALARIO_BASE_QUINCENAL_FIJO\n): QuincenalCalculationSummary | null {\n    if (!calculatedDays || calculatedDays.length === 0) {\n        return null;\n    }\n\n    const initialSummary: QuincenalCalculationSummary = {\n        totalHorasDetalladas: {\n            Ordinaria_Diurna_Base: 0, Recargo_Noct_Base: 0, Recargo_Dom_Diurno_Base: 0,\n            Recargo_Dom_Noct_Base: 0, HED: 0, HEN: 0, HEDD_F: 0, HEND_F: 0,\n        },\n        totalPagoDetallado: {\n            Ordinaria_Diurna_Base: 0, Recargo_Noct_Base: 0, Recargo_Dom_Diurno_Base: 0,\n            Recargo_Dom_Noct_Base: 0, HED: 0, HEN: 0, HEDD_F: 0, HEND_F: 0,\n        },\n        totalPagoRecargosExtrasQuincena: 0,\n        salarioBaseQuincenal: salarioBase,\n        pagoTotalConSalarioQuincena: salarioBase, // Start with base salary\n        totalDuracionTrabajadaHorasQuincena: 0,\n        diasCalculados: calculatedDays.length,\n    };\n\n    return calculatedDays.reduce((summary, currentDay) => {\n        // Use Object.keys on the summary's structure to ensure all categories are processed\n        Object.keys(summary.totalHorasDetalladas).forEach(key => {\n            const category = key as keyof CalculationResults['horasDetalladas'];\n            // Accumulate hours and payments safely, defaulting to 0 if a category is somehow missing in currentDay\n            summary.totalHorasDetalladas[category] += currentDay.horasDetalladas[category] ?? 0;\n            summary.totalPagoDetallado[category] += currentDay.pagoDetallado[category] ?? 0;\n        });\n        summary.totalPagoRecargosExtrasQuincena += currentDay.pagoTotalRecargosExtras;\n        summary.totalDuracionTrabajadaHorasQuincena += currentDay.duracionTotalTrabajadaHoras;\n        summary.pagoTotalConSalarioQuincena += currentDay.pagoTotalRecargosExtras; // Add only the extras/surcharges\n        return summary;\n    }, initialSummary);\n}\n"],"names":[],"mappings":"AAAA,2BAA2B;;;;AAI3B,iGAAiG;AACjG,MAAM,8BAA8B;AAQ7B,SAAS,0BACZ,cAAoC,EACpC,cAAsB,2BAA2B;IAEjD,IAAI,CAAC,kBAAkB,eAAe,MAAM,KAAK,GAAG;QAChD,OAAO;IACX;IAEA,MAAM,iBAA8C;QAChD,sBAAsB;YAClB,uBAAuB;YAAG,mBAAmB;YAAG,yBAAyB;YACzE,uBAAuB;YAAG,KAAK;YAAG,KAAK;YAAG,QAAQ;YAAG,QAAQ;QACjE;QACA,oBAAoB;YAChB,uBAAuB;YAAG,mBAAmB;YAAG,yBAAyB;YACzE,uBAAuB;YAAG,KAAK;YAAG,KAAK;YAAG,QAAQ;YAAG,QAAQ;QACjE;QACA,iCAAiC;QACjC,sBAAsB;QACtB,6BAA6B;QAC7B,qCAAqC;QACrC,gBAAgB,eAAe,MAAM;IACzC;IAEA,OAAO,eAAe,MAAM,CAAC,CAAC,SAAS;QACnC,oFAAoF;QACpF,OAAO,IAAI,CAAC,QAAQ,oBAAoB,EAAE,OAAO,CAAC,CAAA;YAC9C,MAAM,WAAW;YACjB,uGAAuG;YACvG,QAAQ,oBAAoB,CAAC,SAAS,IAAI,WAAW,eAAe,CAAC,SAAS,IAAI;YAClF,QAAQ,kBAAkB,CAAC,SAAS,IAAI,WAAW,aAAa,CAAC,SAAS,IAAI;QAClF;QACA,QAAQ,+BAA+B,IAAI,WAAW,uBAAuB;QAC7E,QAAQ,mCAAmC,IAAI,WAAW,2BAA2B;QACrF,QAAQ,2BAA2B,IAAI,WAAW,uBAAuB,EAAE,iCAAiC;QAC5G,OAAO;IACX,GAAG;AACP","debugId":null}},
    {"offset": {"line": 2550, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/saved-payroll-list.tsx"],"sourcesContent":["\n// src/components/saved-payroll-list.tsx\n'use client';\n\nimport type { FC } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { FileSearch, FileDown, Trash2, Users } from 'lucide-react';\nimport type { SavedPayrollData } from '@/types'; // Ensure this type is correctly defined\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { formatCurrency } from './results-display'; // Assuming formatCurrency is exported\nimport { AlertDialog, AlertDialogTrigger } from '@/components/ui/alert-dialog'; // Import for delete confirmation\n\ninterface SavedPayrollListProps {\n  payrolls: SavedPayrollData[];\n  onLoad: (key: string) => void;\n  onDelete: (key: string) => void; // Changed to accept key for deletion confirmation\n  onBulkExport: () => void;\n}\n\nexport const SavedPayrollList: FC<SavedPayrollListProps> = ({ payrolls, onLoad, onDelete, onBulkExport }) => {\n\n    // Helper function to calculate final net pay for display\n    const calculateNetoAPagar = (payroll: SavedPayrollData): number => {\n        const baseMasExtras = payroll.summary.pagoTotalConSalarioQuincena;\n        const auxTransporteValorConfig = 100000; // Assuming this value, ideally get from config\n        const auxTransporteAplicado = payroll.incluyeAuxTransporte ? auxTransporteValorConfig : 0;\n        const totalOtrosIngresos = (payroll.otrosIngresosLista || []).reduce((sum, item) => sum + item.monto, 0);\n        const totalOtrasDeducciones = (payroll.otrasDeduccionesLista || []).reduce((sum, item) => sum + item.monto, 0);\n\n        // Calculate Total Devengado Bruto\n        const totalDevengadoBruto = baseMasExtras + auxTransporteAplicado + totalOtrosIngresos;\n\n        // Estimate legal deductions (IBC excludes transport allowance)\n        const ibcEstimadoQuincenal = baseMasExtras + totalOtrosIngresos;\n        const deduccionSaludQuincenal = ibcEstimadoQuincenal * 0.04;\n        const deduccionPensionQuincenal = ibcEstimadoQuincenal * 0.04;\n        const totalDeduccionesLegales = deduccionSaludQuincenal + deduccionPensionQuincenal;\n\n        // Calculate Subtotal Neto Parcial\n        const subtotalNetoParcial = totalDevengadoBruto - totalDeduccionesLegales;\n\n        // Calculate final net pay\n        return subtotalNetoParcial - totalOtrasDeducciones;\n    };\n\n\n  return (\n    <Card className=\"shadow-lg bg-card\">\n      <CardHeader className=\"relative flex flex-row items-start justify-between pb-4\"> {/* Use relative for positioning button */}\n        <div className=\"flex-1 pr-16\"> {/* Add padding to prevent overlap */}\n            <CardTitle className=\"flex items-center gap-2 text-xl text-foreground\">\n              <Users className=\"h-5 w-5\" /> Nóminas Guardadas ({payrolls.length})\n            </CardTitle>\n            <CardDescription>\n              {payrolls.length > 0\n                ? 'Lista de nóminas quincenales guardadas localmente. Puedes cargarlas para editar o eliminarlas.'\n                : 'No hay nóminas guardadas en este momento.'\n              }\n            </CardDescription>\n        </div>\n         {/* Export Button: Positioned absolute top-right */}\n        <Button onClick={onBulkExport} variant=\"outline\" size=\"sm\" disabled={payrolls.length === 0} className=\"absolute top-4 right-4 px-2 py-1 h-auto\"> {/* Adjust size and padding */}\n          <FileDown className=\"mr-1 h-3 w-3\" /> PDF {/* Changed text and icon size */}\n        </Button>\n      </CardHeader>\n      <CardContent>\n        {payrolls.length > 0 ? (\n          <ul className=\"space-y-4 max-h-[70vh] lg:max-h-[calc(100vh-250px)] overflow-y-auto pr-2\">\n            {payrolls.map((payroll) => {\n                 const netoFinal = calculateNetoAPagar(payroll); // Calculate final net pay\n                 return (\n                    <li key={payroll.key} className=\"relative p-4 border rounded-lg shadow-sm bg-secondary/30 flex flex-col justify-between gap-3\">\n                      <div className=\"flex-grow min-w-0 pr-16\"> {/* Add right padding here too */}\n                        <p className=\"font-semibold text-lg truncate text-foreground\">{payroll.employeeId}</p>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Período: {format(payroll.periodStart, 'dd MMM', { locale: es })} - {format(payroll.periodEnd, 'dd MMM yyyy', { locale: es })}\n                        </p>\n                         <div className=\"mt-2 grid grid-cols-2 gap-x-4 gap-y-1 text-sm\">\n                            <span className=\"text-muted-foreground\">Dev. Bruto:</span><span className=\"font-medium text-foreground text-right\">{formatCurrency(payroll.summary.pagoTotalConSalarioQuincena + (payroll.incluyeAuxTransporte ? 100000 : 0) + (payroll.otrosIngresosLista || []).reduce((s,i)=>s+i.monto, 0) )}</span>\n                            <span className=\"text-muted-foreground\">Neto Estimado:</span><span className=\"font-semibold text-accent text-right\">{formatCurrency(netoFinal)}</span>\n                         </div>\n                        <p className=\"text-xs text-muted-foreground mt-1\">\n                          Guardado: {format(payroll.createdAt || new Date(), 'dd/MM/yyyy HH:mm', { locale: es })}\n                        </p>\n                      </div>\n                      <div className=\"absolute top-2 right-2 flex flex-row gap-1 flex-shrink-0\"> {/* Changed to flex-row */}\n                        <Button variant=\"ghost\" size=\"icon\" onClick={() => onLoad(payroll.key)} title=\"Cargar y Editar Nómina\" className=\"h-8 w-8\">\n                          <FileSearch className=\"h-4 w-4\" />\n                        </Button>\n                        <AlertDialog>\n                           {/* Ensure AlertDialogTrigger is inside AlertDialog */}\n                          <AlertDialogTrigger asChild>\n                              <Button variant=\"ghost\" size=\"icon\" onClick={() => onDelete(payroll.key)} title=\"Eliminar Nómina Guardada\" className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\">\n                                  <Trash2 className=\"h-4 w-4\" />\n                              </Button>\n                          </AlertDialogTrigger>\n                           {/* Content is defined elsewhere in page.tsx */}\n                        </AlertDialog>\n                      </div>\n                    </li>\n                 )\n              })}\n          </ul>\n        ) : (\n          <p className=\"text-center text-muted-foreground italic py-4\">No hay nóminas guardadas.</p>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2864, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3015, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3050, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/adjustment-modal.tsx"],"sourcesContent":["// src/components/adjustment-modal.tsx\n'use client';\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea'; // Use Textarea for description\nimport type { AdjustmentItem } from '@/types';\nimport { Save, X } from 'lucide-react';\nimport { cn } from '@/lib/utils'; // Import cn for conditional classes\n\n// Schema for the modal form\nconst adjustmentSchema = z.object({\n  monto: z.coerce // Coerce input to number\n    .number({ invalid_type_error: 'El monto debe ser un número.' })\n    .positive({ message: 'El monto debe ser mayor que cero.' }),\n  descripcion: z.string().optional(), // Description is optional\n});\n\ntype AdjustmentFormValues = z.infer<typeof adjustmentSchema>;\n\ninterface AdjustmentModalProps {\n  type: 'ingreso' | 'deduccion';\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (data: Omit<AdjustmentItem, 'id'>) => void;\n  initialData?: Omit<AdjustmentItem, 'id'>; // For editing\n}\n\nexport const AdjustmentModal: React.FC<AdjustmentModalProps> = ({\n  type,\n  isOpen,\n  onClose,\n  onSave,\n  initialData,\n}) => {\n  const form = useForm<AdjustmentFormValues>({\n    resolver: zodResolver(adjustmentSchema),\n    // Initial default values - these will be overridden by useEffect\n    defaultValues: {\n      monto: undefined,\n      descripcion: '',\n    },\n  });\n\n  // Reset form when initialData changes or modal opens/closes\n   React.useEffect(() => {\n        if (isOpen) {\n            let resetValues: Partial<AdjustmentFormValues>;\n            if (initialData) {\n                // Editing existing item\n                resetValues = {\n                    monto: initialData.monto,\n                    descripcion: initialData.descripcion || '',\n                };\n            } else {\n                // Adding NEW item (income or deduction) - clear defaults\n                resetValues = {\n                    monto: undefined, // Use undefined to clear number input properly\n                    descripcion: '', // Clear description\n                };\n            }\n            form.reset(resetValues);\n            form.clearErrors(); // Clear previous errors\n        }\n    }, [isOpen, initialData, form, type]); // Added `type` dependency\n\n\n  const onSubmit = (values: AdjustmentFormValues) => {\n    onSave({\n      monto: values.monto,\n      descripcion: values.descripcion || '', // Ensure empty string if undefined\n    });\n    onClose(); // Close modal after saving\n  };\n\n  const title = type === 'ingreso' ? 'Agregar Otro Ingreso / Ajuste a Favor' : 'Agregar Otra Deducción / Descuento';\n  const description = type === 'ingreso' ? 'Ingresa el monto y una descripción opcional para el ingreso adicional.' : 'Ingresa el monto y una descripción opcional para la deducción adicional.';\n  const amountLabel = type === 'ingreso' ? 'Monto a Sumar' : 'Monto a Descontar';\n\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>{title}</DialogTitle>\n          <DialogDescription>{description}</DialogDescription>\n        </DialogHeader>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"grid gap-4 py-4\">\n            <FormField\n              control={form.control}\n              name=\"monto\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>{amountLabel}</FormLabel>\n                  <FormControl>\n                     {/* Use type=\"number\", step=\"any\" for decimals */}\n                     {/* Apply destructive ring color only on focus for deduction */}\n                    <Input\n                      type=\"number\"\n                      step=\"any\"\n                      min=\"0.01\" // Ensure positive\n                      placeholder=\"0.00\"\n                      className={cn(\n                        // Apply focus ring color, not border by default\n                        type === 'deduccion' && 'focus-visible:ring-destructive border-border hover:border-destructive focus:border-destructive'\n                      )}\n                      {...field}\n                      // Handle undefined case for initial render if default is undefined\n                      value={field.value === undefined ? '' : field.value}\n                      onChange={e => field.onChange(e.target.value === '' ? undefined : parseFloat(e.target.value))}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"descripcion\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Descripción (Opcional)</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"Ej: Bonificación, Préstamo...\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n             <DialogFooter className=\"mt-4\">\n                 <DialogClose asChild>\n                     {/* Cancel button: outline variant, red on hover */}\n                    <Button type=\"button\" variant=\"outline\" > {/* Removed custom hover */}\n                      <X className=\"mr-2 h-4 w-4\" /> Cancelar\n                    </Button>\n                  </DialogClose>\n                 {/* Save button: default variant, gradient on hover */}\n                <Button\n                    type=\"submit\"\n                    // Use default variant for income, destructive for deduction\n                    variant={type === 'deduccion' ? \"destructive\" : \"default\"}\n                    // Removed custom background/hover classes\n                    className={cn(\n                        // Optionally add text color if needed, but variants should handle it\n                        // type === 'deduccion' ? \"text-destructive-foreground\" : \"text-primary-foreground\"\n                    )}\n                 >\n                  <Save className=\"mr-2 h-4 w-4\" /> Guardar {type === 'ingreso' ? 'Ingreso' : 'Deducción'}\n                </Button>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3363, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useCallback, useMemo, ChangeEvent, useEffect } from 'react';\nimport { WorkdayForm } from '@/components/workday-form';\nimport { ResultsDisplay, labelMap as fullLabelMap, abbreviatedLabelMap, displayOrder, formatHours, formatCurrency } from '@/components/results-display'; // Import helpers and rename labelMap\nimport type { CalculationResults, CalculationError, QuincenalCalculationSummary, AdjustmentItem, SavedPayrollData } from '@/types'; // Added AdjustmentItem and SavedPayrollData\nimport { isCalculationError } from '@/types'; // Import the type guard\nimport { Toaster } from '@/components/ui/toaster';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Separator } from '@/components/ui/separator';\nimport { Input } from '@/components/ui/input'; // Import Input for editing hours and employee ID\nimport { Label } from '@/components/ui/label'; // Import Label for editing hours and employee ID\nimport { Trash2, Edit, PlusCircle, Calculator, DollarSign, Clock, Calendar as CalendarIcon, Save, X, PencilLine, User, FolderSync, Eraser, FileDown, Library, FileSearch, MinusCircle, Bus, CopyPlus, Loader2 } from 'lucide-react'; // Added Bus icon, CopyPlus, Loader2\nimport { format, parseISO, startOfMonth, endOfMonth, setDate, parse as parseDateFns, addDays } from 'date-fns'; // Added addDays\nimport { es } from 'date-fns/locale';\nimport { calculateSingleWorkday } from '@/actions/calculate-workday';\nimport { useToast } from '@/hooks/use-toast';\nimport type { WorkdayFormValues } from '@/components/workday-form';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Calendar } from '@/components/ui/calendar';\nimport { cn } from '@/lib/utils';\nimport { VALORES } from '@/config/payroll-values'; // Import VALORES from new location\nimport { exportPayrollToPDF, exportAllPayrollsToPDF } from '@/lib/pdf-exporter'; // Import PDF export functions\nimport { calculateQuincenalSummary } from '@/lib/payroll-utils'; // Import the summary calculation utility\nimport { SavedPayrollList } from '@/components/saved-payroll-list'; // Import the new component\nimport { AdjustmentModal } from '@/components/adjustment-modal'; // Import the new modal component\n\n// Constants\nconst SALARIO_BASE_QUINCENAL_FIJO = 711750; // Example fixed salary\nconst AUXILIO_TRANSPORTE_VALOR = 100000; // User-defined value for transport allowance\n\n// --- LocalStorage Key Generation ---\nconst getStorageKey = (employeeId: string, periodStart: Date | undefined, periodEnd: Date | undefined): string | null => {\n    if (!employeeId || !periodStart || !periodEnd) return null;\n    // Ensure dates are valid before formatting\n    if (isNaN(periodStart.getTime()) || isNaN(periodEnd.getTime())) return null;\n    try {\n        const startStr = format(periodStart, 'yyyy-MM-dd');\n        const endStr = format(periodEnd, 'yyyy-MM-dd');\n        // Sanitize employeeId to be safe for keys (basic example)\n        const safeEmployeeId = employeeId.replace(/[^a-zA-Z0-9_-]/g, '');\n        return `payroll_${safeEmployeeId}_${startStr}_${endStr}`;\n    } catch (e) {\n        console.error(\"Error generando la clave de almacenamiento:\", e);\n        return null;\n    }\n};\n\n\n// --- Helper to parse stored data (revives dates and includes transport flag) ---\nconst parseStoredData = (jsonData: string | null): { days: CalculationResults[], income: AdjustmentItem[], deductions: AdjustmentItem[], includeTransport: boolean } => {\n    if (!jsonData) return { days: [], income: [], deductions: [], includeTransport: false };\n    try {\n        // Assuming stored data now includes adjustments and transport flag\n        const storedObject = JSON.parse(jsonData) as {\n             calculatedDays: CalculationResults[],\n             otrosIngresosLista?: AdjustmentItem[],\n             otrasDeduccionesLista?: AdjustmentItem[],\n             incluyeAuxTransporte?: boolean // Load the flag\n        };\n\n        // Revive date objects in calculatedDays\n        const revivedDays = (storedObject.calculatedDays || []).map(day => ({\n            ...day,\n            inputData: {\n                ...day.inputData,\n                startDate: day.inputData.startDate && typeof day.inputData.startDate === 'string'\n                            ? parseISO(day.inputData.startDate)\n                            : (day.inputData.startDate instanceof Date ? day.inputData.startDate : new Date()), // Fallback\n            }\n        }));\n\n        // Ensure adjustment lists are arrays, even if missing in old data\n        const incomeList = Array.isArray(storedObject.otrosIngresosLista) ? storedObject.otrosIngresosLista : [];\n        const deductionList = Array.isArray(storedObject.otrasDeduccionesLista) ? storedObject.otrasDeduccionesLista : [];\n        const includeTransport = typeof storedObject.incluyeAuxTransporte === 'boolean' ? storedObject.incluyeAuxTransporte : false; // Default to false if missing\n\n        return { days: revivedDays, income: incomeList, deductions: deductionList, includeTransport };\n\n    } catch (error) {\n        console.error(\"Error parseando datos de localStorage:\", error);\n        return { days: [], income: [], deductions: [], includeTransport: false }; // Return default object on error\n    }\n};\n\n// --- Regex to parse storage key ---\nconst storageKeyRegex = /^payroll_([a-zA-Z0-9_-]+)_(\\d{4}-\\d{2}-\\d{2})_(\\d{4}-\\d{2}-\\d{2})$/;\n\n// --- Helper to load all saved payrolls ---\nconst loadAllSavedPayrolls = (): SavedPayrollData[] => {\n    if (typeof window === 'undefined') return []; // Client-side only\n\n    const savedPayrolls: SavedPayrollData[] = [];\n    try {\n        for (let i = 0; i < localStorage.length; i++) {\n            const key = localStorage.key(i);\n            if (key && key.startsWith('payroll_')) {\n                const match = key.match(storageKeyRegex);\n                if (match) {\n                    const employeeId = match[1];\n                    const startStr = match[2];\n                    const endStr = match[3];\n                    const startDate = parseDateFns(startStr, 'yyyy-MM-dd', new Date());\n                    const endDate = parseDateFns(endStr, 'yyyy-MM-dd', new Date());\n\n                    // Validate parsed data\n                    if (!employeeId || isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {\n                        console.warn(`Omitiendo clave de almacenamiento inválida: ${key}`);\n                        continue;\n                    }\n\n                    const storedData = localStorage.getItem(key);\n                     // Get adjustments and transport flag too\n                    const { days: parsedDays, income: parsedIncome, deductions: parsedDeductions, includeTransport: parsedIncludeTransport } = parseStoredData(storedData);\n\n                    if (parsedDays.length > 0 || parsedIncome.length > 0 || parsedDeductions.length > 0) { // Check if there's any data\n                        // Calculate summary for the loaded days\n                        const summary = calculateQuincenalSummary(parsedDays, SALARIO_BASE_QUINCENAL_FIJO);\n                        // Summary can be null if parsedDays is empty, handle this case\n                        // We still might want to save/load if only adjustments exist\n\n                         const savedPayrollItem: SavedPayrollData = {\n                            key: key,\n                            employeeId: employeeId,\n                            periodStart: startDate,\n                            periodEnd: endDate,\n                            // Handle case where summary might be null if only adjustments were saved\n                            summary: summary || { // Provide a default empty summary if null\n                                totalHorasDetalladas: { Ordinaria_Diurna_Base: 0, Recargo_Noct_Base: 0, Recargo_Dom_Diurno_Base: 0, Recargo_Dom_Noct_Base: 0, HED: 0, HEN: 0, HEDD_F: 0, HEND_F: 0 },\n                                totalPagoDetallado: { Ordinaria_Diurna_Base: 0, Recargo_Noct_Base: 0, Recargo_Dom_Diurno_Base: 0, Recargo_Dom_Noct_Base: 0, HED: 0, HEN: 0, HEDD_F: 0, HEND_F: 0 },\n                                totalPagoRecargosExtrasQuincena: 0,\n                                salarioBaseQuincenal: SALARIO_BASE_QUINCENAL_FIJO,\n                                pagoTotalConSalarioQuincena: SALARIO_BASE_QUINCENAL_FIJO,\n                                totalDuracionTrabajadaHorasQuincena: 0,\n                                diasCalculados: 0,\n                            },\n                            otrosIngresosLista: parsedIncome, // Store loaded income adjustments\n                            otrasDeduccionesLista: parsedDeductions, // Store loaded deduction adjustments\n                            incluyeAuxTransporte: parsedIncludeTransport, // Store transport flag\n                            createdAt: parsedDays[0]?.inputData?.startDate ? new Date(parsedDays[0].inputData.startDate) : new Date()\n                         };\n\n                        savedPayrolls.push(savedPayrollItem);\n\n                    }\n                }\n            }\n        }\n    } catch (error) {\n        console.error(\"Error cargando nóminas guardadas de localStorage:\", error);\n        // Optionally show a toast message here\n    }\n    // Sort by period start date descending, then employee ID\n    return savedPayrolls.sort((a, b) => {\n       const dateDiff = b.periodStart.getTime() - a.periodStart.getTime();\n       if (dateDiff !== 0) return dateDiff;\n       return a.employeeId.localeCompare(b.employeeId);\n    });\n};\n\n\n// Removed duplicate abbreviatedLabelMap definition\n\n\nexport default function Home() {\n    // --- State ---\n    const [employeeId, setEmployeeId] = useState<string>('');\n    const [payPeriodStart, setPayPeriodStart] = useState<Date | undefined>(() => {\n        const now = new Date();\n        return now.getDate() <= 15 ? startOfMonth(now) : setDate(startOfMonth(now), 16);\n    });\n    const [payPeriodEnd, setPayPeriodEnd] = useState<Date | undefined>(() => {\n         const now = new Date();\n         if (now.getDate() <= 15) {\n            return setDate(startOfMonth(now), 15);\n         } else {\n            return endOfMonth(now);\n         }\n    });\n    const [calculatedDays, setCalculatedDays] = useState<CalculationResults[]>([]);\n    const [editingDayId, setEditingDayId] = useState<string | null>(null); // For editing inputs (date/time)\n    const [editingResultsId, setEditingResultsId] = useState<string | null>(null); // For editing calculated hours\n    const [editedHours, setEditedHours] = useState<CalculationResults['horasDetalladas'] | null>(null); // Temp state for edited hours\n    const [dayToDeleteId, setDayToDeleteId] = useState<string | null>(null);\n    const [isLoadingDay, setIsLoadingDay] = useState<boolean>(false); // Loading state for individual day calculation/duplication\n    const [errorDay, setErrorDay] = useState<string | null>(null);\n    const [isDataLoaded, setIsDataLoaded] = useState<boolean>(false); // Track initial load for current employee/period\n    const [savedPayrolls, setSavedPayrolls] = useState<SavedPayrollData[]>([]); // State for the list of all saved payrolls\n    const [payrollToDeleteKey, setPayrollToDeleteKey] = useState<string | null>(null); // Key of the saved payroll to delete\n\n    // State for Adjustments\n    const [otrosIngresos, setOtrosIngresos] = useState<AdjustmentItem[]>([]);\n    const [otrasDeducciones, setOtrasDeducciones] = useState<AdjustmentItem[]>([]);\n    const [isIncomeModalOpen, setIsIncomeModalOpen] = useState(false);\n    const [isDeductionModalOpen, setIsDeductionModalOpen] = useState(false);\n    // State for editing an adjustment (optional)\n    // const [editingAdjustment, setEditingAdjustment] = useState<{ type: 'ingreso' | 'deduccion', item: AdjustmentItem } | null>(null);\n\n    // State for Transportation Allowance\n    const [incluyeAuxTransporte, setIncluyeAuxTransporte] = useState<boolean>(false);\n\n\n    const { toast } = useToast();\n\n    // --- Effects for Loading and Saving ---\n\n    // Load ALL saved payrolls on initial mount\n    useEffect(() => {\n        setSavedPayrolls(loadAllSavedPayrolls());\n    }, []);\n\n    // Load current employee/period data from localStorage when employee/period changes\n    useEffect(() => {\n        if (typeof window !== 'undefined') { // Ensure running on client\n            const storageKey = getStorageKey(employeeId, payPeriodStart, payPeriodEnd);\n            if (storageKey) {\n                console.log(`Intentando cargar datos para la clave: ${storageKey}`);\n                const storedData = localStorage.getItem(storageKey);\n                // Load transport flag along with other data\n                const { days: parsedDays, income: parsedIncome, deductions: parsedDeductions, includeTransport: parsedIncludeTransport } = parseStoredData(storedData);\n                setCalculatedDays(parsedDays);\n                setOtrosIngresos(parsedIncome); // Load income adjustments\n                setOtrasDeducciones(parsedDeductions); // Load deduction adjustments\n                setIncluyeAuxTransporte(parsedIncludeTransport); // Load transport allowance flag\n                setIsDataLoaded(true); // Mark data as loaded (or attempted)\n                 // Only toast if user explicitly selected employee/period\n                 if (employeeId && payPeriodStart && payPeriodEnd) {\n                     toast({\n                         title: storedData ? 'Datos Cargados' : 'Datos No Encontrados',\n                         description: storedData ? `Se cargaron turnos, ajustes y estado de auxilio para ${employeeId}.` : `No se encontraron datos guardados para ${employeeId} en este período.`,\n                         variant: 'default',\n                     });\n                 }\n            } else {\n                // Clear days, adjustments, and transport flag if key is invalid\n                setCalculatedDays([]);\n                setOtrosIngresos([]);\n                setOtrasDeducciones([]);\n                setIncluyeAuxTransporte(false); // Reset transport flag\n                setIsDataLoaded(true); // Still considered 'loaded' (with empty data)\n                 if (employeeId || payPeriodStart || payPeriodEnd) { // Only show 'not found' if some info was provided\n                    // Optionally clear toast if selection becomes incomplete\n                 }\n            }\n            // Reset editing states when period/employee changes\n             setEditingDayId(null);\n             setEditingResultsId(null);\n             // Close adjustment modals if open\n             setIsIncomeModalOpen(false);\n             setIsDeductionModalOpen(false);\n        }\n    }, [employeeId, payPeriodStart, payPeriodEnd, toast]); // Add toast to dependency array\n\n    // Save current employee/period data to localStorage whenever calculatedDays, otrosIngresos, otrasDeducciones, or incluyeAuxTransporte changes (after initial load)\n    useEffect(() => {\n        if (typeof window !== 'undefined' && isDataLoaded) { // Ensure running on client and after initial load\n            const storageKey = getStorageKey(employeeId, payPeriodStart, payPeriodEnd);\n             // Save if there's data OR if the transport flag is true (even if other lists are empty)\n            if (storageKey && (calculatedDays.length > 0 || otrosIngresos.length > 0 || otrasDeducciones.length > 0 || incluyeAuxTransporte)) {\n                try {\n                     console.log(`Intentando guardar datos (incluye transporte: ${incluyeAuxTransporte}) en la clave: ${storageKey}`);\n                     const dataToSave = {\n                         calculatedDays: calculatedDays,\n                         otrosIngresosLista: otrosIngresos,\n                         otrasDeduccionesLista: otrasDeducciones,\n                         incluyeAuxTransporte: incluyeAuxTransporte, // Save the transport flag\n                     };\n                    localStorage.setItem(storageKey, JSON.stringify(dataToSave));\n                     // After saving, refresh the list of saved payrolls\n                     setSavedPayrolls(loadAllSavedPayrolls());\n                } catch (error) {\n                    console.error(\"Error guardando datos en localStorage:\", error);\n                    toast({\n                        title: 'Error al Guardar',\n                        description: 'No se pudieron guardar los cambios localmente.',\n                        variant: 'destructive',\n                    });\n                }\n            // Remove from storage only if ALL data is cleared AND transport flag is false\n            } else if (storageKey && calculatedDays.length === 0 && otrosIngresos.length === 0 && otrasDeducciones.length === 0 && !incluyeAuxTransporte) {\n                localStorage.removeItem(storageKey);\n                console.log(`Clave ${storageKey} eliminada porque no hay datos ni auxilio de transporte activo.`);\n                // Refresh saved list after deletion\n                setSavedPayrolls(loadAllSavedPayrolls());\n            }\n        }\n    }, [calculatedDays, otrosIngresos, otrasDeducciones, incluyeAuxTransporte, employeeId, payPeriodStart, payPeriodEnd, isDataLoaded, toast]); // Add incluyeAuxTransporte to dependencies\n\n\n  // --- Event Handlers ---\n\n    const handleLoadData = useCallback(() => {\n        // This function essentially re-triggers the load useEffect by potentially changing dependencies,\n        // or just provides user feedback. The actual loading happens in useEffect.\n        if (!employeeId || !payPeriodStart || !payPeriodEnd) {\n             toast({\n                 title: 'Información Incompleta',\n                 description: 'Por favor, ingresa el ID del colaborador y selecciona un período.',\n                 variant: 'destructive',\n             });\n             return;\n        }\n        // Trigger useEffect reload by setting state again (even if same value)\n        // Or simply rely on the existing useEffect which runs on change\n        setIsDataLoaded(false); // Force reload state\n        // The useEffect listening to employeeId, payPeriodStart, payPeriodEnd will run\n         toast({\n             title: 'Recargando Datos...',\n             description: `Buscando turnos y ajustes para ${employeeId}.`,\n         });\n          // Force re-trigger loading effect by creating new Date objects\n         setEmployeeId(e => e);\n         setPayPeriodStart(d => d ? new Date(d.getTime()) : undefined);\n         setPayPeriodEnd(d => d ? new Date(d.getTime()) : undefined);\n\n    }, [employeeId, payPeriodStart, payPeriodEnd, toast]);\n\n    const handleClearPeriodData = () => {\n         const storageKey = getStorageKey(employeeId, payPeriodStart, payPeriodEnd);\n         if (storageKey && typeof window !== 'undefined') {\n            localStorage.removeItem(storageKey);\n         }\n         setCalculatedDays([]); // Clear state immediately\n         setOtrosIngresos([]); // Clear adjustments\n         setOtrasDeducciones([]);\n         setIncluyeAuxTransporte(false); // Reset transport flag\n         setEditingDayId(null);\n         setEditingResultsId(null);\n         setEditedHours(null);\n         setSavedPayrolls(loadAllSavedPayrolls()); // Refresh saved list\n         toast({\n            title: 'Datos del Período Eliminados',\n            description: `Se han borrado los turnos, ajustes y estado de auxilio de transporte guardados localmente para ${employeeId} en este período.`,\n            variant: 'destructive',\n         });\n    };\n\n\n    // Function to handle adding or updating a day's calculation (from WorkdayForm)\n    const handleDayCalculationComplete = (data: CalculationResults | CalculationError) => {\n        setIsLoadingDay(false);\n        if (isCalculationError(data)) {\n            // Updated error message handling to show more specific errors if available\n            const errorMessage = data.error?.includes(\":\") // Check if it likely contains an ID prefix\n                ? data.error // Show specific ID error\n                : `Error inesperado: ${data.error || 'Detalle no disponible.'}`;\n            setErrorDay(errorMessage);\n            toast({\n                title: 'Error en el Cálculo', // Updated title\n                description: errorMessage, // Always show the error message received\n                variant: 'destructive',\n            });\n        } else {\n             // Validate if the calculated day's date falls within the selected pay period\n            if (!payPeriodStart || !payPeriodEnd || data.inputData.startDate < payPeriodStart || data.inputData.startDate > payPeriodEnd) {\n                setErrorDay(`La fecha del turno (${format(data.inputData.startDate, 'PPP', { locale: es })}) está fuera del período seleccionado.`);\n                toast({\n                    title: 'Fecha Fuera de Período',\n                    description: `El turno del ${format(data.inputData.startDate, 'PPP', { locale: es })} no pertenece al período quincenal seleccionado (${format(payPeriodStart!, 'dd/MM')} - ${format(payPeriodEnd!, 'dd/MM/yyyy')}). No se agregó.`,\n                    variant: 'destructive',\n                    duration: 5000,\n                });\n                // Do not add or update if outside the period\n                setEditingDayId(null); // Still clear editing state\n                return; // Stop processing\n            }\n\n            setErrorDay(null);\n            setCalculatedDays((prevDays) => {\n                const existingIndex = prevDays.findIndex((day) => day.id === data.id);\n                let updatedDays;\n                if (existingIndex > -1) {\n                    updatedDays = [...prevDays];\n                    updatedDays[existingIndex] = data;\n                } else {\n                    updatedDays = [...prevDays, data];\n                }\n                // Sort days after adding/updating\n                return updatedDays.sort((a, b) => a.inputData.startDate.getTime() - b.inputData.startDate.getTime());\n            });\n            setEditingDayId(null); // Clear input editing state\n            toast({\n                title: `Turno ${editingDayId ? 'Actualizado' : 'Agregado'}`,\n                description: `Turno para ${format(data.inputData.startDate, 'PPP', { locale: es })} ${editingDayId ? 'actualizado en la quincena.' : 'agregado a la quincena.'}`,\n            });\n        }\n    };\n\n\n  const handleDayCalculationStart = () => {\n    setIsLoadingDay(true);\n    setErrorDay(null);\n  };\n\n  // Function to initiate editing a day's inputs (date/time) via WorkdayForm\n  const handleEditDay = (id: string) => {\n    setEditingResultsId(null); // Cancel results editing if active\n    setEditedHours(null);\n    setEditingDayId(id);\n  };\n\n   // Function to initiate editing a day's calculated results\n   const handleEditResults = (id: string) => {\n     const dayToEdit = calculatedDays.find(day => day.id === id);\n     if (dayToEdit) {\n       setEditingDayId(null); // Cancel input editing if active\n       setEditingResultsId(id);\n       setEditedHours({ ...dayToEdit.horasDetalladas }); // Clone hours for editing\n     }\n   };\n\n   // Function to handle changes in the edited hour input fields\n   const handleHourChange = (e: ChangeEvent<HTMLInputElement>, key: keyof CalculationResults['horasDetalladas']) => {\n     const value = e.target.value;\n     // Allow empty string or valid numbers (including decimals)\n     if (value === '' || /^\\d*\\.?\\d*$/.test(value)) {\n        setEditedHours(prev => {\n            if (!prev) return null;\n            // Use parseFloat for calculation, but keep as string for input potentially\n            // Or convert directly to number\n            const numericValue = value === '' ? 0 : parseFloat(value);\n            return {\n                ...prev,\n                [key]: isNaN(numericValue) ? 0 : numericValue // Store as number, handle NaN\n            };\n        });\n     }\n   };\n\n\n   // Function to save edited results\n    const handleSaveResults = () => {\n        if (!editingResultsId || !editedHours) return;\n\n        setCalculatedDays(prevDays => {\n            const index = prevDays.findIndex(day => day.id === editingResultsId);\n            if (index === -1) return prevDays; // Should not happen\n\n            const updatedDays = [...prevDays];\n            const originalDay = updatedDays[index];\n\n            // Recalculate payments based on edited hours\n            let newPagoTotalRecargosExtras = 0;\n            const newPagoDetallado: CalculationResults['pagoDetallado'] = { ...originalDay.pagoDetallado }; // Start with original structure\n\n            let newTotalHorasTrabajadas = 0;\n\n            for (const key in editedHours) {\n                const category = key as keyof CalculationResults['horasDetalladas'];\n                const hours = editedHours[category];\n                newTotalHorasTrabajadas += hours; // Sum up edited hours\n\n                if (category !== \"Ordinaria_Diurna_Base\") { // Base hours don't contribute to extra payment\n                    const valorHora = VALORES[category] ?? 0;\n                    const pagoCategoria = hours * valorHora;\n                    newPagoDetallado[category] = pagoCategoria;\n                    newPagoTotalRecargosExtras += pagoCategoria;\n                } else {\n                    // Ensure Ordinaria_Diurna_Base payment is 0 in the detail, even if hours exist\n                    newPagoDetallado[category] = 0;\n                }\n            }\n\n\n            // Update the day with the new calculated values based on edited hours\n            updatedDays[index] = {\n                ...originalDay,\n                horasDetalladas: editedHours, // Use the edited hours\n                pagoDetallado: newPagoDetallado,\n                pagoTotalRecargosExtras: newPagoTotalRecargosExtras,\n                pagoTotalConSalario: newPagoTotalRecargosExtras, // Only includes extras for the day\n                duracionTotalTrabajadaHoras: newTotalHorasTrabajadas, // Update total hours based on edited values\n            };\n\n            return updatedDays.sort((a, b) => a.inputData.startDate.getTime() - b.inputData.startDate.getTime()); // Re-sort after update\n        });\n\n        toast({\n            title: 'Detalles Actualizados',\n            description: `Las horas para el turno han sido modificadas manualmente.`,\n        });\n\n        // Exit editing mode\n        setEditingResultsId(null);\n        setEditedHours(null);\n    };\n\n\n  // Function to cancel editing results\n  const handleCancelResults = () => {\n    setEditingResultsId(null);\n    setEditedHours(null);\n  };\n\n  // Function to prepare for deletion\n   const confirmDeleteDay = (id: string) => {\n     setDayToDeleteId(id);\n     // Open the confirmation dialog (AlertDialogTrigger should handle this)\n   };\n\n  // Function to actually delete the day after confirmation\n   const handleDeleteDay = () => {\n     if (!dayToDeleteId) return;\n     setCalculatedDays((prevDays) => prevDays.filter((day) => day.id !== dayToDeleteId));\n     toast({\n       title: 'Día Eliminado',\n       description: 'El cálculo del día ha sido eliminado de la quincena.',\n       variant: 'destructive',\n     });\n     setDayToDeleteId(null); // Close the dialog\n     // Ensure editing states are also cleared if the deleted day was being edited\n     if (editingDayId === dayToDeleteId) setEditingDayId(null);\n     if (editingResultsId === dayToDeleteId) {\n        setEditingResultsId(null);\n        setEditedHours(null);\n     }\n   };\n\n   // --- Adjustment Handlers ---\n   const handleAddIngreso = (data: Omit<AdjustmentItem, 'id'>) => {\n        const newItem: AdjustmentItem = {\n            ...data,\n            id: `ingreso_${Date.now()}`, // Simple unique ID\n        };\n        setOtrosIngresos(prev => [...prev, newItem]);\n        toast({ title: 'Ingreso Agregado', description: `${data.descripcion || 'Ingreso'}: ${formatCurrency(data.monto)}` });\n   };\n\n   const handleAddDeduccion = (data: Omit<AdjustmentItem, 'id'>) => {\n         const newItem: AdjustmentItem = {\n             ...data,\n             id: `deduccion_${Date.now()}`, // Simple unique ID\n         };\n         setOtrasDeducciones(prev => [...prev, newItem]);\n         toast({ title: 'Deducción Agregada', description: `${data.descripcion || 'Deducción'}: ${formatCurrency(data.monto)}`, variant: 'default' }); // Use default variant\n   };\n\n   const handleDeleteIngreso = (id: string) => {\n        setOtrosIngresos(prev => prev.filter(item => item.id !== id));\n        toast({ title: 'Ingreso Eliminado', variant: 'destructive' });\n   };\n\n   const handleDeleteDeduccion = (id: string) => {\n        setOtrasDeducciones(prev => prev.filter(item => item.id !== id));\n        toast({ title: 'Deducción Eliminada', variant: 'destructive' });\n   };\n\n    // --- Transportation Allowance Handler ---\n    const handleToggleTransporte = () => {\n        setIncluyeAuxTransporte(prev => !prev);\n        toast({\n            title: `Auxilio de Transporte ${!incluyeAuxTransporte ? 'Activado' : 'Desactivado'}`,\n            description: !incluyeAuxTransporte\n                         ? `Se sumará ${formatCurrency(AUXILIO_TRANSPORTE_VALOR)} al total devengado.`\n                         : 'El auxilio de transporte no se incluirá en el cálculo.',\n        });\n    };\n\n\n  // Memoized calculation for the quincenal summary using the utility function\n  const quincenalSummary = useMemo(() => {\n       // Only calculate if there are days to summarize, even if transport is on\n        if (calculatedDays.length === 0 && !incluyeAuxTransporte && otrosIngresos.length === 0 && otrasDeducciones.length === 0) return null;\n        // Calculate base summary from days, potentially null if no days\n       const baseSummary = calculateQuincenalSummary(calculatedDays, SALARIO_BASE_QUINCENAL_FIJO);\n\n        // Create a structure even if baseSummary is null, to handle adjustments/transport\n       const finalSummary: QuincenalCalculationSummary = baseSummary || {\n           totalHorasDetalladas: { Ordinaria_Diurna_Base: 0, Recargo_Noct_Base: 0, Recargo_Dom_Diurno_Base: 0, Recargo_Dom_Noct_Base: 0, HED: 0, HEN: 0, HEDD_F: 0, HEND_F: 0 },\n           totalPagoDetallado: { Ordinaria_Diurna_Base: 0, Recargo_Noct_Base: 0, Recargo_Dom_Diurno_Base: 0, Recargo_Dom_Noct_Base: 0, HED: 0, HEN: 0, HEDD_F: 0, HEND_F: 0 },\n           totalPagoRecargosExtrasQuincena: 0,\n           salarioBaseQuincenal: SALARIO_BASE_QUINCENAL_FIJO,\n           pagoTotalConSalarioQuincena: SALARIO_BASE_QUINCENAL_FIJO, // Start with base\n           totalDuracionTrabajadaHorasQuincena: 0,\n           diasCalculados: 0,\n       };\n\n       // Add extras if they exist (from baseSummary)\n       if (baseSummary) {\n          finalSummary.pagoTotalConSalarioQuincena = baseSummary.pagoTotalConSalarioQuincena; // Base + Extras\n       }\n\n\n       // Conditionally add transport allowance to the final displayed 'Devengado Bruto'\n       // IMPORTANT: This happens *after* the initial summary calculation which might be used for IBC base.\n       // We will adjust the displayed bruto, but IBC calculation in ResultsDisplay needs care.\n       // Let's pass the separate auxTransporteAplicado value to ResultsDisplay.\n       const auxTransporteAplicado = incluyeAuxTransporte ? AUXILIO_TRANSPORTE_VALOR : 0;\n\n       // Add other income to the 'devengado bruto' concept\n       const totalOtrosIngresos = otrosIngresos.reduce((sum, item) => sum + item.monto, 0);\n\n       // Update the final 'total Devengado Bruto' shown in the summary - this is BEFORE deductions\n       // finalSummary.pagoTotalConSalarioQuincena += auxTransporteAplicado + totalOtrosIngresos;\n       // Let's keep pagoTotalConSalarioQuincena as Base + Extras for potential IBC use,\n       // and calculate the displayed total devengado in ResultsDisplay\n\n       return finalSummary; // Return the summary (potentially just base salary if no days)\n\n  }, [calculatedDays, incluyeAuxTransporte, otrosIngresos]); // Update when transport or income changes\n\n\n  // Find the data for the day being edited (for WorkdayForm)\n  const editingDayData = useMemo(() => {\n    if (!editingDayId) return undefined;\n    return calculatedDays.find(day => day.id === editingDayId)?.inputData;\n  }, [editingDayId, calculatedDays]);\n\n  // Function to handle \"Duplicar Turno Sig. Día\"\n  const handleDuplicateToNextDay = useCallback(async () => {\n    const lastDay = calculatedDays.length > 0 ? calculatedDays[calculatedDays.length - 1] : null;\n    if (!lastDay || !payPeriodStart || !payPeriodEnd) {\n        toast({\n            title: 'No se puede duplicar',\n            description: calculatedDays.length === 0 ? 'Agrega al menos un turno primero.' : 'Selecciona un período válido.',\n            variant: 'destructive',\n        });\n        return;\n    }\n\n    handleDayCalculationStart(); // Set loading state\n\n    const nextDayDate = addDays(lastDay.inputData.startDate, 1);\n\n    // Check if the next day is within the current pay period\n    if (nextDayDate > payPeriodEnd) {\n        setIsLoadingDay(false); // Stop loading\n        toast({\n            title: 'Fecha Fuera de Período',\n            description: `El siguiente día (${format(nextDayDate, 'PPP', { locale: es })}) está fuera del período quincenal seleccionado. No se puede duplicar.`,\n            variant: 'destructive',\n            duration: 5000,\n        });\n        return;\n    }\n\n    // Create the input data for the next day\n    const nextDayValues: WorkdayFormValues = {\n        ...lastDay.inputData,\n        startDate: nextDayDate,\n        // Reset 'endsNextDay' based on the new date and original times (calculateSingleWorkday will handle it correctly)\n        // The calculation logic itself will determine if the duplicated shift crosses midnight *relative to its new start date*\n        // We don't need to explicitly set endsNextDay here, the existing logic handles it.\n    };\n\n    // Generate a unique ID for the new duplicated day\n    const newDayId = `day_${Date.now()}_${Math.random().toString(36).substring(2, 7)}`;\n\n    try {\n        // Calculate the duplicated day\n        const result = await calculateSingleWorkday(nextDayValues, newDayId);\n        handleDayCalculationComplete(result); // Use the existing completion handler\n        if (!isCalculationError(result)) {\n             toast({\n                title: 'Turno Duplicado',\n                description: `Se duplicó el último turno para el ${format(nextDayDate, 'PPP', { locale: es })}.`,\n             });\n        }\n    } catch (error) {\n        console.error(\"Error duplicando el turno:\", error);\n        const errorMessage = error instanceof Error && error.message ? error.message : \"Hubo un error al duplicar el turno.\";\n        handleDayCalculationComplete({ error: errorMessage }); // Use existing error handling\n    } finally {\n        // Ensure loading state is turned off even if handled in handleDayCalculationComplete\n        setIsLoadingDay(false);\n    }\n}, [calculatedDays, payPeriodStart, payPeriodEnd, toast, handleDayCalculationStart, handleDayCalculationComplete]);\n\n\n  // Determine if form or summary should be disabled\n  const isFormDisabled = !employeeId || !payPeriodStart || !payPeriodEnd;\n  // Determine if summary section should be visible\n  const showSummary = quincenalSummary !== null;\n\n\n  // --- PDF Export Handler ---\n  const handleExportPDF = () => {\n      const currentSummary = quincenalSummary; // Capture current state\n     if (!currentSummary || !employeeId || !payPeriodStart || !payPeriodEnd) {\n         toast({\n             title: 'Datos Incompletos para Exportar',\n             description: 'Asegúrate de tener un colaborador, período, cálculo quincenal y ajustes completados.',\n             variant: 'destructive',\n         });\n         return;\n     }\n     try {\n          const auxTransporteAplicado = incluyeAuxTransporte ? AUXILIO_TRANSPORTE_VALOR : 0;\n         // Pass adjustments and transport flag/value to the export function\n        exportPayrollToPDF(\n            currentSummary,\n            employeeId,\n            payPeriodStart,\n            payPeriodEnd,\n            otrosIngresos, // Pass income list\n            otrasDeducciones, // Pass deduction list\n            auxTransporteAplicado // Pass the applied transport allowance value\n        );\n        toast({\n            title: 'PDF Exportado',\n            description: `Comprobante de nómina para ${employeeId} generado.`,\n        });\n     } catch (error) {\n        console.error(\"Error exportando PDF:\", error);\n         toast({\n             title: 'Error al Exportar PDF',\n             description: 'No se pudo generar el archivo PDF.',\n             variant: 'destructive',\n         });\n     }\n  };\n\n  // --- Bulk PDF Export Handler ---\n  const handleBulkExportPDF = () => {\n    const allPayrollDataToExport: SavedPayrollData[] = loadAllSavedPayrolls();\n\n    if (allPayrollDataToExport.length === 0) {\n        toast({\n            title: 'No Hay Datos para Exportar',\n            description: 'No se encontraron nóminas calculadas guardadas en el almacenamiento local.',\n            variant: 'default',\n        });\n        return;\n    }\n\n    try {\n        // Pass the full SavedPayrollData array which now includes adjustments and transport flag\n        exportAllPayrollsToPDF(allPayrollDataToExport);\n        toast({\n            title: 'Exportación Masiva Completa',\n            description: `Se generó un PDF con ${allPayrollDataToExport.length} comprobantes de nómina.`,\n        });\n    } catch (error) {\n        console.error(\"Error durante la exportación masiva de PDF:\", error);\n        toast({\n            title: 'Error en Exportación Masiva',\n            description: 'Ocurrió un error al intentar generar el PDF combinado.',\n            variant: 'destructive',\n        });\n    }\n  };\n\n   // --- Load Saved Payroll Handler ---\n   const handleLoadSavedPayroll = (payrollKey: string) => {\n     const payrollToLoad = savedPayrolls.find(p => p.key === payrollKey);\n     if (!payrollToLoad || typeof window === 'undefined') return;\n\n     // Set the employee ID and period from the loaded payroll\n     setEmployeeId(payrollToLoad.employeeId);\n     setPayPeriodStart(payrollToLoad.periodStart);\n     setPayPeriodEnd(payrollToLoad.periodEnd);\n     // Adjustment lists and transport flag will be loaded by the useEffect hook triggered by the above state changes\n\n     // The useEffect for loading data will automatically trigger and load the days, adjustments, and transport flag\n     setIsDataLoaded(false); // Ensure the effect runs\n\n     toast({\n        title: 'Nómina Cargada',\n        description: `Se cargaron los datos de ${payrollToLoad.employeeId} para el período ${format(payrollToLoad.periodStart, 'dd/MM/yy')} - ${format(payrollToLoad.periodEnd, 'dd/MM/yy')}.`,\n     });\n   };\n\n   // --- Delete Saved Payroll Handler ---\n   const handleDeleteSavedPayroll = () => {\n     if (!payrollToDeleteKey || typeof window === 'undefined') return;\n\n     try {\n        const payrollInfo = savedPayrolls.find(p => p.key === payrollToDeleteKey);\n        localStorage.removeItem(payrollToDeleteKey);\n        setSavedPayrolls(loadAllSavedPayrolls()); // Refresh the list\n        setPayrollToDeleteKey(null); // Close dialog\n        toast({\n            title: 'Nómina Guardada Eliminada',\n            description: payrollInfo\n                         ? `La nómina de ${payrollInfo.employeeId} (${format(payrollInfo.periodStart, 'dd/MM/yy')}) fue eliminada.`\n                         : 'La nómina seleccionada fue eliminada.',\n            variant: 'destructive',\n        });\n        // If the deleted payroll was the one currently loaded, clear the form/results\n        const currentKey = getStorageKey(employeeId, payPeriodStart, payPeriodEnd);\n        if (currentKey === payrollToDeleteKey) {\n            setCalculatedDays([]);\n            setOtrosIngresos([]); // Clear adjustments too\n            setOtrasDeducciones([]);\n            setIncluyeAuxTransporte(false); // Reset transport flag\n            setEmployeeId(''); // Optionally clear selection\n            setPayPeriodStart(undefined);\n            setPayPeriodEnd(undefined);\n        }\n\n     } catch (error) {\n         console.error(\"Error deleting saved payroll from localStorage:\", error);\n         toast({\n             title: 'Error al Eliminar',\n             description: 'No se pudo eliminar la nómina guardada.',\n             variant: 'destructive',\n         });\n         setPayrollToDeleteKey(null); // Still close dialog\n     }\n   };\n\n\n\n  return (\n    <main className=\"container mx-auto p-4 md:p-8 max-w-7xl\"> {/* Increased max-width */}\n      <h1 className=\"text-3xl font-bold text-center mb-8 text-foreground\">Calculadora de Nómina Quincenal</h1>\n\n      {/* Section for Employee ID and Pay Period Selection */}\n      <Card className=\"mb-8 shadow-lg bg-card\">\n          <CardHeader>\n              <CardTitle className=\"flex items-center gap-2 text-xl text-foreground\">\n                  <User className=\"h-5 w-5\" /> Selección de Colaborador y Período\n              </CardTitle>\n              <CardDescription>\n                  Ingresa el ID del colaborador y selecciona el período quincenal para cargar/guardar los turnos y calcular la nómina.\n              </CardDescription>\n          </CardHeader>\n          <CardContent className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-end\">\n              {/* Employee ID Input */}\n              <div className=\"space-y-2\">\n                  <Label htmlFor=\"employeeId\" className=\"text-foreground\">ID Colaborador</Label>\n                  <Input\n                      id=\"employeeId\"\n                      value={employeeId}\n                      onChange={(e) => setEmployeeId(e.target.value)}\n                      placeholder=\"Ej: 12345678\"\n                  />\n              </div>\n\n              {/* Pay Period Start Date */}\n              <div className=\"space-y-2\">\n                  <Label className=\"text-foreground\">Inicio Período</Label>\n                  <Popover>\n                      <PopoverTrigger asChild>\n                          <Button\n                              variant={'outline'}\n                              className={cn(\n                                  'w-full justify-start text-left font-normal',\n                                  !payPeriodStart && 'text-muted-foreground'\n                              )}\n                          >\n                              <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                              {payPeriodStart ? format(payPeriodStart, 'PPP', { locale: es }) : <span>Selecciona fecha</span>}\n                          </Button>\n                      </PopoverTrigger>\n                      <PopoverContent className=\"w-auto p-0\">\n                          <Calendar\n                              mode=\"single\"\n                              selected={payPeriodStart}\n                              onSelect={setPayPeriodStart}\n                              initialFocus\n                              locale={es}\n                          />\n                      </PopoverContent>\n                  </Popover>\n              </div>\n\n              {/* Pay Period End Date */}\n              <div className=\"space-y-2\">\n                  <Label className=\"text-foreground\">Fin Período</Label>\n                   <Popover>\n                      <PopoverTrigger asChild>\n                          <Button\n                              variant={'outline'}\n                              className={cn(\n                                  'w-full justify-start text-left font-normal',\n                                  !payPeriodEnd && 'text-muted-foreground'\n                              )}\n                          >\n                              <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                              {payPeriodEnd ? format(payPeriodEnd, 'PPP', { locale: es }) : <span>Selecciona fecha</span>}\n                          </Button>\n                      </PopoverTrigger>\n                      <PopoverContent className=\"w-auto p-0\">\n                          <Calendar\n                              mode=\"single\"\n                              selected={payPeriodEnd}\n                              onSelect={setPayPeriodEnd}\n                              initialFocus\n                              locale={es}\n                              disabled={(date) => payPeriodStart ? date < payPeriodStart : false} // Disable dates before start date\n                          />\n                      </PopoverContent>\n                  </Popover>\n              </div>\n\n                {/* Action Buttons for Load/Clear */}\n                <div className=\"md:col-span-3 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-2 mt-4\">\n                   <Button\n                     onClick={handleLoadData}\n                     className=\"w-full bg-primary hover:bg-primary/90 text-primary-foreground\" // Use theme color\n                     disabled={!employeeId || !payPeriodStart || !payPeriodEnd}>\n                       <FolderSync className=\"mr-2 h-4 w-4\" /> Cargar/Actualizar Turnos\n                   </Button>\n                   <AlertDialog>\n                        <AlertDialogTrigger asChild>\n                             {/* Disable clear if form disabled OR if all data is already clear */}\n                             <Button variant=\"outline\" className=\"w-full hover:bg-destructive hover:text-destructive-foreground\" disabled={isFormDisabled || (calculatedDays.length === 0 && otrosIngresos.length === 0 && otrasDeducciones.length === 0 && !incluyeAuxTransporte) }>\n                                <Eraser className=\"mr-2 h-4 w-4\" /> Limpiar Período Actual\n                            </Button>\n                        </AlertDialogTrigger>\n                       <AlertDialogContent>\n                         <AlertDialogHeader>\n                           <AlertDialogTitle>¿Limpiar Datos del Período?</AlertDialogTitle>\n                           <AlertDialogDescription>\n                              Esta acción eliminará todos los turnos y ajustes (incluido el estado de aux. transporte) guardados localmente para <strong>{employeeId || 'el colaborador seleccionado'}</strong> en el período del{' '}\n                              <strong>{payPeriodStart ? format(payPeriodStart, 'dd/MM/yy', {locale: es}) : '?'}</strong> al{' '}\n                              <strong>{payPeriodEnd ? format(payPeriodEnd, 'dd/MM/yy', {locale: es}) : '?'}</strong>. Esta acción no se puede deshacer.\n                           </AlertDialogDescription>\n                         </AlertDialogHeader>\n                         <AlertDialogFooter>\n                           <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                           <AlertDialogAction onClick={handleClearPeriodData} className=\"bg-destructive hover:bg-destructive/90\">\n                              Limpiar Datos\n                           </AlertDialogAction>\n                         </AlertDialogFooter>\n                       </AlertDialogContent>\n                   </AlertDialog>\n                   {/* Bulk Export Button */}\n                    <Button onClick={handleBulkExportPDF} variant=\"outline\" className=\"w-full lg:col-span-1\" disabled={savedPayrolls.length === 0}>\n                        <Library className=\"mr-2 h-4 w-4\" /> Exportar Todo (PDF)\n                    </Button>\n\n               </div>\n          </CardContent>\n      </Card>\n\n      {/* Main content area with 7 columns on large screens */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-7 gap-8 mb-8\">\n\n          {/* Column 1: Add/Edit Day Form - Takes 2 parts */}\n          <div className=\"lg:col-span-2\">\n              {/* Section for Adding/Editing a Single Day's Inputs */}\n              <Card className={`shadow-lg bg-card ${isFormDisabled ? 'opacity-50 pointer-events-none' : ''}`}>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2 text-xl text-foreground\">\n                    {editingDayId ? <Edit className=\"h-5 w-5\" /> : <PlusCircle className=\"h-5 w-5\" />}\n                    {editingDayId ? 'Editar Turno' : 'Agregar Turno'}\n                     {employeeId && payPeriodStart && payPeriodEnd && ` para ${employeeId} (${format(payPeriodStart, 'dd/MM')} - ${format(payPeriodEnd, 'dd/MM')})`}\n                  </CardTitle>\n                  <CardDescription>\n                    {isFormDisabled\n                      ? 'Selecciona un colaborador y un período para habilitar esta sección.'\n                      : editingDayId\n                      ? `Modifica la fecha y horas para el turno iniciado el ${format(editingDayData?.startDate ?? new Date(), 'PPP', { locale: es })} y guarda los cambios.`\n                      : 'Ingresa los detalles de un turno para incluirlo en el cálculo quincenal.'}\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                   {isFormDisabled ? (\n                        <div className=\"text-center text-muted-foreground italic py-4\">\n                            Selecciona colaborador y período arriba.\n                        </div>\n                   ) : (\n                      <WorkdayForm\n                        key={editingDayId || 'new'} // Re-mount form when switching between add/edit or editing different days\n                        onCalculationStart={handleDayCalculationStart}\n                        onCalculationComplete={handleDayCalculationComplete}\n                        isLoading={isLoadingDay}\n                        initialData={editingDayData} // Pass initial data if editing inputs\n                        existingId={editingDayId} // Pass the ID if editing inputs\n                        isDateCalculated={(date) => calculatedDays.some(day => isSameDay(day.inputData.startDate, date))} // Pass check function\n                      />\n                   )}\n                  {errorDay && (\n                    <p className=\"text-sm font-medium text-destructive mt-4\">{errorDay}</p>\n                  )}\n                </CardContent>\n              </Card>\n          </div>\n\n          {/* Column 2: Calculated Days List - Takes 3 parts */}\n          <div className=\"lg:col-span-3 space-y-8\">\n              {/* Section to Display Calculated Days and Allow Editing Results */}\n              {calculatedDays.length > 0 && (\n                <Card className=\"shadow-lg bg-card\">\n                  <CardHeader>\n                     <CardTitle className=\"flex items-center gap-2 text-xl text-foreground\">\n                       <Clock className=\"h-5 w-5\"/> Turnos Agregados ({calculatedDays.length})\n                         {employeeId && payPeriodStart && payPeriodEnd && ` para ${employeeId} (${format(payPeriodStart, 'dd/MM')} - ${format(payPeriodEnd, 'dd/MM')})`}\n                     </CardTitle>\n                    <CardDescription>Lista de los turnos incluidos en el cálculo actual. Puedes editar las horas calculadas o eliminar el turno.</CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <ul className=\"space-y-4 max-h-[60vh] overflow-y-auto pr-2\"> {/* Added max-height and scroll */}\n                      {calculatedDays // Already sorted by the update/add handler\n                        .map((day, index) => (\n                        <li key={day.id} className={`p-4 border rounded-lg shadow-sm transition-colors ${editingResultsId === day.id ? 'bg-blue-50 dark:bg-blue-900/20 border-blue-300' : 'bg-card'}`}> {/* Use bg-card */}\n                           <div className=\"flex items-start justify-between mb-3\">\n                             <div>\n                               <p className=\"font-semibold text-lg mb-1 text-foreground\">Turno {index + 1}</p>\n                               <div className=\"flex items-center text-sm text-muted-foreground gap-2 mb-1\">\n                                   <CalendarIcon className=\"h-4 w-4\" />\n                                   {format(day.inputData.startDate, 'PPPP', { locale: es })}\n                               </div>\n                               <div className=\"flex items-center text-sm text-muted-foreground gap-2\">\n                                   <Clock className=\"h-4 w-4\" />\n                                   {day.inputData.startTime} - {day.inputData.endTime}\n                                   {day.inputData.endsNextDay ? ' (+1d)' : ''}\n                               </div>\n                             </div>\n                             <div className=\"text-right flex-shrink-0 ml-4\">\n                                 <div className=\"text-sm text-muted-foreground mb-1\">Recargos/Extras:</div>\n                                 <div className=\"font-semibold text-accent text-lg flex items-center justify-end gap-1\">\n                                    {formatCurrency(day.pagoTotalRecargosExtras)}\n                                 </div>\n                                <div className=\"flex items-center justify-end gap-1 mt-2\">\n                                   {/* Button to edit INPUTS (date/time) */}\n                                   <Button variant=\"ghost\" size=\"icon\" onClick={() => handleEditDay(day.id)} title=\"Editar Fecha/Horas\" className={`h-8 w-8 ${editingDayId === day.id ? 'text-accent bg-accent/10' : ''}`} disabled={editingResultsId === day.id}>\n                                     <Edit className=\"h-4 w-4\" />\n                                   </Button>\n                                   {/* Button to edit RESULTS (hours) */}\n                                   <Button variant=\"ghost\" size=\"icon\" onClick={() => handleEditResults(day.id)} title=\"Editar Horas Calculadas\" className={`h-8 w-8 ${editingResultsId === day.id ? 'text-accent bg-accent/10' : ''}`} disabled={editingDayId === day.id}>\n                                      <PencilLine className=\"h-4 w-4\" />\n                                   </Button>\n                                   {/* Delete Button */}\n                                   <AlertDialog>\n                                      <AlertDialogTrigger asChild>\n                                         <Button variant=\"ghost\" size=\"icon\" className=\"text-destructive hover:text-destructive hover:bg-destructive/10 h-8 w-8\" onClick={() => setDayToDeleteId(day.id)} title=\"Eliminar turno\" disabled={editingDayId === day.id || editingResultsId === day.id}>\n                                            <Trash2 className=\"h-4 w-4\" />\n                                         </Button>\n                                      </AlertDialogTrigger>\n                                     <AlertDialogContent>\n                                       <AlertDialogHeader>\n                                         <AlertDialogTitle>¿Estás seguro?</AlertDialogTitle>\n                                         <AlertDialogDescription>\n                                            Esta acción no se puede deshacer. Esto eliminará permanentemente el cálculo para el turno iniciado el{' '}\n                                            {calculatedDays.find(d => d.id === dayToDeleteId)?.inputData?.startDate ? format(calculatedDays.find(d => d.id === dayToDeleteId)!.inputData.startDate, 'PPP', { locale: es }) : 'seleccionado'} de la quincena.\n                                         </AlertDialogDescription>\n                                       </AlertDialogHeader>\n                                       <AlertDialogFooter>\n                                         <AlertDialogCancel onClick={() => setDayToDeleteId(null)}>Cancelar</AlertDialogCancel>\n                                         <AlertDialogAction onClick={handleDeleteDay} className=\"bg-destructive hover:bg-destructive/90\">\n                                            Eliminar\n                                         </AlertDialogAction>\n                                       </AlertDialogFooter>\n                                     </AlertDialogContent>\n                                   </AlertDialog>\n                                 </div>\n                             </div>\n                          </div>\n\n                          {/* Detailed Hour Breakdown or Editing Inputs */}\n                           <Separator className=\"my-3\"/>\n                           {editingResultsId === day.id && editedHours ? (\n                               // EDITING MODE for Results\n                               <div className=\"space-y-3\">\n                                   <p className=\"text-sm font-medium text-foreground\">Editando horas calculadas:</p>\n                                   <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-x-4 gap-y-3\"> {/* Adjusted grid cols */}\n                                       {displayOrder.map(key => (\n                                           <div key={key} className=\"space-y-1\">\n                                               <Label htmlFor={`edit-hours-${day.id}-${key}`} className=\"text-xs text-muted-foreground\">\n                                                   {abbreviatedLabelMap[key] || key} {/* Use abbreviated label */}\n                                               </Label>\n                                               <Input\n                                                   id={`edit-hours-${day.id}-${key}`}\n                                                   type=\"number\" // Use number input\n                                                   step=\"0.01\" // Allow decimals\n                                                   min=\"0\"\n                                                   value={editedHours[key] ?? 0} // Use number value\n                                                   onChange={(e) => handleHourChange(e, key)}\n                                                   className=\"h-8 text-sm\"\n                                                   placeholder=\"0.00\"\n                                               />\n                                           </div>\n                                       ))}\n                                   </div>\n                                   <div className=\"flex justify-end gap-2 mt-3\">\n                                       <Button variant=\"ghost\" size=\"sm\" onClick={handleCancelResults}>\n                                           <X className=\"mr-1 h-4 w-4\" /> Cancelar\n                                       </Button>\n                                       <Button variant=\"default\" size=\"sm\" onClick={handleSaveResults}>\n                                           <Save className=\"mr-1 h-4 w-4\" /> Guardar Horas\n                                       </Button>\n                                   </div>\n                               </div>\n                           ) : (\n                               // DISPLAY MODE for Results\n                               <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-x-4 gap-y-1 text-sm\"> {/* Changed to 1 or 2 cols */}\n                                   {displayOrder.map(key => {\n                                       const hours = day.horasDetalladas[key];\n                                       if (hours > 0) {\n                                           return (\n                                               <div key={key} className=\"flex justify-between items-center space-x-1\">\n                                                   {/* Use abbreviatedLabelMap here for consistency */}\n                                                   <span className=\"text-muted-foreground truncate mr-1\">{abbreviatedLabelMap[key] || key}:</span>\n                                                   <span className=\"font-medium text-right text-foreground flex-shrink-0\">{formatHours(hours)}h</span>\n                                               </div>\n                                           );\n                                       }\n                                       return null;\n                                   })}\n                                   <div className=\"flex justify-between items-center col-span-full mt-1 pt-1 border-t border-dashed\">\n                                       <span className=\"text-muted-foreground font-medium\">Total Horas Trabajadas:</span>\n                                       <span className=\"font-semibold text-right text-foreground\">{formatHours(day.duracionTotalTrabajadaHoras)}h</span>\n                                   </div>\n                               </div>\n                           )}\n                        </li>\n                      ))}\n                    </ul>\n                     {/* Replace \"Agregar Otro Turno\" with \"Duplicar Turno Sig. Día\" */}\n                     <Button\n                        variant=\"outline\"\n                        onClick={handleDuplicateToNextDay}\n                        className=\"mt-6 w-full md:w-auto\"\n                        disabled={isFormDisabled || isLoadingDay || calculatedDays.length === 0} // Disable if form disabled, loading, or no days exist\n                      >\n                        {isLoadingDay ? (\n                          <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                        ) : (\n                          <CopyPlus className=\"mr-2 h-4 w-4\" />\n                        )}\n                        Duplicar Turno Sig. Día\n                      </Button>\n                  </CardContent>\n                </Card>\n              )}\n\n              {/* Placeholder if no days are calculated yet */}\n              {calculatedDays.length === 0 && !editingDayId && !isFormDisabled && (\n                 <Card className=\"text-center p-8 border-dashed mt-8 bg-card\">\n                    <CardHeader>\n                        <CardTitle className=\"text-xl text-foreground\">Comienza a Calcular</CardTitle>\n                        <CardDescription>Agrega el primer turno trabajado para {employeeId} en este período para iniciar el cálculo de la nómina quincenal.</CardDescription>\n                    </CardHeader>\n                 </Card>\n              )}\n               {/* Placeholder if form is disabled */}\n               {isFormDisabled && calculatedDays.length === 0 && ( // Only show if no days loaded AND form disabled\n                 <Card className=\"text-center p-8 border-dashed mt-8 bg-muted/50\">\n                    <CardHeader>\n                        <CardTitle className=\"text-xl text-foreground\">Selección Pendiente</CardTitle>\n                        <CardDescription>Por favor, ingresa un ID de colaborador y selecciona un período quincenal para empezar a calcular la nómina.</CardDescription>\n                    </CardHeader>\n                 </Card>\n              )}\n          </div>\n\n          {/* Column 3: Saved Payrolls List - Takes 2 parts */}\n          <div className=\"lg:col-span-2\">\n               {/* Section to Display Saved Payrolls */}\n               <SavedPayrollList\n                   payrolls={savedPayrolls}\n                   onLoad={handleLoadSavedPayroll}\n                   onDelete={(key) => setPayrollToDeleteKey(key)} // Trigger confirmation dialog\n                   onBulkExport={handleBulkExportPDF}\n               />\n\n\n                {/* AlertDialog for Deleting Saved Payroll */}\n                <AlertDialog open={!!payrollToDeleteKey} onOpenChange={(open) => !open && setPayrollToDeleteKey(null)}>\n                   <AlertDialogContent>\n                     <AlertDialogHeader>\n                       <AlertDialogTitle>¿Eliminar Nómina Guardada?</AlertDialogTitle>\n                       <AlertDialogDescription>\n                          Esta acción eliminará permanentemente la nómina guardada para{' '}\n                          <strong>{savedPayrolls.find(p => p.key === payrollToDeleteKey)?.employeeId}</strong> del período{' '}\n                          <strong>\n                            {savedPayrolls.find(p => p.key === payrollToDeleteKey)?.periodStart\n                                ? format(savedPayrolls.find(p => p.key === payrollToDeleteKey)!.periodStart, 'dd/MM/yy', { locale: es })\n                                : '?'}\n                          </strong> al <strong>\n                            {savedPayrolls.find(p => p.key === payrollToDeleteKey)?.periodEnd\n                                ? format(savedPayrolls.find(p => p.key === payrollToDeleteKey)!.periodEnd, 'dd/MM/yy', { locale: es })\n                                : '?'}\n                          </strong>. No se puede deshacer.\n                       </AlertDialogDescription>\n                     </AlertDialogHeader>\n                     <AlertDialogFooter>\n                       <AlertDialogCancel onClick={() => setPayrollToDeleteKey(null)}>Cancelar</AlertDialogCancel>\n                       <AlertDialogAction onClick={handleDeleteSavedPayroll} className=\"bg-destructive hover:bg-destructive/90\">\n                          Eliminar Nómina\n                       </AlertDialogAction>\n                     </AlertDialogFooter>\n                   </AlertDialogContent>\n               </AlertDialog>\n          </div>\n\n      </div> {/* End of 7-column grid */}\n\n       {/* Section for Quincenal Summary - Moved outside grid, takes full width */}\n       {showSummary && (\n         <Card className=\"shadow-lg mt-8 bg-card\"> {/* Full width */}\n            <CardHeader className=\"flex flex-row items-center justify-between\">\n               <div>\n                 <CardTitle className=\"flex items-center gap-2 text-xl text-foreground\"><Calculator className=\"h-5 w-5\" /> Resumen Quincenal</CardTitle>\n                 <CardDescription>Resultados agregados para los {quincenalSummary?.diasCalculados ?? 0} turnos calculados de {employeeId} ({payPeriodStart ? format(payPeriodStart, 'dd/MM') : ''} - {payPeriodEnd ? format(payPeriodEnd, 'dd/MM') : ''}).</CardDescription>\n               </div>\n                <Button onClick={handleExportPDF} variant=\"secondary\" disabled={!quincenalSummary || !employeeId || !payPeriodStart || !payPeriodEnd}>\n                    <FileDown className=\"mr-2 h-4 w-4\" /> Exportar PDF\n                </Button>\n            </CardHeader>\n            <CardContent>\n               <ResultsDisplay\n                   results={quincenalSummary} // Pass the potentially adjusted summary\n                   error={null}\n                   isLoading={false}\n                   isSummary={true}\n                   // Pass adjustment data and handlers\n                   otrosIngresos={otrosIngresos}\n                   otrasDeducciones={otrasDeducciones}\n                   onAddIngreso={() => setIsIncomeModalOpen(true)}\n                   onAddDeduccion={() => setIsDeductionModalOpen(true)}\n                   onDeleteIngreso={handleDeleteIngreso}\n                   onDeleteDeduccion={handleDeleteDeduccion}\n                   // Pass transportation allowance state and handler\n                   incluyeAuxTransporte={incluyeAuxTransporte}\n                   onToggleTransporte={handleToggleTransporte}\n                   auxTransporteValor={AUXILIO_TRANSPORTE_VALOR} // Pass the value\n                />\n            </CardContent>\n         </Card>\n       )}\n\n      {/* Adjustment Modals */}\n      <AdjustmentModal\n          type=\"ingreso\"\n          isOpen={isIncomeModalOpen}\n          onClose={() => setIsIncomeModalOpen(false)}\n          onSave={handleAddIngreso}\n          // Pass initialData if editing an income item\n          // initialData={editingAdjustment?.type === 'ingreso' ? editingAdjustment.item : undefined}\n      />\n       <AdjustmentModal\n          type=\"deduccion\"\n          isOpen={isDeductionModalOpen}\n          onClose={() => setIsDeductionModalOpen(false)}\n          onSave={handleAddDeduccion}\n          // Pass initialData if editing a deduction item\n          // initialData={editingAdjustment?.type === 'deduccion' ? editingAdjustment.item : undefined}\n       />\n\n\n      <Toaster />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA,qPAAyJ,qCAAqC;AAE9L,kNAA8C,wBAAwB;AACtE;AACA;AACA;AACA;AACA,uOAA+C,iDAAiD;AAChG,uOAA+C,iDAAiD;AAChG,mWAAqO,oCAAoC;AAAzQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0QAAgH,gBAAgB;AAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAWA;AACA;AACA;AACA,yOAAmD,mCAAmC;AACtF,+NAAiF,8BAA8B;AAC/G,iOAAiE,yCAAyC;AAC1G,8PAAoE,2BAA2B;AAC/F,uPAAiE,iCAAiC;;;AArClG;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,YAAY;AACZ,MAAM,8BAA8B,QAAQ,uBAAuB;AACnE,MAAM,2BAA2B,QAAQ,6CAA6C;AAEtF,sCAAsC;AACtC,MAAM,gBAAgB,CAAC,YAAoB,aAA+B;IACtE,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,WAAW,OAAO;IACtD,2CAA2C;IAC3C,IAAI,MAAM,YAAY,OAAO,OAAO,MAAM,UAAU,OAAO,KAAK,OAAO;IACvE,IAAI;QACA,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,aAAa;QACrC,MAAM,SAAS,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,WAAW;QACjC,0DAA0D;QAC1D,MAAM,iBAAiB,WAAW,OAAO,CAAC,mBAAmB;QAC7D,OAAO,CAAC,QAAQ,EAAE,eAAe,CAAC,EAAE,SAAS,CAAC,EAAE,QAAQ;IAC5D,EAAE,OAAO,GAAG;QACR,QAAQ,KAAK,CAAC,+CAA+C;QAC7D,OAAO;IACX;AACJ;AAGA,kFAAkF;AAClF,MAAM,kBAAkB,CAAC;IACrB,IAAI,CAAC,UAAU,OAAO;QAAE,MAAM,EAAE;QAAE,QAAQ,EAAE;QAAE,YAAY,EAAE;QAAE,kBAAkB;IAAM;IACtF,IAAI;QACA,mEAAmE;QACnE,MAAM,eAAe,KAAK,KAAK,CAAC;QAOhC,wCAAwC;QACxC,MAAM,cAAc,CAAC,aAAa,cAAc,IAAI,EAAE,EAAE,GAAG,CAAC,CAAA,MAAO,CAAC;gBAChE,GAAG,GAAG;gBACN,WAAW;oBACP,GAAG,IAAI,SAAS;oBAChB,WAAW,IAAI,SAAS,CAAC,SAAS,IAAI,OAAO,IAAI,SAAS,CAAC,SAAS,KAAK,WAC3D,CAAA,GAAA,2IAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,CAAC,SAAS,IAC/B,IAAI,SAAS,CAAC,SAAS,YAAY,OAAO,IAAI,SAAS,CAAC,SAAS,GAAG,IAAI;gBAC3F;YACJ,CAAC;QAED,kEAAkE;QAClE,MAAM,aAAa,MAAM,OAAO,CAAC,aAAa,kBAAkB,IAAI,aAAa,kBAAkB,GAAG,EAAE;QACxG,MAAM,gBAAgB,MAAM,OAAO,CAAC,aAAa,qBAAqB,IAAI,aAAa,qBAAqB,GAAG,EAAE;QACjH,MAAM,mBAAmB,OAAO,aAAa,oBAAoB,KAAK,YAAY,aAAa,oBAAoB,GAAG,OAAO,8BAA8B;QAE3J,OAAO;YAAE,MAAM;YAAa,QAAQ;YAAY,YAAY;YAAe;QAAiB;IAEhG,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,0CAA0C;QACxD,OAAO;YAAE,MAAM,EAAE;YAAE,QAAQ,EAAE;YAAE,YAAY,EAAE;YAAE,kBAAkB;QAAM,GAAG,iCAAiC;IAC/G;AACJ;AAEA,qCAAqC;AACrC,MAAM,kBAAkB;AAExB,4CAA4C;AAC5C,MAAM,uBAAuB;IACzB,uCAAmC;;IAAS,EAAE,mBAAmB;IAEjE,MAAM,gBAAoC,EAAE;IAC5C,IAAI;QACA,IAAK,IAAI,IAAI,GAAG,IAAI,aAAa,MAAM,EAAE,IAAK;YAC1C,MAAM,MAAM,aAAa,GAAG,CAAC;YAC7B,IAAI,OAAO,IAAI,UAAU,CAAC,aAAa;gBACnC,MAAM,QAAQ,IAAI,KAAK,CAAC;gBACxB,IAAI,OAAO;oBACP,MAAM,aAAa,KAAK,CAAC,EAAE;oBAC3B,MAAM,WAAW,KAAK,CAAC,EAAE;oBACzB,MAAM,SAAS,KAAK,CAAC,EAAE;oBACvB,MAAM,YAAY,CAAA,GAAA,wJAAA,CAAA,QAAY,AAAD,EAAE,UAAU,cAAc,IAAI;oBAC3D,MAAM,UAAU,CAAA,GAAA,wJAAA,CAAA,QAAY,AAAD,EAAE,QAAQ,cAAc,IAAI;oBAEvD,uBAAuB;oBACvB,IAAI,CAAC,cAAc,MAAM,UAAU,OAAO,OAAO,MAAM,QAAQ,OAAO,KAAK;wBACvE,QAAQ,IAAI,CAAC,CAAC,4CAA4C,EAAE,KAAK;wBACjE;oBACJ;oBAEA,MAAM,aAAa,aAAa,OAAO,CAAC;oBACvC,yCAAyC;oBAC1C,MAAM,EAAE,MAAM,UAAU,EAAE,QAAQ,YAAY,EAAE,YAAY,gBAAgB,EAAE,kBAAkB,sBAAsB,EAAE,GAAG,gBAAgB;oBAE3I,IAAI,WAAW,MAAM,GAAG,KAAK,aAAa,MAAM,GAAG,KAAK,iBAAiB,MAAM,GAAG,GAAG;wBACjF,wCAAwC;wBACxC,MAAM,UAAU,CAAA,GAAA,iIAAA,CAAA,4BAAyB,AAAD,EAAE,YAAY;wBACtD,+DAA+D;wBAC/D,6DAA6D;wBAE5D,MAAM,mBAAqC;4BACxC,KAAK;4BACL,YAAY;4BACZ,aAAa;4BACb,WAAW;4BACX,yEAAyE;4BACzE,SAAS,WAAW;gCAChB,sBAAsB;oCAAE,uBAAuB;oCAAG,mBAAmB;oCAAG,yBAAyB;oCAAG,uBAAuB;oCAAG,KAAK;oCAAG,KAAK;oCAAG,QAAQ;oCAAG,QAAQ;gCAAE;gCACnK,oBAAoB;oCAAE,uBAAuB;oCAAG,mBAAmB;oCAAG,yBAAyB;oCAAG,uBAAuB;oCAAG,KAAK;oCAAG,KAAK;oCAAG,QAAQ;oCAAG,QAAQ;gCAAE;gCACjK,iCAAiC;gCACjC,sBAAsB;gCACtB,6BAA6B;gCAC7B,qCAAqC;gCACrC,gBAAgB;4BACpB;4BACA,oBAAoB;4BACpB,uBAAuB;4BACvB,sBAAsB;4BACtB,WAAW,UAAU,CAAC,EAAE,EAAE,WAAW,YAAY,IAAI,KAAK,UAAU,CAAC,EAAE,CAAC,SAAS,CAAC,SAAS,IAAI,IAAI;wBACtG;wBAED,cAAc,IAAI,CAAC;oBAEvB;gBACJ;YACJ;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qDAAqD;IACnE,uCAAuC;IAC3C;IACA,yDAAyD;IACzD,OAAO,cAAc,IAAI,CAAC,CAAC,GAAG;QAC3B,MAAM,WAAW,EAAE,WAAW,CAAC,OAAO,KAAK,EAAE,WAAW,CAAC,OAAO;QAChE,IAAI,aAAa,GAAG,OAAO;QAC3B,OAAO,EAAE,UAAU,CAAC,aAAa,CAAC,EAAE,UAAU;IACjD;AACJ;AAMe,SAAS;;IACpB,gBAAgB;IAChB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACrD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;yBAAoB;YACnE,MAAM,MAAM,IAAI;YAChB,OAAO,IAAI,OAAO,MAAM,KAAK,CAAA,GAAA,+IAAA,CAAA,eAAY,AAAD,EAAE,OAAO,CAAA,GAAA,0IAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,+IAAA,CAAA,eAAY,AAAD,EAAE,MAAM;QAChF;;IACA,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;yBAAoB;YAC9D,MAAM,MAAM,IAAI;YAChB,IAAI,IAAI,OAAO,MAAM,IAAI;gBACtB,OAAO,CAAA,GAAA,0IAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,+IAAA,CAAA,eAAY,AAAD,EAAE,MAAM;YACrC,OAAO;gBACJ,OAAO,CAAA,GAAA,6IAAA,CAAA,aAAU,AAAD,EAAE;YACrB;QACL;;IACA,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAwB,EAAE;IAC7E,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,OAAO,iCAAiC;IACxG,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,OAAO,+BAA+B;IAC9G,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgD,OAAO,8BAA8B;IAClI,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW,QAAQ,2DAA2D;IAC7H,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACxD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW,QAAQ,iDAAiD;IACnH,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB,EAAE,GAAG,2CAA2C;IACvH,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,OAAO,qCAAqC;IAExH,wBAAwB;IACxB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB,EAAE;IACvE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB,EAAE;IAC7E,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,6CAA6C;IAC7C,oIAAoI;IAEpI,qCAAqC;IACrC,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAG1E,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEzB,yCAAyC;IAEzC,2CAA2C;IAC3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACN,iBAAiB;QACrB;yBAAG,EAAE;IAEL,mFAAmF;IACnF,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACN,wCAAmC;gBAC/B,MAAM,aAAa,cAAc,YAAY,gBAAgB;gBAC7D,IAAI,YAAY;oBACZ,QAAQ,GAAG,CAAC,CAAC,uCAAuC,EAAE,YAAY;oBAClE,MAAM,aAAa,aAAa,OAAO,CAAC;oBACxC,4CAA4C;oBAC5C,MAAM,EAAE,MAAM,UAAU,EAAE,QAAQ,YAAY,EAAE,YAAY,gBAAgB,EAAE,kBAAkB,sBAAsB,EAAE,GAAG,gBAAgB;oBAC3I,kBAAkB;oBAClB,iBAAiB,eAAe,0BAA0B;oBAC1D,oBAAoB,mBAAmB,6BAA6B;oBACpE,wBAAwB,yBAAyB,gCAAgC;oBACjF,gBAAgB,OAAO,qCAAqC;oBAC3D,yDAAyD;oBACzD,IAAI,cAAc,kBAAkB,cAAc;wBAC9C,MAAM;4BACF,OAAO,aAAa,mBAAmB;4BACvC,aAAa,aAAa,CAAC,qDAAqD,EAAE,WAAW,CAAC,CAAC,GAAG,CAAC,uCAAuC,EAAE,WAAW,iBAAiB,CAAC;4BACzK,SAAS;wBACb;oBACJ;gBACL,OAAO;oBACH,gEAAgE;oBAChE,kBAAkB,EAAE;oBACpB,iBAAiB,EAAE;oBACnB,oBAAoB,EAAE;oBACtB,wBAAwB,QAAQ,uBAAuB;oBACvD,gBAAgB,OAAO,8CAA8C;oBACpE,IAAI,cAAc,kBAAkB,cAAc;oBAC/C,yDAAyD;oBAC5D;gBACL;gBACA,oDAAoD;gBACnD,gBAAgB;gBAChB,oBAAoB;gBACpB,kCAAkC;gBAClC,qBAAqB;gBACrB,wBAAwB;YAC7B;QACJ;yBAAG;QAAC;QAAY;QAAgB;QAAc;KAAM,GAAG,gCAAgC;IAEvF,mKAAmK;IACnK,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACN,IAAI,aAAkB,eAAe,cAAc;gBAC/C,MAAM,aAAa,cAAc,YAAY,gBAAgB;gBAC5D,wFAAwF;gBACzF,IAAI,cAAc,CAAC,eAAe,MAAM,GAAG,KAAK,cAAc,MAAM,GAAG,KAAK,iBAAiB,MAAM,GAAG,KAAK,oBAAoB,GAAG;oBAC9H,IAAI;wBACC,QAAQ,GAAG,CAAC,CAAC,8CAA8C,EAAE,qBAAqB,eAAe,EAAE,YAAY;wBAC/G,MAAM,aAAa;4BACf,gBAAgB;4BAChB,oBAAoB;4BACpB,uBAAuB;4BACvB,sBAAsB;wBAC1B;wBACD,aAAa,OAAO,CAAC,YAAY,KAAK,SAAS,CAAC;wBAC/C,mDAAmD;wBACnD,iBAAiB;oBACtB,EAAE,OAAO,OAAO;wBACZ,QAAQ,KAAK,CAAC,0CAA0C;wBACxD,MAAM;4BACF,OAAO;4BACP,aAAa;4BACb,SAAS;wBACb;oBACJ;gBACJ,8EAA8E;gBAC9E,OAAO,IAAI,cAAc,eAAe,MAAM,KAAK,KAAK,cAAc,MAAM,KAAK,KAAK,iBAAiB,MAAM,KAAK,KAAK,CAAC,sBAAsB;oBAC1I,aAAa,UAAU,CAAC;oBACxB,QAAQ,GAAG,CAAC,CAAC,MAAM,EAAE,WAAW,+DAA+D,CAAC;oBAChG,oCAAoC;oBACpC,iBAAiB;gBACrB;YACJ;QACJ;yBAAG;QAAC;QAAgB;QAAe;QAAkB;QAAsB;QAAY;QAAgB;QAAc;QAAc;KAAM,GAAG,2CAA2C;IAGzL,yBAAyB;IAEvB,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;4CAAE;YAC/B,iGAAiG;YACjG,2EAA2E;YAC3E,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,cAAc;gBAChD,MAAM;oBACF,OAAO;oBACP,aAAa;oBACb,SAAS;gBACb;gBACA;YACL;YACA,uEAAuE;YACvE,gEAAgE;YAChE,gBAAgB,QAAQ,qBAAqB;YAC7C,+EAA+E;YAC9E,MAAM;gBACF,OAAO;gBACP,aAAa,CAAC,+BAA+B,EAAE,WAAW,CAAC,CAAC;YAChE;YACC,+DAA+D;YAChE;oDAAc,CAAA,IAAK;;YACnB;oDAAkB,CAAA,IAAK,IAAI,IAAI,KAAK,EAAE,OAAO,MAAM;;YACnD;oDAAgB,CAAA,IAAK,IAAI,IAAI,KAAK,EAAE,OAAO,MAAM;;QAEtD;2CAAG;QAAC;QAAY;QAAgB;QAAc;KAAM;IAEpD,MAAM,wBAAwB;QACzB,MAAM,aAAa,cAAc,YAAY,gBAAgB;QAC7D,IAAI,cAAc,aAAkB,aAAa;YAC9C,aAAa,UAAU,CAAC;QAC3B;QACA,kBAAkB,EAAE,GAAG,0BAA0B;QACjD,iBAAiB,EAAE,GAAG,oBAAoB;QAC1C,oBAAoB,EAAE;QACtB,wBAAwB,QAAQ,uBAAuB;QACvD,gBAAgB;QAChB,oBAAoB;QACpB,eAAe;QACf,iBAAiB,yBAAyB,qBAAqB;QAC/D,MAAM;YACH,OAAO;YACP,aAAa,CAAC,+FAA+F,EAAE,WAAW,iBAAiB,CAAC;YAC5I,SAAS;QACZ;IACL;IAGA,+EAA+E;IAC/E,MAAM,+BAA+B,CAAC;QAClC,gBAAgB;QAChB,IAAI,CAAA,GAAA,wHAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO;YAC1B,2EAA2E;YAC3E,MAAM,eAAe,KAAK,KAAK,EAAE,SAAS,KAAK,2CAA2C;eACpF,KAAK,KAAK,CAAC,yBAAyB;eACpC,CAAC,kBAAkB,EAAE,KAAK,KAAK,IAAI,0BAA0B;YACnE,YAAY;YACZ,MAAM;gBACF,OAAO;gBACP,aAAa;gBACb,SAAS;YACb;QACJ,OAAO;YACF,6EAA6E;YAC9E,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,KAAK,SAAS,CAAC,SAAS,GAAG,kBAAkB,KAAK,SAAS,CAAC,SAAS,GAAG,cAAc;gBAC1H,YAAY,CAAC,oBAAoB,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,SAAS,CAAC,SAAS,EAAE,OAAO;oBAAE,QAAQ,+IAAA,CAAA,KAAE;gBAAC,GAAG,sCAAsC,CAAC;gBAClI,MAAM;oBACF,OAAO;oBACP,aAAa,CAAC,aAAa,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,SAAS,CAAC,SAAS,EAAE,OAAO;wBAAE,QAAQ,+IAAA,CAAA,KAAE;oBAAC,GAAG,iDAAiD,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,gBAAiB,SAAS,GAAG,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,cAAe,cAAc,gBAAgB,CAAC;oBACnO,SAAS;oBACT,UAAU;gBACd;gBACA,6CAA6C;gBAC7C,gBAAgB,OAAO,4BAA4B;gBACnD,QAAQ,kBAAkB;YAC9B;YAEA,YAAY;YACZ,kBAAkB,CAAC;gBACf,MAAM,gBAAgB,SAAS,SAAS,CAAC,CAAC,MAAQ,IAAI,EAAE,KAAK,KAAK,EAAE;gBACpE,IAAI;gBACJ,IAAI,gBAAgB,CAAC,GAAG;oBACpB,cAAc;2BAAI;qBAAS;oBAC3B,WAAW,CAAC,cAAc,GAAG;gBACjC,OAAO;oBACH,cAAc;2BAAI;wBAAU;qBAAK;gBACrC;gBACA,kCAAkC;gBAClC,OAAO,YAAY,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,SAAS,CAAC,SAAS,CAAC,OAAO,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,OAAO;YACrG;YACA,gBAAgB,OAAO,4BAA4B;YACnD,MAAM;gBACF,OAAO,CAAC,MAAM,EAAE,eAAe,gBAAgB,YAAY;gBAC3D,aAAa,CAAC,WAAW,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,SAAS,CAAC,SAAS,EAAE,OAAO;oBAAE,QAAQ,+IAAA,CAAA,KAAE;gBAAC,GAAG,CAAC,EAAE,eAAe,gCAAgC,2BAA2B;YACpK;QACJ;IACJ;IAGF,MAAM,4BAA4B;QAChC,gBAAgB;QAChB,YAAY;IACd;IAEA,0EAA0E;IAC1E,MAAM,gBAAgB,CAAC;QACrB,oBAAoB,OAAO,mCAAmC;QAC9D,eAAe;QACf,gBAAgB;IAClB;IAEC,0DAA0D;IAC1D,MAAM,oBAAoB,CAAC;QACzB,MAAM,YAAY,eAAe,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;QACxD,IAAI,WAAW;YACb,gBAAgB,OAAO,iCAAiC;YACxD,oBAAoB;YACpB,eAAe;gBAAE,GAAG,UAAU,eAAe;YAAC,IAAI,0BAA0B;QAC9E;IACF;IAEA,6DAA6D;IAC7D,MAAM,mBAAmB,CAAC,GAAkC;QAC1D,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;QAC5B,2DAA2D;QAC3D,IAAI,UAAU,MAAM,cAAc,IAAI,CAAC,QAAQ;YAC5C,eAAe,CAAA;gBACX,IAAI,CAAC,MAAM,OAAO;gBAClB,2EAA2E;gBAC3E,gCAAgC;gBAChC,MAAM,eAAe,UAAU,KAAK,IAAI,WAAW;gBACnD,OAAO;oBACH,GAAG,IAAI;oBACP,CAAC,IAAI,EAAE,MAAM,gBAAgB,IAAI,aAAa,8BAA8B;gBAChF;YACJ;QACH;IACF;IAGA,kCAAkC;IACjC,MAAM,oBAAoB;QACtB,IAAI,CAAC,oBAAoB,CAAC,aAAa;QAEvC,kBAAkB,CAAA;YACd,MAAM,QAAQ,SAAS,SAAS,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;YACnD,IAAI,UAAU,CAAC,GAAG,OAAO,UAAU,oBAAoB;YAEvD,MAAM,cAAc;mBAAI;aAAS;YACjC,MAAM,cAAc,WAAW,CAAC,MAAM;YAEtC,6CAA6C;YAC7C,IAAI,6BAA6B;YACjC,MAAM,mBAAwD;gBAAE,GAAG,YAAY,aAAa;YAAC,GAAG,gCAAgC;YAEhI,IAAI,0BAA0B;YAE9B,IAAK,MAAM,OAAO,YAAa;gBAC3B,MAAM,WAAW;gBACjB,MAAM,QAAQ,WAAW,CAAC,SAAS;gBACnC,2BAA2B,OAAO,sBAAsB;gBAExD,IAAI,aAAa,yBAAyB;oBACtC,MAAM,YAAY,qIAAA,CAAA,UAAO,CAAC,SAAS,IAAI;oBACvC,MAAM,gBAAgB,QAAQ;oBAC9B,gBAAgB,CAAC,SAAS,GAAG;oBAC7B,8BAA8B;gBAClC,OAAO;oBACH,+EAA+E;oBAC/E,gBAAgB,CAAC,SAAS,GAAG;gBACjC;YACJ;YAGA,sEAAsE;YACtE,WAAW,CAAC,MAAM,GAAG;gBACjB,GAAG,WAAW;gBACd,iBAAiB;gBACjB,eAAe;gBACf,yBAAyB;gBACzB,qBAAqB;gBACrB,6BAA6B;YACjC;YAEA,OAAO,YAAY,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,SAAS,CAAC,SAAS,CAAC,OAAO,KAAK,EAAE,SAAS,CAAC,SAAS,CAAC,OAAO,KAAK,uBAAuB;QACjI;QAEA,MAAM;YACF,OAAO;YACP,aAAa,CAAC,yDAAyD,CAAC;QAC5E;QAEA,oBAAoB;QACpB,oBAAoB;QACpB,eAAe;IACnB;IAGF,qCAAqC;IACrC,MAAM,sBAAsB;QAC1B,oBAAoB;QACpB,eAAe;IACjB;IAEA,mCAAmC;IAClC,MAAM,mBAAmB,CAAC;QACxB,iBAAiB;IACjB,uEAAuE;IACzE;IAED,yDAAyD;IACxD,MAAM,kBAAkB;QACtB,IAAI,CAAC,eAAe;QACpB,kBAAkB,CAAC,WAAa,SAAS,MAAM,CAAC,CAAC,MAAQ,IAAI,EAAE,KAAK;QACpE,MAAM;YACJ,OAAO;YACP,aAAa;YACb,SAAS;QACX;QACA,iBAAiB,OAAO,mBAAmB;QAC3C,6EAA6E;QAC7E,IAAI,iBAAiB,eAAe,gBAAgB;QACpD,IAAI,qBAAqB,eAAe;YACrC,oBAAoB;YACpB,eAAe;QAClB;IACF;IAEA,8BAA8B;IAC9B,MAAM,mBAAmB,CAAC;QACrB,MAAM,UAA0B;YAC5B,GAAG,IAAI;YACP,IAAI,CAAC,QAAQ,EAAE,KAAK,GAAG,IAAI;QAC/B;QACA,iBAAiB,CAAA,OAAQ;mBAAI;gBAAM;aAAQ;QAC3C,MAAM;YAAE,OAAO;YAAoB,aAAa,GAAG,KAAK,WAAW,IAAI,UAAU,EAAE,EAAE,CAAA,GAAA,2IAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,KAAK,GAAG;QAAC;IACvH;IAEA,MAAM,qBAAqB,CAAC;QACtB,MAAM,UAA0B;YAC5B,GAAG,IAAI;YACP,IAAI,CAAC,UAAU,EAAE,KAAK,GAAG,IAAI;QACjC;QACA,oBAAoB,CAAA,OAAQ;mBAAI;gBAAM;aAAQ;QAC9C,MAAM;YAAE,OAAO;YAAsB,aAAa,GAAG,KAAK,WAAW,IAAI,YAAY,EAAE,EAAE,CAAA,GAAA,2IAAA,CAAA,iBAAc,AAAD,EAAE,KAAK,KAAK,GAAG;YAAE,SAAS;QAAU,IAAI,sBAAsB;IAC1K;IAEA,MAAM,sBAAsB,CAAC;QACxB,iBAAiB,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;QACzD,MAAM;YAAE,OAAO;YAAqB,SAAS;QAAc;IAChE;IAEA,MAAM,wBAAwB,CAAC;QAC1B,oBAAoB,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK;QAC5D,MAAM;YAAE,OAAO;YAAuB,SAAS;QAAc;IAClE;IAEC,2CAA2C;IAC3C,MAAM,yBAAyB;QAC3B,wBAAwB,CAAA,OAAQ,CAAC;QACjC,MAAM;YACF,OAAO,CAAC,sBAAsB,EAAE,CAAC,uBAAuB,aAAa,eAAe;YACpF,aAAa,CAAC,uBACC,CAAC,UAAU,EAAE,CAAA,GAAA,2IAAA,CAAA,iBAAc,AAAD,EAAE,0BAA0B,oBAAoB,CAAC,GAC3E;QACnB;IACJ;IAGF,4EAA4E;IAC5E,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;0CAAE;YAC5B,yEAAyE;YACxE,IAAI,eAAe,MAAM,KAAK,KAAK,CAAC,wBAAwB,cAAc,MAAM,KAAK,KAAK,iBAAiB,MAAM,KAAK,GAAG,OAAO;YAChI,gEAAgE;YACjE,MAAM,cAAc,CAAA,GAAA,iIAAA,CAAA,4BAAyB,AAAD,EAAE,gBAAgB;YAE7D,kFAAkF;YACnF,MAAM,eAA4C,eAAe;gBAC7D,sBAAsB;oBAAE,uBAAuB;oBAAG,mBAAmB;oBAAG,yBAAyB;oBAAG,uBAAuB;oBAAG,KAAK;oBAAG,KAAK;oBAAG,QAAQ;oBAAG,QAAQ;gBAAE;gBACnK,oBAAoB;oBAAE,uBAAuB;oBAAG,mBAAmB;oBAAG,yBAAyB;oBAAG,uBAAuB;oBAAG,KAAK;oBAAG,KAAK;oBAAG,QAAQ;oBAAG,QAAQ;gBAAE;gBACjK,iCAAiC;gBACjC,sBAAsB;gBACtB,6BAA6B;gBAC7B,qCAAqC;gBACrC,gBAAgB;YACpB;YAEA,8CAA8C;YAC9C,IAAI,aAAa;gBACd,aAAa,2BAA2B,GAAG,YAAY,2BAA2B,EAAE,gBAAgB;YACvG;YAGA,iFAAiF;YACjF,oGAAoG;YACpG,wFAAwF;YACxF,yEAAyE;YACzE,MAAM,wBAAwB,uBAAuB,2BAA2B;YAEhF,oDAAoD;YACpD,MAAM,qBAAqB,cAAc,MAAM;qEAAC,CAAC,KAAK,OAAS,MAAM,KAAK,KAAK;oEAAE;YAEjF,4FAA4F;YAC5F,0FAA0F;YAC1F,iFAAiF;YACjF,gEAAgE;YAEhE,OAAO,cAAc,+DAA+D;QAEzF;yCAAG;QAAC;QAAgB;QAAsB;KAAc,GAAG,0CAA0C;IAGrG,2DAA2D;IAC3D,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;wCAAE;YAC7B,IAAI,CAAC,cAAc,OAAO;YAC1B,OAAO,eAAe,IAAI;gDAAC,CAAA,MAAO,IAAI,EAAE,KAAK;gDAAe;QAC9D;uCAAG;QAAC;QAAc;KAAe;IAEjC,+CAA+C;IAC/C,MAAM,2BAA2B,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;sDAAE;YAC3C,MAAM,UAAU,eAAe,MAAM,GAAG,IAAI,cAAc,CAAC,eAAe,MAAM,GAAG,EAAE,GAAG;YACxF,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,cAAc;gBAC9C,MAAM;oBACF,OAAO;oBACP,aAAa,eAAe,MAAM,KAAK,IAAI,sCAAsC;oBACjF,SAAS;gBACb;gBACA;YACJ;YAEA,6BAA6B,oBAAoB;YAEjD,MAAM,cAAc,CAAA,GAAA,0IAAA,CAAA,UAAO,AAAD,EAAE,QAAQ,SAAS,CAAC,SAAS,EAAE;YAEzD,yDAAyD;YACzD,IAAI,cAAc,cAAc;gBAC5B,gBAAgB,QAAQ,eAAe;gBACvC,MAAM;oBACF,OAAO;oBACP,aAAa,CAAC,kBAAkB,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,aAAa,OAAO;wBAAE,QAAQ,+IAAA,CAAA,KAAE;oBAAC,GAAG,sEAAsE,CAAC;oBACpJ,SAAS;oBACT,UAAU;gBACd;gBACA;YACJ;YAEA,yCAAyC;YACzC,MAAM,gBAAmC;gBACrC,GAAG,QAAQ,SAAS;gBACpB,WAAW;YAIf;YAEA,kDAAkD;YAClD,MAAM,WAAW,CAAC,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG,IAAI;YAElF,IAAI;gBACA,+BAA+B;gBAC/B,MAAM,SAAS,MAAM,CAAA,GAAA,yIAAA,CAAA,yBAAsB,AAAD,EAAE,eAAe;gBAC3D,6BAA6B,SAAS,sCAAsC;gBAC5E,IAAI,CAAC,CAAA,GAAA,wHAAA,CAAA,qBAAkB,AAAD,EAAE,SAAS;oBAC5B,MAAM;wBACH,OAAO;wBACP,aAAa,CAAC,mCAAmC,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,aAAa,OAAO;4BAAE,QAAQ,+IAAA,CAAA,KAAE;wBAAC,GAAG,CAAC,CAAC;oBACnG;gBACL;YACJ,EAAE,OAAO,OAAO;gBACZ,QAAQ,KAAK,CAAC,8BAA8B;gBAC5C,MAAM,eAAe,iBAAiB,SAAS,MAAM,OAAO,GAAG,MAAM,OAAO,GAAG;gBAC/E,6BAA6B;oBAAE,OAAO;gBAAa,IAAI,8BAA8B;YACzF,SAAU;gBACN,qFAAqF;gBACrF,gBAAgB;YACpB;QACJ;qDAAG;QAAC;QAAgB;QAAgB;QAAc;QAAO;QAA2B;KAA6B;IAG/G,kDAAkD;IAClD,MAAM,iBAAiB,CAAC,cAAc,CAAC,kBAAkB,CAAC;IAC1D,iDAAiD;IACjD,MAAM,cAAc,qBAAqB;IAGzC,6BAA6B;IAC7B,MAAM,kBAAkB;QACpB,MAAM,iBAAiB,kBAAkB,wBAAwB;QAClE,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,kBAAkB,CAAC,cAAc;YACpE,MAAM;gBACF,OAAO;gBACP,aAAa;gBACb,SAAS;YACb;YACA;QACJ;QACA,IAAI;YACC,MAAM,wBAAwB,uBAAuB,2BAA2B;YACjF,mEAAmE;YACpE,CAAA,GAAA,gIAAA,CAAA,qBAAkB,AAAD,EACb,gBACA,YACA,gBACA,cACA,eACA,kBACA,sBAAsB,6CAA6C;;YAEvE,MAAM;gBACF,OAAO;gBACP,aAAa,CAAC,2BAA2B,EAAE,WAAW,UAAU,CAAC;YACrE;QACH,EAAE,OAAO,OAAO;YACb,QAAQ,KAAK,CAAC,yBAAyB;YACtC,MAAM;gBACF,OAAO;gBACP,aAAa;gBACb,SAAS;YACb;QACJ;IACH;IAEA,kCAAkC;IAClC,MAAM,sBAAsB;QAC1B,MAAM,yBAA6C;QAEnD,IAAI,uBAAuB,MAAM,KAAK,GAAG;YACrC,MAAM;gBACF,OAAO;gBACP,aAAa;gBACb,SAAS;YACb;YACA;QACJ;QAEA,IAAI;YACA,yFAAyF;YACzF,CAAA,GAAA,gIAAA,CAAA,yBAAsB,AAAD,EAAE;YACvB,MAAM;gBACF,OAAO;gBACP,aAAa,CAAC,qBAAqB,EAAE,uBAAuB,MAAM,CAAC,wBAAwB,CAAC;YAChG;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,+CAA+C;YAC7D,MAAM;gBACF,OAAO;gBACP,aAAa;gBACb,SAAS;YACb;QACJ;IACF;IAEC,qCAAqC;IACrC,MAAM,yBAAyB,CAAC;QAC9B,MAAM,gBAAgB,cAAc,IAAI,CAAC,CAAA,IAAK,EAAE,GAAG,KAAK;QACxD,IAAI,CAAC,iBAAiB,aAAkB,aAAa;QAErD,yDAAyD;QACzD,cAAc,cAAc,UAAU;QACtC,kBAAkB,cAAc,WAAW;QAC3C,gBAAgB,cAAc,SAAS;QACvC,gHAAgH;QAEhH,+GAA+G;QAC/G,gBAAgB,QAAQ,yBAAyB;QAEjD,MAAM;YACH,OAAO;YACP,aAAa,CAAC,yBAAyB,EAAE,cAAc,UAAU,CAAC,iBAAiB,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,cAAc,WAAW,EAAE,YAAY,GAAG,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,cAAc,SAAS,EAAE,YAAY,CAAC,CAAC;QACzL;IACF;IAEA,uCAAuC;IACvC,MAAM,2BAA2B;QAC/B,IAAI,CAAC,sBAAsB,aAAkB,aAAa;QAE1D,IAAI;YACD,MAAM,cAAc,cAAc,IAAI,CAAC,CAAA,IAAK,EAAE,GAAG,KAAK;YACtD,aAAa,UAAU,CAAC;YACxB,iBAAiB,yBAAyB,mBAAmB;YAC7D,sBAAsB,OAAO,eAAe;YAC5C,MAAM;gBACF,OAAO;gBACP,aAAa,cACE,CAAC,aAAa,EAAE,YAAY,UAAU,CAAC,EAAE,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,YAAY,WAAW,EAAE,YAAY,gBAAgB,CAAC,GACxG;gBACf,SAAS;YACb;YACA,8EAA8E;YAC9E,MAAM,aAAa,cAAc,YAAY,gBAAgB;YAC7D,IAAI,eAAe,oBAAoB;gBACnC,kBAAkB,EAAE;gBACpB,iBAAiB,EAAE,GAAG,wBAAwB;gBAC9C,oBAAoB,EAAE;gBACtB,wBAAwB,QAAQ,uBAAuB;gBACvD,cAAc,KAAK,6BAA6B;gBAChD,kBAAkB;gBAClB,gBAAgB;YACpB;QAEH,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,mDAAmD;YACjE,MAAM;gBACF,OAAO;gBACP,aAAa;gBACb,SAAS;YACb;YACA,sBAAsB,OAAO,qBAAqB;QACtD;IACF;IAID,qBACE,6LAAC;QAAK,WAAU;;YAAyC;0BACvD,6LAAC;gBAAG,WAAU;0BAAsD;;;;;;0BAGpE,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACZ,6LAAC,mIAAA,CAAA,aAAU;;0CACP,6LAAC,mIAAA,CAAA,YAAS;gCAAC,WAAU;;kDACjB,6LAAC,qMAAA,CAAA,OAAI;wCAAC,WAAU;;;;;;oCAAY;;;;;;;0CAEhC,6LAAC,mIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAIrB,6LAAC,mIAAA,CAAA,cAAW;wBAAC,WAAU;;0CAEnB,6LAAC;gCAAI,WAAU;;kDACX,6LAAC,oIAAA,CAAA,QAAK;wCAAC,SAAQ;wCAAa,WAAU;kDAAkB;;;;;;kDACxD,6LAAC,oIAAA,CAAA,QAAK;wCACF,IAAG;wCACH,OAAO;wCACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;wCAC7C,aAAY;;;;;;;;;;;;0CAKpB,6LAAC;gCAAI,WAAU;;kDACX,6LAAC,oIAAA,CAAA,QAAK;wCAAC,WAAU;kDAAkB;;;;;;kDACnC,6LAAC,sIAAA,CAAA,UAAO;;0DACJ,6LAAC,sIAAA,CAAA,iBAAc;gDAAC,OAAO;0DACnB,cAAA,6LAAC,qIAAA,CAAA,SAAM;oDACH,SAAS;oDACT,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACR,8CACA,CAAC,kBAAkB;;sEAGvB,6LAAC,6MAAA,CAAA,WAAY;4DAAC,WAAU;;;;;;wDACvB,iBAAiB,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,gBAAgB,OAAO;4DAAE,QAAQ,+IAAA,CAAA,KAAE;wDAAC,mBAAK,6LAAC;sEAAK;;;;;;;;;;;;;;;;;0DAGhF,6LAAC,sIAAA,CAAA,iBAAc;gDAAC,WAAU;0DACtB,cAAA,6LAAC,uIAAA,CAAA,WAAQ;oDACL,MAAK;oDACL,UAAU;oDACV,UAAU;oDACV,YAAY;oDACZ,QAAQ,+IAAA,CAAA,KAAE;;;;;;;;;;;;;;;;;;;;;;;0CAO1B,6LAAC;gCAAI,WAAU;;kDACX,6LAAC,oIAAA,CAAA,QAAK;wCAAC,WAAU;kDAAkB;;;;;;kDAClC,6LAAC,sIAAA,CAAA,UAAO;;0DACL,6LAAC,sIAAA,CAAA,iBAAc;gDAAC,OAAO;0DACnB,cAAA,6LAAC,qIAAA,CAAA,SAAM;oDACH,SAAS;oDACT,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACR,8CACA,CAAC,gBAAgB;;sEAGrB,6LAAC,6MAAA,CAAA,WAAY;4DAAC,WAAU;;;;;;wDACvB,eAAe,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,cAAc,OAAO;4DAAE,QAAQ,+IAAA,CAAA,KAAE;wDAAC,mBAAK,6LAAC;sEAAK;;;;;;;;;;;;;;;;;0DAG5E,6LAAC,sIAAA,CAAA,iBAAc;gDAAC,WAAU;0DACtB,cAAA,6LAAC,uIAAA,CAAA,WAAQ;oDACL,MAAK;oDACL,UAAU;oDACV,UAAU;oDACV,YAAY;oDACZ,QAAQ,+IAAA,CAAA,KAAE;oDACV,UAAU,CAAC,OAAS,iBAAiB,OAAO,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;0CAO3E,6LAAC;gCAAI,WAAU;;kDACZ,6LAAC,qIAAA,CAAA,SAAM;wCACL,SAAS;wCACT,WAAU,gEAAgE,kBAAkB;;wCAC5F,UAAU,CAAC,cAAc,CAAC,kBAAkB,CAAC;;0DAC3C,6LAAC,qNAAA,CAAA,aAAU;gDAAC,WAAU;;;;;;4CAAiB;;;;;;;kDAE3C,6LAAC,8IAAA,CAAA,cAAW;;0DACP,6LAAC,8IAAA,CAAA,qBAAkB;gDAAC,OAAO;0DAEtB,cAAA,6LAAC,qIAAA,CAAA,SAAM;oDAAC,SAAQ;oDAAU,WAAU;oDAAgE,UAAU,kBAAmB,eAAe,MAAM,KAAK,KAAK,cAAc,MAAM,KAAK,KAAK,iBAAiB,MAAM,KAAK,KAAK,CAAC;;sEAC7N,6LAAC,yMAAA,CAAA,SAAM;4DAAC,WAAU;;;;;;wDAAiB;;;;;;;;;;;;0DAG5C,6LAAC,8IAAA,CAAA,qBAAkB;;kEACjB,6LAAC,8IAAA,CAAA,oBAAiB;;0EAChB,6LAAC,8IAAA,CAAA,mBAAgB;0EAAC;;;;;;0EAClB,6LAAC,8IAAA,CAAA,yBAAsB;;oEAAC;kFAC8F,6LAAC;kFAAQ,cAAc;;;;;;oEAAuC;oEAAmB;kFACpM,6LAAC;kFAAQ,iBAAiB,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,gBAAgB,YAAY;4EAAC,QAAQ,+IAAA,CAAA,KAAE;wEAAA,KAAK;;;;;;oEAAa;oEAAI;kFAC9F,6LAAC;kFAAQ,eAAe,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,cAAc,YAAY;4EAAC,QAAQ,+IAAA,CAAA,KAAE;wEAAA,KAAK;;;;;;oEAAa;;;;;;;;;;;;;kEAG3F,6LAAC,8IAAA,CAAA,oBAAiB;;0EAChB,6LAAC,8IAAA,CAAA,oBAAiB;0EAAC;;;;;;0EACnB,6LAAC,8IAAA,CAAA,oBAAiB;gEAAC,SAAS;gEAAuB,WAAU;0EAAyC;;;;;;;;;;;;;;;;;;;;;;;;kDAO7G,6LAAC,qIAAA,CAAA,SAAM;wCAAC,SAAS;wCAAqB,SAAQ;wCAAU,WAAU;wCAAuB,UAAU,cAAc,MAAM,KAAK;;0DACxH,6LAAC,2MAAA,CAAA,UAAO;gDAAC,WAAU;;;;;;4CAAiB;;;;;;;;;;;;;;;;;;;;;;;;;0BAQtD,6LAAC;gBAAI,WAAU;;kCAGX,6LAAC;wBAAI,WAAU;kCAEX,cAAA,6LAAC,mIAAA,CAAA,OAAI;4BAAC,WAAW,CAAC,kBAAkB,EAAE,iBAAiB,mCAAmC,IAAI;;8CAC5F,6LAAC,mIAAA,CAAA,aAAU;;sDACT,6LAAC,mIAAA,CAAA,YAAS;4CAAC,WAAU;;gDAClB,6BAAe,6LAAC,8MAAA,CAAA,OAAI;oDAAC,WAAU;;;;;yEAAe,6LAAC,qNAAA,CAAA,aAAU;oDAAC,WAAU;;;;;;gDACpE,eAAe,iBAAiB;gDAC/B,cAAc,kBAAkB,gBAAgB,CAAC,MAAM,EAAE,WAAW,EAAE,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,gBAAgB,SAAS,GAAG,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,cAAc,SAAS,CAAC,CAAC;;;;;;;sDAEjJ,6LAAC,mIAAA,CAAA,kBAAe;sDACb,iBACG,wEACA,eACA,CAAC,oDAAoD,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,gBAAgB,aAAa,IAAI,QAAQ,OAAO;gDAAE,QAAQ,+IAAA,CAAA,KAAE;4CAAC,GAAG,sBAAsB,CAAC,GACrJ;;;;;;;;;;;;8CAGR,6LAAC,mIAAA,CAAA,cAAW;;wCACR,+BACI,6LAAC;4CAAI,WAAU;sDAAgD;;;;;iEAIjE,6LAAC,wIAAA,CAAA,cAAW;4CAEV,oBAAoB;4CACpB,uBAAuB;4CACvB,WAAW;4CACX,aAAa;4CACb,YAAY;4CACZ,kBAAkB,CAAC,OAAS,eAAe,IAAI,CAAC,CAAA,MAAO,UAAU,IAAI,SAAS,CAAC,SAAS,EAAE;2CANrF,gBAAgB;;;;;wCAS1B,0BACC,6LAAC;4CAAE,WAAU;sDAA6C;;;;;;;;;;;;;;;;;;;;;;;kCAOpE,6LAAC;wBAAI,WAAU;;4BAEV,eAAe,MAAM,GAAG,mBACvB,6LAAC,mIAAA,CAAA,OAAI;gCAAC,WAAU;;kDACd,6LAAC,mIAAA,CAAA,aAAU;;0DACR,6LAAC,mIAAA,CAAA,YAAS;gDAAC,WAAU;;kEACnB,6LAAC,uMAAA,CAAA,QAAK;wDAAC,WAAU;;;;;;oDAAW;oDAAoB,eAAe,MAAM;oDAAC;oDACnE,cAAc,kBAAkB,gBAAgB,CAAC,MAAM,EAAE,WAAW,EAAE,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,gBAAgB,SAAS,GAAG,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,cAAc,SAAS,CAAC,CAAC;;;;;;;0DAEnJ,6LAAC,mIAAA,CAAA,kBAAe;0DAAC;;;;;;;;;;;;kDAEnB,6LAAC,mIAAA,CAAA,cAAW;;0DACV,6LAAC;gDAAG,WAAU;;oDAA8C;oDACzD,eAAe,2CAA2C;qDACxD,GAAG,CAAC,CAAC,KAAK,sBACX,6LAAC;4DAAgB,WAAW,CAAC,kDAAkD,EAAE,qBAAqB,IAAI,EAAE,GAAG,mDAAmD,WAAW;;gEAAE;8EAC5K,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;;8FACC,6LAAC;oFAAE,WAAU;;wFAA6C;wFAAO,QAAQ;;;;;;;8FACzE,6LAAC;oFAAI,WAAU;;sGACX,6LAAC,6MAAA,CAAA,WAAY;4FAAC,WAAU;;;;;;wFACvB,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,IAAI,SAAS,CAAC,SAAS,EAAE,QAAQ;4FAAE,QAAQ,+IAAA,CAAA,KAAE;wFAAC;;;;;;;8FAE1D,6LAAC;oFAAI,WAAU;;sGACX,6LAAC,uMAAA,CAAA,QAAK;4FAAC,WAAU;;;;;;wFAChB,IAAI,SAAS,CAAC,SAAS;wFAAC;wFAAI,IAAI,SAAS,CAAC,OAAO;wFACjD,IAAI,SAAS,CAAC,WAAW,GAAG,WAAW;;;;;;;;;;;;;sFAG9C,6LAAC;4EAAI,WAAU;;8FACX,6LAAC;oFAAI,WAAU;8FAAqC;;;;;;8FACpD,6LAAC;oFAAI,WAAU;8FACX,CAAA,GAAA,2IAAA,CAAA,iBAAc,AAAD,EAAE,IAAI,uBAAuB;;;;;;8FAE/C,6LAAC;oFAAI,WAAU;;sGAEZ,6LAAC,qIAAA,CAAA,SAAM;4FAAC,SAAQ;4FAAQ,MAAK;4FAAO,SAAS,IAAM,cAAc,IAAI,EAAE;4FAAG,OAAM;4FAAqB,WAAW,CAAC,QAAQ,EAAE,iBAAiB,IAAI,EAAE,GAAG,6BAA6B,IAAI;4FAAE,UAAU,qBAAqB,IAAI,EAAE;sGAC3N,cAAA,6LAAC,8MAAA,CAAA,OAAI;gGAAC,WAAU;;;;;;;;;;;sGAGlB,6LAAC,qIAAA,CAAA,SAAM;4FAAC,SAAQ;4FAAQ,MAAK;4FAAO,SAAS,IAAM,kBAAkB,IAAI,EAAE;4FAAG,OAAM;4FAA0B,WAAW,CAAC,QAAQ,EAAE,qBAAqB,IAAI,EAAE,GAAG,6BAA6B,IAAI;4FAAE,UAAU,iBAAiB,IAAI,EAAE;sGACnO,cAAA,6LAAC,qNAAA,CAAA,aAAU;gGAAC,WAAU;;;;;;;;;;;sGAGzB,6LAAC,8IAAA,CAAA,cAAW;;8GACT,6LAAC,8IAAA,CAAA,qBAAkB;oGAAC,OAAO;8GACxB,cAAA,6LAAC,qIAAA,CAAA,SAAM;wGAAC,SAAQ;wGAAQ,MAAK;wGAAO,WAAU;wGAA0E,SAAS,IAAM,iBAAiB,IAAI,EAAE;wGAAG,OAAM;wGAAiB,UAAU,iBAAiB,IAAI,EAAE,IAAI,qBAAqB,IAAI,EAAE;kHACrP,cAAA,6LAAC,6MAAA,CAAA,SAAM;4GAAC,WAAU;;;;;;;;;;;;;;;;8GAGzB,6LAAC,8IAAA,CAAA,qBAAkB;;sHACjB,6LAAC,8IAAA,CAAA,oBAAiB;;8HAChB,6LAAC,8IAAA,CAAA,mBAAgB;8HAAC;;;;;;8HAClB,6LAAC,8IAAA,CAAA,yBAAsB;;wHAAC;wHACiF;wHACrG,eAAe,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,gBAAgB,WAAW,YAAY,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,eAAe,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,eAAgB,SAAS,CAAC,SAAS,EAAE,OAAO;4HAAE,QAAQ,+IAAA,CAAA,KAAE;wHAAC,KAAK;wHAAe;;;;;;;;;;;;;sHAGrM,6LAAC,8IAAA,CAAA,oBAAiB;;8HAChB,6LAAC,8IAAA,CAAA,oBAAiB;oHAAC,SAAS,IAAM,iBAAiB;8HAAO;;;;;;8HAC1D,6LAAC,8IAAA,CAAA,oBAAiB;oHAAC,SAAS;oHAAiB,WAAU;8HAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8EAW9G,6LAAC,wIAAA,CAAA,YAAS;oEAAC,WAAU;;;;;;gEACpB,qBAAqB,IAAI,EAAE,IAAI,cAC5B,2BAA2B;8EAC3B,6LAAC;oEAAI,WAAU;;sFACX,6LAAC;4EAAE,WAAU;sFAAsC;;;;;;sFACnD,6LAAC;4EAAI,WAAU;;gFAAkD;gFAC5D,2IAAA,CAAA,eAAY,CAAC,GAAG,CAAC,CAAA,oBACd,6LAAC;wFAAc,WAAU;;0GACrB,6LAAC,oIAAA,CAAA,QAAK;gGAAC,SAAS,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,KAAK;gGAAE,WAAU;;oGACpD,2IAAA,CAAA,sBAAmB,CAAC,IAAI,IAAI;oGAAI;;;;;;;0GAErC,6LAAC,oIAAA,CAAA,QAAK;gGACF,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,KAAK;gGACjC,MAAK,SAAS,mBAAmB;;gGACjC,MAAK,OAAO,iBAAiB;;gGAC7B,KAAI;gGACJ,OAAO,WAAW,CAAC,IAAI,IAAI;gGAC3B,UAAU,CAAC,IAAM,iBAAiB,GAAG;gGACrC,WAAU;gGACV,aAAY;;;;;;;uFAZV;;;;;;;;;;;sFAiBlB,6LAAC;4EAAI,WAAU;;8FACX,6LAAC,qIAAA,CAAA,SAAM;oFAAC,SAAQ;oFAAQ,MAAK;oFAAK,SAAS;;sGACvC,6LAAC,+LAAA,CAAA,IAAC;4FAAC,WAAU;;;;;;wFAAiB;;;;;;;8FAElC,6LAAC,qIAAA,CAAA,SAAM;oFAAC,SAAQ;oFAAU,MAAK;oFAAK,SAAS;;sGACzC,6LAAC,qMAAA,CAAA,OAAI;4FAAC,WAAU;;;;;;wFAAiB;;;;;;;;;;;;;;;;;;2EAK7C,2BAA2B;8EAC3B,6LAAC;oEAAI,WAAU;;wEAA0D;wEACpE,2IAAA,CAAA,eAAY,CAAC,GAAG,CAAC,CAAA;4EACd,MAAM,QAAQ,IAAI,eAAe,CAAC,IAAI;4EACtC,IAAI,QAAQ,GAAG;gFACX,qBACI,6LAAC;oFAAc,WAAU;;sGAErB,6LAAC;4FAAK,WAAU;;gGAAuC,2IAAA,CAAA,sBAAmB,CAAC,IAAI,IAAI;gGAAI;;;;;;;sGACvF,6LAAC;4FAAK,WAAU;;gGAAwD,CAAA,GAAA,2IAAA,CAAA,cAAW,AAAD,EAAE;gGAAO;;;;;;;;mFAHrF;;;;;4EAMlB;4EACA,OAAO;wEACX;sFACA,6LAAC;4EAAI,WAAU;;8FACX,6LAAC;oFAAK,WAAU;8FAAoC;;;;;;8FACpD,6LAAC;oFAAK,WAAU;;wFAA4C,CAAA,GAAA,2IAAA,CAAA,cAAW,AAAD,EAAE,IAAI,2BAA2B;wFAAE;;;;;;;;;;;;;;;;;;;;2DA3G/G,IAAI,EAAE;;;;;;;;;;;0DAmHlB,6LAAC,qIAAA,CAAA,SAAM;gDACJ,SAAQ;gDACR,SAAS;gDACT,WAAU;gDACV,UAAU,kBAAkB,gBAAgB,eAAe,MAAM,KAAK;;oDAErE,6BACC,6LAAC,oNAAA,CAAA,UAAO;wDAAC,WAAU;;;;;6EAEnB,6LAAC,iNAAA,CAAA,WAAQ;wDAAC,WAAU;;;;;;oDACpB;;;;;;;;;;;;;;;;;;;4BAQX,eAAe,MAAM,KAAK,KAAK,CAAC,gBAAgB,CAAC,gCAC/C,6LAAC,mIAAA,CAAA,OAAI;gCAAC,WAAU;0CACb,cAAA,6LAAC,mIAAA,CAAA,aAAU;;sDACP,6LAAC,mIAAA,CAAA,YAAS;4CAAC,WAAU;sDAA0B;;;;;;sDAC/C,6LAAC,mIAAA,CAAA,kBAAe;;gDAAC;gDAAuC;gDAAW;;;;;;;;;;;;;;;;;;4BAK3E,kBAAkB,eAAe,MAAM,KAAK,mBAC3C,6LAAC,mIAAA,CAAA,OAAI;gCAAC,WAAU;0CACb,cAAA,6LAAC,mIAAA,CAAA,aAAU;;sDACP,6LAAC,mIAAA,CAAA,YAAS;4CAAC,WAAU;sDAA0B;;;;;;sDAC/C,6LAAC,mIAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;;;;;;;;;;;;kCAO/B,6LAAC;wBAAI,WAAU;;0CAEV,6LAAC,iJAAA,CAAA,mBAAgB;gCACb,UAAU;gCACV,QAAQ;gCACR,UAAU,CAAC,MAAQ,sBAAsB;gCACzC,cAAc;;;;;;0CAKjB,6LAAC,8IAAA,CAAA,cAAW;gCAAC,MAAM,CAAC,CAAC;gCAAoB,cAAc,CAAC,OAAS,CAAC,QAAQ,sBAAsB;0CAC7F,cAAA,6LAAC,8IAAA,CAAA,qBAAkB;;sDACjB,6LAAC,8IAAA,CAAA,oBAAiB;;8DAChB,6LAAC,8IAAA,CAAA,mBAAgB;8DAAC;;;;;;8DAClB,6LAAC,8IAAA,CAAA,yBAAsB;;wDAAC;wDACyC;sEAC9D,6LAAC;sEAAQ,cAAc,IAAI,CAAC,CAAA,IAAK,EAAE,GAAG,KAAK,qBAAqB;;;;;;wDAAoB;wDAAa;sEACjG,6LAAC;sEACE,cAAc,IAAI,CAAC,CAAA,IAAK,EAAE,GAAG,KAAK,qBAAqB,cAClD,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,cAAc,IAAI,CAAC,CAAA,IAAK,EAAE,GAAG,KAAK,oBAAqB,WAAW,EAAE,YAAY;gEAAE,QAAQ,+IAAA,CAAA,KAAE;4DAAC,KACpG;;;;;;wDACC;sEAAI,6LAAC;sEACX,cAAc,IAAI,CAAC,CAAA,IAAK,EAAE,GAAG,KAAK,qBAAqB,YAClD,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,cAAc,IAAI,CAAC,CAAA,IAAK,EAAE,GAAG,KAAK,oBAAqB,SAAS,EAAE,YAAY;gEAAE,QAAQ,+IAAA,CAAA,KAAE;4DAAC,KAClG;;;;;;wDACC;;;;;;;;;;;;;sDAGd,6LAAC,8IAAA,CAAA,oBAAiB;;8DAChB,6LAAC,8IAAA,CAAA,oBAAiB;oDAAC,SAAS,IAAM,sBAAsB;8DAAO;;;;;;8DAC/D,6LAAC,8IAAA,CAAA,oBAAiB;oDAAC,SAAS;oDAA0B,WAAU;8DAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAQpH;YAGJ,6BACC,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;oBAAyB;kCACtC,6LAAC,mIAAA,CAAA,aAAU;wBAAC,WAAU;;0CACnB,6LAAC;;kDACC,6LAAC,mIAAA,CAAA,YAAS;wCAAC,WAAU;;0DAAkD,6LAAC,iNAAA,CAAA,aAAU;gDAAC,WAAU;;;;;;4CAAY;;;;;;;kDACzG,6LAAC,mIAAA,CAAA,kBAAe;;4CAAC;4CAA+B,kBAAkB,kBAAkB;4CAAE;4CAAuB;4CAAW;4CAAG,iBAAiB,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,gBAAgB,WAAW;4CAAG;4CAAI,eAAe,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,cAAc,WAAW;4CAAG;;;;;;;;;;;;;0CAExO,6LAAC,qIAAA,CAAA,SAAM;gCAAC,SAAS;gCAAiB,SAAQ;gCAAY,UAAU,CAAC,oBAAoB,CAAC,cAAc,CAAC,kBAAkB,CAAC;;kDACpH,6LAAC,iNAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;;;;;;;kCAG7C,6LAAC,mIAAA,CAAA,cAAW;kCACT,cAAA,6LAAC,2IAAA,CAAA,iBAAc;4BACX,SAAS;4BACT,OAAO;4BACP,WAAW;4BACX,WAAW;4BACX,oCAAoC;4BACpC,eAAe;4BACf,kBAAkB;4BAClB,cAAc,IAAM,qBAAqB;4BACzC,gBAAgB,IAAM,wBAAwB;4BAC9C,iBAAiB;4BACjB,mBAAmB;4BACnB,kDAAkD;4BAClD,sBAAsB;4BACtB,oBAAoB;4BACpB,oBAAoB;;;;;;;;;;;;;;;;;0BAOjC,6LAAC,4IAAA,CAAA,kBAAe;gBACZ,MAAK;gBACL,QAAQ;gBACR,SAAS,IAAM,qBAAqB;gBACpC,QAAQ;;;;;;0BAIX,6LAAC,4IAAA,CAAA,kBAAe;gBACb,MAAK;gBACL,QAAQ;gBACR,SAAS,IAAM,wBAAwB;gBACvC,QAAQ;;;;;;0BAMZ,6LAAC,sIAAA,CAAA,UAAO;;;;;;;;;;;AAGd;GAjjCwB;;QAsCF,+HAAA,CAAA,WAAQ;;;KAtCN","debugId":null}}]
}