{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker, type DateFormatter, type DayModifiers, type Matcher } from \"react-day-picker\" // Added DayModifiers, Matcher\nimport type { Locale } from 'date-fns'; // Import Locale type\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\n// --- Added modifier props ---\nexport type CalendarProps = React.ComponentProps<typeof DayPicker> & {\n    locale?: Locale; // Add locale prop\n    modifiers?: DayModifiers; // Allow passing custom modifiers\n    modifiersClassNames?: Record<string, string>; // Allow passing class names for modifiers\n}\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  locale, // Destructure locale\n  modifiers, // Destructure modifiers\n  modifiersClassNames, // Destructure modifier class names\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      locale={locale} // Pass locale to DayPicker\n      modifiers={modifiers} // Pass modifiers\n      modifiersClassNames={{\n          // Adjusted holiday style: use primary text color, medium font weight, and primary border\n          holiday: 'text-primary font-medium border border-primary',\n          ...modifiersClassNames // Merge with any passed modifier classes\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAIA;AAAA;AACA,wRAAkG,8BAA8B;AAGhI;AACA;AARA;;;;;;AAiBA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,MAAM,EACN,SAAS,EACT,mBAAmB,EACnB,GAAG,OACW;IACd,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACA,QAAQ;QACR,WAAW;QACX,qBAAqB;YACjB,yFAAyF;YACzF,SAAS;YACT,GAAG,oBAAoB,yCAAyC;QACpE;QACC,GAAG,KAAK;;;;;;AAGf;KAjES;AAkET,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/sheet.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close // Export SheetClose\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose, // Ensure SheetClose is exported\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,QAAQ,qKAAA,CAAA,OAAmB;AAEjC,MAAM,eAAe,qKAAA,CAAA,UAAsB;AAE3C,MAAM,aAAa,sKAAqB,oBAAoB;AAAzC,CAAA,QAAoB;AAEvC,MAAM,cAAc,qKAAA,CAAA,SAAqB;AAEzC,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAsB;QACrB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;KAVH;AAaN,aAAa,WAAW,GAAG,qKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,oMACA;IACE,UAAU;QACR,MAAM;YACJ,KAAK;YACL,QACE;YACF,MAAM;YACN,OACE;QACJ;IACF;IACA,iBAAiB;QACf,MAAM;IACR;AACF;AAOF,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGlC,CAAC,EAAE,OAAO,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAsB;gBACrB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;oBAAE;gBAAK,IAAI;gBACtC,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAoB;wBAAC,WAAU;;0CAC9B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,aAAa,WAAW,GAAG,qKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,YAAY,WAAW,GAAG;AAE1B,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yCAAyC;QACtD,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,qKAAA,CAAA,QAAoB,CAAC,WAAW;AAEzD,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA0B;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,qKAAA,CAAA,cAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 697, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 912, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 989, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/LocationSelector.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport type { Location } from '@/types/schedule'; // Assuming type exists\n\ninterface LocationSelectorProps {\n  locations: Location[];\n  selectedLocationId?: string;\n  onLocationChange: (locationId: string) => void;\n}\n\nexport const LocationSelector: React.FC<LocationSelectorProps> = ({\n  locations,\n  selectedLocationId,\n  onLocationChange,\n}) => {\n  return (\n    <Select value={selectedLocationId} onValueChange={onLocationChange}>\n      <SelectTrigger id=\"location-select\">\n        <SelectValue placeholder=\"Selecciona una sede\" />\n      </SelectTrigger>\n      <SelectContent>\n        {locations.map((location) => (\n          <SelectItem key={location.id} value={location.id}>\n            {location.name}\n          </SelectItem>\n        ))}\n      </SelectContent>\n    </Select>\n  );\n};\n\n    "],"names":[],"mappings":";;;;AAEA;;;AASO,MAAM,mBAAoD,CAAC,EAChE,SAAS,EACT,kBAAkB,EAClB,gBAAgB,EACjB;IACC,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,OAAO;QAAoB,eAAe;;0BAChD,6LAAC,qIAAA,CAAA,gBAAa;gBAAC,IAAG;0BAChB,cAAA,6LAAC,qIAAA,CAAA,cAAW;oBAAC,aAAY;;;;;;;;;;;0BAE3B,6LAAC,qIAAA,CAAA,gBAAa;0BACX,UAAU,GAAG,CAAC,CAAC,yBACd,6LAAC,qIAAA,CAAA,aAAU;wBAAmB,OAAO,SAAS,EAAE;kCAC7C,SAAS,IAAI;uBADC,SAAS,EAAE;;;;;;;;;;;;;;;;AAOtC;KAnBa","debugId":null}},
    {"offset": {"line": 1048, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/DraggableEmployee.tsx"],"sourcesContent":["\n'use client'; // Add this directive\n\nimport React, { useState, useEffect } from 'react'; // Import useState and useEffect\nimport { useDraggable } from '@dnd-kit/core';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Button } from '@/components/ui/button';\nimport { GripVertical } from 'lucide-react';\nimport type { Employee } from '@/types/schedule'; // Assuming type exists\nimport { cn } from '@/lib/utils'; // Import cn\nimport { Skeleton } from '@/components/ui/skeleton'; // Import Skeleton\n\ninterface DraggableEmployeeProps {\n  employee: Employee;\n}\n\nexport const DraggableEmployee: React.FC<DraggableEmployeeProps> = ({ employee }) => {\n  const [isClient, setIsClient] = useState(false); // State to track client-side rendering\n\n  useEffect(() => {\n    setIsClient(true); // Set to true only on the client after initial render\n  }, []);\n\n  const { attributes, listeners, setNodeRef, transform, isDragging } = useDraggable({\n    id: employee.id, // Use employee ID as the draggable ID\n    data: { type: 'employee', employee }, // Pass employee data\n    disabled: !isClient, // Disable dragging until client-side hydration is complete\n  });\n\n  const style = {\n    transform: CSS.Translate.toString(transform),\n    opacity: isDragging ? 0.5 : 1,\n    zIndex: isDragging ? 100 : 'auto', // Ensure dragged item is on top\n    cursor: isDragging ? 'grabbing' : (isClient ? 'grab' : 'default'), // Set cursor only on client\n  };\n\n  // Render a placeholder during SSR and initial hydration\n  if (!isClient) {\n    return (\n      <div className=\"flex items-center justify-between p-2 border rounded-md bg-muted h-10\">\n           <Skeleton className=\"h-4 w-3/4\" />\n           <Skeleton className=\"h-4 w-4\" />\n       </div>\n    );\n  }\n\n  // Render the actual draggable button only on the client\n  return (\n    <Button\n      ref={setNodeRef}\n      style={style}\n      variant=\"outline\"\n      className=\"w-full flex items-center justify-between p-2 bg-card hover:bg-muted/50\"\n      {...listeners}\n      {...attributes}\n    >\n      <span className=\"truncate\">{employee.name}</span> {/* Add truncate here */}\n      <GripVertical className=\"h-4 w-4 text-muted-foreground\" />\n    </Button>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA,mRAAoD,gCAAgC;AACpF;AACA;AACA;AACA;AAGA,6OAAqD,kBAAkB;;;AATvE,cAAc,qBAAqB;;;;;;;AAe5B,MAAM,oBAAsD,CAAC,EAAE,QAAQ,EAAE;;IAC9E,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,uCAAuC;IAExF,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACR,YAAY,OAAO,sDAAsD;QAC3E;sCAAG,EAAE;IAEL,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,eAAY,AAAD,EAAE;QAChF,IAAI,SAAS,EAAE;QACf,MAAM;YAAE,MAAM;YAAY;QAAS;QACnC,UAAU,CAAC;IACb;IAEA,MAAM,QAAQ;QACZ,WAAW,wKAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClC,SAAS,aAAa,MAAM;QAC5B,QAAQ,aAAa,MAAM;QAC3B,QAAQ,aAAa,aAAc,WAAW,SAAS;IACzD;IAEA,wDAAwD;IACxD,IAAI,CAAC,UAAU;QACb,qBACE,6LAAC;YAAI,WAAU;;8BACV,6LAAC,uIAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;8BACpB,6LAAC,uIAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;;;;;;;IAG7B;IAEA,wDAAwD;IACxD,qBACE,6LAAC,qIAAA,CAAA,SAAM;QACL,KAAK;QACL,OAAO;QACP,SAAQ;QACR,WAAU;QACT,GAAG,SAAS;QACZ,GAAG,UAAU;;0BAEd,6LAAC;gBAAK,WAAU;0BAAY,SAAS,IAAI;;;;;;YAAQ;0BACjD,6LAAC,yNAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;;;;;;;AAG9B;GA5Ca;;QAO0D,8JAAA,CAAA,eAAY;;;KAPtE","debugId":null}},
    {"offset": {"line": 1164, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-mobile.tsx"],"sourcesContent":["import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n"],"names":[],"mappings":";;;AAAA;;;AAEA,MAAM,oBAAoB;AAEnB,SAAS;;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAAuB;IAEpE,CAAA,GAAA,6JAAA,CAAA,YAAe,AAAD;iCAAE;YACd,MAAM,MAAM,OAAO,UAAU,CAAC,CAAC,YAAY,EAAE,oBAAoB,EAAE,GAAG,CAAC;YACvE,MAAM;kDAAW;oBACf,YAAY,OAAO,UAAU,GAAG;gBAClC;;YACA,IAAI,gBAAgB,CAAC,UAAU;YAC/B,YAAY,OAAO,UAAU,GAAG;YAChC;yCAAO,IAAM,IAAI,mBAAmB,CAAC,UAAU;;QACjD;gCAAG,EAAE;IAEL,OAAO,CAAC,CAAC;AACX;GAdgB","debugId":null}},
    {"offset": {"line": 1201, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/EmployeeList.tsx"],"sourcesContent":["\n'use client'; // Add this directive\n\nimport React, { useState, useEffect } from 'react'; // Import useState and useEffect\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { DraggableEmployee } from './DraggableEmployee';\nimport type { Employee } from '@/types/schedule';\nimport { Users } from 'lucide-react';\nimport { useIsMobile } from '@/hooks/use-mobile'; // Import the hook\nimport { Skeleton } from '@/components/ui/skeleton'; // Import Skeleton\n\ninterface EmployeeListProps {\n  employees: Employee[];\n}\n\nexport const EmployeeList: React.FC<EmployeeListProps> = ({ employees }) => {\n  const [isClient, setIsClient] = useState(false);\n  const isMobile = useIsMobile(); // Use the hook\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  // Calculate count only on client\n  const employeeCount = employees.length; // Calculate length directly\n\n  // Do not render this component on mobile\n  if (isMobile) {\n    return null;\n  }\n\n  return (\n    <Card className=\"h-full\"> {/* Allow card to take full height */}\n      <CardHeader>\n         <CardTitle className=\"text-lg font-medium flex items-center gap-2 truncate\"> {/* Add truncate here */}\n             <Users className=\"h-5 w-5 text-muted-foreground flex-shrink-0\" /> {/* Prevent icon shrink */}\n             {/* Show count only on client to avoid hydration mismatch */}\n             Colaboradores Disponibles ({isClient ? employeeCount : '...'})\n         </CardTitle>\n      </CardHeader>\n       <CardContent className=\"space-y-3 overflow-y-auto max-h-[calc(100vh-200px)]\"> {/* Make content scrollable */}\n        {isClient ? ( // Only render the list content on the client\n          employees.length > 0 ? (\n            employees.map((employee) => (\n              <DraggableEmployee key={employee.id} employee={employee} />\n            ))\n          ) : (\n            <p className=\"text-sm text-muted-foreground text-center pt-4 italic\">\n              No hay colaboradores disponibles.\n            </p>\n          )\n        ) : (\n          // Show skeleton placeholders during SSR/initial hydration\n          <div className=\"space-y-3\">\n            {[...Array(3)].map((_, i) => (\n                <div key={i} className=\"flex items-center justify-between p-2 border rounded-md bg-muted h-10\">\n                     <Skeleton className=\"h-4 w-3/4\" />\n                     <Skeleton className=\"h-4 w-4\" />\n                 </div>\n             ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA,mRAAoD,gCAAgC;AACpF;AACA;AAEA;AACA,iOAAkD,kBAAkB;AACpE,6OAAqD,kBAAkB;;;AARvE,cAAc,qBAAqB;;;;;;;AAc5B,MAAM,eAA4C,CAAC,EAAE,SAAS,EAAE;;IACrE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,WAAW,CAAA,GAAA,iIAAA,CAAA,cAAW,AAAD,KAAK,eAAe;IAE/C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,YAAY;QACd;iCAAG,EAAE;IAEL,iCAAiC;IACjC,MAAM,gBAAgB,UAAU,MAAM,EAAE,4BAA4B;IAEpE,yCAAyC;IACzC,IAAI,UAAU;QACZ,OAAO;IACT;IAEA,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;YAAS;0BACvB,6LAAC,mIAAA,CAAA,aAAU;0BACR,cAAA,6LAAC,mIAAA,CAAA,YAAS;oBAAC,WAAU;;wBAAuD;sCACxE,6LAAC,uMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;wBAAgD;wBACJ;wBACjC,WAAW,gBAAgB;wBAAM;;;;;;;;;;;;0BAGnE,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;;oBAAsD;oBAC3E,WACC,UAAU,MAAM,GAAG,IACjB,UAAU,GAAG,CAAC,CAAC,yBACb,6LAAC,sJAAA,CAAA,oBAAiB;4BAAmB,UAAU;2BAAvB,SAAS,EAAE;;;;kDAGrC,6LAAC;wBAAE,WAAU;kCAAwD;;;;;+BAKvE,0DAA0D;kCAC1D,6LAAC;wBAAI,WAAU;kCACZ;+BAAI,MAAM;yBAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACnB,6LAAC;gCAAY,WAAU;;kDAClB,6LAAC,uIAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;kDACpB,6LAAC,uIAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;;+BAFf;;;;;;;;;;;;;;;;;;;;;;AAU1B;GAlDa;;QAEM,iIAAA,CAAA,cAAW;;;KAFjB","debugId":null}},
    {"offset": {"line": 1346, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/time-utils.ts"],"sourcesContent":["// src/lib/time-utils.ts\n\nimport { format as formatFns, parse as parseFns } from 'date-fns';\nimport { es } from 'date-fns/locale'; // Import Spanish locale if needed for 'am/pm'\n\n/**\n * Formats a time string (HH:mm) into 12-hour format (h:mm a).\n * Handles invalid input gracefully.\n *\n * @param timeString - The time string in \"HH:mm\" format.\n * @returns The formatted time string (e.g., \"8:00 AM\") or the original string if invalid.\n */\nexport function formatTo12Hour(timeString: string | undefined): string {\n  if (!timeString || !/^\\d{2}:\\d{2}$/.test(timeString)) {\n    return timeString || ''; // Return original or empty string if invalid/undefined\n  }\n\n  try {\n    // Create a dummy date object with the time to use date-fns formatting\n    const dummyDate = parseFns(timeString, 'HH:mm', new Date());\n    // Format using 'h:mm a' for 12-hour format with AM/PM\n    // Use locale 'es' if you want 'a. m.'/'p. m.' instead of AM/PM\n    return formatFns(dummyDate, 'h:mm a', { locale: es });\n  } catch (error) {\n    console.error(`Error formatting time string \"${timeString}\":`, error);\n    return timeString; // Return original string on error\n  }\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;AAExB;AAAA;AACA,0PAAsC,8CAA8C;;;AAS7E,SAAS,eAAe,UAA8B;IAC3D,IAAI,CAAC,cAAc,CAAC,gBAAgB,IAAI,CAAC,aAAa;QACpD,OAAO,cAAc,IAAI,uDAAuD;IAClF;IAEA,IAAI;QACF,sEAAsE;QACtE,MAAM,YAAY,CAAA,GAAA,wJAAA,CAAA,QAAQ,AAAD,EAAE,YAAY,SAAS,IAAI;QACpD,sDAAsD;QACtD,+DAA+D;QAC/D,OAAO,CAAA,GAAA,yJAAA,CAAA,SAAS,AAAD,EAAE,WAAW,UAAU;YAAE,QAAQ,+IAAA,CAAA,KAAE;QAAC;IACrD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,8BAA8B,EAAE,WAAW,EAAE,CAAC,EAAE;QAC/D,OAAO,YAAY,kCAAkC;IACvD;AACF","debugId":null}},
    {"offset": {"line": 1381, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ShiftCard.tsx"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Trash2, Clock, Coffee } from 'lucide-react'; // Added Coffee icon for break\nimport type { ShiftAssignment } from '@/types/schedule'; // Assuming type exists\nimport { cn } from '@/lib/utils'; // Import cn\nimport { formatTo12Hour } from '@/lib/time-utils'; // Import the formatting helper\n\ninterface ShiftCardProps {\n  assignment: ShiftAssignment;\n  onRemove: (event: React.MouseEvent<HTMLButtonElement>) => void; // Pass event to stop propagation\n  isCompact?: boolean; // Optional flag for compact view\n  onClick?: () => void; // Optional click handler for the card\n}\n\nexport const ShiftCard: React.FC<ShiftCardProps> = ({ assignment, onRemove, isCompact = false, onClick }) => {\n  // Add useSortable hook here if making items within a column sortable\n  // const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ id: assignment.id });\n  // const style = { transform: CSS.Transform.toString(transform), transition };\n\n  const handleRemoveClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.stopPropagation(); // Prevent triggering the card's onClick\n    onRemove(event);\n  };\n\n\n  return (\n     <Card\n        // ref={setNodeRef} // For sortable\n        // style={style} // For sortable\n        className={cn(\n            \"group bg-background border shadow-sm transition-colors duration-150 relative\", // Add 'group' class, transition, and relative positioning\n            isCompact ? \"border-none shadow-none bg-transparent p-0 hover:bg-accent/50 cursor-pointer\" : \"hover:border-primary\", // Remove borders/padding if compact, add hover background and cursor\n            onClick && \"cursor-pointer\" // Add cursor pointer if onClick is provided\n        )}\n        // {...attributes} // For sortable\n        // {...listeners} // For sortable - Be careful with listeners vs onClick\n        onClick={onClick} // Add onClick handler to the card\n     >\n       <CardContent className={cn(\n           \"flex items-start justify-between\", // Changed items-center to items-start\n           isCompact ? \"p-0.5\" : \"p-3\" // Smaller padding if compact\n       )}>\n         {/* Content Wrapper */}\n         <div className=\"flex-grow min-w-0 overflow-hidden mr-1 pr-4\"> {/* Add padding-right to prevent overlap with absolute button */}\n             <p className={cn(\n                 \"font-medium truncate\",\n                 isCompact ? \"text-xs\" : \"text-sm\" // Increased compact font size back to xs\n             )} title={assignment.employee.name}>{assignment.employee.name}</p>\n             <div className={cn( // Wrap times in a div for better spacing control\n                 \"text-muted-foreground flex flex-wrap items-center\", // Use flex-wrap and items-center\n                 isCompact ? \"text-[11px] gap-x-1 gap-y-0\" : \"text-xs gap-x-1.5 gap-y-0.5\" // Increased compact font size from 10px, allow wrapping\n             )}>\n                 {/* Shift Time */}\n                 <span className=\"flex items-center gap-0.5\">\n                     <Clock className={cn(\"flex-shrink-0\", isCompact ? \"h-2.5 w-2.5\" : \"h-3 w-3\")} /> {/* Slightly larger icon, prevent shrink */}\n                     {/* Format times using the helper */}\n                     <span className=\"whitespace-nowrap\">{formatTo12Hour(assignment.startTime)}-{formatTo12Hour(assignment.endTime)}</span> {/* Prevent time wrap */}\n                 </span>\n                 {/* Break Time - Show icon and text if included */}\n                 {assignment.includeBreak && assignment.breakStartTime && assignment.breakEndTime && (\n                    <span className={cn(\n                        \"flex items-center gap-0.5\",\n                        isCompact && \"text-blue-600 dark:text-blue-400\" // Optional: different color for break icon in compact\n                        )} title={`Descanso: ${formatTo12Hour(assignment.breakStartTime)}-${formatTo12Hour(assignment.breakEndTime)}`}>\n                        <Coffee className={cn(\"flex-shrink-0\", isCompact ? \"h-2.5 w-2.5\" : \"h-3 w-3\")} /> {/* Break icon */}\n                        {/* Show break times in compact view as well */}\n                        {/* Format break times using the helper */}\n                        <span className=\"whitespace-nowrap\">D: {formatTo12Hour(assignment.breakStartTime)}-{formatTo12Hour(assignment.breakEndTime)}</span>\n                    </span>\n                 )}\n             </div>\n         </div>\n          {/* Delete Button - Positioned absolute top-right */}\n         <Button\n             variant=\"ghost\"\n             size=\"icon\"\n             className={cn(\n                 \"absolute top-1 right-1\", // Position top-right\n                 \"text-destructive flex-shrink-0 opacity-0 group-hover:opacity-100 transition-opacity hover:bg-destructive/10\", // Hide by default, show on group hover, add transition, add red hover\n                 isCompact ? \"h-4 w-4\" : \"h-7 w-7\", // Smaller button if compact\n                 // Keep the button hidden on mobile/tablet for compact view unless hovering\n                 isCompact && \"group-hover:opacity-100 md:opacity-0\"\n             )}\n             onClick={handleRemoveClick} // Use the new handler\n             title=\"Eliminar turno\" // Add title for accessibility\n          >\n           <Trash2 className={cn(isCompact ? \"h-2.5 w-2.5\" : \"h-4 w-4\")} /> {/* Smaller icon if compact */}\n         </Button>\n       </CardContent>\n     </Card>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;AACA,mWAAsD,8BAA8B;AAApF;AAAA;AAEA,8MAAkC,YAAY;AAC9C,2NAAmD,+BAA+B;;;;;;;AAS3E,MAAM,YAAsC,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,KAAK,EAAE,OAAO,EAAE;IACtG,qEAAqE;IACrE,2GAA2G;IAC3G,8EAA8E;IAE9E,MAAM,oBAAoB,CAAC;QACzB,MAAM,eAAe,IAAI,wCAAwC;QACjE,SAAS;IACX;IAGA,qBACG,6LAAC,mIAAA,CAAA,OAAI;QACF,mCAAmC;QACnC,gCAAgC;QAChC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACR,gFACA,YAAY,iFAAiF,wBAC7F,WAAW,iBAAiB,4CAA4C;;QAE5E,kCAAkC;QAClC,wEAAwE;QACxE,SAAS;kBAEV,cAAA,6LAAC,mIAAA,CAAA,cAAW;YAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACrB,oCACA,YAAY,UAAU,MAAM,6BAA6B;;;8BAG3D,6LAAC;oBAAI,WAAU;;wBAA8C;sCACzD,6LAAC;4BAAE,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,wBACA,YAAY,YAAY,UAAU,yCAAyC;;4BAC5E,OAAO,WAAW,QAAQ,CAAC,IAAI;sCAAG,WAAW,QAAQ,CAAC,IAAI;;;;;;sCAC7D,6LAAC;4BAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACb,qDACA,YAAY,gCAAgC,8BAA8B,wDAAwD;;;8CAGlI,6LAAC;oCAAK,WAAU;;sDACZ,6LAAC,uMAAA,CAAA,QAAK;4CAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB,YAAY,gBAAgB;;;;;;wCAAc;sDAEhF,6LAAC;4CAAK,WAAU;;gDAAqB,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,SAAS;gDAAE;gDAAE,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,OAAO;;;;;;;wCAAS;;;;;;;gCAGzH,WAAW,YAAY,IAAI,WAAW,cAAc,IAAI,WAAW,YAAY,kBAC7E,6LAAC;oCAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACd,6BACA,aAAa,mCAAmC,sDAAsD;;oCACnG,OAAO,CAAC,UAAU,EAAE,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,cAAc,EAAE,CAAC,EAAE,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,YAAY,GAAG;;sDAC7G,6LAAC,yMAAA,CAAA,SAAM;4CAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB,YAAY,gBAAgB;;;;;;wCAAc;sDAGjF,6LAAC;4CAAK,WAAU;;gDAAoB;gDAAI,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,cAAc;gDAAE;gDAAE,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;8BAMzI,6LAAC,qIAAA,CAAA,SAAM;oBACH,SAAQ;oBACR,MAAK;oBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACR,0BACA,+GACA,YAAY,YAAY,WACxB,2EAA2E;oBAC3E,aAAa;oBAEjB,SAAS;oBACT,OAAM,iBAAiB,8BAA8B;;;sCAEvD,6LAAC,6MAAA,CAAA,SAAM;4BAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY,gBAAgB;;;;;;wBAAc;;;;;;;;;;;;;;;;;;AAK3E;KA7Ea","debugId":null}},
    {"offset": {"line": 1557, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/DepartmentColumn.tsx"],"sourcesContent":["\n// src/components/schedule/DepartmentColumn.tsx\n'use client'; // Ensure client component\n\nimport React, { useState, useEffect } from 'react'; // Import useState and useEffect\nimport { useDroppable } from '@dnd-kit/core';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Plus, Trash2 } from 'lucide-react';\nimport type { Department, ShiftAssignment, Employee } from '@/types/schedule'; // Assuming types exist\nimport { ShiftCard } from './ShiftCard'; // Assuming ShiftCard component exists\nimport { format } from 'date-fns';\nimport { cn } from '@/lib/utils'; // Added cn\nimport { Skeleton } from '@/components/ui/skeleton'; // Import Skeleton for placeholder\n\ninterface DepartmentColumnProps {\n  department: Department;\n  assignments: ShiftAssignment[];\n  onRemoveShift: (departmentId: string, assignmentId: string) => void;\n  date: Date; // Date for this column\n  onAddShiftRequest: (departmentId: string, date: Date) => void; // New handler for '+' button click\n  onShiftClick: (assignment: ShiftAssignment, date: Date, departmentId: string) => void; // Handler for clicking a shift card\n  isWeekView?: boolean; // Flag for potentially different rendering in week view\n  isMobile: boolean; // Flag to detect mobile view\n}\n\nexport const DepartmentColumn: React.FC<DepartmentColumnProps> = ({\n  department,\n  assignments,\n  onRemoveShift,\n  date,\n  onAddShiftRequest, // Destructure new handler\n  onShiftClick, // Destructure shift click handler\n  isWeekView = false,\n  isMobile, // Destructure mobile flag\n}) => {\n  const [isClient, setIsClient] = useState(false); // State for client-side rendering\n\n  useEffect(() => {\n    setIsClient(true); // Set true after initial mount\n  }, []);\n\n  const dateKey = format(date, 'yyyy-MM-dd');\n  const { setNodeRef, isOver } = useDroppable({\n    id: `${department.id}_${dateKey}`, // Make ID unique per department and date\n    data: {\n        type: 'department',\n        id: department.id,\n        date: dateKey, // Pass date string in data\n    },\n    disabled: isMobile || !isClient, // Disable dropping on mobile or until client-side hydration\n  });\n\n  const style = {\n    backgroundColor: isOver ? 'hsl(var(--accent)/0.1)' : undefined,\n    borderColor: isOver ? 'hsl(var(--accent))' : (isWeekView ? 'hsl(var(--border) / 0.3)' : undefined), // Lighter border in week view normal state\n    borderWidth: '1px',\n    borderStyle: isOver ? 'dashed' : 'solid',\n    minHeight: isWeekView ? '60px' : '200px',\n    transition: 'background-color 0.2s ease, border-color 0.2s ease',\n    borderRadius: isWeekView ? '0.375rem' : undefined,\n  };\n\n  // Render placeholder on server and initial client render\n  const renderPlaceholder = () => {\n    if (isWeekView) {\n      return <Skeleton className=\"h-6 w-full\" />; // Simple skeleton for week view\n    }\n    return (\n      <div className=\"p-3 space-y-2\">\n        <Skeleton className=\"h-8 w-full\" />\n        <Skeleton className=\"h-5 w-3/4\" />\n      </div>\n    );\n  };\n\n  // Actual content rendering logic\n  const renderContent = () => {\n     const assignmentCount = assignments.length; // Calculate length here\n\n    if (isWeekView) {\n      return (\n        <>\n          {assignmentCount > 0 ? (\n            assignments.map((assignment) => (\n              <ShiftCard\n                key={assignment.id}\n                assignment={assignment}\n                onRemove={(e) => { e.stopPropagation(); onRemoveShift(department.id, assignment.id); }}\n                isCompact\n                onClick={() => onShiftClick(assignment, date, department.id)}\n              />\n            ))\n          ) : (\n            // Minimal placeholder for empty week view cells on desktop\n             !isMobile && <div className=\"h-4\"></div> // Small spacer\n          )}\n          {/* Single '+' button at the bottom for week view on mobile */}\n          {/* Removed the mobile '+' button, handled in ScheduleView now */}\n        </>\n      );\n    } else {\n      // Full rendering for day view\n      return (\n        <>\n          {assignmentCount > 0 ? (\n            assignments.map((assignment) => (\n              <ShiftCard\n                key={assignment.id}\n                assignment={assignment}\n                onRemove={(e) => { e.stopPropagation(); onRemoveShift(department.id, assignment.id); }}\n                onClick={() => onShiftClick(assignment, date, department.id)}\n              />\n            ))\n          ) : (\n            <p className=\"text-xs text-muted-foreground text-center pt-4 italic\">\n              {!isMobile ? 'Arrastra o usa +' : 'Usa + para añadir'} {/* Adjusted text based on mobile */}\n            </p>\n          )}\n        </>\n      );\n    }\n  };\n\n  // Main return logic\n  if (isWeekView) {\n     // Simplified structure for week view, '+' button logic handled inside ScheduleView\n    return (\n      <div ref={setNodeRef} style={style} className=\"p-1 space-y-0.5\">\n        {isClient ? renderContent() : renderPlaceholder()}\n      </div>\n    );\n  } else {\n    // Day view with Card structure and a single '+' button in the header\n    return (\n      <Card ref={setNodeRef} style={style} className=\"flex flex-col h-full shadow-sm\">\n        <CardHeader className=\"flex flex-row items-center justify-between pb-2 pt-4 px-4 border-b\">\n           <CardTitle className=\"text-base font-medium flex items-center gap-2 text-foreground\">\n               {department.icon && <department.icon className=\"h-3.5 w-3.5 text-muted-foreground\" />}\n                {/* Show count only on client */}\n               {department.name} ({isClient ? assignments.length : '...'})\n           </CardTitle>\n           {/* Single '+' button in the header for Day View */}\n          <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"h-7 w-7 text-primary hover:bg-primary/10\" // Styled button\n              onClick={() => onAddShiftRequest(department.id, date)}\n              title=\"Añadir Colaborador\"\n          >\n            <Plus className=\"h-4 w-4\" />\n          </Button>\n        </CardHeader>\n        <CardContent className=\"flex-grow p-3 space-y-2 overflow-y-auto\">\n          {isClient ? renderContent() : renderPlaceholder()}\n        </CardContent>\n      </Card>\n    );\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1798, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,sKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,6LAAC,sKAAA,CAAA,UAAwB;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sYACA;QAED,GAAG,KAAK;;;;;;;AAGb,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1841, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ScheduleView.tsx"],"sourcesContent":["\n// src/components/schedule/ScheduleView.tsx\nimport React, { useState, useEffect } from 'react'; // Added useState, useEffect\nimport type { Department, ScheduleData, ShiftAssignment, ScheduleNote, Employee } from '@/types/schedule'; // Added ScheduleNote and Employee\nimport { DepartmentColumn } from './DepartmentColumn'; // Assuming DepartmentColumn component exists\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card'; // Added CardFooter\nimport { format, parse as parseDateFns, isValid as isValidDate } from 'date-fns'; // Correctly import parse and isValid\nimport { es } from 'date-fns/locale';\nimport { Button } from '../ui/button';\nimport { Plus, Copy, Eraser, NotebookPen } from 'lucide-react'; // Added NotebookPen icon\nimport { cn } from '@/lib/utils'; // Import cn\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\" // Import Tooltip components\nimport { AlertDialog, AlertDialogTrigger, AlertDialogContent, AlertDialogHeader, AlertDialogTitle, AlertDialogDescription, AlertDialogFooter, AlertDialogCancel, AlertDialogAction } from '@/components/ui/alert-dialog'; // Import AlertDialog components\nimport { Skeleton } from '@/components/ui/skeleton'; // Import Skeleton\n\ninterface ScheduleViewProps {\n  departments: Department[];\n  scheduleData: { [dateKey: string]: ScheduleData }; // Now a map of dateKey to ScheduleData\n  onRemoveShift: (dateKey: string, departmentId: string, assignmentId: string) => void;\n  viewMode: 'day' | 'week';\n  weekDates: Date[];\n  currentDate: Date; // For day view\n  onAddShiftRequest: (departmentId: string, date: Date) => void; // New handler for '+' button click\n  onShiftClick: (assignment: ShiftAssignment, date: Date, departmentId: string) => void; // Handler for clicking a shift card\n  getScheduleForDate: (date: Date) => ScheduleData; // Function to get schedule for a specific date\n  onDuplicateDay: (sourceDate: Date) => void; // Add prop for duplicating a day's schedule\n  onClearDay: (dateToClear: Date) => void; // Add prop for clearing a day's schedule\n  isHoliday: (date: Date | null | undefined) => boolean; // Function to check if a date is a holiday\n  isMobile: boolean; // Flag to detect mobile view\n  getNotesForDate: (date: Date) => ScheduleNote[]; // Function to get notes for a date\n  onOpenNotesModal: (date: Date) => void; // Handler to open notes modal for a specific date\n  employees: Employee[]; // Pass employees to render tooltip content correctly\n  setNoteToDeleteId?: (id: string | null) => void; // Optional prop to set note to delete directly\n}\n\nexport const ScheduleView: React.FC<ScheduleViewProps> = ({\n    departments,\n    scheduleData,\n    onRemoveShift,\n    viewMode,\n    weekDates,\n    currentDate,\n    onAddShiftRequest, // Destructure new handler\n    onShiftClick, // Destructure shift click handler\n    getScheduleForDate, // Receive helper function\n    onDuplicateDay, // Receive duplicate handler\n    onClearDay, // Receive clear handler\n    isHoliday, // Receive holiday check function\n    isMobile, // Receive mobile flag\n    getNotesForDate, // Receive notes function\n    onOpenNotesModal, // Receive the handler to open the notes modal\n    employees, // Receive employees\n    setNoteToDeleteId, // Receive the handler to trigger deletion dialog\n}) => {\n  const [isClient, setIsClient] = useState(false); // State for client-side rendering check\n\n  useEffect(() => {\n    setIsClient(true); // Set to true after initial mount\n  }, []);\n\n  // Helper function to render notes tooltip content\n  const renderNotesTooltip = (notes: ScheduleNote[]) => {\n    if (!notes || notes.length === 0) return null;\n    return (\n        <div className=\"text-xs space-y-1 max-w-xs p-2\"> {/* Add padding */}\n            <p className=\"font-medium mb-1\">Anotaciones:</p>\n            {notes.map(note => {\n                const employeeName = note.employeeId ? employees.find(e => e.id === note.employeeId)?.name : null;\n                // Format date for tooltip: Abbreviated day, numeric day, abbreviated month\n                const noteDate = parseDateFns(note.date, 'yyyy-MM-dd', new Date());\n                const formattedDate = isValidDate(noteDate) ? format(noteDate, 'EEE d MMM', { locale: es }) : note.date;\n                return (\n                     <p key={note.id}>\n                         • {note.note} {employeeName ? <span className=\"italic text-muted-foreground\">({employeeName})</span> : ''}\n                     </p>\n                );\n            })}\n        </div>\n    );\n  };\n\n    if (viewMode === 'day') {\n         // --- Day View ---\n        const daySchedule = getScheduleForDate(currentDate);\n        const dynamicGridClass = `grid-cols-1 sm:grid-cols-2 lg:grid-cols-${Math.min(departments.length, 4)} xl:grid-cols-${Math.min(departments.length, 5)}`; // Adjust as needed\n        const isCurrentHoliday = isHoliday(currentDate);\n        const notesForDay = getNotesForDate(currentDate); // Get notes for the current day\n         // Calculate count only on client to avoid hydration mismatch\n        const totalAssignmentsForDay = isClient\n            ? Object.values(daySchedule.assignments).reduce((sum, deptAssignments) => sum + deptAssignments.length, 0)\n            : 0; // Show 0 during SSR and initial render\n\n        return (\n            <Card className={cn(\n                \"shadow-md bg-card border\",\n                isCurrentHoliday ? \"border-primary border-2\" : \"border-border\" // Highlight border if holiday\n            )}>\n                <CardHeader className={cn(\n                    \"border-b relative\", // Added relative\n                    isCurrentHoliday ? \"border-primary\" : \"border-border\" // Match header border to card border\n                )}>\n                    <CardTitle className={cn(\n                        \"text-lg font-medium flex items-center gap-2 pr-8\", // Added padding-right for buttons\n                        isCurrentHoliday ? \"text-primary font-semibold\" : \"text-foreground\" // Highlight text if holiday\n                    )}>\n                        <span> {/* Wrap text */}\n                            Horario para el {format(currentDate, 'PPPP', { locale: es })}\n                            {isCurrentHoliday && <span className=\"text-xs font-normal ml-2\">(Festivo)</span>}\n                        </span>\n                         {/* Notes Indicator and Tooltip/Click */}\n                         {notesForDay.length > 0 && (\n                             <TooltipProvider delayDuration={100}>\n                                 <Tooltip>\n                                     <TooltipTrigger asChild>\n                                          {/* Wrap the icon in a button for click handling */}\n                                          <AlertDialog>\n                                              <AlertDialogTrigger asChild>\n                                                   <Button\n                                                      variant=\"ghost\"\n                                                      size=\"icon\"\n                                                      className=\"h-5 w-5 p-0 text-yellow-500 hover:text-yellow-600 cursor-pointer\" // Yellow color, smaller size\n                                                      aria-label=\"Ver/Eliminar anotaciones\"\n                                                      onClick={(e) => e.stopPropagation()} // Prevent triggering other actions\n                                                   >\n                                                       <NotebookPen className=\"h-4 w-4\" />\n                                                   </Button>\n                                              </AlertDialogTrigger>\n                                              <AlertDialogContent onClick={(e) => e.stopPropagation()}>\n                                                   <AlertDialogHeader>\n                                                      <AlertDialogTitle>Eliminar Anotación?</AlertDialogTitle>\n                                                      <AlertDialogDescription>\n                                                         ¿Estás seguro de que quieres eliminar esta anotación? No se puede deshacer.\n                                                         <br/>\n                                                         <span className='italic'>{notesForDay[0]?.note}</span> {/* Show note to delete */}\n                                                      </AlertDialogDescription>\n                                                   </AlertDialogHeader>\n                                                   <AlertDialogFooter>\n                                                       <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                                                        <AlertDialogAction\n                                                          className=\"bg-destructive hover:bg-destructive/90\"\n                                                          onClick={() => {\n                                                              // Assuming only one note per day for simplicity here,\n                                                              // or you need to identify which note to delete\n                                                              if (setNoteToDeleteId && notesForDay.length > 0) {\n                                                                  setNoteToDeleteId(notesForDay[0].id); // Modify if multiple notes per day\n                                                              }\n                                                          }}\n                                                        >\n                                                            Eliminar Anotación\n                                                         </AlertDialogAction>\n                                                   </AlertDialogFooter>\n                                              </AlertDialogContent>\n                                           </AlertDialog>\n                                      </TooltipTrigger>\n                                     <TooltipContent side=\"bottom\">\n                                         {renderNotesTooltip(notesForDay)}\n                                     </TooltipContent>\n                                 </Tooltip>\n                             </TooltipProvider>\n                         )}\n                    </CardTitle>\n                     {/* Action Buttons: Duplicate and Clear (Day View) */}\n                    <div className=\"absolute top-2 right-2 flex items-center gap-1\">\n                        {/* Duplicate Button */}\n                        <Button\n                            variant=\"ghost\"\n                            size=\"icon\"\n                            className=\"h-6 w-6 text-muted-foreground hover:text-foreground\"\n                            onClick={() => onDuplicateDay(currentDate)}\n                            title=\"Duplicar horario al día siguiente\"\n                        >\n                            <Copy className=\"h-4 w-4\" />\n                        </Button>\n                        {/* Clear Day Button */}\n                        <AlertDialog>\n                            <AlertDialogTrigger asChild>\n                                <Button\n                                    variant=\"ghost\"\n                                    size=\"icon\"\n                                    className=\"h-6 w-6 text-destructive hover:text-destructive/80\"\n                                    title=\"Limpiar turnos del día\"\n                                    disabled={!isClient || (totalAssignmentsForDay === 0 && notesForDay.length === 0)} // Disable if not client or no assignments/notes\n                                >\n                                    <Eraser className=\"h-4 w-4\" />\n                                </Button>\n                            </AlertDialogTrigger>\n                            <AlertDialogContent>\n                                 <AlertDialogHeader>\n                                     <AlertDialogTitle>¿Limpiar Día?</AlertDialogTitle>\n                                     <AlertDialogDescription>\n                                        Esta acción eliminará todos los turnos y anotaciones para el{' '}\n                                        <strong>{format(currentDate, 'PPP', { locale: es })}</strong>. No se puede deshacer.\n                                     </AlertDialogDescription>\n                                 </AlertDialogHeader>\n                                 <AlertDialogFooter>\n                                     <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                                     <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={() => onClearDay(currentDate)}>\n                                         Limpiar Día\n                                     </AlertDialogAction>\n                                 </AlertDialogFooter>\n                            </AlertDialogContent>\n                        </AlertDialog>\n                    </div>\n                </CardHeader>\n                <CardContent className=\"p-4\">\n                    {departments.length > 0 ? (\n                        <div className={`grid ${dynamicGridClass} gap-4`}>\n                            {departments.map((department) => (\n                                <DepartmentColumn\n                                    key={department.id}\n                                    department={department}\n                                    assignments={daySchedule.assignments[department.id] || []}\n                                    onRemoveShift={(deptId, assignId) => onRemoveShift(format(currentDate, 'yyyy-MM-dd'), deptId, assignId)}\n                                    date={currentDate} // Pass the date\n                                    onAddShiftRequest={onAddShiftRequest} // Pass new assign handler\n                                    onShiftClick={onShiftClick} // Pass shift click handler\n                                    isMobile={isMobile} // Pass mobile flag\n                                />\n                            ))}\n                        </div>\n                    ) : (\n                         <p className=\"text-center text-muted-foreground italic py-4\">\n                             No hay departamentos definidos para esta sede. Agrega departamentos en la sección de configuración.\n                         </p>\n                    )}\n                </CardContent>\n                 {/* Removed CardFooter for day view as buttons moved to header */}\n            </Card>\n        );\n    } else {\n         // --- Week View ---\n          const weekViewContent = (\n             <div className=\"grid grid-cols-7 gap-1 min-w-[900px]\"> {/* Use grid for better control, reduced gap, ensured min-width */}\n                {weekDates.map((date, index) => {\n                   const daySchedule = getScheduleForDate(date);\n                   const dateKey = format(date, 'yyyy-MM-dd');\n                   const notesForDay = getNotesForDate(date); // Get notes for this day\n                    // Calculate count only on client to avoid hydration mismatch\n                   const totalAssignmentsForDay = isClient\n                       ? Object.values(daySchedule.assignments || {}).reduce((sum, deptAssignments) => sum + (deptAssignments?.length || 0), 0)\n                       : 0; // Show 0 during SSR and initial render\n                   const isLastDayOfWeek = index === weekDates.length - 1;\n                   const isCurrentHoliday = isHoliday(date);\n\n                   // Card represents a single day column in the week view\n                   return (\n                       <div key={dateKey} className=\"flex flex-col h-full\"> {/* Ensure day column takes height */}\n                           <Card className={cn(\n                               \"shadow-sm bg-card border flex flex-col flex-grow\", // Use flex-grow\n                               isCurrentHoliday ? \"border-primary border-2\" : \"border-border/50\" // Thicker primary border for holiday\n                           )}>\n                               <CardHeader className={cn(\n                                   \"pb-2 pt-3 px-2 border-b relative\", // Reduced padding, added relative\n                                   isCurrentHoliday ? \"border-primary\" : \"border-border/50\" // Match border color\n                               )}>\n                                   <CardTitle className={cn(\n                                       \"text-xs font-semibold text-center whitespace-nowrap flex items-center justify-center gap-1\", // Added flex, items-center, justify-center, gap\n                                       isCurrentHoliday ? \"text-primary\" : \"text-foreground\" // Highlight title text with primary color\n                                   )}>\n                                        <span>{format(date, 'EEE d', { locale: es })}</span> {/* Wrap date text */}\n                                        {/* Notes Indicator and Tooltip/Click */}\n                                        {notesForDay.length > 0 && (\n                                            <TooltipProvider delayDuration={100}>\n                                                <Tooltip>\n                                                    <TooltipTrigger asChild>\n                                                        {/* Wrap the icon in a button for click handling */}\n                                                        <AlertDialog>\n                                                            <AlertDialogTrigger asChild>\n                                                                <Button\n                                                                    variant=\"ghost\"\n                                                                    size=\"icon\"\n                                                                    className=\"h-4 w-4 p-0 text-yellow-500 hover:text-yellow-600 cursor-pointer\" // Yellow color, smaller size\n                                                                    aria-label=\"Ver/Eliminar anotaciones\"\n                                                                    onClick={(e) => e.stopPropagation()} // Prevent triggering other actions\n                                                                >\n                                                                    <NotebookPen className=\"h-3 w-3\" />\n                                                                </Button>\n                                                            </AlertDialogTrigger>\n                                                             <AlertDialogContent onClick={(e) => e.stopPropagation()}>\n                                                                  <AlertDialogHeader>\n                                                                     <AlertDialogTitle>Eliminar Anotación?</AlertDialogTitle>\n                                                                     <AlertDialogDescription>\n                                                                        ¿Estás seguro de que quieres eliminar esta anotación? No se puede deshacer.\n                                                                        <br/>\n                                                                        <span className='italic'>{notesForDay[0]?.note}</span> {/* Show note */}\n                                                                     </AlertDialogDescription>\n                                                                  </AlertDialogHeader>\n                                                                  <AlertDialogFooter>\n                                                                      <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                                                                       <AlertDialogAction\n                                                                         className=\"bg-destructive hover:bg-destructive/90\"\n                                                                         onClick={() => {\n                                                                              if (setNoteToDeleteId && notesForDay.length > 0) {\n                                                                                 setNoteToDeleteId(notesForDay[0].id); // Modify if needed for multiple notes\n                                                                             }\n                                                                         }}\n                                                                       >\n                                                                           Eliminar Anotación\n                                                                        </AlertDialogAction>\n                                                                  </AlertDialogFooter>\n                                                             </AlertDialogContent>\n                                                         </AlertDialog>\n                                                     </TooltipTrigger>\n                                                    <TooltipContent side=\"top\">\n                                                        {renderNotesTooltip(notesForDay)}\n                                                    </TooltipContent>\n                                                </Tooltip>\n                                            </TooltipProvider>\n                                        )}\n                                   </CardTitle>\n                                   <CardDescription className=\"text-[10px] text-muted-foreground text-center\"> {/* Extra small text */}\n                                       {format(date, 'MMM', { locale: es })} ({isClient ? totalAssignmentsForDay : '...'}) {/* Show count only on client */}\n                                       {isCurrentHoliday && <span className=\"text-primary block font-medium\">Festivo</span>} {/* Use primary color for Festivo text */}\n                                   </CardDescription>\n                                   {/* Action Buttons: Duplicate and Clear */}\n                                   <div className=\"absolute top-0.5 right-0.5 flex flex-col gap-0\"> {/* Reduced gap, adjusted position */}\n                                       {!isLastDayOfWeek && (\n                                           <Button\n                                               variant=\"ghost\"\n                                               size=\"icon\"\n                                               className=\"h-4 w-4 p-0 text-muted-foreground hover:text-foreground opacity-50 hover:opacity-100\"\n                                               onClick={() => onDuplicateDay(date)}\n                                               title=\"Duplicar al día siguiente\"\n                                           >\n                                               <Copy className=\"h-2.5 w-2.5\" /> {/* Smaller icon */}\n                                           </Button>\n                                       )}\n                                      <AlertDialog>\n                                         {/* Use asChild prop here */}\n                                         <AlertDialogTrigger asChild>\n                                             <Button\n                                                 variant=\"ghost\"\n                                                 size=\"icon\"\n                                                 className=\"h-4 w-4 p-0 text-destructive hover:text-destructive opacity-50 hover:opacity-100\"\n                                                 title=\"Limpiar turnos del día\"\n                                                 // onClick is implicitly handled by AlertDialogTrigger when not using asChild\n                                                 disabled={!isClient || (totalAssignmentsForDay === 0 && notesForDay.length === 0)} // Disable if not client or no assignments/notes\n                                             >\n                                                 <Eraser className=\"h-2.5 w-2.5\" /> {/* Smaller icon */}\n                                             </Button>\n                                         </AlertDialogTrigger>\n                                         <AlertDialogContent>\n                                              <AlertDialogHeader>\n                                                  <AlertDialogTitle>¿Limpiar Día?</AlertDialogTitle>\n                                                  <AlertDialogDescription>\n                                                     Esta acción eliminará todos los turnos y anotaciones para el{' '}\n                                                     <strong>{format(date, 'PPP', { locale: es })}</strong>. No se puede deshacer.\n                                                  </AlertDialogDescription>\n                                              </AlertDialogHeader>\n                                              <AlertDialogFooter>\n                                                  <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                                                  <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={() => onClearDay(date)}>\n                                                      Limpiar Día\n                                                  </AlertDialogAction>\n                                              </AlertDialogFooter>\n                                         </AlertDialogContent>\n                                      </AlertDialog>\n                                   </div>\n                               </CardHeader>\n                               <CardContent className=\"p-1 space-y-1 flex-grow overflow-y-auto\"> {/* Reduced padding, smaller space */}\n                                   {departments.length > 0 ? (\n                                       departments.map((department) => (\n                                           <div key={department.id} className=\"border rounded-sm p-1 bg-muted/10 relative\"> {/* Reduced padding/rounding, lighter bg */}\n                                               <div className=\"flex justify-between items-center mb-0.5\"> {/* Reduced margin */}\n                                                   <h4 className=\"text-[10px] font-semibold text-foreground flex items-center gap-0.5 whitespace-nowrap overflow-hidden text-ellipsis pr-4\"> {/* Extra small, reduced gap/padding */}\n                                                        {department.icon && <department.icon className=\"h-2.5 w-2.5 text-muted-foreground\" />} {/* Smaller icon */}\n                                                        <span className=\"overflow-hidden text-ellipsis\">{department.name}</span>\n                                                   </h4>\n                                                   {/* Add shift button directly here */}\n                                                    <Button\n                                                         variant=\"ghost\"\n                                                         size=\"icon\"\n                                                         className=\"absolute top-0 right-0 h-4 w-4 p-0 text-primary hover:bg-primary/10\" // Positioned top-right\n                                                         onClick={() => onAddShiftRequest(department.id, date)}\n                                                         title=\"Añadir Colaborador\"\n                                                    >\n                                                        <Plus className=\"h-3 w-3\" />\n                                                    </Button>\n                                               </div>\n                                               <DepartmentColumn\n                                                   department={department}\n                                                   assignments={daySchedule.assignments[department.id] || []}\n                                                   onRemoveShift={(deptId, assignId) => onRemoveShift(dateKey, deptId, assignId)}\n                                                   isWeekView\n                                                   date={date}\n                                                   onAddShiftRequest={onAddShiftRequest}\n                                                   onShiftClick={onShiftClick}\n                                                   isMobile={isMobile} // Pass mobile flag\n                                               />\n                                           </div>\n                                       ))\n                                    ) : (\n                                         <p className=\"text-center text-[10px] text-muted-foreground italic pt-1\"> {/* Smaller text/padding */}\n                                             No hay deptos.\n                                         </p>\n                                    )}\n                               </CardContent>\n                           </Card>\n                       </div>\n                   );\n               })}\n             </div>\n           );\n\n         // Return the scrollable container wrapping the week view content\n         return weekViewContent;\n    }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2782, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger // Export DialogTrigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close // Export DialogClose\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose, // Export DialogClose\n  DialogTrigger, // Export DialogTrigger\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,sKAAwB,uBAAuB;AAA/C,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,sKAAsB,qBAAqB;AAA3C,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2935, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ShiftDetailModal.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch'; // Import Switch\nimport { Save, X, PencilLine } from 'lucide-react'; // Added PencilLine\nimport type { ShiftDetails } from '@/types/schedule'; // Assuming type exists\nimport { useToast } from '@/hooks/use-toast';\nimport { cn } from '@/lib/utils'; // Import cn\nimport { formatTo12Hour } from '@/lib/time-utils'; // Import the time formatting helper\n\ninterface ShiftDetailModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (details: ShiftDetails) => void;\n  employeeName: string;\n  departmentName: string;\n  initialDetails?: Partial<ShiftDetails>; // For editing existing shifts\n  isEditing?: boolean; // Flag to indicate if editing\n}\n\n// Basic time validation (HH:MM format)\nconst timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\nconst timeErrorMessage = 'Formato HH:MM inválido.';\n\nexport const ShiftDetailModal: React.FC<ShiftDetailModalProps> = ({\n  isOpen,\n  onClose,\n  onSave,\n  employeeName,\n  departmentName,\n  initialDetails,\n  isEditing = false, // Default to false (adding)\n}) => {\n  const { toast } = useToast();\n  const [startTime, setStartTime] = useState(initialDetails?.startTime || '12:00'); // Default to 12:00 PM\n  const [endTime, setEndTime] = useState(initialDetails?.endTime || '22:00'); // Default to 10:00 PM\n  const [includeBreak, setIncludeBreak] = useState(initialDetails?.includeBreak || false); // Default to false\n  const [breakStartTime, setBreakStartTime] = useState(initialDetails?.breakStartTime || '15:00'); // Default 3 PM\n  const [breakEndTime, setBreakEndTime] = useState(initialDetails?.breakEndTime || '18:00'); // Default 6 PM\n\n  const [startTimeError, setStartTimeError] = useState<string | null>(null);\n  const [endTimeError, setEndTimeError] = useState<string | null>(null);\n  const [breakStartTimeError, setBreakStartTimeError] = useState<string | null>(null);\n  const [breakEndTimeError, setBreakEndTimeError] = useState<string | null>(null);\n\n  // Reset state when modal opens or initial details change\n  useEffect(() => {\n    if (isOpen) {\n        const defaultStartTime = '12:00'; // Updated default start time\n        const defaultEndTime = '22:00';   // Updated default end time\n        const defaultBreakStartTime = '15:00';\n        const defaultBreakEndTime = '18:00';\n\n        setStartTime(initialDetails?.startTime || defaultStartTime);\n        setEndTime(initialDetails?.endTime || defaultEndTime);\n        setIncludeBreak(initialDetails?.includeBreak || false);\n        setBreakStartTime(initialDetails?.breakStartTime || defaultBreakStartTime);\n        setBreakEndTime(initialDetails?.breakEndTime || defaultBreakEndTime);\n        setStartTimeError(null);\n        setEndTimeError(null);\n        setBreakStartTimeError(null);\n        setBreakEndTimeError(null);\n    }\n   // Dependency includes initialDetails to reset when editing a different shift\n   // isEditing is included to ensure reset happens correctly when switching between add/edit modes\n  }, [isOpen, initialDetails, isEditing]);\n\n\n  const handleSaveClick = () => {\n    let isValid = true;\n    setStartTimeError(null);\n    setEndTimeError(null);\n    setBreakStartTimeError(null);\n    setBreakEndTimeError(null);\n\n    if (!timeRegex.test(startTime)) {\n      setStartTimeError(timeErrorMessage);\n      isValid = false;\n    }\n    if (!timeRegex.test(endTime)) {\n      setEndTimeError(timeErrorMessage);\n      isValid = false;\n    }\n\n    // Validate break times only if break is included\n    if (includeBreak) {\n        if (!breakStartTime || !timeRegex.test(breakStartTime)) {\n            setBreakStartTimeError(timeErrorMessage);\n            isValid = false;\n        }\n        if (!breakEndTime || !timeRegex.test(breakEndTime)) {\n            setBreakEndTimeError(timeErrorMessage);\n            isValid = false;\n        }\n\n        // Check break end time is after break start time\n        if (isValid && breakStartTime && breakEndTime && breakStartTime >= breakEndTime) {\n             setBreakEndTimeError('Hora fin descanso debe ser posterior a hora inicio.');\n             isValid = false;\n             // Note: Simple comparison works for HH:MM within the same day.\n             // More complex logic needed if breaks can cross midnight (unlikely scenario).\n        }\n    }\n\n\n    // Basic check: end time should be after start time (doesn't handle overnight yet)\n    if (isValid && startTime >= endTime) {\n        // Allow overnight shifts for simplicity, maybe add a warning or flag later\n        // setEndTimeError('Hora de fin debe ser posterior a la hora de inicio.');\n        // isValid = false;\n    }\n\n\n    if (isValid) {\n      onSave({\n        startTime,\n        endTime,\n        includeBreak,\n        breakStartTime: includeBreak ? breakStartTime : undefined, // Only save if included\n        breakEndTime: includeBreak ? breakEndTime : undefined,     // Only save if included\n      });\n    } else {\n        toast({\n            title: \"Error de Validación\",\n            description: \"Por favor corrige los campos marcados.\",\n            variant: \"destructive\",\n        });\n    }\n  };\n\n  const title = isEditing ? 'Editar Detalles del Turno' : 'Detalles del Turno';\n  const saveButtonText = isEditing ? 'Guardar Cambios' : 'Guardar Turno';\n  const SaveIcon = isEditing ? PencilLine : Save; // Use different icon for editing\n\n  // Helper function to handle input changes and keep 24-hour format internally\n  const handleTimeChange = (setter: React.Dispatch<React.SetStateAction<string>>, value: string) => {\n    if (timeRegex.test(value)) {\n      setter(value);\n    } else {\n      // Handle potential partial input or conversion if needed\n      // For now, just update if valid 24-hour format\n      setter(value); // Allow intermediate typing\n    }\n  };\n\n\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>{title}</DialogTitle>\n          <DialogDescription>\n            {isEditing ? 'Modificando' : 'Asignando'} a <strong>{employeeName}</strong> en <strong>{departmentName}</strong>.\n            Ingresa las horas y el descanso.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"grid gap-4 py-4\">\n          {/* Start Time */}\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"start-time\" className=\"text-right\">\n              Inicio Turno\n            </Label>\n             <Input\n                id=\"start-time\"\n                type=\"time\" // Use type=\"time\" for the native picker\n                value={startTime} // Bind directly to the 24-hour state\n                onChange={(e) => handleTimeChange(setStartTime, e.target.value)}\n                className={cn(\"col-span-3\", startTimeError && 'border-destructive ring-destructive')}\n            />\n             {startTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{startTimeError}</p>}\n          </div>\n          {/* End Time */}\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"end-time\" className=\"text-right\">\n              Fin Turno\n            </Label>\n             <Input\n                id=\"end-time\"\n                type=\"time\"\n                value={endTime}\n                onChange={(e) => handleTimeChange(setEndTime, e.target.value)}\n                className={cn(\"col-span-3\", endTimeError && 'border-destructive ring-destructive')}\n             />\n             {endTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{endTimeError}</p>}\n          </div>\n\n          {/* Include Break Switch */}\n          <div className=\"flex items-center justify-between space-x-2 pt-2 border-t mt-2\">\n             <Label htmlFor=\"include-break\" className=\"font-medium\">\n                Incluir Descanso\n             </Label>\n             <Switch\n                id=\"include-break\"\n                checked={includeBreak}\n                onCheckedChange={setIncludeBreak}\n             />\n          </div>\n\n\n          {/* Conditional Break Time Inputs */}\n          {includeBreak && (\n            <>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"break-start-time\" className=\"text-right\">\n                  Inicio Descanso\n                </Label>\n                <Input\n                  id=\"break-start-time\"\n                  type=\"time\"\n                  value={breakStartTime}\n                  onChange={(e) => handleTimeChange(setBreakStartTime, e.target.value)}\n                  className={cn(\"col-span-3\", breakStartTimeError && 'border-destructive ring-destructive')}\n                />\n                 {breakStartTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{breakStartTimeError}</p>}\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"break-end-time\" className=\"text-right\">\n                  Fin Descanso\n                </Label>\n                <Input\n                  id=\"break-end-time\"\n                  type=\"time\"\n                  value={breakEndTime}\n                  onChange={(e) => handleTimeChange(setBreakEndTime, e.target.value)}\n                  className={cn(\"col-span-3\", breakEndTimeError && 'border-destructive ring-destructive')}\n                />\n                 {breakEndTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{breakEndTimeError}</p>}\n              </div>\n            </>\n          )}\n\n        </div>\n        <DialogFooter>\n          <DialogClose asChild>\n            <Button type=\"button\" variant=\"outline\">\n              <X className=\"mr-2 h-4 w-4\" /> Cancelar\n            </Button>\n          </DialogClose>\n          <Button type=\"button\" onClick={handleSaveClick} variant=\"default\">\n            <SaveIcon className=\"mr-2 h-4 w-4\" /> {saveButtonText}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3388, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/WeekNavigator.tsx"],"sourcesContent":["// src/components/schedule/WeekNavigator.tsx\n'use client';\n\nimport React from 'react';\nimport { Button } from '@/components/ui/button';\nimport { ChevronsLeft, ChevronsRight } from 'lucide-react';\nimport { format, startOfWeek, endOfWeek } from 'date-fns';\nimport { es } from 'date-fns/locale'; // Import Spanish locale\nimport { Card } from '@/components/ui/card'; // Import Card for background\n\ninterface WeekNavigatorProps {\n  currentDate: Date;\n  onPreviousWeek: () => void;\n  onNextWeek: () => void;\n}\n\nexport const WeekNavigator: React.FC<WeekNavigatorProps> = ({\n  currentDate,\n  onPreviousWeek,\n  onNextWeek,\n}) => {\n  const weekStart = startOfWeek(currentDate, { weekStartsOn: 1 }); // Start on Monday\n  const weekEnd = endOfWeek(currentDate, { weekStartsOn: 1 });\n\n  // Format the week range string, handling year change within the week\n  const startYear = format(weekStart, 'yyyy');\n  const endYear = format(weekEnd, 'yyyy');\n  const weekRange = `Semana del ${format(weekStart, 'd MMM', { locale: es })}${startYear !== endYear ? ' ' + startYear : ''} al ${format(weekEnd, 'd MMM yyyy', { locale: es })}`;\n\n  return (\n    <Card className=\"flex items-center justify-center gap-2 px-3 py-2 bg-card shadow-sm border border-border rounded-lg\"> {/* Wrap in Card, add padding */}\n      <Button variant=\"ghost\" size=\"icon\" onClick={onPreviousWeek} className=\"h-9 w-9 text-muted-foreground hover:text-primary\"> {/* Larger button, ghost variant */}\n        <ChevronsLeft className=\"h-5 w-5\" /> {/* Larger icon */}\n        <span className=\"sr-only\">Semana Anterior</span>\n      </Button>\n      <span className=\"text-base font-semibold text-foreground text-center min-w-[220px]\"> {/* Larger, bolder text */}\n        {weekRange}\n      </span>\n      <Button variant=\"ghost\" size=\"icon\" onClick={onNextWeek} className=\"h-9 w-9 text-muted-foreground hover:text-primary\"> {/* Larger button, ghost variant */}\n        <ChevronsRight className=\"h-5 w-5\" /> {/* Larger icon */}\n        <span className=\"sr-only\">Semana Siguiente</span>\n      </Button>\n    </Card>\n  );\n};\n"],"names":[],"mappings":"AAAA,4CAA4C;;;;;AAI5C;AACA;AAAA;AACA;AAAA;AAAA;AACA,0PAAsC,wBAAwB;AAC9D,qOAA6C,6BAA6B;AAP1E;;;;;;;AAeO,MAAM,gBAA8C,CAAC,EAC1D,WAAW,EACX,cAAc,EACd,UAAU,EACX;IACC,MAAM,YAAY,CAAA,GAAA,8IAAA,CAAA,cAAW,AAAD,EAAE,aAAa;QAAE,cAAc;IAAE,IAAI,kBAAkB;IACnF,MAAM,UAAU,CAAA,GAAA,4IAAA,CAAA,YAAS,AAAD,EAAE,aAAa;QAAE,cAAc;IAAE;IAEzD,qEAAqE;IACrE,MAAM,YAAY,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,WAAW;IACpC,MAAM,UAAU,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,SAAS;IAChC,MAAM,YAAY,CAAC,WAAW,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,WAAW,SAAS;QAAE,QAAQ,+IAAA,CAAA,KAAE;IAAC,KAAK,cAAc,UAAU,MAAM,YAAY,GAAG,IAAI,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,SAAS,cAAc;QAAE,QAAQ,+IAAA,CAAA,KAAE;IAAC,IAAI;IAE/K,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;YAAqG;0BACnH,6LAAC,qIAAA,CAAA,SAAM;gBAAC,SAAQ;gBAAQ,MAAK;gBAAO,SAAS;gBAAgB,WAAU;;oBAAmD;kCACxH,6LAAC,yNAAA,CAAA,eAAY;wBAAC,WAAU;;;;;;oBAAY;kCACpC,6LAAC;wBAAK,WAAU;kCAAU;;;;;;;;;;;;0BAE5B,6LAAC;gBAAK,WAAU;;oBAAoE;oBACjF;;;;;;;0BAEH,6LAAC,qIAAA,CAAA,SAAM;gBAAC,SAAQ;gBAAQ,MAAK;gBAAO,SAAS;gBAAY,WAAU;;oBAAmD;kCACpH,6LAAC,2NAAA,CAAA,gBAAa;wBAAC,WAAU;;;;;;oBAAY;kCACrC,6LAAC;wBAAK,WAAU;kCAAU;;;;;;;;;;;;;;;;;;AAIlC;KA5Ba","debugId":null}},
    {"offset": {"line": 3515, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50', // Removed text-base and md:text-sm for consistency\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3550, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ScheduleNotesModal.tsx"],"sourcesContent":["// src/components/schedule/ScheduleNotesModal.tsx\n'use client';\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { format, parse as parseDateFns, isValid as isValidDate, isWithinInterval } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport { Calendar } from '@/components/ui/calendar';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Trash2, CalendarIcon, NotebookPen, PlusCircle, X } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport type { ScheduleNote, Employee } from '@/types/schedule';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface ScheduleNotesModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  notes: ScheduleNote[];\n  employees: Employee[]; // To populate the dropdown\n  onAddNote: (newNoteData: Omit<ScheduleNote, 'id'>) => void;\n  onDeleteNote: (noteId: string) => void; // Renamed prop\n  initialDate?: Date; // Optional initial date when opened from a specific day\n  // New props for filtering based on context\n  viewMode: 'day' | 'week';\n  currentDate: Date; // The date currently focused in the planner (day view target or week start)\n  weekDates?: Date[]; // Array of dates in the current week view\n}\n\nexport const ScheduleNotesModal: React.FC<ScheduleNotesModalProps> = ({\n  isOpen,\n  onClose,\n  notes: allNotes, // Rename prop to avoid conflict\n  employees,\n  onAddNote,\n  onDeleteNote, // Use the renamed prop\n  initialDate, // Receive initial date\n  viewMode,\n  currentDate,\n  weekDates,\n}) => {\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(initialDate || currentDate);\n  const [noteText, setNoteText] = useState('');\n  const [selectedEmployeeId, setSelectedEmployeeId] = useState<string | undefined>(undefined);\n  const [error, setError] = useState<string | null>(null);\n  const [noteToDeleteId, setNoteToDeleteId] = useState<string | null>(null); // State for delete confirmation\n  const { toast } = useToast();\n\n  // Filter notes based on context (initialDate or current view)\n  const displayedNotes = useMemo(() => {\n      if (initialDate) {\n          // If modal opened for a specific day, show only notes for that day\n          const dateKey = format(initialDate, 'yyyy-MM-dd');\n          return allNotes.filter(note => note.date === dateKey);\n      } else if (viewMode === 'week' && weekDates && weekDates.length === 7) {\n          // If opened generally in week view, show notes for the current week\n          const weekInterval = { start: weekDates[0], end: weekDates[6] };\n          return allNotes.filter(note => {\n              const noteDate = parseDateFns(note.date, 'yyyy-MM-dd', new Date());\n              return isValidDate(noteDate) && isWithinInterval(noteDate, weekInterval);\n          }).sort((a, b) => a.date.localeCompare(b.date)); // Sort notes by date within the week\n      } else {\n          // If opened generally in day view, show notes for the selectedDate in the form\n          if (selectedDate) {\n             const dateKey = format(selectedDate, 'yyyy-MM-dd');\n             return allNotes.filter(note => note.date === dateKey);\n          }\n          return []; // Or show all future notes? For now, show for selected day\n      }\n  }, [allNotes, initialDate, viewMode, weekDates, selectedDate]);\n\n  // Reset form when modal opens or initialDate changes\n  useEffect(() => {\n    if (isOpen) {\n      setSelectedDate(initialDate || currentDate); // Use initialDate or the planner's current date\n      setNoteText('');\n      setSelectedEmployeeId(undefined);\n      setError(null);\n      setNoteToDeleteId(null); // Reset delete confirmation on open\n    }\n  }, [isOpen, initialDate, currentDate]);\n\n  const handleAddClick = () => {\n    setError(null);\n    if (!selectedDate) {\n      setError('Por favor selecciona una fecha.');\n      return;\n    }\n    if (!noteText.trim()) {\n      setError('Por favor ingresa una nota.');\n      return;\n    }\n\n    const newNoteData: Omit<ScheduleNote, 'id'> = {\n      date: format(selectedDate, 'yyyy-MM-dd'),\n      note: noteText.trim(),\n      employeeId: selectedEmployeeId || undefined, // Ensure empty string becomes undefined\n    };\n\n    onAddNote(newNoteData);\n\n    // Reset form fields after adding\n    setNoteText('');\n    setSelectedEmployeeId(undefined);\n    // Optionally keep the date or advance it? Keep for now.\n  };\n\n  // Function to actually delete the note after confirmation\n   const confirmDeleteNote = () => {\n       if (noteToDeleteId) {\n           onDeleteNote(noteToDeleteId);\n           setNoteToDeleteId(null); // Close the confirmation dialog\n       }\n   };\n\n  const getModalTitle = () => {\n      if (initialDate) return `Anotaciones para ${format(initialDate, 'PPP', { locale: es })}`;\n      if (viewMode === 'week') return 'Anotaciones de la Semana';\n      if (selectedDate) return `Anotaciones para ${format(selectedDate, 'PPP', { locale: es })}`;\n      return 'Anotaciones Futuras / Eventos';\n  };\n\n   const getModalDescription = () => {\n       if (initialDate) return 'Haz clic en una nota para eliminarla.';\n       if (viewMode === 'week') return 'Notas guardadas para la semana actual. Haz clic en una nota para eliminarla.';\n       if (selectedDate) return `Agrega o elimina notas para el día seleccionado (${format(selectedDate, 'PPP', { locale: es })}).`;\n       return 'Agrega o elimina notas para fechas específicas.';\n   };\n\n\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"sm:max-w-lg max-h-[90vh] flex flex-col\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <NotebookPen className=\"h-5 w-5\" />\n            {getModalTitle()}\n          </DialogTitle>\n          <DialogDescription>\n             {getModalDescription()}\n          </DialogDescription>\n        </DialogHeader>\n\n        {/* --- Formulario para añadir nota (only if not viewing specific date) --- */}\n        {!initialDate && (\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 py-2 border-b pb-4\"> {/* Reduced py and pb */}\n            {/* Date Picker */}\n            <div className=\"space-y-2 sm:col-span-1\">\n                <Label htmlFor=\"note-date\">Fecha</Label>\n                <Popover>\n                <PopoverTrigger asChild>\n                    <Button\n                    id=\"note-date\"\n                    variant={'outline'}\n                    className={cn(\n                        'w-full justify-start text-left font-normal overflow-hidden whitespace-nowrap', // Added overflow styles\n                        !selectedDate && 'text-muted-foreground'\n                    )}\n                    >\n                    <CalendarIcon className=\"mr-2 h-4 w-4 flex-shrink-0\" /> {/* Prevent icon shrinking */}\n                     {/* Use shorter date format and ensure it doesn't overflow */}\n                    <span className=\"truncate\"> {/* Added truncate */}\n                        {selectedDate ? format(selectedDate, 'dd MMM yyyy', { locale: es }) : <span>Selecciona fecha</span>}\n                    </span>\n                    </Button>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\">\n                    <Calendar\n                    mode=\"single\"\n                    selected={selectedDate}\n                    onSelect={setSelectedDate}\n                    initialFocus\n                    locale={es}\n                    />\n                </PopoverContent>\n                </Popover>\n            </div>\n\n            {/* Note Text */}\n            <div className=\"space-y-2 sm:col-span-2\">\n                <Label htmlFor=\"note-text\">Nota / Descripción</Label>\n                <Textarea\n                    id=\"note-text\"\n                    value={noteText}\n                    onChange={(e) => setNoteText(e.target.value)}\n                    placeholder=\"Ej: Cumpleaños Carlos P., Solo hasta mediodía...\"\n                    rows={3}\n                />\n            </div>\n\n            {/* Optional Employee Link */}\n            <div className=\"space-y-2 sm:col-span-3\">\n                <Label htmlFor=\"note-employee\">Colaborador (Opcional)</Label>\n                <Select value={selectedEmployeeId} onValueChange={(value) => setSelectedEmployeeId(value === 'ninguno' ? undefined : value)}>\n                <SelectTrigger id=\"note-employee\">\n                    <SelectValue placeholder=\"Vincular a colaborador...\" />\n                </SelectTrigger>\n                <SelectContent>\n                    <SelectItem value=\"ninguno\">Ninguno</SelectItem>\n                    {employees.map(emp => (\n                    <SelectItem key={emp.id} value={emp.id}>{emp.name}</SelectItem>\n                    ))}\n                </SelectContent>\n                </Select>\n            </div>\n\n            {/* Error Message */}\n            {error && <p className=\"text-sm text-destructive sm:col-span-3\">{error}</p>}\n\n            {/* Add Button */}\n            <div className=\"sm:col-span-3 flex justify-end\">\n                <Button onClick={handleAddClick}>\n                    <PlusCircle className=\"mr-2 h-4 w-4\" /> Añadir Anotación\n                </Button>\n            </div>\n            </div>\n        )}\n\n\n        {/* --- Lista de notas existentes --- */}\n        <div className=\"flex-grow overflow-hidden py-2\"> {/* Reduced py */}\n          <h4 className=\"mb-3 font-medium text-sm text-foreground\">\n             Anotaciones Guardadas ({displayedNotes.length})\n          </h4>\n          {displayedNotes.length > 0 ? (\n            <ScrollArea className=\"h-[40vh] pr-4\"> {/* Increased height */}\n              <ul className=\"space-y-2\">\n                {displayedNotes.map((note) => {\n                   const employeeName = note.employeeId ? employees.find(e => e.id === note.employeeId)?.name : null;\n                   const noteDate = parseDateFns(note.date, 'yyyy-MM-dd', new Date());\n                   // Format date for display: Abbreviated day, numeric day, abbreviated month\n                   const formattedDate = isValidDate(noteDate) ? format(noteDate, 'EEE d MMM', { locale: es }) : note.date;\n                  return (\n                     <li key={note.id} className=\"flex items-start justify-between p-2 border rounded-md bg-background text-sm\">\n                       <div className=\"flex-grow mr-2 overflow-hidden\"> {/* Added overflow-hidden */}\n                         <p className=\"font-medium text-foreground block truncate\">{note.note}</p> {/* Added truncate */}\n                         <span className=\"block text-xs text-muted-foreground truncate\"> {/* Added truncate */}\n                            {formattedDate}\n                            {employeeName ? ` - ${employeeName}` : ''}\n                         </span>\n                       </div>\n                        {/* Delete Button Trigger */}\n                         <AlertDialog>\n                             <AlertDialogTrigger asChild>\n                                <Button\n                                   variant=\"ghost\"\n                                   size=\"icon\"\n                                   className=\"h-6 w-6 text-destructive hover:text-destructive/80 flex-shrink-0\"\n                                   title=\"Eliminar anotación\"\n                                   onClick={() => setNoteToDeleteId(note.id)} // Set ID to delete on click\n                                >\n                                   <Trash2 className=\"h-4 w-4\" />\n                                </Button>\n                              </AlertDialogTrigger>\n                             <AlertDialogContent>\n                               <AlertDialogHeader>\n                                 <AlertDialogTitle>¿Eliminar esta anotación?</AlertDialogTitle>\n                                 <AlertDialogDescription>\n                                    \"{note.note}\"\n                                    <br />\n                                    Esta acción no se puede deshacer.\n                                 </AlertDialogDescription>\n                               </AlertDialogHeader>\n                               <AlertDialogFooter>\n                                 <AlertDialogCancel onClick={() => setNoteToDeleteId(null)}>Cancelar</AlertDialogCancel>\n                                 <AlertDialogAction\n                                    onClick={confirmDeleteNote} // Call the delete function on confirm\n                                    className=\"bg-destructive hover:bg-destructive/90\">\n                                    Eliminar Anotación\n                                 </AlertDialogAction>\n                               </AlertDialogFooter>\n                            </AlertDialogContent>\n                         </AlertDialog>\n                     </li>\n                  );\n                 })}\n              </ul>\n            </ScrollArea>\n          ) : (\n            <p className=\"text-sm text-muted-foreground italic text-center py-4\">\n                 No hay anotaciones guardadas para {initialDate ? 'esta fecha' : (viewMode === 'week' ? 'esta semana' : 'este día')}.\n            </p>\n          )}\n        </div>\n\n        <DialogFooter>\n          <DialogClose asChild>\n            <Button variant=\"secondary\">\n              <X className=\"mr-2 h-4 w-4\" /> Cerrar\n            </Button>\n          </DialogClose>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4222, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/SummaryDashboard.tsx"],"sourcesContent":["// src/components/schedule/SummaryDashboard.tsx\n'use client';\n\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport type { Employee, ScheduleData, ShiftAssignment } from '@/types/schedule';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\n\ninterface SummaryDashboardProps {\n  scheduleData: { [dateKey: string]: ScheduleData };\n  employees: Employee[];\n  weekDates: Date[];\n  viewMode: 'day' | 'week';\n  currentDate: Date;\n  calculateShiftDuration: (assignment: ShiftAssignment, shiftDate: Date) => number;\n}\n\nexport const SummaryDashboard: React.FC<SummaryDashboardProps> = ({\n  scheduleData,\n  employees,\n  weekDates,\n  viewMode,\n  currentDate,\n  calculateShiftDuration,\n}) => {\n  const calculateHours = () => {\n    const employeeHours: { [key: string]: { name: string; totalHours: number } } = {};\n\n    const datesToConsider = viewMode === 'week' ? weekDates : [currentDate];\n\n    datesToConsider.forEach(date => {\n      const dateKey = format(date, 'yyyy-MM-dd');\n      const daySchedule = scheduleData[dateKey];\n\n      if (daySchedule?.assignments) {\n        Object.values(daySchedule.assignments).forEach(deptAssignments => {\n          deptAssignments.forEach(assignment => {\n            if (!employeeHours[assignment.employee.id]) {\n              employeeHours[assignment.employee.id] = { name: assignment.employee.name, totalHours: 0 };\n            }\n            const duration = calculateShiftDuration(assignment, date);\n            employeeHours[assignment.employee.id].totalHours += duration;\n          });\n        });\n      }\n    });\n\n    // Find the corresponding full employee object for sorting and display\n    const summaryList = Object.entries(employeeHours).map(([id, data]) => ({\n        id,\n        ...data\n    })).sort((a,b) => a.name.localeCompare(b.name)); // Sort by name\n\n    return summaryList;\n  };\n\n  const summary = calculateHours();\n  const totalHoursAllEmployees = summary.reduce((sum, emp) => sum + emp.totalHours, 0);\n\n  return (\n    <div className=\"space-y-4\">\n      {summary.length > 0 ? (\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>Colaborador</TableHead>\n              <TableHead className=\"text-right\">Horas</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {summary.map((emp) => (\n              <TableRow key={emp.id}>\n                <TableCell className=\"font-medium truncate\">{emp.name}</TableCell>\n                <TableCell className=\"text-right\">{emp.totalHours.toFixed(1)}</TableCell>\n              </TableRow>\n            ))}\n            {/* Total Row */}\n             <TableRow className=\"border-t\">\n                 <TableCell className=\"font-bold\">Total</TableCell>\n                 <TableCell className=\"text-right font-bold\">{totalHoursAllEmployees.toFixed(1)}</TableCell>\n             </TableRow>\n          </TableBody>\n        </Table>\n      ) : (\n        <p className=\"text-center text-muted-foreground italic\">\n          No hay horas asignadas para {viewMode === 'week' ? 'esta semana' : 'este día'}.\n        </p>\n      )}\n    </div>\n  );\n};\n"],"names":[],"mappings":"AAAA,+CAA+C;;;;;AAK/C;AAEA;AANA;;;;AAkBO,MAAM,mBAAoD,CAAC,EAChE,YAAY,EACZ,SAAS,EACT,SAAS,EACT,QAAQ,EACR,WAAW,EACX,sBAAsB,EACvB;IACC,MAAM,iBAAiB;QACrB,MAAM,gBAAyE,CAAC;QAEhF,MAAM,kBAAkB,aAAa,SAAS,YAAY;YAAC;SAAY;QAEvE,gBAAgB,OAAO,CAAC,CAAA;YACtB,MAAM,UAAU,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;YAC7B,MAAM,cAAc,YAAY,CAAC,QAAQ;YAEzC,IAAI,aAAa,aAAa;gBAC5B,OAAO,MAAM,CAAC,YAAY,WAAW,EAAE,OAAO,CAAC,CAAA;oBAC7C,gBAAgB,OAAO,CAAC,CAAA;wBACtB,IAAI,CAAC,aAAa,CAAC,WAAW,QAAQ,CAAC,EAAE,CAAC,EAAE;4BAC1C,aAAa,CAAC,WAAW,QAAQ,CAAC,EAAE,CAAC,GAAG;gCAAE,MAAM,WAAW,QAAQ,CAAC,IAAI;gCAAE,YAAY;4BAAE;wBAC1F;wBACA,MAAM,WAAW,uBAAuB,YAAY;wBACpD,aAAa,CAAC,WAAW,QAAQ,CAAC,EAAE,CAAC,CAAC,UAAU,IAAI;oBACtD;gBACF;YACF;QACF;QAEA,sEAAsE;QACtE,MAAM,cAAc,OAAO,OAAO,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,GAAK,CAAC;gBACnE;gBACA,GAAG,IAAI;YACX,CAAC,GAAG,IAAI,CAAC,CAAC,GAAE,IAAM,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,IAAI,eAAe;QAEhE,OAAO;IACT;IAEA,MAAM,UAAU;IAChB,MAAM,yBAAyB,QAAQ,MAAM,CAAC,CAAC,KAAK,MAAQ,MAAM,IAAI,UAAU,EAAE;IAElF,qBACE,6LAAC;QAAI,WAAU;kBACZ,QAAQ,MAAM,GAAG,kBAChB,6LAAC,oIAAA,CAAA,QAAK;;8BACJ,6LAAC,oIAAA,CAAA,cAAW;8BACV,cAAA,6LAAC,oIAAA,CAAA,WAAQ;;0CACP,6LAAC,oIAAA,CAAA,YAAS;0CAAC;;;;;;0CACX,6LAAC,oIAAA,CAAA,YAAS;gCAAC,WAAU;0CAAa;;;;;;;;;;;;;;;;;8BAGtC,6LAAC,oIAAA,CAAA,YAAS;;wBACP,QAAQ,GAAG,CAAC,CAAC,oBACZ,6LAAC,oIAAA,CAAA,WAAQ;;kDACP,6LAAC,oIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAwB,IAAI,IAAI;;;;;;kDACrD,6LAAC,oIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAc,IAAI,UAAU,CAAC,OAAO,CAAC;;;;;;;+BAF7C,IAAI,EAAE;;;;;sCAMtB,6LAAC,oIAAA,CAAA,WAAQ;4BAAC,WAAU;;8CAChB,6LAAC,oIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAY;;;;;;8CACjC,6LAAC,oIAAA,CAAA,YAAS;oCAAC,WAAU;8CAAwB,uBAAuB,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;iCAKrF,6LAAC;YAAE,WAAU;;gBAA2C;gBACzB,aAAa,SAAS,gBAAgB;gBAAW;;;;;;;;;;;;AAKxF;KAzEa","debugId":null}},
    {"offset": {"line": 4391, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ScheduleTemplateList.tsx"],"sourcesContent":["// src/components/schedule/ScheduleTemplateList.tsx\n'use client'; // Ensure this component is treated as a client component\n\nimport React from 'react';\nimport type { ScheduleTemplate } from '@/types/schedule'; // O donde definas el tipo\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { List, Trash2, Upload } from 'lucide-react'; // Iconos de ejemplo\nimport { ScrollArea } from '@/components/ui/scroll-area'; // Import ScrollArea\nimport { format } from 'date-fns'; // Import format from date-fns\nimport { es } from 'date-fns/locale'; // Import Spanish locale\n\ninterface ScheduleTemplateListProps {\n  templates: ScheduleTemplate[];\n  onLoadTemplate: (templateId: string) => void; // Función para cargar un template\n  onDeleteTemplate: (templateId: string) => void; // Función para eliminar un template (trigger confirmation)\n}\n\nexport function ScheduleTemplateList({ templates, onLoadTemplate, onDeleteTemplate }: ScheduleTemplateListProps) {\n  if (templates.length === 0) {\n    return (\n        <div className=\"text-center p-6 text-muted-foreground italic\">\n          No hay templates guardados para esta sede y vista.\n        </div>\n    );\n  }\n\n  return (\n        <ScrollArea className=\"h-[calc(100%-4rem)] border rounded-md p-2\"> {/* Adjust height dynamically */}\n          <ul className=\"space-y-3\">\n            {templates.map((template) => (\n              <li key={template.id} className=\"flex items-center justify-between p-3 border rounded-md bg-background hover:bg-accent\">\n                <span className=\"font-medium truncate mr-2 flex-grow min-w-0\" title={template.name}>\n                   {template.name || `Template (${template.id.substring(0, 8)})`}\n                   <span className=\"text-xs text-muted-foreground ml-1 block\">\n                        ({template.createdAt instanceof Date ? format(template.createdAt, 'dd/MM/yy', { locale: es }) : 'Fecha inválida'}) {/* Show date */}\n                   </span>\n                </span>\n                <div className=\"flex items-center gap-1 flex-shrink-0\">\n                  <Button variant=\"outline\" size=\"sm\" onClick={() => onLoadTemplate(template.id)} title=\"Cargar Template\">\n                    <Upload className=\"h-4 w-4\" /> {/* Use Upload icon for Load */}\n                  </Button>\n                  <Button variant=\"ghost\" size=\"sm\" className=\"text-destructive hover:text-destructive hover:bg-destructive/10\" onClick={() => onDeleteTemplate(template.id)} title=\"Eliminar Template\">\n                    <Trash2 className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </ScrollArea>\n  );\n}\n"],"names":[],"mappings":"AAAA,mDAAmD;;;;;AAMnD;AACA,mWAAqD,oBAAoB;AAAzE;AACA,sPAA0D,oBAAoB;AAC9E,0QAAmC,8BAA8B;AACjE,0PAAsC,wBAAwB;AAT9D,cAAc,yDAAyD;;;;;;;AAiBhE,SAAS,qBAAqB,EAAE,SAAS,EAAE,cAAc,EAAE,gBAAgB,EAA6B;IAC7G,IAAI,UAAU,MAAM,KAAK,GAAG;QAC1B,qBACI,6LAAC;YAAI,WAAU;sBAA+C;;;;;;IAIpE;IAEA,qBACM,6LAAC,6IAAA,CAAA,aAAU;QAAC,WAAU;;YAA4C;0BAChE,6LAAC;gBAAG,WAAU;0BACX,UAAU,GAAG,CAAC,CAAC,yBACd,6LAAC;wBAAqB,WAAU;;0CAC9B,6LAAC;gCAAK,WAAU;gCAA8C,OAAO,SAAS,IAAI;;oCAC9E,SAAS,IAAI,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC;kDAC7D,6LAAC;wCAAK,WAAU;;4CAA2C;4CACpD,SAAS,SAAS,YAAY,OAAO,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,SAAS,SAAS,EAAE,YAAY;gDAAE,QAAQ,+IAAA,CAAA,KAAE;4CAAC,KAAK;4CAAiB;;;;;;;;;;;;;0CAGzH,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,qIAAA,CAAA,SAAM;wCAAC,SAAQ;wCAAU,MAAK;wCAAK,SAAS,IAAM,eAAe,SAAS,EAAE;wCAAG,OAAM;;0DACpF,6LAAC,yMAAA,CAAA,SAAM;gDAAC,WAAU;;;;;;4CAAY;;;;;;;kDAEhC,6LAAC,qIAAA,CAAA,SAAM;wCAAC,SAAQ;wCAAQ,MAAK;wCAAK,WAAU;wCAAkE,SAAS,IAAM,iBAAiB,SAAS,EAAE;wCAAG,OAAM;kDAChK,cAAA,6LAAC,6MAAA,CAAA,SAAM;4CAAC,WAAU;;;;;;;;;;;;;;;;;;uBAZf,SAAS,EAAE;;;;;;;;;;;;;;;;AAoBlC;KAjCgB","debugId":null}},
    {"offset": {"line": 4531, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/colombian-holidays.ts"],"sourcesContent":["/**\n * Representa una fecha.\n */\nexport interface Date {\n  year: number;\n  month: number; // 1-12\n  day: number;\n}\n\n/**\n * Obtiene de forma asíncrona una lista de festivos colombianos para un año dado.\n *\n * @param year El año para el cual obtener los festivos.\n * @returns Una promesa que resuelve a un array de objetos Date representando los festivos.\n */\nexport async function getColombianHolidays(year: number): Promise<Date[]> {\n  // TODO: Implementar esto llamando a una API externa o usando una biblioteca confiable.\n  // Ejemplo de estructura placeholder:\n  // const response = await fetch(`https://api.example.com/holidays/co/${year}`);\n  // if (!response.ok) {\n  //   throw new Error('Fallo al obtener los festivos');\n  // }\n  // const holidays = await response.json();\n  // return holidays.map(holiday => ({ year: year, month: ..., day: ... }));\n\n   console.warn(`Obteniendo festivos para ${year} - Usando datos de ejemplo. Implementar llamada API.`);\n\n   // Datos de ejemplo SOLO para desarrollo/pruebas\n   if (year === 2024) {\n        return [\n            { year: 2024, month: 1, day: 1 }, { year: 2024, month: 1, day: 8 }, // Año Nuevo, Reyes Magos\n            { year: 2024, month: 3, day: 25 }, { year: 2024, month: 3, day: 28 }, // San José, Jueves Santo\n            { year: 2024, month: 3, day: 29 }, { year: 2024, month: 5, day: 1 }, // Viernes Santo, Día del Trabajo\n            { year: 2024, month: 5, day: 13 }, { year: 2024, month: 6, day: 3 }, // Ascensión del Señor, Corpus Christi\n            { year: 2024, month: 6, day: 10 }, { year: 2024, month: 7, day: 1 }, // Sagrado Corazón, San Pedro y San Pablo\n            { year: 2024, month: 7, day: 20 }, { year: 2024, month: 8, day: 7 }, // Independencia, Batalla de Boyacá\n            { year: 2024, month: 8, day: 19 }, { year: 2024, month: 10, day: 14 }, // Asunción de la Virgen, Día de la Raza\n            { year: 2024, month: 11, day: 4 }, { year: 2024, month: 11, day: 11 }, // Todos los Santos, Independencia de Cartagena\n            { year: 2024, month: 12, day: 8 }, { year: 2024, month: 12, day: 25 } // Inmaculada Concepción, Navidad\n        ];\n   }\n   if (year === 2025) {\n     return [\n       { year: 2025, month: 1, day: 1 }, { year: 2025, month: 1, day: 6 }, // Año Nuevo, Reyes Magos\n       { year: 2025, month: 3, day: 24 }, { year: 2025, month: 4, day: 17 }, // San José, Jueves Santo\n       { year: 2025, month: 4, day: 18 }, { year: 2025, month: 5, day: 1 }, // Viernes Santo, Día del Trabajo\n       { year: 2025, month: 6, day: 2 }, { year: 2025, month: 6, day: 23 }, // Ascensión del Señor, Corpus Christi\n       { year: 2025, month: 6, day: 30 }, { year: 2025, month: 7, day: 20 }, // Sagrado Corazón, San Pedro y San Pablo (Nota: 20 Julio cae Domingo, no se traslada)\n       { year: 2025, month: 8, day: 7 }, { year: 2025, month: 8, day: 18 }, // Batalla de Boyacá, Asunción de la Virgen\n       { year: 2025, month: 10, day: 13 }, { year: 2025, month: 11, day: 3 }, // Día de la Raza, Todos los Santos\n       { year: 2025, month: 11, day: 17 }, { year: 2025, month: 12, day: 8 }, // Independencia de Cartagena, Inmaculada Concepción\n       { year: 2025, month: 12, day: 25 } // Navidad\n     ];\n   }\n    if (year === 2023) {\n        return [\n            { year: 2023, month: 1, day: 1 }, { year: 2023, month: 1, day: 9 },\n            { year: 2023, month: 3, day: 20 }, { year: 2023, month: 4, day: 6 },\n            { year: 2023, month: 4, day: 7 }, { year: 2023, month: 5, day: 1 },\n            { year: 2023, month: 5, day: 22 }, { year: 2023, month: 6, day: 12 },\n            { year: 2023, month: 6, day: 19 }, { year: 2023, month: 7, day: 3 },\n            { year: 2023, month: 7, day: 20 }, { year: 2023, month: 8, day: 7 },\n            { year: 2023, month: 8, day: 21 }, { year: 2023, month: 10, day: 16 },\n            { year: 2023, month: 11, day: 6 }, { year: 2023, month: 11, day: 13 },\n            { year: 2023, month: 12, day: 8 }, { year: 2023, month: 12, day: 25 }\n        ];\n    }\n\n\n  // Retorna array vacío si no hay datos de ejemplo o la API falla en el futuro\n  return [];\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4836, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/EmployeeSelectionModal.tsx"],"sourcesContent":["// src/components/schedule/EmployeeSelectionModal.tsx\n'use client';\n\nimport React from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogClose,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { ScrollArea } from '@/components/ui/scroll-area'; // Use ScrollArea for potentially long lists\nimport type { Employee } from '@/types/schedule';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { X, UserPlus } from 'lucide-react';\n\ninterface EmployeeSelectionModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  employees: Employee[];\n  onSelectEmployee: (employee: Employee) => void;\n  departmentName: string;\n  date: Date;\n}\n\nexport const EmployeeSelectionModal: React.FC<EmployeeSelectionModalProps> = ({\n  isOpen,\n  onClose,\n  employees,\n  onSelectEmployee,\n  departmentName,\n  date,\n}) => {\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>Seleccionar Colaborador</DialogTitle>\n          <DialogDescription>\n            Elige un colaborador disponible para asignar a <strong>{departmentName}</strong> el{' '}\n            <strong>{format(date, 'PPP', { locale: es })}</strong>.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"py-4\">\n           {employees.length > 0 ? (\n             <ScrollArea className=\"h-[300px] pr-4\"> {/* Add max height and scrolling */}\n                <div className=\"space-y-2\">\n                  {employees.map((employee) => (\n                    <Button\n                      key={employee.id}\n                      variant=\"outline\"\n                      className=\"w-full justify-start\"\n                      onClick={() => onSelectEmployee(employee)}\n                    >\n                       <UserPlus className=\"mr-2 h-4 w-4\" /> {employee.name}\n                    </Button>\n                  ))}\n                </div>\n             </ScrollArea>\n           ) : (\n             <p className=\"text-center text-muted-foreground italic\">\n               No hay colaboradores disponibles para asignar en esta fecha/departamento.\n             </p>\n           )}\n        </div>\n         <DialogFooter>\n             <DialogClose asChild>\n                 <Button type=\"button\" variant=\"outline\">\n                    <X className=\"mr-2 h-4 w-4\" /> Cancelar\n                 </Button>\n             </DialogClose>\n         </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n"],"names":[],"mappings":"AAAA,qDAAqD;;;;;AAIrD;AASA;AACA,sPAA0D,4CAA4C;AAEtG;AACA;AACA;AAAA;AAjBA;;;;;;;;AA4BO,MAAM,yBAAgE,CAAC,EAC5E,MAAM,EACN,OAAO,EACP,SAAS,EACT,gBAAgB,EAChB,cAAc,EACd,IAAI,EACL;IACC,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc,CAAC,OAAS,CAAC,QAAQ;kBACrD,cAAA,6LAAC,qIAAA,CAAA,gBAAa;YAAC,WAAU;;8BACvB,6LAAC,qIAAA,CAAA,eAAY;;sCACX,6LAAC,qIAAA,CAAA,cAAW;sCAAC;;;;;;sCACb,6LAAC,qIAAA,CAAA,oBAAiB;;gCAAC;8CAC8B,6LAAC;8CAAQ;;;;;;gCAAwB;gCAAI;8CACpF,6LAAC;8CAAQ,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,MAAM,OAAO;wCAAE,QAAQ,+IAAA,CAAA,KAAE;oCAAC;;;;;;gCAAY;;;;;;;;;;;;;8BAG1D,6LAAC;oBAAI,WAAU;8BACX,UAAU,MAAM,GAAG,kBAClB,6LAAC,6IAAA,CAAA,aAAU;wBAAC,WAAU;;4BAAiB;0CACpC,6LAAC;gCAAI,WAAU;0CACZ,UAAU,GAAG,CAAC,CAAC,yBACd,6LAAC,qIAAA,CAAA,SAAM;wCAEL,SAAQ;wCACR,WAAU;wCACV,SAAS,IAAM,iBAAiB;;0DAE/B,6LAAC,iNAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;4CAAiB;4CAAE,SAAS,IAAI;;uCALhD,SAAS,EAAE;;;;;;;;;;;;;;;6CAWzB,6LAAC;wBAAE,WAAU;kCAA2C;;;;;;;;;;;8BAK5D,6LAAC,qIAAA,CAAA,eAAY;8BACT,cAAA,6LAAC,qIAAA,CAAA,cAAW;wBAAC,OAAO;kCAChB,cAAA,6LAAC,qIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,SAAQ;;8CAC3B,6LAAC,+LAAA,CAAA,IAAC;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOlD;KAlDa","debugId":null}},
    {"offset": {"line": 5012, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/schedule-pdf-exporter.ts"],"sourcesContent":["// src/lib/schedule-pdf-exporter.ts\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { format, parse, startOfWeek, endOfWeek, getDay } from 'date-fns'; // Added startOfWeek, endOfWeek, getDay\nimport { es } from 'date-fns/locale';\nimport type { ScheduleData, Department, Employee, ShiftAssignment } from '@/types/schedule';\nimport { formatTo12Hour } from './time-utils'; // Import the helper\n\n// Extend jsPDF interface for autoTable\ndeclare module 'jspdf' {\n  interface jsPDF {\n    autoTable: (options: any) => jsPDF;\n  }\n}\n\n// Interface for single location data\ninterface ScheduleExportData {\n    locationName: string;\n    weekDates: Date[];\n    departments: Department[];\n    employees: Employee[]; // List of all employees for the selected location\n    scheduleData: { [dateKey: string]: ScheduleData };\n    getScheduleForDate: (date: Date) => ScheduleData;\n    calculateShiftDuration: (assignment: ShiftAssignment, shiftDate: Date) => number;\n}\n\n// Helper to add the watermark header\nfunction addWatermarkHeader(doc: jsPDF, initialY: number = 10): number {\n    const pageHeight = doc.internal.pageSize.height;\n    const pageWidth = doc.internal.pageSize.width;\n    const watermarkText = \"Desarrollado por Duber Parra, Dpana company © 2025 Calculadora de Turnos y Recargos\";\n\n    doc.setFontSize(8);\n    doc.setFont('helvetica', 'italic');\n    doc.setTextColor(150); // Set text color to light gray (opacity is harder)\n    doc.text(watermarkText, pageWidth / 2, initialY, { align: 'center' });\n    doc.setTextColor(0); // Reset text color to black for the rest of the content\n    return initialY + 5; // Return the Y position below the watermark\n}\n\n\n// --- Single Location PDF Export ---\nexport function exportScheduleToPDF(data: ScheduleExportData): void {\n    const doc = new jsPDF({\n        orientation: 'landscape', // Landscape for week view\n        unit: 'pt', // Use points for better precision\n        format: 'a4' // Standard A4 size\n    });\n\n    const pageHeight = doc.internal.pageSize.height;\n    const pageWidth = doc.internal.pageSize.width;\n    let currentY = 15; // Start position for content (with margin)\n    const leftMargin = 40;\n    const rightMargin = 40;\n    const tableWidth = pageWidth - leftMargin - rightMargin;\n\n     // --- Watermark Header ---\n     currentY = addWatermarkHeader(doc, 10);\n\n    // --- Header ---\n    doc.setFontSize(16);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Horario Semanal de Trabajo', pageWidth / 2, currentY, { align: 'center' });\n    currentY += 20;\n\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    const weekStartFormatted = format(data.weekDates[0], 'dd MMMM', { locale: es });\n    const weekEndFormatted = format(data.weekDates[6], 'dd MMMM yyyy', { locale: es });\n    doc.text(`Sede: ${data.locationName}`, leftMargin, currentY);\n    doc.text(`Semana: ${weekStartFormatted} - ${weekEndFormatted}`, pageWidth - rightMargin, currentY, { align: 'right' });\n    currentY += 30;\n\n    // --- Table Setup ---\n    const head: any[] = [\n        [{ content: 'EMPLEADO / DÍA', styles: { halign: 'left', valign: 'middle' } }] // First header cell for employee names\n    ];\n    // Add days of the week to header\n    data.weekDates.forEach(date => {\n        head[0].push({\n            content: `${format(date, 'EEE', { locale: es }).toUpperCase()}\\n${format(date, 'dd MMM', { locale: es })}`,\n            styles: { halign: 'center', valign: 'middle' }\n        });\n    });\n\n    const body: any[] = [];\n\n    // Iterate through employees associated with this location\n    data.employees.forEach(emp => {\n        const employeeRow: any[] = [{ content: emp.name, styles: { valign: 'middle' } }]; // First cell is employee name\n        let hasShiftThisWeek = false;\n\n        data.weekDates.forEach(date => {\n            const daySchedule = data.getScheduleForDate(date);\n            let assignmentFound = false;\n            let cellContent = ' '; // Default to empty space\n\n            // Check all departments for an assignment for this employee on this date\n            data.departments.forEach(dept => {\n                const assignment = (daySchedule.assignments[dept.id] || []).find(a => a.employee.id === emp.id);\n                if (assignment) {\n                    assignmentFound = true;\n                    hasShiftThisWeek = true;\n                    cellContent = `${formatTo12Hour(assignment.startTime)} - ${formatTo12Hour(assignment.endTime)}`;\n                    if (assignment.includeBreak && assignment.breakStartTime && assignment.breakEndTime) {\n                        cellContent += `\\nD: ${formatTo12Hour(assignment.breakStartTime)}-${formatTo12Hour(assignment.breakEndTime)}`;\n                    }\n                     // Optionally add department info if needed, e.g., `\\n(${dept.name})`\n                }\n            });\n\n             if (assignmentFound) {\n                  employeeRow.push({ content: cellContent, styles: { halign: 'center', valign: 'middle', fontSize: 8 } });\n             } else {\n                  employeeRow.push({ content: ' ', styles: { halign: 'center', valign: 'middle', textColor: [150, 150, 150], fontSize: 8 } }); // Empty space for no shift\n             }\n        });\n\n         // Only add the employee row if they had at least one shift in the week for this location\n         if (hasShiftThisWeek) {\n            body.push(employeeRow);\n         }\n    });\n\n\n    // --- Draw Table ---\n    autoTable(doc, {\n        head: head,\n        body: body,\n        startY: currentY,\n        theme: 'grid',\n        headStyles: {\n            fillColor: [76, 67, 223], // Primary color #4C43DF\n            textColor: [255, 255, 255], // White text\n            fontSize: 9,\n            lineWidth: 0.5,\n            lineColor: [200, 200, 200]\n        },\n        columnStyles: {\n            0: { cellWidth: 100, fontStyle: 'bold' }, // Employee name column wider and bold\n             // Dynamically apply styles to day columns\n             ...Array.from({ length: data.weekDates.length }).reduce((styles, _, index) => {\n                styles[index + 1] = { cellWidth: 'auto', halign: 'center', fontSize: 8 }; // Smaller font size for shifts\n                return styles;\n            }, {} as any)\n        },\n        styles: {\n            cellPadding: 4,\n            fontSize: 9,\n            overflow: 'linebreak', // Break long text\n            lineWidth: 0.5,\n            lineColor: [200, 200, 200]\n        },\n        didDrawPage: (hookData) => {\n             currentY = hookData.cursor?.y ?? currentY;\n             const pageNum = doc.internal.getNumberOfPages();\n             addWatermarkHeader(doc, 10); // Add watermark near top\n             doc.setFontSize(8);\n             doc.setTextColor(150); // Keep footer text gray\n             doc.text(`Página ${pageNum}`, pageWidth - rightMargin, pageHeight - 10, { align: 'right' });\n             doc.setTextColor(0); // Reset text color\n         }\n    });\n\n    // --- Save the PDF ---\n    const timestamp = format(new Date(), 'yyyyMMdd_HHmmss');\n    const filename = `Horario_Semanal_${data.locationName}_${timestamp}.pdf`;\n    doc.save(filename);\n}\n\n\n// --- Consolidated PDF Export (All Locations) ---\nexport function exportConsolidatedScheduleToPDF(allLocationData: ScheduleExportData[]): void {\n    const doc = new jsPDF({\n        orientation: 'landscape',\n        unit: 'pt',\n        format: 'a4'\n    });\n\n    const pageHeight = doc.internal.pageSize.height;\n    const pageWidth = doc.internal.pageSize.width;\n    let currentY = 15; // Start position\n    const leftMargin = 40;\n    const rightMargin = 40;\n\n    // --- Watermark Header for first page ---\n    currentY = addWatermarkHeader(doc, 10);\n\n    // --- Main Header ---\n    doc.setFontSize(16);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Horario Semanal Consolidado', pageWidth / 2, currentY, { align: 'center' });\n    currentY += 20;\n\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    const weekStartFormatted = format(allLocationData[0].weekDates[0], 'dd MMMM', { locale: es });\n    const weekEndFormatted = format(allLocationData[0].weekDates[6], 'dd MMMM yyyy', { locale: es });\n    doc.text(`Semana: ${weekStartFormatted} - ${weekEndFormatted}`, pageWidth / 2, currentY, { align: 'center' });\n    currentY += 30;\n\n    // --- Table Setup ---\n    const head: any[] = [\n        [{ content: 'EMPLEADO / SEDE / DÍA', styles: { halign: 'left', valign: 'middle' } }]\n    ];\n    allLocationData[0].weekDates.forEach(date => {\n        head[0].push({\n            content: `${format(date, 'EEE', { locale: es }).toUpperCase()}\\n${format(date, 'dd MMM', { locale: es })}`,\n            styles: { halign: 'center', valign: 'middle' }\n        });\n    });\n\n    const body: any[] = [];\n     let totalHoursGrandTotal = 0;\n\n    // Group all unique employees across all locations first\n     const allEmployeesMap = new Map<string, Employee>();\n     allLocationData.forEach(locData => {\n         locData.employees.forEach(emp => {\n             if (!allEmployeesMap.has(emp.id)) {\n                 allEmployeesMap.set(emp.id, emp);\n             }\n         });\n     });\n     const sortedEmployees = Array.from(allEmployeesMap.values()).sort((a, b) => a.name.localeCompare(b.name));\n\n\n    // Iterate through sorted unique employees\n     sortedEmployees.forEach(emp => {\n        const employeeRow: any[] = [{ content: emp.name, styles: { valign: 'middle' } }];\n        let totalHoursWeek = 0;\n        let hasShiftThisWeek = false;\n\n        allLocationData[0].weekDates.forEach(date => {\n            let cellContent = ' '; // Default to empty space\n            let assignmentFound = false;\n\n             // Check assignments for this employee on this date ACROSS ALL locations\n             for (const locData of allLocationData) {\n                const daySchedule = locData.getScheduleForDate(date);\n                for (const deptId in daySchedule.assignments) {\n                    const assignment = daySchedule.assignments[deptId].find(a => a.employee.id === emp.id);\n                     if (assignment) {\n                         assignmentFound = true;\n                         hasShiftThisWeek = true;\n                         const duration = locData.calculateShiftDuration(assignment, date);\n                         totalHoursWeek += duration;\n                         cellContent = `${formatTo12Hour(assignment.startTime)} - ${formatTo12Hour(assignment.endTime)}`;\n                         // Add location name abbreviation or indicator\n                         cellContent += `\\n(${locData.locationName.substring(0, 3).toUpperCase()})`; // e.g., (PRI) or (NOR)\n                         if (assignment.includeBreak && assignment.breakStartTime && assignment.breakEndTime) {\n                              cellContent += `\\nD:${formatTo12Hour(assignment.breakStartTime)}-${formatTo12Hour(assignment.breakEndTime)}`;\n                         }\n                         break; // Found assignment for this employee on this day, move to next day\n                     }\n                 }\n                 if (assignmentFound) break; // Exit location loop if assignment found\n             }\n\n             if (assignmentFound) {\n                 employeeRow.push({ content: cellContent, styles: { halign: 'center', valign: 'middle', fontSize: 8 } });\n             } else {\n                 // Check if it's a weekend (Saturday=6, Sunday=0) for \"DESCANSO\"\n                 const dayOfWeek = getDay(date);\n                  if (dayOfWeek === 6 || dayOfWeek === 0) {\n                     employeeRow.push({ content: 'DESCANSO', styles: { halign: 'center', valign: 'middle', fontSize: 7, fontStyle: 'italic', textColor: [255, 0, 0]} }); // Smaller italic red\n                  } else {\n                     employeeRow.push({ content: ' ', styles: { halign: 'center', valign: 'middle' } }); // Empty space for no shift on weekdays\n                  }\n             }\n         });\n\n         // Add total hours for the week if the employee worked\n         if (hasShiftThisWeek) {\n             employeeRow.push({ content: totalHoursWeek.toFixed(1), styles: { halign: 'right', valign: 'middle', fontStyle: 'bold', fontSize: 8 } });\n             totalHoursGrandTotal += totalHoursWeek; // Add to grand total\n         } else {\n            // Optionally add placeholder or leave empty if no shifts\n             // Check if weekends are marked as descanso\n             const descansoWeekend = allLocationData[0].weekDates.every(date => {\n                const dayOfWeek = getDay(date);\n                return dayOfWeek === 6 || dayOfWeek === 0; // If only weekends visible? unlikely\n             });\n             if(descansoWeekend) {\n                employeeRow.push({ content: 'DESC', styles: { halign: 'right', valign: 'middle', fontSize: 7, fontStyle: 'italic' } });\n             } else {\n                employeeRow.push({ content: '0.0', styles: { halign: 'right', valign: 'middle', fontSize: 8 } }); // Show 0.0 if no shifts\n             }\n         }\n\n         body.push(employeeRow);\n     });\n\n     // Add HR TOTAL column to header\n     head[0].push({ content: 'HR TOTAL', styles: { halign: 'center', valign: 'middle' } });\n\n     // Add Grand Total Row\n      const grandTotalRow: any[] = [\n         { content: 'TOTAL HORAS SEMANA:', colSpan: allLocationData[0].weekDates.length + 1, styles: { halign: 'right', fontStyle: 'bold', fontSize: 10 } },\n         { content: totalHoursGrandTotal.toFixed(1), styles: { halign: 'right', fontStyle: 'bold', fontSize: 10 } }\n      ];\n      body.push(grandTotalRow);\n\n\n    // --- Draw Table ---\n    autoTable(doc, {\n        head: head,\n        body: body,\n        startY: currentY,\n        theme: 'grid',\n        headStyles: {\n            fillColor: [76, 67, 223], // Primary color\n            textColor: [255, 255, 255],\n            fontSize: 9,\n            lineWidth: 0.5,\n            lineColor: [200, 200, 200]\n        },\n        columnStyles: {\n             0: { cellWidth: 100, fontStyle: 'bold' }, // Employee name column\n              // Styles for day columns + HR TOTAL column\n             ...Array.from({ length: allLocationData[0].weekDates.length + 1 }).reduce((styles, _, index) => {\n                 if (index < allLocationData[0].weekDates.length) { // Day columns\n                     styles[index + 1] = { cellWidth: 'auto', halign: 'center', fontSize: 8 };\n                 } else { // HR TOTAL column\n                     styles[index + 1] = { cellWidth: 40, halign: 'right', fontStyle: 'bold', fontSize: 8 };\n                 }\n                 return styles;\n             }, {} as any)\n        },\n        styles: {\n            cellPadding: 3, // Reduced padding\n            fontSize: 8,\n            overflow: 'linebreak',\n            lineWidth: 0.5,\n            lineColor: [200, 200, 200]\n        },\n        didDrawPage: (hookData) => {\n            currentY = hookData.cursor?.y ?? currentY;\n             const pageNum = doc.internal.getNumberOfPages();\n             addWatermarkHeader(doc, 10); // Add watermark near top\n             doc.setFontSize(8);\n             doc.setTextColor(150);\n             doc.text(`Página ${pageNum}`, pageWidth - rightMargin, pageHeight - 10, { align: 'right' });\n             doc.setTextColor(0); // Reset text color\n        }\n    });\n\n    // --- Save the PDF ---\n    const timestamp = format(new Date(), 'yyyyMMdd_HHmmss');\n    const filename = `Horario_Consolidado_${timestamp}.pdf`;\n    doc.save(filename);\n}\n\n// Helper to parse HH:MM to minutes (consider moving to utils)\nconst parseTimeToMinutes = (timeStr: string): number => {\n    if (!timeStr || !/^\\d{2}:\\d{2}$/.test(timeStr)) return 0;\n    const [hours, minutes] = timeStr.split(':').map(Number);\n    return hours * 60 + minutes;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5539, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/schedule/page.tsx"],"sourcesContent":["// src/app/schedule/page.tsx\n'use client'; // Ensure this directive is present\n\nimport React, { useState, useEffect, useCallback, useMemo, useRef, ChangeEvent, DragEvent } from 'react';\nimport { DndContext, DragEndEvent, closestCenter } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport Image from 'next/image'; // Import next/image\n\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label'; // Import Label\nimport { Switch } from '@/components/ui/switch';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Calendar } from '@/components/ui/calendar';\nimport {\n    Sheet,\n    SheetContent,\n    SheetHeader,\n    SheetTitle,\n    SheetDescription,\n    SheetTrigger,\n} from '@/components/ui/sheet';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport {\n    DropdownMenu,\n    DropdownMenuContent,\n    DropdownMenuItem,\n    DropdownMenuLabel,\n    DropdownMenuSeparator,\n    DropdownMenuTrigger,\n  } from \"@/components/ui/dropdown-menu\"; // Import DropdownMenu components\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Separator } from '@/components/ui/separator'; // Import Separator\nimport { ScrollArea } from '@/components/ui/scroll-area'; // Import ScrollArea\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion'; // Import Accordion components\nimport { Skeleton } from '@/components/ui/skeleton'; // Import Skeleton\nimport { toast as showToast } from 'sonner'; // Using sonner for toasts if needed\nimport {\n    ChevronLeft, ChevronRight, Calendar as CalendarIcon, Settings, PlusCircle, Save, Upload, Trash2, Edit, Copy, Eraser, FileDown, FileUp, FolderUp, FileJson, LogOut, User, Building, Users, NotebookPen, Clock, Coffee, BarChartHorizontal, Share2, FolderSync, Download, List, Menu, ChefHat, Table, GlassWater, Box\n} from 'lucide-react'; // Added icons\n\nimport { LocationSelector } from '@/components/schedule/LocationSelector';\nimport { EmployeeList } from '@/components/schedule/EmployeeList';\nimport { DepartmentColumn } from '@/components/schedule/DepartmentColumn';\nimport { ScheduleView } from '@/components/schedule/ScheduleView';\nimport { ShiftDetailModal } from '@/components/schedule/ShiftDetailModal';\nimport { WeekNavigator } from '@/components/schedule/WeekNavigator'; // Import WeekNavigator\nimport { ScheduleNotesModal } from '@/components/schedule/ScheduleNotesModal'; // Import Notes modal\nimport { SummaryDashboard } from '@/components/schedule/SummaryDashboard'; // Import the dashboard\nimport { ConfigTabs } from '@/components/schedule/ConfigTabs'; // Import ConfigTabs\nimport { ScheduleTemplateList } from '@/components/schedule/ScheduleTemplateList'; // Import ScheduleTemplateList\n\nimport type { Location, Department, Employee, ShiftAssignment, ScheduleData, DailyAssignments, WeeklyAssignments, ScheduleTemplate, ScheduleNote } from '@/types/schedule'; // Added ScheduleTemplate, ScheduleNote\nimport { startOfWeek, endOfWeek, addDays, format, addWeeks, subWeeks, parseISO, getYear, isValid, differenceInMinutes, parse as parseDateFns, isSameDay, isWithinInterval, getDay } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getColombianHolidays } from '@/services/colombian-holidays'; // Import holiday service\nimport { useToast } from '@/hooks/use-toast';\nimport { useIsMobile } from '@/hooks/use-mobile';\nimport { EmployeeSelectionModal } from '@/components/schedule/EmployeeSelectionModal';\nimport { exportScheduleToPDF, exportConsolidatedScheduleToPDF } from '@/lib/schedule-pdf-exporter'; // Import PDF export functions\nimport { cn } from '@/lib/utils';\n\n// --- Constants for Local Storage Keys ---\nconst LOCATIONS_KEY = 'schedulePlannerLocations';\nconst DEPARTMENTS_KEY = 'schedulePlannerDepartments';\nconst EMPLOYEES_KEY = 'schedulePlannerEmployees';\nconst SCHEDULE_DATA_KEY = 'schedulePlannerData'; // Key for daily/weekly schedule data\nconst SCHEDULE_NOTES_KEY = 'schedulePlannerNotes'; // New key for notes\nconst SCHEDULE_TEMPLATES_KEY = 'schedulePlannerTemplates'; // New key for templates\nconst SCHEDULE_FOOTER_NOTES_KEY = 'schedulePlannerFooterNotes'; // New key for footer notes\n\n// --- Helper Function to Load from localStorage ---\nconst loadFromLocalStorage = <T,>(key: string, defaultValue: T): T => {\n    if (typeof window === 'undefined') {\n        return defaultValue; // Return default during SSR\n    }\n    try {\n        const savedData = localStorage.getItem(key);\n        if (!savedData) return defaultValue;\n        const parsed = JSON.parse(savedData);\n        // Basic validation if needed (e.g., check if it's an array or object)\n        if (typeof defaultValue === 'object' && defaultValue !== null) {\n            if (Array.isArray(defaultValue) && !Array.isArray(parsed)) return defaultValue;\n            if (!Array.isArray(defaultValue) && typeof parsed !== 'object') return defaultValue;\n        }\n        return parsed;\n    } catch (error) {\n        console.error(`Error loading ${key} from localStorage:`, error);\n        return defaultValue;\n    }\n};\n\n// Nueva función para cargar templates\nconst loadScheduleTemplates = (): ScheduleTemplate[] => {\n    if (typeof window === 'undefined') return []; // Solo en cliente\n\n    const loadedTemplates: ScheduleTemplate[] = [];\n    const templateKeyPrefix = \"tpl-\"; // O el prefijo/patrón real de tus claves de template\n\n    try {\n        for (let i = 0; i < localStorage.length; i++) {\n            const key = localStorage.key(i);\n\n            // Busca claves que COINCIDAN con el patrón de template\n            if (key && key.startsWith(templateKeyPrefix)) {\n                const storedData = localStorage.getItem(key);\n                if (storedData) {\n                    try {\n                        const parsedTemplate = JSON.parse(storedData) as ScheduleTemplate;\n                        // Validación básica (opcional pero recomendada):\n                        if (parsedTemplate && typeof parsedTemplate === 'object' && parsedTemplate.id && parsedTemplate.name) {\n                             // Podrías querer revivir fechas aquí si es necesario, similar a parseStoredData\n                             if (parsedTemplate.createdAt && typeof parsedTemplate.createdAt === 'string') {\n                                try {\n                                    parsedTemplate.createdAt = parseISO(parsedTemplate.createdAt);\n                                } catch (dateError) {\n                                     console.error(`Error parsing createdAt date for template ${key}:`, dateError);\n                                     // Handle the error, maybe set createdAt to undefined or keep the string\n                                }\n                             }\n                             loadedTemplates.push(parsedTemplate);\n                        } else {\n                             console.warn(`Dato inválido encontrado para la clave de template: ${key}`);\n                        }\n                    } catch (parseError) {\n                        console.error(`Error parseando JSON para la clave de template ${key}:`, parseError);\n                        // Podrías eliminar la clave inválida aquí si quieres: localStorage.removeItem(key);\n                    }\n                }\n            }\n        }\n    } catch (error) {\n        console.error(\"Error cargando templates de localStorage:\", error);\n        // Podrías mostrar un toast de error aquí\n    }\n\n    // Opcional: Ordenar los templates por nombre o fecha de creación si existe\n    loadedTemplates.sort((a, b) => {\n         const dateA = a.createdAt instanceof Date ? a.createdAt.getTime() : 0;\n         const dateB = b.createdAt instanceof Date ? b.createdAt.getTime() : 0;\n         if (dateB !== dateA) return dateB - dateA;\n         return (a.name || '').localeCompare(b.name || '');\n    });\n\n\n    console.log(`[loadScheduleTemplates] Cargados ${loadedTemplates.length} templates.`);\n    return loadedTemplates;\n};\n\n\nexport default function SchedulePage() {\n    // --- State Initialization ---\n    const [currentDate, setCurrentDate] = useState(new Date());\n    const [viewMode, setViewMode] = useState<'day' | 'week'>('week');\n    const [isClient, setIsClient] = useState(false); // Track client-side rendering\n\n    // Data states loaded from localStorage\n    const [locations, setLocations] = useState<Location[]>([]);\n    const [departments, setDepartments] = useState<Department[]>([]);\n    const [employees, setEmployees] = useState<Employee[]>([]);\n    const [scheduleData, setScheduleData] = useState<{ [dateKey: string]: ScheduleData }>({}); // Store schedule data keyed by date\n    const [scheduleNotes, setScheduleNotes] = useState<ScheduleNote[]>([]); // State for notes\n    const [savedTemplates, setSavedTemplates] = useState<ScheduleTemplate[]>([]); // State for templates\n    const [footerNotes, setFooterNotes] = useState<string>(''); // State for footer notes\n    const [scheduleTemplates, setScheduleTemplates] = useState<ScheduleTemplate[]>([]); // Add this state\n\n\n    // UI control states\n    const [selectedLocationId, setSelectedLocationId] = useState<string | undefined>(undefined);\n    const [isConfigOpen, setIsConfigOpen] = useState(false); // State for config panel visibility\n    const [isLoading, setIsLoading] = useState(false); // General loading indicator state\n    const [isMobile, setIsMobile] = useState(false); // Mobile check state\n    const isMobileHook = useIsMobile(); // Use the hook\n    const [isTemplateListOpen, setIsTemplateListOpen] = useState(false); // State for template list modal\n\n\n    // Modal states\n    const [isLocationModalOpen, setIsLocationModalOpen] = useState(false);\n    const [editingLocation, setEditingLocation] = useState<Location | null>(null);\n    const [locationFormData, setLocationFormData] = useState({ name: '' });\n\n    const [isDepartmentModalOpen, setIsDepartmentModalOpen] = useState(false);\n    const [editingDepartment, setEditingDepartment] = useState<Department | null>(null);\n    const [departmentFormData, setDepartmentFormData] = useState({ name: '', locationId: selectedLocationId || '', iconName: '' }); // Added iconName\n\n    const [isEmployeeModalOpen, setIsEmployeeModalOpen] = useState(false);\n    const [editingEmployee, setEditingEmployee] = useState<Employee | null>(null);\n    const [employeeFormData, setEmployeeFormData] = useState<{ name: string; id: string; locationIds: string[] }>({ name: '', id: '', locationIds: [] });\n\n    const [isShiftDetailModalOpen, setIsShiftDetailModalOpen] = useState(false);\n    const [shiftDetailsTarget, setShiftDetailsTarget] = useState<{ date: Date; departmentId: string; employee: Employee | null, assignmentId?: string } | null>(null);\n\n    const [isEmployeeSelectionModalOpen, setIsEmployeeSelectionModalOpen] = useState(false);\n    const [employeeSelectionTarget, setEmployeeSelectionTarget] = useState<{ date: Date; departmentId: string } | null>(null);\n\n    const [isNotesModalOpen, setIsNotesModalOpen] = useState(false); // State for notes modal\n    const [notesModalDate, setNotesModalDate] = useState<Date | undefined>(undefined); // Date context for notes modal\n    const [noteToDeleteId, setNoteToDeleteId] = useState<string | null>(null); // State for deleting a note\n\n    const [isSummaryDashboardOpen, setIsSummaryDashboardOpen] = useState(false); // State for summary dashboard\n\n    const [holidays, setHolidays] = useState<Set<string>>(new Set()); // Store holidays for the current year(s)\n    const [isCheckingHoliday, setIsCheckingHoliday] = useState(false);\n\n    const { toast } = useToast();\n    const configSheetRef = useRef<HTMLDivElement>(null); // Ref for config sheet/modal content\n    const fileInputRef = useRef<HTMLInputElement>(null); // Ref for file input\n\n    // --- Effects ---\n\n    // Set client flag and mobile state after mount\n    useEffect(() => {\n        setIsClient(true);\n        setIsMobile(isMobileHook);\n    }, [isMobileHook]);\n\n    // Load initial data from localStorage on mount\n    useEffect(() => {\n        if (isClient) {\n            setLocations(loadFromLocalStorage<Location[]>(LOCATIONS_KEY, []));\n            setDepartments(loadFromLocalStorage<Department[]>(DEPARTMENTS_KEY, []));\n            setEmployees(loadFromLocalStorage<Employee[]>(EMPLOYEES_KEY, []));\n            setScheduleData(loadFromLocalStorage<{ [dateKey: string]: ScheduleData }>(SCHEDULE_DATA_KEY, {}));\n            setScheduleNotes(loadFromLocalStorage<ScheduleNote[]>(SCHEDULE_NOTES_KEY, [])); // Load notes\n            setSavedTemplates(loadScheduleTemplates()); // Cargar templates usando la nueva función\n            setScheduleTemplates(loadScheduleTemplates()); // Load templates using the new function\n            setFooterNotes(loadFromLocalStorage<string>(SCHEDULE_FOOTER_NOTES_KEY, 'Lun a Jue: Parrillazo y Gauchos 12am. - Gaucho 11pm. | Vie a Sab: Parrillazo y Gauchos 1am. - Gaucho 12am. | Dom: Todos 11 pm')); // Load footer notes\n\n            // Set default selected location if none is selected and locations exist\n             const loadedLocations = loadFromLocalStorage<Location[]>(LOCATIONS_KEY, []);\n            if (!selectedLocationId && loadedLocations.length > 0) {\n                setSelectedLocationId(loadedLocations[0].id);\n            }\n             console.log(\"Initial data loaded from localStorage.\");\n        }\n    }, [isClient, selectedLocationId]);\n\n     // --- Save Footer Notes to localStorage ---\n    useEffect(() => {\n        if (isClient) {\n            localStorage.setItem(SCHEDULE_FOOTER_NOTES_KEY, footerNotes);\n        }\n    }, [footerNotes, isClient]);\n\n\n    // Save data to localStorage whenever it changes (except scheduleData initially)\n    useEffect(() => {\n        if (isClient) {\n            localStorage.setItem(LOCATIONS_KEY, JSON.stringify(locations));\n        }\n    }, [locations, isClient]);\n\n    useEffect(() => {\n        if (isClient) {\n            localStorage.setItem(DEPARTMENTS_KEY, JSON.stringify(departments));\n        }\n    }, [departments, isClient]);\n\n    useEffect(() => {\n        if (isClient) {\n            localStorage.setItem(EMPLOYEES_KEY, JSON.stringify(employees));\n        }\n    }, [employees, isClient]);\n\n    // Separate effect for scheduleData to avoid excessive writes during initial load/manipulation\n    useEffect(() => {\n        if (isClient && Object.keys(scheduleData).length > 0) { // Only save if not empty\n            localStorage.setItem(SCHEDULE_DATA_KEY, JSON.stringify(scheduleData));\n        }\n    }, [scheduleData, isClient]);\n\n    // Effect to save notes to localStorage\n    useEffect(() => {\n        if (isClient) {\n            localStorage.setItem(SCHEDULE_NOTES_KEY, JSON.stringify(scheduleNotes));\n        }\n    }, [scheduleNotes, isClient]);\n\n    // Effect to save templates to localStorage\n   useEffect(() => {\n       if (isClient) {\n           try {\n               console.log(\"[Save Effect] Saving templates to localStorage:\", savedTemplates); // Log before saving\n               localStorage.setItem(SCHEDULE_TEMPLATES_KEY, JSON.stringify(savedTemplates));\n               console.log(\"[Save Effect] Templates saved successfully.\"); // Log if saving succeeds\n           } catch (error) {\n               console.error(\"Error saving templates to localStorage:\", error);\n               toast({\n                   title: 'Error al Guardar Templates',\n                   description: 'No se pudieron guardar los templates localmente.',\n                   variant: 'destructive',\n               });\n           }\n       }\n   }, [savedTemplates, toast]); // Added toast as dependency\n\n    // --- Holiday Fetching Effect ---\n    useEffect(() => {\n        const fetchHolidays = async (year: number) => {\n            try {\n                const holidayDates = await getColombianHolidays(year);\n                return new Set(holidayDates.map(h => format(new Date(h.year, h.month - 1, h.day), 'yyyy-MM-dd')));\n            } catch (error) {\n                console.error(`Error fetching holidays for ${year}:`, error);\n                return new Set<string>(); // Return empty set on error\n            }\n        };\n\n        const yearsToFetch = new Set<number>();\n        const datesToCheck = viewMode === 'day' ? [currentDate] : weekDates; // Define weekDates here or ensure it's available\n\n        if (viewMode === 'day') {\n            yearsToFetch.add(getYear(currentDate));\n        } else { // week view\n            // Calculate weekDates here if not already available in this scope\n             const start = startOfWeek(currentDate, { weekStartsOn: 1 });\n             const currentWeekDates = Array.from({ length: 7 }).map((_, i) => addDays(start, i));\n             currentWeekDates.forEach(date => yearsToFetch.add(getYear(date)));\n        }\n\n\n        setIsCheckingHoliday(true);\n        Promise.all(Array.from(yearsToFetch).map(fetchHolidays)).then(holidaySets => {\n            const combinedHolidays = new Set<string>();\n            holidaySets.forEach(set => set.forEach(dateStr => combinedHolidays.add(dateStr)));\n            setHolidays(combinedHolidays);\n        }).finally(() => {\n            setIsCheckingHoliday(false);\n        });\n\n    }, [currentDate, viewMode]); // Removed weekDates from dependency array\n\n\n    // --- Derived State ---\n\n    // Calculate week dates based on currentDate\n    const weekDates = useMemo(() => {\n        const start = startOfWeek(currentDate, { weekStartsOn: 1 }); // Start week on Monday\n        return Array.from({ length: 7 }).map((_, i) => addDays(start, i));\n    }, [currentDate]);\n\n    // Filter departments based on selected location\n    const filteredDepartments = useMemo(() => {\n        if (!selectedLocationId) return [];\n        return departments.filter(dept => dept.locationId === selectedLocationId);\n    }, [departments, selectedLocationId]);\n\n    // Filter employees based on selected location\n    const filteredEmployees = useMemo(() => {\n        if (!selectedLocationId) return employees; // Show all if no location selected\n        return employees.filter(emp => emp.locationIds?.includes(selectedLocationId));\n    }, [employees, selectedLocationId]);\n\n     // Filter available employees based on department and date\n     const availableEmployees = useMemo(() => {\n        if (!employeeSelectionTarget) return []; // Start with empty array if no target\n\n        const targetDateKey = format(employeeSelectionTarget.date, 'yyyy-MM-dd');\n        const targetDepartmentId = employeeSelectionTarget.departmentId;\n        const daySchedule = scheduleData[targetDateKey] || { date: employeeSelectionTarget.date, assignments: {} };\n\n        // 1. Find employees assigned to the target department (or have no specific dept assignment)\n        const employeesInOrForDept = filteredEmployees.filter(emp =>\n            !emp.departmentIds || emp.departmentIds.length === 0 || emp.departmentIds.includes(targetDepartmentId)\n        );\n\n        // 2. Find employees already assigned *anywhere* on the target date\n        const assignedIdsThisDay = new Set<string>();\n        Object.values(daySchedule.assignments).forEach(deptAssignments => {\n            deptAssignments.forEach(assignment => assignedIdsThisDay.add(assignment.employee.id));\n        });\n\n        // 3. Return employees from step 1 who are NOT in step 2\n        return employeesInOrForDept.filter(emp => !assignedIdsThisDay.has(emp.id));\n\n    }, [employeeSelectionTarget, scheduleData, filteredEmployees]);\n\n\n    // Filter templates based on selected location and view mode\n     const filteredTemplates = useMemo(() => {\n        console.log(\"[Filter Memo] All templates in state:\", savedTemplates); // Use savedTemplates\n        const templatesArray = Array.isArray(savedTemplates) ? savedTemplates : [];\n        const filtered = templatesArray.filter(temp => {\n            const locationMatch = temp.locationId === selectedLocationId;\n            const typeMatch = temp.type === viewMode; // Match current viewMode ('day' or 'week')\n            console.log(`[Filter Memo] Template ${temp.id} (${temp.name}): Loc Match=${locationMatch}, Type Match=${typeMatch}`);\n            return locationMatch && typeMatch;\n        });\n        console.log(`[Filter Memo] Filtered templates for loc ${selectedLocationId}, view ${viewMode}:`, filtered);\n        return filtered;\n    }, [savedTemplates, selectedLocationId, viewMode]); // Depend on savedTemplates\n\n\n    // --- Event Handlers ---\n\n    const handlePrevious = () => {\n        setCurrentDate(viewMode === 'day' ? addDays(currentDate, -1) : subWeeks(currentDate, 1));\n    };\n\n    const handleNext = () => {\n        setCurrentDate(viewMode === 'day' ? addDays(currentDate, 1) : addWeeks(currentDate, 1));\n    };\n\n     const handleDateSelect = (date: Date | undefined) => {\n        if (date) {\n            setCurrentDate(date);\n             if (viewMode === 'week') {\n                 // Optional: Adjust viewMode to 'day' when a specific date is picked?\n                 // setViewMode('day');\n             }\n        }\n    };\n\n    const handleLocationChange = (locationId: string) => {\n        setSelectedLocationId(locationId);\n        // Reset department form data if location changes\n        setDepartmentFormData(prev => ({ ...prev, locationId: locationId }));\n    };\n\n    // --- CRUD Handlers for Locations, Departments, Employees ---\n\n    const handleOpenLocationModal = (location: Location | null = null) => {\n        setEditingLocation(location);\n        setLocationFormData({ name: location?.name || '' });\n        setIsLocationModalOpen(true);\n    };\n\n    const handleSaveLocation = () => {\n        if (!locationFormData.name.trim()) {\n            toast({ title: \"Error\", description: \"El nombre de la sede es requerido.\", variant: \"destructive\" });\n            return;\n        }\n        const name = locationFormData.name.trim();\n        if (editingLocation) {\n            // Update existing location\n            setLocations(locations.map(loc => loc.id === editingLocation.id ? { ...loc, name } : loc));\n            toast({ title: \"Sede Actualizada\", description: `Sede \"${name}\" actualizada.` });\n        } else {\n            // Add new location\n            const newLocation: Location = { id: `loc-${uuidv4()}`, name };\n            setLocations([...locations, newLocation]);\n            toast({ title: \"Sede Agregada\", description: `Sede \"${name}\" agregada.` });\n            // Select the newly added location\n            setSelectedLocationId(newLocation.id);\n        }\n        setIsLocationModalOpen(false);\n        setEditingLocation(null);\n        setLocationFormData({ name: '' }); // Reset form\n    };\n\n    const handleDeleteLocation = (locationId: string) => {\n        // Add confirmation dialog here if desired\n        // Also, consider implications: deleting a location might require deleting its departments and assignments\n        setLocations(locations.filter(loc => loc.id !== locationId));\n        setDepartments(departments.filter(dep => dep.locationId !== locationId)); // Remove associated departments\n        // TODO: Remove assignments associated with this location/departments from scheduleData\n        toast({ title: \"Sede Eliminada\", variant: \"destructive\" });\n         // If the deleted location was selected, reset selection\n        if (selectedLocationId === locationId) {\n            setSelectedLocationId(locations.length > 1 ? locations.find(l => l.id !== locationId)?.id : undefined);\n        }\n    };\n\n\n     const handleOpenDepartmentModal = (department: Department | null = null) => {\n         if (!selectedLocationId) {\n             toast({ title: \"Error\", description: \"Selecciona una sede primero.\", variant: \"destructive\" });\n             return;\n         }\n         setEditingDepartment(department);\n         setDepartmentFormData({\n             name: department?.name || '',\n             locationId: selectedLocationId, // Set current location ID\n             iconName: department?.iconName || '' // Use iconName\n         });\n         setIsDepartmentModalOpen(true);\n     };\n\n     const handleSaveDepartment = () => {\n         if (!departmentFormData.name.trim()) {\n             toast({ title: \"Error\", description: \"El nombre del departamento es requerido.\", variant: \"destructive\" });\n             return;\n         }\n         if (!departmentFormData.locationId) {\n              toast({ title: \"Error\", description: \"El departamento debe estar asociado a una sede.\", variant: \"destructive\" });\n              return;\n         }\n         const name = departmentFormData.name.trim();\n         const iconName = departmentFormData.iconName?.trim(); // Get icon name\n\n         if (editingDepartment) {\n             // Update existing department\n             setDepartments(departments.map(dep => dep.id === editingDepartment.id ? { ...dep, name, iconName } : dep));\n             toast({ title: \"Departamento Actualizado\" });\n         } else {\n             // Add new department\n             const newDepartment: Department = {\n                 id: `dep-${uuidv4()}`,\n                 name,\n                 locationId: departmentFormData.locationId,\n                 iconName: iconName || undefined // Save icon name or undefined\n             };\n             setDepartments([...departments, newDepartment]);\n             toast({ title: \"Departamento Agregado\" });\n         }\n         setIsDepartmentModalOpen(false);\n         setEditingDepartment(null);\n         setDepartmentFormData({ name: '', locationId: selectedLocationId || '', iconName: '' }); // Reset form\n     };\n\n    const handleDeleteDepartment = (departmentId: string) => {\n        // Add confirmation\n        setDepartments(departments.filter(dep => dep.id !== departmentId));\n        // TODO: Remove assignments associated with this department from scheduleData\n        toast({ title: \"Departamento Eliminado\", variant: \"destructive\" });\n    };\n\n\n    const handleOpenEmployeeModal = (employee: Employee | null = null) => {\n        setEditingEmployee(employee);\n        setEmployeeFormData({\n            name: employee?.name || '',\n            id: employee?.id || '', // Keep existing ID if editing\n            locationIds: employee?.locationIds || (selectedLocationId ? [selectedLocationId] : []) // Default to current location if adding\n        });\n        setIsEmployeeModalOpen(true);\n    };\n\n    const handleSaveEmployee = () => {\n        if (!employeeFormData.name.trim()) {\n            toast({ title: \"Error\", description: \"El nombre del colaborador es requerido.\", variant: \"destructive\" });\n            return;\n        }\n        if (!employeeFormData.id.trim()) {\n             toast({ title: \"Error\", description: \"El ID del colaborador es requerido.\", variant: \"destructive\" });\n             return;\n         }\n        if (employeeFormData.locationIds.length === 0) {\n            toast({ title: \"Error\", description: \"Selecciona al menos una sede para el colaborador.\", variant: \"destructive\" });\n            return;\n        }\n        const name = employeeFormData.name.trim();\n        const id = employeeFormData.id.trim();\n        const locationIds = employeeFormData.locationIds;\n\n        // Check for duplicate ID if adding a new employee\n        if (!editingEmployee && employees.some(emp => emp.id === id)) {\n            toast({ title: \"Error\", description: `El ID de colaborador '${id}' ya existe.`, variant: \"destructive\" });\n            return;\n        }\n\n\n        if (editingEmployee) {\n            // Update existing employee\n            setEmployees(employees.map(emp => emp.id === editingEmployee.id ? { ...emp, name, id, locationIds } : emp));\n            toast({ title: \"Colaborador Actualizado\" });\n        } else {\n            // Add new employee\n            const newEmployee: Employee = { id, name, locationIds, departmentIds: [] }; // Initialize departmentIds\n            setEmployees([...employees, newEmployee]);\n            toast({ title: \"Colaborador Agregado\" });\n        }\n        setIsEmployeeModalOpen(false);\n        setEditingEmployee(null);\n        setEmployeeFormData({ name: '', id: '', locationIds: [] }); // Reset form\n    };\n\n    const handleDeleteEmployee = (employeeId: string) => {\n         // Confirmation Dialog\n         setEmployees(employees.filter(emp => emp.id !== employeeId));\n         // TODO: Remove assignments associated with this employee from scheduleData\n         toast({ title: \"Colaborador Eliminado\", variant: \"destructive\" });\n         // Close modal if the employee being edited was deleted\n         if (editingEmployee?.id === employeeId) {\n            setIsEmployeeModalOpen(false);\n            setEditingEmployee(null);\n             setEmployeeFormData({ name: '', id: '', locationIds: [] });\n         }\n     };\n\n    const handleEmployeeLocationChange = (locationId: string) => {\n        setEmployeeFormData(prev => {\n            const newLocationIds = prev.locationIds.includes(locationId)\n                ? prev.locationIds.filter(id => id !== locationId)\n                : [...prev.locationIds, locationId];\n            return { ...prev, locationIds: newLocationIds };\n        });\n    };\n\n     const handleCopyEmployeeId = (id: string) => {\n        navigator.clipboard.writeText(id)\n            .then(() => {\n                toast({ title: \"ID Copiado\", description: `ID \"${id}\" copiado al portapapeles.` });\n            })\n            .catch(err => {\n                console.error(\"Error al copiar ID:\", err);\n                toast({ title: \"Error al Copiar\", variant: \"destructive\" });\n            });\n    };\n\n\n    // --- Drag and Drop Handler ---\n    const handleDragEnd = (event: DragEndEvent) => {\n        const { active, over } = event;\n\n        console.log(\"DragEnd Event:\", event); // Log the full event\n\n        // Ensure we are dragging an employee and dropping onto a department column for a specific date\n        if (active.data.current?.type === 'employee' && over?.data.current?.type === 'department') {\n            const employee = active.data.current.employee as Employee;\n            const targetDepartmentId = over.data.current.id as string;\n            const targetDateStr = over.data.current.date as string; // Date string from droppable data\n\n             if (!employee || !targetDepartmentId || !targetDateStr) {\n                 console.error(\"DragEnd Error: Missing data\", { employee, targetDepartmentId, targetDateStr });\n                 return;\n             }\n\n\n            const targetDate = parseDateFns(targetDateStr, 'yyyy-MM-dd', new Date());\n\n             // Check if employee is already assigned on this day (optional, depends on rules)\n            const daySchedule = getScheduleForDate(targetDate);\n            const isAlreadyAssigned = Object.values(daySchedule.assignments).some(deptAssignments =>\n                deptAssignments.some(assignment => assignment.employee.id === employee.id)\n            );\n\n            if (isAlreadyAssigned) {\n                 toast({\n                     title: \"Colaborador Ya Asignado\",\n                     description: `${employee.name} ya tiene un turno asignado para el ${format(targetDate, 'PPP', { locale: es })}.`,\n                     variant: \"destructive\",\n                     duration: 5000\n                 });\n                 return;\n             }\n\n             // --- Department Compatibility Check ---\n             const department = departments.find(d => d.id === targetDepartmentId);\n             const employeeBelongsToDepartment = employee.departmentIds?.includes(targetDepartmentId);\n\n             if (department && employee.departmentIds && employee.departmentIds.length > 0 && !employeeBelongsToDepartment) {\n                 // Employee has specific departments BUT NOT this one - Show confirmation\n                 if (!window.confirm(`Advertencia: ${employee.name} no está asignado directamente a ${department.name}. ¿Deseas continuar con la asignación?`)) {\n                     return; // Cancel if user selects 'Cancel'\n                 }\n             }\n\n\n            console.log(`Assigning ${employee.name} (${employee.id}) to dept ${targetDepartmentId} on ${targetDateStr}`);\n\n            // Open shift detail modal after successful drop\n            setShiftDetailsTarget({ date: targetDate, departmentId: targetDepartmentId, employee });\n            setIsShiftDetailModalOpen(true);\n        }\n    };\n\n\n     // --- Shift Management Handlers ---\n\n     // Function to get schedule data for a specific date, creating if it doesn't exist\n    const getScheduleForDate = useCallback((date: Date): ScheduleData => {\n        const dateKey = format(date, 'yyyy-MM-dd');\n        // Ensure scheduleData[dateKey] and its assignments property exist\n        const dayData = scheduleData[dateKey] || { date: date, assignments: {} };\n        dayData.assignments = dayData.assignments || {}; // Ensure assignments object exists\n        return dayData;\n    }, [scheduleData]);\n\n\n    const handleSaveShiftDetails = (details: { startTime: string; endTime: string; includeBreak: boolean; breakStartTime?: string; breakEndTime?: string }) => {\n         if (!shiftDetailsTarget || !shiftDetailsTarget.date || !shiftDetailsTarget.departmentId || !shiftDetailsTarget.employee) {\n             console.error(\"Error saving shift: Target data is missing.\");\n             return;\n         }\n\n         const { date, departmentId, employee, assignmentId } = shiftDetailsTarget;\n         const dateKey = format(date, 'yyyy-MM-dd');\n\n         setScheduleData(prevSchedule => {\n             const newSchedule = { ...prevSchedule };\n             const daySchedule = { ...(newSchedule[dateKey] || { date: date, assignments: {} }) };\n             daySchedule.assignments = { ...(daySchedule.assignments || {}) }; // Ensure assignments exists\n             const deptAssignments = [...(daySchedule.assignments[departmentId] || [])];\n\n             if (assignmentId) { // Editing existing shift\n                  const index = deptAssignments.findIndex(a => a.id === assignmentId);\n                  if (index !== -1) {\n                      deptAssignments[index] = { ...deptAssignments[index], ...details };\n                      toast({ title: \"Turno Actualizado\", description: `Turno de ${employee.name} actualizado.` });\n                  } else {\n                      console.warn(\"Shift to edit not found:\", assignmentId);\n                      toast({ title: \"Error\", description: \"No se encontró el turno a editar.\", variant: \"destructive\" });\n                  }\n             } else { // Adding new shift\n                 const newAssignment: ShiftAssignment = {\n                     id: `shift_${uuidv4()}`,\n                     employee: employee, // Store the full employee object\n                     ...details\n                 };\n                 deptAssignments.push(newAssignment);\n                 toast({ title: \"Turno Agregado\", description: `Turno agregado para ${employee.name}.` });\n             }\n\n             daySchedule.assignments[departmentId] = deptAssignments;\n             newSchedule[dateKey] = daySchedule;\n             return newSchedule;\n         });\n\n         setIsShiftDetailModalOpen(false);\n         setShiftDetailsTarget(null); // Reset target\n     };\n\n\n     const handleRemoveShift = (dateKey: string, departmentId: string, assignmentId: string) => {\n          console.log(`Attempting to remove shift: dateKey=${dateKey}, deptId=${departmentId}, assignId=${assignmentId}`);\n          setScheduleData(prevSchedule => {\n              // Shallow copy the schedule up to the necessary level\n              const newSchedule = { ...prevSchedule };\n              if (!newSchedule[dateKey] || !newSchedule[dateKey].assignments || !newSchedule[dateKey].assignments[departmentId]) {\n                  console.warn(\"Shift removal failed: Path not found in scheduleData\", { dateKey, departmentId });\n                  return prevSchedule; // Return original state if path doesn't exist\n              }\n\n              // Copy the day's schedule and assignments object\n              const daySchedule = { ...newSchedule[dateKey] };\n              daySchedule.assignments = { ...daySchedule.assignments };\n\n              // Filter out the assignment to be removed\n              const originalAssignments = daySchedule.assignments[departmentId] || [];\n              const updatedAssignments = originalAssignments.filter(assignment => assignment.id !== assignmentId);\n\n              if (updatedAssignments.length === originalAssignments.length) {\n                   console.warn(\"Shift removal failed: Assignment ID not found\", { assignmentId, existingAssignments: originalAssignments });\n                   return prevSchedule; // Return original if assignment wasn't found (prevents unnecessary updates)\n              }\n\n              // Update the assignments for the department\n              daySchedule.assignments[departmentId] = updatedAssignments;\n\n              // If the department now has no assignments, optionally remove the department key\n              if (updatedAssignments.length === 0) {\n                   // delete daySchedule.assignments[departmentId]; // Optional cleanup\n              }\n\n              // Update the schedule for the specific date\n              newSchedule[dateKey] = daySchedule;\n\n              console.log(\"Shift removed successfully. New schedule data:\", newSchedule);\n              toast({ title: \"Turno Eliminado\", variant: \"destructive\" });\n              return newSchedule; // Return the updated schedule\n          });\n      };\n\n      // Handler for clicking on an existing shift card\n    const handleShiftClick = (assignment: ShiftAssignment, date: Date, departmentId: string) => {\n        console.log(\"Shift clicked:\", assignment, \"on date:\", date, \"in dept:\", departmentId);\n        setShiftDetailsTarget({\n            date: date,\n            departmentId: departmentId,\n            employee: assignment.employee,\n            assignmentId: assignment.id // Pass the assignment ID for editing\n        });\n        setIsShiftDetailModalOpen(true);\n    };\n\n\n      // --- Handlers for adding shifts via '+' button ---\n      const handleAddShiftRequest = (departmentId: string, date: Date) => {\n         const targetDepartment = departments.find(d => d.id === departmentId);\n         if (!targetDepartment) return; // Should not happen if UI is correct\n\n         console.log(`Add shift requested for dept: ${departmentId} on ${format(date, 'yyyy-MM-dd')}`);\n         setEmployeeSelectionTarget({ date, departmentId }); // Set target for employee selection modal\n         setIsEmployeeSelectionModalOpen(true); // Open the modal\n     };\n\n      const handleSelectEmployeeForShift = (employee: Employee) => {\n         if (!employeeSelectionTarget) return;\n\n         // Open the shift detail modal with the selected employee\n         setShiftDetailsTarget({\n             date: employeeSelectionTarget.date,\n             departmentId: employeeSelectionTarget.departmentId,\n             employee: employee,\n             assignmentId: undefined // Clear assignmentId as we are adding new\n         });\n         setIsShiftDetailModalOpen(true);\n         setIsEmployeeSelectionModalOpen(false); // Close employee selection\n     };\n\n\n    // --- Schedule Manipulation Handlers ---\n\n    const handleDuplicateDay = (sourceDate: Date) => {\n        const targetDate = addDays(sourceDate, 1);\n        const sourceDateKey = format(sourceDate, 'yyyy-MM-dd');\n        const targetDateKey = format(targetDate, 'yyyy-MM-dd');\n\n        if (!scheduleData[sourceDateKey]) {\n            toast({ title: \"Nada que Duplicar\", description: `No hay horario definido para el ${format(sourceDate, 'PPP', { locale: es })}.`, variant: \"default\" });\n            return;\n        }\n\n        // Deep copy assignments, generating new IDs for each assignment\n        const copiedAssignments: { [deptId: string]: ShiftAssignment[] } = {};\n        const sourceAssignments = scheduleData[sourceDateKey].assignments || {};\n        for (const deptId in sourceAssignments) {\n            copiedAssignments[deptId] = sourceAssignments[deptId].map(assign => ({\n                ...assign,\n                id: `shift_${uuidv4()}` // Generate a new unique ID\n            }));\n        }\n\n        setScheduleData(prev => ({\n            ...prev,\n            [targetDateKey]: {\n                date: targetDate,\n                assignments: copiedAssignments\n            }\n        }));\n        toast({ title: \"Horario Duplicado\", description: `El horario del ${format(sourceDate, 'dd/MM')} se copió al ${format(targetDate, 'dd/MM/yyyy')}.` });\n         // Optionally, move the view to the next day\n         setCurrentDate(targetDate);\n         if(viewMode === 'week') {\n             // If duplicating the last day of the week view, move to the next week\n            const weekEnd = endOfWeek(sourceDate, { weekStartsOn: 1 });\n             if (isSameDay(sourceDate, weekEnd)) {\n                 handleNext(); // Navigate to the next week\n             }\n         }\n    };\n\n    // Handler to duplicate the entire week's schedule to the next week\n     const handleDuplicateWeek = () => {\n         const nextWeekStart = addWeeks(startOfWeek(currentDate, { weekStartsOn: 1 }), 1);\n         let assignmentsCopiedCount = 0;\n\n         setScheduleData(prev => {\n             const newSchedule = { ...prev };\n             weekDates.forEach((sourceDate, index) => {\n                 const sourceDateKey = format(sourceDate, 'yyyy-MM-dd');\n                 const targetDate = addDays(nextWeekStart, index);\n                 const targetDateKey = format(targetDate, 'yyyy-MM-dd');\n\n                 if (prev[sourceDateKey]?.assignments && Object.keys(prev[sourceDateKey].assignments).length > 0) {\n                     // Deep copy with new IDs\n                     const copiedAssignments: { [deptId: string]: ShiftAssignment[] } = {};\n                     const sourceAssignments = prev[sourceDateKey].assignments;\n                     for (const deptId in sourceAssignments) {\n                         copiedAssignments[deptId] = sourceAssignments[deptId].map(assign => ({\n                             ...assign,\n                             id: `shift_${uuidv4()}`\n                         }));\n                          assignmentsCopiedCount += copiedAssignments[deptId].length;\n                     }\n                     newSchedule[targetDateKey] = {\n                         date: targetDate,\n                         assignments: copiedAssignments\n                     };\n                 } else {\n                      // If source day is empty, ensure target day is also empty or removed\n                      if (newSchedule[targetDateKey]) {\n                         // Optionally clear it: delete newSchedule[targetDateKey];\n                         // Or set empty assignments: newSchedule[targetDateKey] = { date: targetDate, assignments: {} };\n                      }\n                 }\n             });\n             return newSchedule;\n         });\n\n         if (assignmentsCopiedCount > 0) {\n             toast({ title: \"Semana Duplicada\", description: `Se copiaron ${assignmentsCopiedCount} turnos a la semana del ${format(nextWeekStart, 'dd/MM')}.` });\n             setCurrentDate(nextWeekStart); // Navigate to the duplicated week\n         } else {\n             toast({ title: \"Semana Vacía\", description: \"La semana actual no tenía turnos para duplicar.\", variant: \"default\" });\n         }\n     };\n\n\n    const handleClearDay = (dateToClear: Date) => {\n        const dateKey = format(dateToClear, 'yyyy-MM-dd');\n         let shiftsCleared = 0;\n         let notesCleared = 0;\n\n        setScheduleData(prev => {\n            if (!prev[dateKey]) return prev; // No data to clear\n             const daySchedule = prev[dateKey];\n             shiftsCleared = Object.values(daySchedule.assignments || {}).reduce((sum, deptAssigns) => sum + deptAssigns.length, 0);\n\n            const newSchedule = { ...prev };\n            // Create a new object for the day with empty assignments\n            newSchedule[dateKey] = { date: dateToClear, assignments: {} };\n            return newSchedule;\n        });\n\n         // Also clear notes for that day\n         setScheduleNotes(prevNotes => {\n             const notesBefore = prevNotes.length;\n             const updatedNotes = prevNotes.filter(note => note.date !== dateKey);\n             notesCleared = notesBefore - updatedNotes.length;\n             return updatedNotes;\n         });\n\n\n         if (shiftsCleared > 0 || notesCleared > 0) {\n            toast({ title: \"Día Limpiado\", description: `Se eliminaron ${shiftsCleared} turnos y ${notesCleared} anotaciones del ${format(dateToClear, 'PPP', { locale: es })}.`, variant: \"destructive\" });\n         } else {\n             toast({ title: \"Día Vacío\", description: `No había turnos ni anotaciones para eliminar el ${format(dateToClear, 'PPP', { locale: es })}.`, variant: \"default\" });\n         }\n    };\n\n     // Handler to clear the entire week's schedule\n     const handleClearWeek = () => {\n         let shiftsCleared = 0;\n         let notesCleared = 0;\n         const weekDateKeys = weekDates.map(date => format(date, 'yyyy-MM-dd'));\n\n         setScheduleData(prev => {\n             const newSchedule = { ...prev };\n             let changed = false;\n             weekDateKeys.forEach(dateKey => {\n                 if (newSchedule[dateKey]?.assignments && Object.keys(newSchedule[dateKey].assignments).length > 0) {\n                     shiftsCleared += Object.values(newSchedule[dateKey].assignments).reduce((sum, deptAssigns) => sum + deptAssigns.length, 0);\n                     newSchedule[dateKey] = { date: parseDateFns(dateKey, 'yyyy-MM-dd', new Date()), assignments: {} }; // Keep date object, clear assignments\n                     changed = true;\n                 }\n             });\n             return changed ? newSchedule : prev;\n         });\n\n          // Also clear notes for the week\n          setScheduleNotes(prevNotes => {\n              const notesBefore = prevNotes.length;\n              const updatedNotes = prevNotes.filter(note => !weekDateKeys.includes(note.date));\n              notesCleared = notesBefore - updatedNotes.length;\n              return updatedNotes.length !== notesBefore ? updatedNotes : prevNotes;\n          });\n\n\n         if (shiftsCleared > 0 || notesCleared > 0) {\n             toast({ title: \"Semana Limpiada\", description: `Se eliminaron ${shiftsCleared} turnos y ${notesCleared} anotaciones de la semana actual.`, variant: \"destructive\" });\n         } else {\n             toast({ title: \"Semana Vacía\", description: \"No había turnos ni anotaciones para eliminar en esta semana.\", variant: \"default\" });\n         }\n     };\n\n\n    // --- Holiday Check Function ---\n    const isHoliday = useCallback((date: Date | null | undefined): boolean => {\n        if (!date || !isValid(date)) return false;\n        const dateStr = format(date, 'yyyy-MM-dd');\n        return holidays.has(dateStr);\n    }, [holidays]);\n\n    // --- Notes Handlers ---\n     const handleAddNote = (newNoteData: Omit<ScheduleNote, 'id'>) => {\n         const newNote: ScheduleNote = {\n             ...newNoteData,\n             id: `note-${uuidv4()}`\n         };\n         setScheduleNotes(prev => [...prev, newNote].sort((a, b) => a.date.localeCompare(b.date))); // Keep sorted\n         toast({ title: \"Anotación Guardada\", description: `Nota para el ${format(parseDateFns(newNote.date, 'yyyy-MM-dd', new Date()), 'PPP', { locale: es })} añadida.` });\n     };\n\n     const handleDeleteNote = (noteId: string) => {\n         const noteToDelete = scheduleNotes.find(n => n.id === noteId);\n         setScheduleNotes(prev => prev.filter(note => note.id !== noteId));\n         if (noteToDelete) {\n             toast({ title: \"Anotación Eliminada\", description: `Nota \"${noteToDelete.note}\" eliminada.`, variant: \"destructive\" });\n         }\n         setNoteToDeleteId(null); // Reset confirmation state\n     };\n\n    const getNotesForDate = useCallback((date: Date): ScheduleNote[] => {\n        const dateKey = format(date, 'yyyy-MM-dd');\n        return scheduleNotes.filter(note => note.date === dateKey);\n    }, [scheduleNotes]);\n\n    // Opens the notes modal, optionally focusing on a specific date\n    const handleOpenNotesModal = (date?: Date) => {\n        setNotesModalDate(date); // If date is provided, modal will focus on it\n        setIsNotesModalOpen(true);\n    };\n\n    // --- Template Handlers ---\n\n     const handleSaveTemplate = (type: 'day' | 'week') => {\n         if (!selectedLocationId) {\n             toast({ title: \"Error\", description: \"Selecciona una sede primero.\", variant: \"destructive\" });\n             return;\n         }\n\n         const templateName = prompt(`Ingresa un nombre para el template ${type === 'day' ? 'diario' : 'semanal'}:`);\n         if (!templateName || !templateName.trim()) {\n             toast({ title: \"Cancelado\", description: \"No se ingresó un nombre.\", variant: \"default\" });\n             return;\n         }\n\n         let assignmentsToSave: DailyAssignments | WeeklyAssignments = {};\n         let daysCount = 0;\n\n         if (type === 'day') {\n             const dateKey = format(currentDate, 'yyyy-MM-dd');\n             const daySchedule = scheduleData[dateKey];\n             if (!daySchedule || Object.keys(daySchedule.assignments || {}).length === 0) {\n                 toast({ title: \"Error\", description: \"No hay horario definido para este día.\", variant: \"destructive\" });\n                 return;\n             }\n              const dailyAssignments: DailyAssignments = {};\n              for(const deptId in daySchedule.assignments) {\n                  dailyAssignments[deptId] = daySchedule.assignments[deptId].map(({ id, employee, ...rest }) => ({ ...rest, employee: { id: employee.id } })); // Store only employee ID\n              }\n              assignmentsToSave = dailyAssignments;\n              daysCount = 1;\n\n         } else { // week\n             const weeklyAssignments: WeeklyAssignments = {};\n             let weekHasAssignments = false;\n             weekDates.forEach(date => {\n                 const dateKey = format(date, 'yyyy-MM-dd');\n                 const daySchedule = scheduleData[dateKey];\n                  if (daySchedule?.assignments && Object.keys(daySchedule.assignments).length > 0) {\n                      const dailyAssignmentsForTemplate: DailyAssignments = {};\n                       for(const deptId in daySchedule.assignments) {\n                           dailyAssignmentsForTemplate[deptId] = daySchedule.assignments[deptId].map(({ id, employee, ...rest }) => ({ ...rest, employee: { id: employee.id } }));\n                       }\n                       weeklyAssignments[dateKey] = dailyAssignmentsForTemplate;\n                       weekHasAssignments = true;\n                  }\n             });\n             if (!weekHasAssignments) {\n                  toast({ title: \"Error\", description: \"No hay horario definido para esta semana.\", variant: \"destructive\" });\n                  return;\n             }\n             assignmentsToSave = weeklyAssignments;\n             daysCount = Object.keys(weeklyAssignments).length;\n         }\n\n         const newTemplate: ScheduleTemplate = {\n             id: `tpl-${uuidv4()}`,\n             name: templateName.trim(),\n             locationId: selectedLocationId,\n             type: type,\n             assignments: assignmentsToSave,\n             createdAt: new Date() // Add creation timestamp\n         };\n\n         setSavedTemplates(prev => {\n             const updatedTemplates = [...prev, newTemplate];\n             // Optional: Sort templates after adding\n             updatedTemplates.sort((a, b) => (a.name || '').localeCompare(b.name || ''));\n             console.log(\"[Save Template] New template added:\", newTemplate);\n             console.log(\"[Save Template] All templates now:\", updatedTemplates);\n             return updatedTemplates;\n         });\n\n         toast({ title: \"Template Guardado\", description: `Template \"${newTemplate.name}\" (${type}, ${daysCount} día/s) guardado.` });\n     };\n\n   // Function to apply a loaded template to the current view\n   const applyTemplateToSchedule = useCallback((template: ScheduleTemplate) => {\n        console.log(\"[Apply Template] Applying template:\", template);\n        console.log(\"[Apply Template] Current viewMode:\", viewMode);\n        console.log(\"[Apply Template] Template type:\", template.type);\n\n        if (viewMode !== template.type) {\n             toast({ title: \"Error de Tipo\", description: `El template \"${template.name}\" es ${template.type}. Cambia a la vista ${template.type} para cargarlo.`, variant: \"destructive\", duration: 6000 });\n             return;\n        }\n\n\n       if (viewMode === 'day') { // Apply daily template to current day\n           const dateKey = format(currentDate, 'yyyy-MM-dd');\n           const templateAssignments = template.assignments as DailyAssignments;\n            const dayAssignments: { [deptId: string]: ShiftAssignment[] } = {};\n\n           for (const deptId in templateAssignments) {\n                const department = filteredDepartments.find(d => d.id === deptId);\n                if (!department) continue; // Skip if department doesn't exist in current location\n\n                dayAssignments[deptId] = templateAssignments[deptId].map(tempAssign => {\n                    const employee = employees.find(e => e.id === tempAssign.employee.id);\n                    if (!employee) return null; // Skip if employee doesn't exist\n                    return {\n                        ...tempAssign,\n                        id: `shift_${uuidv4()}`,\n                        employee: employee // Use full employee object\n                    };\n                }).filter((a): a is ShiftAssignment => a !== null); // Filter out nulls and type guard\n            }\n\n\n           setScheduleData(prev => ({\n               ...prev,\n               [dateKey]: {\n                   date: currentDate,\n                   assignments: dayAssignments\n               }\n           }));\n           toast({ title: \"Template Diario Aplicado\", description: `Template \"${template.name}\" aplicado al ${format(currentDate, 'PPP', { locale: es })}.` });\n\n       } else { // Apply weekly template to current week (viewMode === 'week')\n           const templateAssignments = template.assignments as WeeklyAssignments;\n           let shiftsAppliedCount = 0;\n            const currentWeekStart = startOfWeek(currentDate, { weekStartsOn: 1 }); // Ensure we use the correct week start\n\n           setScheduleData(prev => {\n               const newSchedule = { ...prev };\n               weekDates.forEach((date, index) => { // Use the derived weekDates for the current view\n                   const dateKey = format(date, 'yyyy-MM-dd');\n                   // Find the corresponding day in the template based on its offset from the template's week start\n                   // This requires knowing the week structure of the template itself\n                   // Simplified approach: Assume template keys are 'yyyy-MM-dd' and apply matching days\n                   const templateDayAssignments = templateAssignments[dateKey];\n\n                   if (templateDayAssignments) {\n                       const dayAssignmentsForSchedule: { [deptId: string]: ShiftAssignment[] } = {};\n                       for (const deptId in templateDayAssignments) {\n                            const department = filteredDepartments.find(d => d.id === deptId);\n                            if (!department) continue; // Skip dept not in current location\n\n                           dayAssignmentsForSchedule[deptId] = templateDayAssignments[deptId].map(tempAssign => {\n                               const employee = employees.find(e => e.id === tempAssign.employee.id);\n                               if (!employee) return null;\n                               return {\n                                   ...tempAssign,\n                                   id: `shift_${uuidv4()}`,\n                                   employee: employee\n                               };\n                           }).filter((a): a is ShiftAssignment => a !== null);\n                            shiftsAppliedCount += dayAssignmentsForSchedule[deptId].length;\n                       }\n                        newSchedule[dateKey] = {\n                           date: date,\n                           assignments: dayAssignmentsForSchedule\n                       };\n                   } else {\n                        // If template doesn't have data for this day, clear it in the schedule\n                        newSchedule[dateKey] = { date: date, assignments: {} };\n                   }\n               });\n               return newSchedule;\n           });\n\n           if (shiftsAppliedCount > 0) {\n               toast({ title: \"Template Semanal Aplicado\", description: `Template \"${template.name}\" aplicado a la semana actual.` });\n           } else {\n                toast({ title: \"Template Vacío o Incompleto\", description: `El template \"${template.name}\" no contenía asignaciones para esta semana/ubicación.`, variant:\"default\" });\n           }\n       }\n    }, [currentDate, viewMode, weekDates, setScheduleData, employees, filteredDepartments, toast]); // Added filteredDepartments and toast\n\n\n   const handleLoadTemplate = useCallback((templateId: string) => {\n        console.log(\"Load template request for ID:\", templateId);\n        // Find the template in savedTemplates (the state holding all loaded templates)\n        const templateToLoad = savedTemplates.find(t => t.id === templateId);\n\n        if (!templateToLoad) {\n             console.error(\"Template not found in state:\", templateId);\n             toast({ title: \"Error\", description: \"No se encontró el template seleccionado.\", variant: \"destructive\" });\n             return;\n         }\n\n        // Call the function to apply it to the main schedule state\n        applyTemplateToSchedule(templateToLoad);\n\n        // Optionally close the template list modal/sheet if it's open\n        setIsTemplateListOpen(false);\n\n   }, [savedTemplates, applyTemplateToSchedule, toast]); // Depend on savedTemplates and applyTemplateToSchedule\n\n\n     const handleDeleteTemplate = (templateId: string) => {\n         // Add confirmation dialog if needed\n         const templateName = savedTemplates.find(t => t.id === templateId)?.name || templateId;\n         setSavedTemplates(prev => prev.filter(t => t.id !== templateId));\n         toast({ title: \"Template Eliminado\", description: `Template \"${templateName}\" eliminado.`, variant: \"destructive\" });\n     };\n\n      // --- Export/Import Config Handlers ---\n      const handleExportConfig = () => {\n         try {\n             const configData = {\n                 locations,\n                 departments,\n                 employees,\n             };\n             const jsonString = JSON.stringify(configData, null, 2);\n             const blob = new Blob([jsonString], { type: 'application/json' });\n             const url = URL.createObjectURL(blob);\n             const a = document.createElement('a');\n             a.href = url;\n             a.download = `configuracion_horarios_${format(new Date(), 'yyyyMMdd_HHmmss')}.json`;\n             document.body.appendChild(a);\n             a.click();\n             document.body.removeChild(a);\n             URL.revokeObjectURL(url);\n             toast({ title: \"Configuración Exportada\" });\n         } catch (error) {\n             console.error(\"Error exportando configuración:\", error);\n             toast({ title: \"Error al Exportar\", description: \"No se pudo exportar la configuración.\", variant: \"destructive\" });\n         }\n     };\n\n     const handleImportConfig = (event: ChangeEvent<HTMLInputElement>) => {\n         const file = event.target.files?.[0];\n         if (!file) return;\n\n         const reader = new FileReader();\n         reader.onload = (e) => {\n             try {\n                 const jsonString = e.target?.result as string;\n                 const importedData = JSON.parse(jsonString);\n\n                 // Basic validation\n                 if (!importedData || typeof importedData !== 'object' || !Array.isArray(importedData.locations) || !Array.isArray(importedData.departments) || !Array.isArray(importedData.employees)) {\n                     throw new Error(\"El archivo JSON no tiene la estructura esperada (locations, departments, employees).\");\n                 }\n\n                 // Optional: Add more specific validation for each item type\n\n                 setLocations(importedData.locations);\n                 setDepartments(importedData.departments);\n                 setEmployees(importedData.employees);\n\n                 // Reset selected location if it no longer exists\n                 if (selectedLocationId && !importedData.locations.some((loc: Location) => loc.id === selectedLocationId)) {\n                      setSelectedLocationId(importedData.locations.length > 0 ? importedData.locations[0].id : undefined);\n                 } else if (!selectedLocationId && importedData.locations.length > 0) {\n                     // Select the first location if none was selected\n                     setSelectedLocationId(importedData.locations[0].id);\n                 }\n\n\n                 toast({ title: \"Configuración Importada\", description: \"Sedes, departamentos y colaboradores cargados.\" });\n                 setIsConfigOpen(false); // Close config modal after import\n\n             } catch (error) {\n                 console.error(\"Error importando configuración:\", error);\n                 const message = error instanceof Error ? error.message : \"No se pudo importar el archivo JSON.\";\n                 toast({ title: \"Error al Importar\", description: message, variant: \"destructive\" });\n             } finally {\n                 // Reset file input\n                 if (event.target) {\n                     event.target.value = '';\n                 }\n             }\n         };\n         reader.readAsText(file);\n     };\n\n      // --- Share Handler ---\n     const handleShareSchedule = async () => {\n         let textToShare = \"\";\n         const title = `Horario - ${selectedLocationId ? locations.find(l => l.id === selectedLocationId)?.name : 'General'}`;\n\n         if (viewMode === 'day') {\n             const dateKey = format(currentDate, 'yyyy-MM-dd');\n             const daySchedule = scheduleData[dateKey];\n             textToShare += `${title}\\n${format(currentDate, 'PPPP', { locale: es })}\\n\\n`;\n             if (daySchedule && Object.keys(daySchedule.assignments).length > 0) {\n                 filteredDepartments.forEach(dept => {\n                     const assignments = daySchedule.assignments[dept.id] || [];\n                     if (assignments.length > 0) {\n                         textToShare += `*${dept.name}*\\n`;\n                         assignments.forEach(assign => {\n                              let shiftText = `${assign.employee.name}: ${formatTo12Hour(assign.startTime)} - ${formatTo12Hour(assign.endTime)}`;\n                              if (assign.includeBreak && assign.breakStartTime && assign.breakEndTime) {\n                                   shiftText += ` (D: ${formatTo12Hour(assign.breakStartTime)}-${formatTo12Hour(assign.breakEndTime)})`;\n                              }\n                             textToShare += `- ${shiftText}\\n`;\n                         });\n                         textToShare += \"\\n\";\n                     }\n                 });\n             } else {\n                 textToShare += \"_No hay turnos programados para este día._\\n\";\n             }\n         } else { // week view\n             const weekStart = startOfWeek(currentDate, { weekStartsOn: 1 });\n             const weekEnd = endOfWeek(currentDate, { weekStartsOn: 1 });\n             textToShare += `${title}\\nSemana: ${format(weekStart, 'dd MMM', { locale: es })} - ${format(weekEnd, 'dd MMM yyyy', { locale: es })}\\n\\n`;\n\n             // Group by employee for better readability\n             const employeeSchedules: { [empId: string]: { name: string; shifts: string[] } } = {};\n\n             weekDates.forEach(date => {\n                  const dateKey = format(date, 'yyyy-MM-dd');\n                  const daySchedule = scheduleData[dateKey];\n                  if (daySchedule && Object.keys(daySchedule.assignments).length > 0) {\n                     filteredDepartments.forEach(dept => {\n                         const assignments = daySchedule.assignments[dept.id] || [];\n                         assignments.forEach(assign => {\n                              if (!employeeSchedules[assign.employee.id]) {\n                                 employeeSchedules[assign.employee.id] = { name: assign.employee.name, shifts: [] };\n                              }\n                              let shiftText = `${format(date, 'EEE d', { locale: es })} (${dept.name.substring(0,3)}): ${formatTo12Hour(assign.startTime)}-${formatTo12Hour(assign.endTime)}`;\n                              if (assign.includeBreak && assign.breakStartTime && assign.breakEndTime) {\n                                   shiftText += ` D:${formatTo12Hour(assign.breakStartTime)}-${formatTo12Hour(assign.breakEndTime)}`;\n                              }\n                              employeeSchedules[assign.employee.id].shifts.push(shiftText);\n                         });\n                     });\n                  }\n             });\n\n              if (Object.keys(employeeSchedules).length > 0) {\n                  Object.values(employeeSchedules).sort((a,b) => a.name.localeCompare(b.name)).forEach(empSched => {\n                     textToShare += `*${empSched.name}*\\n`;\n                     empSched.shifts.forEach(shift => textToShare += `- ${shift}\\n`);\n                     textToShare += \"\\n\";\n                  });\n              } else {\n                 textToShare += \"_No hay turnos programados para esta semana._\\n\";\n              }\n\n         }\n\n         // Add footer notes\n          if (footerNotes.trim()) {\n             textToShare += `\\n---\\nNotas:\\n${footerNotes}`;\n          }\n\n\n         try {\n             await navigator.clipboard.writeText(textToShare);\n             toast({ title: \"Horario Copiado\", description: \"Puedes pegarlo en WhatsApp u otra aplicación.\" });\n         } catch (err) {\n             console.error('Error al copiar al portapapeles:', err);\n             toast({ title: \"Error al Copiar\", description: \"No se pudo copiar el horario.\", variant: \"destructive\" });\n         }\n     };\n\n     // --- PDF Export ---\n      const handleExportPDF = (type: 'single' | 'consolidated') => {\n          if (type === 'single' && !selectedLocationId) {\n               toast({ title: \"Error\", description: \"Selecciona una sede para exportar.\", variant: \"destructive\" });\n               return;\n          }\n\n          const locationData: ScheduleExportData = {\n              locationName: locations.find(l => l.id === selectedLocationId)?.name || 'Desconocida',\n              weekDates: weekDates,\n              departments: filteredDepartments,\n              employees: filteredEmployees, // Employees for the selected location\n              scheduleData: scheduleData,\n              getScheduleForDate: getScheduleForDate, // Pass the function\n              calculateShiftDuration: calculateShiftDuration, // Pass the function\n          };\n\n          try {\n               if (type === 'single') {\n                   exportScheduleToPDF(locationData);\n                   toast({ title: \"PDF Exportado\", description: `Horario semanal para ${locationData.locationName} generado.` });\n               } else {\n                   // For consolidated, we need data for ALL locations\n                    const allLocationsData: ScheduleExportData[] = locations.map(loc => {\n                         const locDepartments = departments.filter(d => d.locationId === loc.id);\n                         const locEmployees = employees.filter(e => e.locationIds.includes(loc.id));\n                         return {\n                              locationName: loc.name,\n                              weekDates: weekDates,\n                              departments: locDepartments,\n                              employees: locEmployees,\n                              scheduleData: scheduleData,\n                              getScheduleForDate: getScheduleForDate,\n                              calculateShiftDuration: calculateShiftDuration,\n                         };\n                    });\n                    exportConsolidatedScheduleToPDF(allLocationsData);\n                    toast({ title: \"PDF Consolidado Exportado\", description: \"Horario semanal para todas las sedes generado.\" });\n               }\n          } catch (error) {\n               console.error(\"Error exportando PDF:\", error);\n               toast({ title: \"Error al Exportar PDF\", variant: \"destructive\" });\n          }\n      };\n\n      // Helper function to calculate shift duration in hours (decimal)\n     const calculateShiftDuration = (assignment: ShiftAssignment, shiftDate: Date): number => {\n          try {\n              const start = parseDateFns(assignment.startTime, 'HH:mm', shiftDate);\n              let end = parseDateFns(assignment.endTime, 'HH:mm', shiftDate);\n\n              if (end < start) {\n                  end = addDays(end, 1); // Handle overnight shifts\n              }\n\n              let diffMinutes = differenceInMinutes(end, start);\n\n              if (assignment.includeBreak && assignment.breakStartTime && assignment.breakEndTime) {\n                  const breakStart = parseDateFns(assignment.breakStartTime, 'HH:mm', shiftDate);\n                  let breakEnd = parseDateFns(assignment.breakEndTime, 'HH:mm', shiftDate);\n\n                  // Basic handling if break crosses midnight (relative to shift start) - adjust if needed\n                  const breakStartMinutes = breakStart.getHours() * 60 + breakStart.getMinutes();\n                  const shiftStartMinutes = start.getHours() * 60 + start.getMinutes();\n                  let breakDate = shiftDate;\n                  if (breakStartMinutes < shiftStartMinutes) {\n                      breakDate = addDays(shiftDate, 1); // Assume break starts next day if time is earlier\n                  }\n                  const breakStartCorrected = parseDateFns(assignment.breakStartTime, 'HH:mm', breakDate);\n                  let breakEndCorrected = parseDateFns(assignment.breakEndTime, 'HH:mm', breakDate);\n\n\n                  if (breakEndCorrected < breakStartCorrected) {\n                       breakEndCorrected = addDays(breakEndCorrected, 1); // Handle overnight break\n                  }\n\n                   // Ensure break times are within the shift duration for accurate deduction\n                   const actualBreakStart = breakStartCorrected > start ? breakStartCorrected : start;\n                   const actualBreakEnd = breakEndCorrected < end ? breakEndCorrected : end;\n\n                   if (actualBreakEnd > actualBreakStart) {\n                      const breakDiff = differenceInMinutes(actualBreakEnd, actualBreakStart);\n                      diffMinutes -= breakDiff;\n                   }\n              }\n\n              return Math.max(0, diffMinutes / 60); // Return hours, ensure non-negative\n          } catch (error) {\n              console.error(\"Error calculating duration for assignment:\", assignment, error);\n              return 0; // Return 0 on error\n          }\n     };\n\n\n   // --- Render Logic ---\n     if (!isClient) {\n         // Optional: Render a loading skeleton or placeholder during SSR/initial hydration\n         return (\n             <main className=\"container mx-auto p-4 md:p-8 max-w-full\">\n                 <Skeleton className=\"h-10 w-1/3 mx-auto mb-8\" />\n                 <Skeleton className=\"h-12 w-full mb-4\" />\n                 <Skeleton className=\"h-[60vh] w-full\" />\n             </main>\n         );\n     }\n\n\n  return (\n        <main className=\"container mx-auto p-4 md:p-8 max-w-full\">\n             {/* Decorative Image */}\n             <div className=\"absolute top-[-30px] left-8 -z-10 opacity-70 dark:opacity-30 pointer-events-none sm:opacity-70 md:opacity-70 lg:opacity-70 xl:opacity-70 2xl:opacity-70\" aria-hidden=\"true\">\n                 <Image\n                     src=\"https://i.postimg.cc/PJVW7XZG/teclado.png\"\n                     alt=\"Ilustración decorativa teclado\"\n                     width={200} // Increased size\n                     height={200} // Increased size\n                     className=\"object-contain transform -rotate-12\"\n                     data-ai-hint=\"keyboard illustration\"\n                 />\n             </div>\n\n             {/* Loading Overlay */}\n             {isLoading && (\n                <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-background/80 backdrop-blur-sm\">\n                   <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n                </div>\n             )}\n\n             {/* Title */}\n              <div className=\"text-center mb-8\">\n                 <h1 className=\"text-2xl sm:text-3xl md:text-4xl font-bold tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-primary via-foreground/80 to-primary\">\n                    Planificador de Horarios\n                 </h1>\n              </div>\n\n\n             {/* Controls Header */}\n             <div className=\"mb-6 flex flex-col sm:flex-row items-center justify-center gap-2 sm:gap-4 flex-wrap bg-transparent px-0 py-0\">\n                 {/* Location Selector */}\n                 <div className=\"flex-shrink-0 w-full sm:w-auto min-w-[180px]\">\n                      <Label htmlFor=\"location-select\" className=\"text-xs font-medium text-muted-foreground sr-only\">Sede</Label> {/* Screen reader only */}\n                      <LocationSelector\n                          locations={locations}\n                          selectedLocationId={selectedLocationId}\n                          onLocationChange={handleLocationChange}\n                      />\n                 </div>\n\n                 {/* Configuration Button */}\n                 <Sheet open={isConfigOpen} onOpenChange={setIsConfigOpen}>\n                     <SheetTrigger asChild>\n                         <Button variant=\"outline\" size=\"icon\" className=\"flex-shrink-0\">\n                             <Settings className=\"h-5 w-5\" />\n                             <span className=\"sr-only\">Configuración</span>\n                         </Button>\n                     </SheetTrigger>\n                      <SheetContent ref={configSheetRef} className=\"w-full sm:max-w-2xl flex flex-col p-0\"> {/* Increased width, removed padding */}\n                         <SheetHeader className=\"p-4 border-b relative\"> {/* Added relative for close button positioning */}\n                           <SheetTitle>Configuración General</SheetTitle>\n                           <SheetDescription>Gestiona sedes, departamentos, colaboradores y templates.</SheetDescription>\n                            {/* Buttons container positioned absolutely */}\n                             <div className=\"absolute top-4 right-4 flex items-center gap-1\">\n                                  {/* JSON Config Import */}\n                                <input\n                                    type=\"file\"\n                                    accept=\".json\"\n                                    ref={fileInputRef}\n                                    onChange={handleImportConfig}\n                                    className=\"hidden\"\n                                    id=\"import-config-input\"\n                                />\n                                <Button\n                                    variant=\"outline\"\n                                    size=\"sm\"\n                                    onClick={() => fileInputRef.current?.click()}\n                                    title=\"Importar Configuración (JSON)\"\n                                    className=\"px-2 py-1 h-auto\" // Smaller button\n                                >\n                                    <FolderUp className=\"mr-1 h-3 w-3\" /> Config\n                                </Button>\n                                 {/* JSON Config Export */}\n                                <Button\n                                    variant=\"outline\"\n                                    size=\"sm\"\n                                    onClick={handleExportConfig}\n                                    disabled={locations.length === 0 && departments.length === 0 && employees.length === 0}\n                                    title=\"Exportar Configuración Actual (JSON)\"\n                                     className=\"px-2 py-1 h-auto\" // Smaller button\n                                >\n                                    <Download className=\"mr-1 h-3 w-3\" /> Config\n                                </Button>\n                            </div>\n                         </SheetHeader>\n\n                          <div className=\"flex-grow overflow-hidden\"> {/* Allow content to scroll if needed */}\n                              <ConfigTabs\n                                 locations={locations}\n                                 departments={departments}\n                                 employees={employees}\n                                 savedTemplates={savedTemplates} // Pass templates state\n                                 selectedLocationId={selectedLocationId}\n                                 onOpenLocationModal={handleOpenLocationModal}\n                                 onDeleteLocation={handleDeleteLocation}\n                                 onOpenDepartmentModal={handleOpenDepartmentModal}\n                                 onDeleteDepartment={handleDeleteDepartment}\n                                 onOpenEmployeeModal={handleOpenEmployeeModal}\n                                 onDeleteEmployee={handleDeleteEmployee}\n                                 onLoadTemplate={handleLoadTemplate} // Pass load handler\n                                 onDeleteTemplate={handleDeleteTemplate} // Pass delete handler\n                                 onCopyEmployeeId={handleCopyEmployeeId} // Pass copy handler\n                              />\n                         </div>\n                      </SheetContent>\n                 </Sheet>\n\n                 {/* View Mode Switch */}\n                 <div className=\"flex items-center space-x-2 flex-shrink-0\">\n                     <Label htmlFor=\"view-mode-switch\" className={cn(\"text-sm\", viewMode === 'day' ? 'text-primary font-medium' : 'text-muted-foreground')}>Día</Label>\n                     <Switch\n                         id=\"view-mode-switch\"\n                         checked={viewMode === 'week'}\n                         onCheckedChange={(checked) => setViewMode(checked ? 'week' : 'day')}\n                     />\n                     <Label htmlFor=\"view-mode-switch\" className={cn(\"text-sm\", viewMode === 'week' ? 'text-primary font-medium' : 'text-muted-foreground')}>Semana</Label>\n                 </div>\n\n                 {/* Week/Day Navigator */}\n                <div className=\"flex-grow flex items-center justify-center\"> {/* Centered Navigator */}\n                    {viewMode === 'week' ? (\n                        <WeekNavigator currentDate={currentDate} onPreviousWeek={handlePrevious} onNextWeek={handleNext} />\n                    ) : (\n                         <div className=\"flex items-center gap-2\">\n                             <Button variant=\"ghost\" size=\"icon\" onClick={handlePrevious} className=\"h-9 w-9 text-muted-foreground hover:text-primary\">\n                                 <ChevronLeft className=\"h-5 w-5\" />\n                             </Button>\n                             <Popover>\n                               <PopoverTrigger asChild>\n                                 <Button\n                                   variant={'outline'}\n                                   className={cn('w-[200px] justify-center text-center font-semibold', !currentDate && 'text-muted-foreground')}\n                                 >\n                                   <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                                   {currentDate ? format(currentDate, 'PPP', { locale: es }) : <span>Selecciona fecha</span>}\n                                 </Button>\n                               </PopoverTrigger>\n                               <PopoverContent className=\"w-auto p-0\">\n                                 <Calendar\n                                     mode=\"single\"\n                                     selected={currentDate}\n                                     onSelect={handleDateSelect}\n                                     initialFocus\n                                     locale={es}\n                                     modifiers={{ holiday: isHoliday }}\n                                     modifiersClassNames={{ holiday: 'text-primary font-semibold border border-primary' }} // Highlight holidays\n                                 />\n                               </PopoverContent>\n                             </Popover>\n                             <Button variant=\"ghost\" size=\"icon\" onClick={handleNext} className=\"h-9 w-9 text-muted-foreground hover:text-primary\">\n                                 <ChevronRight className=\"h-5 w-5\" />\n                             </Button>\n                         </div>\n                    )}\n                 </div>\n\n\n                 {/* Summary Dashboard Trigger */}\n                 <Sheet open={isSummaryDashboardOpen} onOpenChange={setIsSummaryDashboardOpen}>\n                     <SheetTrigger asChild>\n                         <Button variant=\"outline\" size=\"icon\" className=\"flex-shrink-0\">\n                             <BarChartHorizontal className=\"h-5 w-5\" />\n                             <span className=\"sr-only\">Resumen de Horas</span>\n                         </Button>\n                     </SheetTrigger>\n                     <SheetContent className=\"w-full sm:max-w-md p-0 flex flex-col\"> {/* Adjusted size */}\n                          <SheetHeader className=\"p-4 border-b\">\n                             <SheetTitle>Resumen de Horas Programadas</SheetTitle>\n                             <SheetDescription>\n                                 Total de horas asignadas para {viewMode === 'week' ? 'la semana actual' : `el ${format(currentDate, 'PPP', {locale: es})}`}.\n                             </SheetDescription>\n                          </SheetHeader>\n                          <div className=\"flex-grow overflow-y-auto p-4\">\n                             <SummaryDashboard\n                                 scheduleData={scheduleData}\n                                 employees={filteredEmployees} // Use filtered employees for the current location\n                                 weekDates={weekDates}\n                                 viewMode={viewMode}\n                                 currentDate={currentDate}\n                                 calculateShiftDuration={calculateShiftDuration} // Pass the helper function\n                             />\n                          </div>\n                     </SheetContent>\n                 </Sheet>\n\n                {/* Notes Button */}\n                <Button variant=\"outline\" size=\"icon\" onClick={() => handleOpenNotesModal(viewMode === 'day' ? currentDate : undefined)} className=\"flex-shrink-0\">\n                    <NotebookPen className=\"h-5 w-5\" />\n                    <span className=\"sr-only\">Anotaciones</span>\n                </Button>\n\n\n             </div>\n\n\n            {/* DnD Context and Schedule View */}\n             <DndContext onDragEnd={handleDragEnd} collisionDetection={closestCenter}>\n                <div className={`grid ${viewMode === 'day' ? 'grid-cols-1 md:grid-cols-4 lg:grid-cols-5 gap-4' : 'grid-cols-1'} items-start`}>\n                    {/* Employee List (Left Sidebar - Hidden on Mobile) */}\n                     {!isMobile && viewMode === 'day' && (\n                        <div className=\"lg:col-span-1 h-full\">\n                            <EmployeeList employees={filteredEmployees} />\n                        </div>\n                     )}\n\n                    {/* Schedule View (Main Area) */}\n                     <div className={`${viewMode === 'day' && !isMobile ? 'md:col-span-3 lg:col-span-4' : 'col-span-1'} ${viewMode === 'week' ? 'overflow-x-auto' : ''}`}> {/* Add horizontal scroll only for week view */}\n                        <ScheduleView\n                            departments={filteredDepartments}\n                            scheduleData={scheduleData}\n                            onRemoveShift={handleRemoveShift}\n                            viewMode={viewMode}\n                            weekDates={weekDates}\n                            currentDate={currentDate}\n                            onAddShiftRequest={handleAddShiftRequest} // Pass handler\n                            onShiftClick={handleShiftClick} // Pass handler\n                            getScheduleForDate={getScheduleForDate} // Pass helper\n                            onDuplicateDay={handleDuplicateDay} // Pass handler\n                            onClearDay={handleClearDay} // Pass handler\n                            isHoliday={isHoliday} // Pass holiday check\n                            isMobile={isMobile} // Pass mobile flag\n                            getNotesForDate={getNotesForDate} // Pass notes getter\n                            onOpenNotesModal={handleOpenNotesModal} // Pass modal opener\n                            employees={employees} // Pass all employees for tooltip lookup\n                            setNoteToDeleteId={setNoteToDeleteId} // Pass setter for direct deletion trigger\n                        />\n                    </div>\n                </div>\n            </DndContext>\n\n             {/* Action Buttons Footer */}\n             <div className=\"mt-6 flex flex-col sm:flex-row justify-end items-center gap-2 flex-wrap bg-transparent px-0 py-0\">\n                {/* Share Button */}\n                 <Button onClick={handleShareSchedule} variant=\"outline\" className=\"hover:bg-primary hover:text-primary-foreground\">\n                     <Share2 className=\"mr-2 h-4 w-4\" /> Compartir Horario\n                 </Button>\n\n                {/* PDF Export Dropdown */}\n                 <DropdownMenu>\n                   <DropdownMenuTrigger asChild>\n                     <Button variant=\"outline\" className=\"hover:bg-destructive hover:text-destructive-foreground\">\n                       <FileDown className=\"mr-2 h-4 w-4\" /> PDF\n                     </Button>\n                   </DropdownMenuTrigger>\n                   <DropdownMenuContent>\n                     <DropdownMenuItem onClick={() => handleExportPDF('single')} disabled={!selectedLocationId}>\n                       Horario Sede Actual ({locations.find(l => l.id === selectedLocationId)?.name || 'N/A'})\n                     </DropdownMenuItem>\n                     <DropdownMenuItem onClick={() => handleExportPDF('consolidated')}>\n                       Horario Consolidado (Todas las Sedes)\n                     </DropdownMenuItem>\n                   </DropdownMenuContent>\n                 </DropdownMenu>\n\n                  {/* Spacer */}\n                  <div className=\"flex-grow\"></div>\n\n\n                  {/* Clear Week/Day Buttons */}\n                   {viewMode === 'week' && (\n                      <AlertDialog>\n                        <AlertDialogTrigger asChild>\n                           <Button variant=\"destructive\" outline size=\"sm\" disabled={!isClient || Object.keys(scheduleData).length === 0}>\n                                <Eraser className=\"mr-1 h-3 w-3\" /> Limpiar Semana\n                           </Button>\n                        </AlertDialogTrigger>\n                        <AlertDialogContent>\n                            <AlertDialogHeader>\n                               <AlertDialogTitle>¿Limpiar Semana Completa?</AlertDialogTitle>\n                               <AlertDialogDescription>\n                                  Esta acción eliminará todos los turnos y anotaciones de la semana visible. No se puede deshacer.\n                               </AlertDialogDescription>\n                            </AlertDialogHeader>\n                            <AlertDialogFooter>\n                               <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                               <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={handleClearWeek}>\n                                   Limpiar Semana\n                               </AlertDialogAction>\n                            </AlertDialogFooter>\n                        </AlertDialogContent>\n                     </AlertDialog>\n                   )}\n                   {/* Clear Day button is now inside ScheduleView day header */}\n\n\n                 {/* Duplicate Week Button */}\n                 {viewMode === 'week' && (\n                    <Button onClick={handleDuplicateWeek} variant=\"outline\" className=\"hover:bg-primary hover:text-primary-foreground\">\n                        <Copy className=\"mr-2 h-4 w-4\" /> Duplicar Semana\n                    </Button>\n                 )}\n\n\n                  {/* Save Template Button */}\n                  <DropdownMenu>\n                    <DropdownMenuTrigger asChild>\n                      <Button variant=\"outline\" className=\"hover:bg-primary hover:text-primary-foreground\">\n                        <Save className=\"mr-2 h-4 w-4\" /> Guardar Template\n                      </Button>\n                    </DropdownMenuTrigger>\n                    <DropdownMenuContent>\n                      <DropdownMenuItem onClick={() => handleSaveTemplate('day')} disabled={viewMode !== 'day'}>\n                        Guardar Día Actual\n                      </DropdownMenuItem>\n                      <DropdownMenuItem onClick={() => handleSaveTemplate('week')} disabled={viewMode !== 'week'}>\n                        Guardar Semana Actual\n                      </DropdownMenuItem>\n                    </DropdownMenuContent>\n                  </DropdownMenu>\n\n\n                 {/* Load Template Button -> Opens Template List Modal */}\n                 <Button onClick={() => setIsTemplateListOpen(true)} variant=\"outline\" className=\"hover:bg-primary hover:text-primary-foreground\">\n                     <FolderSync className=\"mr-2 h-4 w-4\" /> Templates\n                 </Button>\n            </div>\n\n\n            {/* Editable Footer Notes */}\n             <Card className=\"mt-8 bg-secondary/30\">\n                 <CardHeader className=\"pb-2\">\n                     <CardTitle className=\"text-sm font-medium text-muted-foreground\">Notas Adicionales / Horarios Cierre</CardTitle>\n                 </CardHeader>\n                 <CardContent>\n                      {/* Use Shadcn Textarea for consistency */}\n                      <Textarea\n                          value={footerNotes}\n                          onChange={(e) => setFooterNotes(e.target.value)}\n                          placeholder=\"Añade notas generales o recordatorios aquí...\"\n                          className=\"text-xs bg-background\" // Added bg-background for contrast\n                          rows={3}\n                      />\n                 </CardContent>\n             </Card>\n\n            {/* --- Modals --- */}\n            {/* Location Modal */}\n             <Dialog open={isLocationModalOpen} onOpenChange={setIsLocationModalOpen}>\n                 <DialogContent>\n                     <DialogHeader>\n                         <DialogTitle>{editingLocation ? 'Editar Sede' : 'Agregar Sede'}</DialogTitle>\n                     </DialogHeader>\n                     <div className=\"grid gap-4 py-4\">\n                         <div className=\"grid grid-cols-4 items-center gap-4\">\n                             <Label htmlFor=\"location-name\" className=\"text-right\">Nombre</Label>\n                             <Input\n                                 id=\"location-name\"\n                                 value={locationFormData.name}\n                                 onChange={(e) => setLocationFormData({ name: e.target.value })}\n                                 className=\"col-span-3\"\n                             />\n                         </div>\n                     </div>\n                     <DialogFooter>\n                         <Button variant=\"outline\" onClick={() => setIsLocationModalOpen(false)}>Cancelar</Button>\n                         <Button onClick={handleSaveLocation}>Guardar Sede</Button>\n                     </DialogFooter>\n                 </DialogContent>\n             </Dialog>\n\n             {/* Department Modal */}\n             <Dialog open={isDepartmentModalOpen} onOpenChange={setIsDepartmentModalOpen}>\n                 <DialogContent>\n                     <DialogHeader>\n                         <DialogTitle>{editingDepartment ? 'Editar Departamento' : 'Agregar Departamento'}</DialogTitle>\n                         <DialogDescription>\n                              Asociado a la sede: {locations.find(loc => loc.id === departmentFormData.locationId)?.name || 'Desconocida'}\n                         </DialogDescription>\n                     </DialogHeader>\n                     <div className=\"grid gap-4 py-4\">\n                         <div className=\"grid grid-cols-4 items-center gap-4\">\n                             <Label htmlFor=\"department-name\" className=\"text-right\">Nombre</Label>\n                             <Input\n                                 id=\"department-name\"\n                                 value={departmentFormData.name}\n                                 onChange={(e) => setDepartmentFormData(prev => ({ ...prev, name: e.target.value }))}\n                                 className=\"col-span-3\"\n                             />\n                         </div>\n                          {/* Icon Selector */}\n                           <div className=\"grid grid-cols-4 items-center gap-4\">\n                              <Label htmlFor=\"department-icon\" className=\"text-right\">Icono</Label>\n                              <Select\n                                  value={departmentFormData.iconName}\n                                  onValueChange={(value) => setDepartmentFormData(prev => ({ ...prev, iconName: value === 'ninguno' ? '' : value }))}\n                              >\n                                  <SelectTrigger className=\"col-span-3\">\n                                      <SelectValue placeholder=\"Selecciona un icono (opcional)\" />\n                                  </SelectTrigger>\n                                  <SelectContent>\n                                      <SelectItem value=\"ninguno\">Ninguno</SelectItem>\n                                      <SelectItem value=\"ChefHat\"><ChefHat className=\"inline-block mr-2 h-4 w-4\" /> Cocina</SelectItem>\n                                      <SelectItem value=\"Table\"><Table className=\"inline-block mr-2 h-4 w-4\" /> Salón/Mesas</SelectItem>\n                                      <SelectItem value=\"GlassWater\"><GlassWater className=\"inline-block mr-2 h-4 w-4\" /> Barra/Bebidas</SelectItem>\n                                      <SelectItem value=\"Box\"><Box className=\"inline-block mr-2 h-4 w-4\" /> Caja/Recepción</SelectItem>\n                                      {/* Add more icons as needed */}\n                                  </SelectContent>\n                              </Select>\n                           </div>\n                     </div>\n                     <DialogFooter>\n                         <Button variant=\"outline\" onClick={() => setIsDepartmentModalOpen(false)}>Cancelar</Button>\n                         <Button onClick={handleSaveDepartment}>Guardar Departamento</Button>\n                     </DialogFooter>\n                 </DialogContent>\n             </Dialog>\n\n\n             {/* Employee Modal */}\n              <Dialog open={isEmployeeModalOpen} onOpenChange={setIsEmployeeModalOpen}>\n                 <DialogContent className=\"sm:max-w-[525px]\"> {/* Wider modal */}\n                     <DialogHeader>\n                         <DialogTitle>{editingEmployee ? 'Editar Colaborador' : 'Agregar Colaborador'}</DialogTitle>\n                     </DialogHeader>\n                     <div className=\"grid gap-6 py-4\"> {/* Increased gap */}\n                         <div className=\"grid grid-cols-4 items-center gap-4\">\n                             <Label htmlFor=\"employee-name\" className=\"text-right\">Nombre</Label>\n                             <Input\n                                 id=\"employee-name\"\n                                 value={employeeFormData.name}\n                                 onChange={(e) => setEmployeeFormData(prev => ({ ...prev, name: e.target.value }))}\n                                 className=\"col-span-3\"\n                             />\n                         </div>\n                         <div className=\"grid grid-cols-4 items-center gap-4\">\n                             <Label htmlFor=\"employee-id\" className=\"text-right\">ID</Label>\n                             <Input\n                                 id=\"employee-id\"\n                                 value={employeeFormData.id}\n                                 onChange={(e) => setEmployeeFormData(prev => ({ ...prev, id: e.target.value }))}\n                                 className=\"col-span-3\"\n                                 disabled={!!editingEmployee} // Disable ID editing for existing employees\n                             />\n                         </div>\n                           <div className=\"grid grid-cols-4 items-start gap-4\"> {/* Changed items-center to items-start */}\n                              <Label className=\"text-right pt-2\">Sedes</Label> {/* Adjusted label alignment */}\n                              <div className=\"col-span-3 space-y-2\">\n                                 <p className=\"text-xs text-muted-foreground\">Selecciona las sedes donde trabaja este colaborador.</p>\n                                  <ScrollArea className=\"h-[150px] border rounded-md p-2\"> {/* Scrollable area for locations */}\n                                      {locations.map(loc => (\n                                          <div key={loc.id} className=\"flex items-center space-x-2 mb-1\">\n                                              <Switch\n                                                  id={`loc-${loc.id}`}\n                                                  checked={employeeFormData.locationIds.includes(loc.id)}\n                                                  onCheckedChange={() => handleEmployeeLocationChange(loc.id)}\n                                              />\n                                              <Label htmlFor={`loc-${loc.id}`} className=\"text-sm font-normal\">{loc.name}</Label>\n                                          </div>\n                                      ))}\n                                      {locations.length === 0 && <p className=\"text-sm text-muted-foreground italic\">No hay sedes creadas.</p>}\n                                  </ScrollArea>\n                              </div>\n                           </div>\n                          {/* Department Assignment */}\n                           <div className=\"grid grid-cols-4 items-start gap-4\">\n                             <Label className=\"text-right pt-2\">Departamentos</Label>\n                              <div className=\"col-span-3 space-y-2\">\n                                 <p className=\"text-xs text-muted-foreground\">Asigna departamentos principales (opcional).</p>\n                                  <ScrollArea className=\"h-[150px] border rounded-md p-2\">\n                                     {departments.filter(dept => employeeFormData.locationIds.includes(dept.locationId)).map(dept => (\n                                         <div key={dept.id} className=\"flex items-center space-x-2 mb-1\">\n                                             <Switch\n                                                 id={`dept-${dept.id}`}\n                                                 checked={editingEmployee?.departmentIds?.includes(dept.id) ?? false}\n                                                 onCheckedChange={(checked) => {\n                                                     setEmployees(prev => prev.map(emp =>\n                                                          emp.id === editingEmployee?.id\n                                                              ? { ...emp, departmentIds: checked ? [...(emp.departmentIds || []), dept.id] : (emp.departmentIds || []).filter(dId => dId !== dept.id) }\n                                                              : emp\n                                                      ));\n                                                      // Update form data state if needed, or rely on main state update\n                                                 }}\n                                             />\n                                             <Label htmlFor={`dept-${dept.id}`} className=\"text-sm font-normal\">{dept.name} ({locations.find(l => l.id === dept.locationId)?.name})</Label>\n                                         </div>\n                                     ))}\n                                     {departments.filter(dept => employeeFormData.locationIds.includes(dept.locationId)).length === 0 && (\n                                         <p className=\"text-sm text-muted-foreground italic\">No hay departamentos en las sedes seleccionadas.</p>\n                                     )}\n                                  </ScrollArea>\n                              </div>\n                           </div>\n\n                      </div>\n                      <DialogFooter>\n                          {editingEmployee && (\n                              <AlertDialog>\n                                <AlertDialogTrigger asChild>\n                                  <Button variant=\"destructive\" className=\"mr-auto\"> {/* Position delete button to the left */}\n                                       <Trash2 className=\"mr-2 h-4 w-4\" /> Eliminar Colaborador\n                                  </Button>\n                                </AlertDialogTrigger>\n                                <AlertDialogContent>\n                                  <AlertDialogHeader>\n                                    <AlertDialogTitle>¿Eliminar Colaborador?</AlertDialogTitle>\n                                    <AlertDialogDescription>\n                                      Esta acción eliminará a <strong>{editingEmployee.name}</strong> permanentemente.\n                                      También se eliminarán todos sus turnos asignados. Esta acción no se puede deshacer.\n                                    </AlertDialogDescription>\n                                  </AlertDialogHeader>\n                                  <AlertDialogFooter>\n                                    <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                                    <AlertDialogAction onClick={() => handleDeleteEmployee(editingEmployee.id)} className=\"bg-destructive hover:bg-destructive/90\">\n                                      Eliminar\n                                    </AlertDialogAction>\n                                  </AlertDialogFooter>\n                                </AlertDialogContent>\n                              </AlertDialog>\n                          )}\n                          <Button variant=\"outline\" onClick={() => setIsEmployeeModalOpen(false)}>Cancelar</Button>\n                          <Button onClick={handleSaveEmployee}>Guardar Colaborador</Button>\n                      </DialogFooter>\n                 </DialogContent>\n              </Dialog>\n\n\n            {/* Shift Detail Modal */}\n            {shiftDetailsTarget && (\n                <ShiftDetailModal\n                    isOpen={isShiftDetailModalOpen}\n                    onClose={() => setIsShiftDetailModalOpen(false)}\n                    onSave={handleSaveShiftDetails}\n                    employeeName={shiftDetailsTarget.employee?.name || 'Colaborador'}\n                    departmentName={departments.find(d => d.id === shiftDetailsTarget.departmentId)?.name || 'Departamento'}\n                    initialDetails={ // Pass existing details if editing\n                      shiftDetailsTarget.assignmentId\n                      ? scheduleData[format(shiftDetailsTarget.date, 'yyyy-MM-dd')]\n                          ?.assignments[shiftDetailsTarget.departmentId]\n                          ?.find(a => a.id === shiftDetailsTarget.assignmentId)\n                      : undefined\n                    }\n                     isEditing={!!shiftDetailsTarget.assignmentId} // Set editing flag\n                />\n            )}\n\n             {/* Employee Selection Modal */}\n              {employeeSelectionTarget && (\n                 <EmployeeSelectionModal\n                     isOpen={isEmployeeSelectionModalOpen}\n                     onClose={() => setIsEmployeeSelectionModalOpen(false)}\n                     employees={availableEmployees} // Pass only available employees\n                     onSelectEmployee={handleSelectEmployeeForShift}\n                     departmentName={departments.find(d => d.id === employeeSelectionTarget.departmentId)?.name || 'Departamento'}\n                     date={employeeSelectionTarget.date}\n                 />\n              )}\n\n             {/* Notes Modal */}\n              <ScheduleNotesModal\n                  isOpen={isNotesModalOpen}\n                  onClose={() => setIsNotesModalOpen(false)}\n                  notes={scheduleNotes}\n                  employees={employees}\n                  onAddNote={handleAddNote}\n                  onDeleteNote={handleDeleteNote} // Pass the actual delete handler\n                  initialDate={notesModalDate} // Pass the specific date if opened from day/week header\n                  viewMode={viewMode}\n                  currentDate={currentDate}\n                  weekDates={weekDates}\n              />\n\n             {/* Confirmation Dialog for Deleting Notes (triggered from ScheduleView) */}\n              <AlertDialog open={!!noteToDeleteId} onOpenChange={(open) => !open && setNoteToDeleteId(null)}>\n                 <AlertDialogContent>\n                   <AlertDialogHeader>\n                     <AlertDialogTitle>¿Eliminar Anotación?</AlertDialogTitle>\n                     <AlertDialogDescription>\n                         \"{scheduleNotes.find(n => n.id === noteToDeleteId)?.note || ''}\"\n                         <br/>\n                         Esta acción no se puede deshacer.\n                     </AlertDialogDescription>\n                   </AlertDialogHeader>\n                   <AlertDialogFooter>\n                     <AlertDialogCancel onClick={() => setNoteToDeleteId(null)}>Cancelar</AlertDialogCancel>\n                     <AlertDialogAction onClick={() => handleDeleteNote(noteToDeleteId!)} className=\"bg-destructive hover:bg-destructive/90\">\n                         Eliminar Anotación\n                     </AlertDialogAction>\n                   </AlertDialogFooter>\n                 </AlertDialogContent>\n             </AlertDialog>\n\n             {/* Template List Modal */}\n              <Dialog open={isTemplateListOpen} onOpenChange={setIsTemplateListOpen}>\n                 <DialogContent className=\"sm:max-w-md\">\n                     <DialogHeader>\n                         <DialogTitle>Cargar Template de Horario</DialogTitle>\n                          <DialogDescription>\n                             Selecciona un template guardado para aplicar a la vista actual ({viewMode === 'day' ? 'día' : 'semana'}).\n                             <span className=\"block text-xs italic mt-1\">Solo se muestran templates para la sede actual y el tipo de vista ({viewMode}).</span>\n                          </DialogDescription>\n                     </DialogHeader>\n                     <div className=\"py-4\">\n                         <ScheduleTemplateList\n                             templates={filteredTemplates} // Pass the correctly filtered templates\n                             onLoadTemplate={handleLoadTemplate}\n                             onDeleteTemplate={handleDeleteTemplate}\n                         />\n                     </div>\n                     <DialogFooter>\n                         <DialogClose asChild>\n                             <Button variant=\"outline\">Cerrar</Button>\n                         </DialogClose>\n                     </DialogFooter>\n                 </DialogContent>\n              </Dialog>\n\n\n        </main>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}