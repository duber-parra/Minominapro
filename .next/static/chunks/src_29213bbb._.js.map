{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        xs: \"h-7 rounded-md px-2 text-xs\", // Added extra small size\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\", // Changed text-base md:text-sm to just text-sm\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qXACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger // Export DialogTrigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close // Export DialogClose\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose, // Export DialogClose\n  DialogTrigger, // Export DialogTrigger\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,sKAAwB,uBAAuB;AAA/C,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,sKAAsB,qBAAqB;AAA3C,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 670, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/LocationSelector.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport type { Location } from '@/types/schedule'; // Assuming type exists\n\ninterface LocationSelectorProps {\n  locations: Location[];\n  selectedLocationId?: string;\n  onLocationChange: (locationId: string) => void;\n}\n\nexport const LocationSelector: React.FC<LocationSelectorProps> = ({\n  locations,\n  selectedLocationId,\n  onLocationChange,\n}) => {\n  return (\n    <Select value={selectedLocationId} onValueChange={onLocationChange}>\n      <SelectTrigger id=\"location-select\">\n        <SelectValue placeholder=\"Selecciona una sede\" />\n      </SelectTrigger>\n      <SelectContent>\n        {locations.map((location) => (\n          <SelectItem key={location.id} value={location.id}>\n            {location.name}\n          </SelectItem>\n        ))}\n      </SelectContent>\n    </Select>\n  );\n};\n\n    "],"names":[],"mappings":";;;;AAEA;;;AASO,MAAM,mBAAoD,CAAC,EAChE,SAAS,EACT,kBAAkB,EAClB,gBAAgB,EACjB;IACC,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,OAAO;QAAoB,eAAe;;0BAChD,6LAAC,qIAAA,CAAA,gBAAa;gBAAC,IAAG;0BAChB,cAAA,6LAAC,qIAAA,CAAA,cAAW;oBAAC,aAAY;;;;;;;;;;;0BAE3B,6LAAC,qIAAA,CAAA,gBAAa;0BACX,UAAU,GAAG,CAAC,CAAC,yBACd,6LAAC,qIAAA,CAAA,aAAU;wBAAmB,OAAO,SAAS,EAAE;kCAC7C,SAAS,IAAI;uBADC,SAAS,EAAE;;;;;;;;;;;;;;;;AAOtC;KAnBa","debugId":null}},
    {"offset": {"line": 729, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement, // Changed to HTMLParagraphElement for semantic correctness if it's a heading paragraph\n  React.HTMLAttributes<HTMLHeadingElement> // Kept HTMLHeadingElement for attribute compatibility, adjust if needed\n>(({ className, ...props }, ref) => (\n  <h3 // Changed from div to h3 for semantic meaning, adjust level (h2, h4, etc.) as appropriate\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight text-foreground\", // Changed from text-xl to text-lg and explicitly set text-foreground\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p // Changed from div to p for semantic correctness\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,KAAG,0FAA0F;;QAC5F,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qEACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,IAAE,iDAAiD;;QAClD,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 834, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/DraggableEmployee.tsx"],"sourcesContent":["\n'use client'; // Add this directive\n\nimport React, { useState, useEffect } from 'react'; // Import useState and useEffect\nimport { useDraggable } from '@dnd-kit/core';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Button } from '@/components/ui/button';\nimport { GripVertical } from 'lucide-react';\nimport type { Employee } from '@/types/schedule'; // Assuming type exists\n\ninterface DraggableEmployeeProps {\n  employee: Employee;\n}\n\nexport const DraggableEmployee: React.FC<DraggableEmployeeProps> = ({ employee }) => {\n  const [isClient, setIsClient] = useState(false); // State to track client-side rendering\n\n  useEffect(() => {\n    setIsClient(true); // Set to true only on the client after initial render\n  }, []);\n\n  const { attributes, listeners, setNodeRef, transform, isDragging } = useDraggable({\n    id: employee.id, // Use employee ID as the draggable ID\n    data: { type: 'employee', employee }, // Pass employee data\n  });\n\n  const style = {\n    transform: CSS.Translate.toString(transform),\n    opacity: isDragging ? 0.5 : 1,\n    zIndex: isDragging ? 100 : 'auto', // Ensure dragged item is on top\n    cursor: isDragging ? 'grabbing' : 'grab',\n  };\n\n  // Render only on the client side to avoid hydration mismatch\n  if (!isClient) {\n    // Optionally render a placeholder or null during SSR and initial hydration\n    return (\n      <Button\n        variant=\"outline\"\n        className=\"w-full flex items-center justify-between p-2 bg-card hover:bg-muted/50 opacity-50 cursor-wait\" // Indicate loading/placeholder state\n        disabled\n      >\n        <span>{employee.name}</span>\n        <GripVertical className=\"h-4 w-4 text-muted-foreground\" />\n      </Button>\n    );\n  }\n\n  return (\n    <Button\n      ref={setNodeRef}\n      style={style}\n      variant=\"outline\"\n      className=\"w-full flex items-center justify-between p-2 bg-card hover:bg-muted/50\"\n      {...listeners}\n      {...attributes}\n    >\n      <span>{employee.name}</span>\n      <GripVertical className=\"h-4 w-4 text-muted-foreground\" />\n    </Button>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA,mRAAoD,gCAAgC;AACpF;AACA;AACA;AACA;;;AANA,cAAc,qBAAqB;;;;;;AAa5B,MAAM,oBAAsD,CAAC,EAAE,QAAQ,EAAE;;IAC9E,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,uCAAuC;IAExF,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;uCAAE;YACR,YAAY,OAAO,sDAAsD;QAC3E;sCAAG,EAAE;IAEL,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,eAAY,AAAD,EAAE;QAChF,IAAI,SAAS,EAAE;QACf,MAAM;YAAE,MAAM;YAAY;QAAS;IACrC;IAEA,MAAM,QAAQ;QACZ,WAAW,wKAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClC,SAAS,aAAa,MAAM;QAC5B,QAAQ,aAAa,MAAM;QAC3B,QAAQ,aAAa,aAAa;IACpC;IAEA,6DAA6D;IAC7D,IAAI,CAAC,UAAU;QACb,2EAA2E;QAC3E,qBACE,6LAAC,qIAAA,CAAA,SAAM;YACL,SAAQ;YACR,WAAU,gGAAgG,qCAAqC;;YAC/I,QAAQ;;8BAER,6LAAC;8BAAM,SAAS,IAAI;;;;;;8BACpB,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAU;;;;;;;;;;;;IAG9B;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QACL,KAAK;QACL,OAAO;QACP,SAAQ;QACR,WAAU;QACT,GAAG,SAAS;QACZ,GAAG,UAAU;;0BAEd,6LAAC;0BAAM,SAAS,IAAI;;;;;;0BACpB,6LAAC,yNAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;;;;;;;AAG9B;GA/Ca;;QAO0D,8JAAA,CAAA,eAAY;;;KAPtE","debugId":null}},
    {"offset": {"line": 948, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/EmployeeList.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { DraggableEmployee } from './DraggableEmployee'; // Assuming DraggableEmployee component exists\nimport type { Employee } from '@/types/schedule'; // Assuming type exists\nimport { Users } from 'lucide-react';\n\ninterface EmployeeListProps {\n  employees: Employee[];\n}\n\nexport const EmployeeList: React.FC<EmployeeListProps> = ({ employees }) => {\n  return (\n    <Card className=\"h-full\"> {/* Allow card to take full height */}\n      <CardHeader>\n         <CardTitle className=\"text-lg font-medium flex items-center gap-2\">\n             <Users className=\"h-5 w-5 text-muted-foreground\" />\n             Colaboradores Disponibles ({employees.length})\n         </CardTitle>\n      </CardHeader>\n       <CardContent className=\"space-y-3 overflow-y-auto max-h-[calc(100vh-200px)]\"> {/* Make content scrollable */}\n        {employees.length > 0 ? (\n          employees.map((employee) => (\n            <DraggableEmployee key={employee.id} employee={employee} />\n          ))\n        ) : (\n          <p className=\"text-sm text-muted-foreground text-center pt-4 italic\">\n            No hay colaboradores para esta sede.\n          </p>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\n    "],"names":[],"mappings":";;;;AAEA;AACA,2QAAyD,8CAA8C;AAEvG;;;;;AAMO,MAAM,eAA4C,CAAC,EAAE,SAAS,EAAE;IACrE,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;YAAS;0BACvB,6LAAC,mIAAA,CAAA,aAAU;0BACR,cAAA,6LAAC,mIAAA,CAAA,YAAS;oBAAC,WAAU;;sCACjB,6LAAC,uMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;wBAAkC;wBACvB,UAAU,MAAM;wBAAC;;;;;;;;;;;;0BAGnD,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;;oBAAsD;oBAC3E,UAAU,MAAM,GAAG,IAClB,UAAU,GAAG,CAAC,CAAC,yBACb,6LAAC,sJAAA,CAAA,oBAAiB;4BAAmB,UAAU;2BAAvB,SAAS,EAAE;;;;kDAGrC,6LAAC;wBAAE,WAAU;kCAAwD;;;;;;;;;;;;;;;;;;AAO/E;KAtBa","debugId":null}},
    {"offset": {"line": 1032, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ShiftCard.tsx"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Trash2, Clock } from 'lucide-react';\nimport type { ShiftAssignment } from '@/types/schedule'; // Assuming type exists\nimport { cn } from '@/lib/utils'; // Import cn\n\ninterface ShiftCardProps {\n  assignment: ShiftAssignment;\n  onRemove: () => void;\n  isCompact?: boolean; // Optional flag for compact view\n}\n\nexport const ShiftCard: React.FC<ShiftCardProps> = ({ assignment, onRemove, isCompact = false }) => {\n  // Add useSortable hook here if making items within a column sortable\n  // const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ id: assignment.id });\n  // const style = { transform: CSS.Transform.toString(transform), transition };\n\n  return (\n     <Card\n        // ref={setNodeRef} // For sortable\n        // style={style} // For sortable\n        className={cn(\n            \"group bg-background border shadow-sm\", // Add 'group' class\n            isCompact ? \"border-none shadow-none bg-transparent p-0\" : \"\" // Remove borders/padding if compact\n        )}\n        // {...attributes} // For sortable\n        // {...listeners} // For sortable\n     >\n       <CardContent className={cn(\n           \"flex items-center justify-between\",\n           isCompact ? \"p-0.5\" : \"p-3\" // Smaller padding if compact\n       )}>\n         <div className=\"flex-grow min-w-0 overflow-hidden mr-1\"> {/* Allow shrinking and hide overflow, add margin */}\n             <p className={cn(\n                 \"font-medium truncate\",\n                 isCompact ? \"text-[10px]\" : \"text-sm\" // Smaller text if compact\n             )} title={assignment.employee.name}>{assignment.employee.name}</p>\n             <p className={cn(\n                 \"text-muted-foreground flex items-center gap-0.5\", // Reduced gap\n                 isCompact ? \"text-[9px]\" : \"text-xs\" // Smaller text if compact\n             )}>\n                 <Clock className={cn(\"flex-shrink-0\", isCompact ? \"h-2 w-2\" : \"h-3 w-3\")} /> {/* Smaller icon, prevent shrink */}\n                 <span className=\"whitespace-nowrap\">{assignment.startTime}-{assignment.endTime}</span> {/* Prevent time wrap */}\n                 {/* Break details hidden in compact view */}\n                 {assignment.includeBreak && assignment.breakStartTime && assignment.breakEndTime && !isCompact && (\n                    <span className=\"ml-1\">(D: {assignment.breakStartTime}-{assignment.breakEndTime})</span>\n                 )}\n             </p>\n         </div>\n         <Button\n             variant=\"ghost\"\n             size=\"icon\"\n             className={cn(\n                 \"text-destructive flex-shrink-0 opacity-0 group-hover:opacity-100 transition-opacity\", // Hide by default, show on group hover, add transition\n                 isCompact ? \"h-4 w-4\" : \"h-7 w-7\" // Smaller button if compact\n                 // Removed hover:bg-destructive/10\n             )}\n             onClick={onRemove}\n          >\n           <Trash2 className={cn(isCompact ? \"h-2.5 w-2.5\" : \"h-4 w-4\")} /> {/* Smaller icon if compact */}\n         </Button>\n       </CardContent>\n     </Card>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAAA;AAEA,8MAAkC,YAAY;;;;;;AAQvC,MAAM,YAAsC,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,KAAK,EAAE;IAC7F,qEAAqE;IACrE,2GAA2G;IAC3G,8EAA8E;IAE9E,qBACG,6LAAC,mIAAA,CAAA,OAAI;QACF,mCAAmC;QACnC,gCAAgC;QAChC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACR,wCACA,YAAY,+CAA+C,GAAG,oCAAoC;;kBAKvG,cAAA,6LAAC,mIAAA,CAAA,cAAW;YAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACrB,qCACA,YAAY,UAAU,MAAM,6BAA6B;;;8BAE3D,6LAAC;oBAAI,WAAU;;wBAAyC;sCACpD,6LAAC;4BAAE,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,wBACA,YAAY,gBAAgB,UAAU,0BAA0B;;4BACjE,OAAO,WAAW,QAAQ,CAAC,IAAI;sCAAG,WAAW,QAAQ,CAAC,IAAI;;;;;;sCAC7D,6LAAC;4BAAE,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,mDACA,YAAY,eAAe,UAAU,0BAA0B;;;8CAE/D,6LAAC,uMAAA,CAAA,QAAK;oCAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB,YAAY,YAAY;;;;;;gCAAc;8CAC5E,6LAAC;oCAAK,WAAU;;wCAAqB,WAAW,SAAS;wCAAC;wCAAE,WAAW,OAAO;;;;;;;gCAAQ;gCAErF,WAAW,YAAY,IAAI,WAAW,cAAc,IAAI,WAAW,YAAY,IAAI,CAAC,2BAClF,6LAAC;oCAAK,WAAU;;wCAAO;wCAAK,WAAW,cAAc;wCAAC;wCAAE,WAAW,YAAY;wCAAC;;;;;;;;;;;;;;;;;;;8BAI3F,6LAAC,qIAAA,CAAA,SAAM;oBACH,SAAQ;oBACR,MAAK;oBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACR,uFACA,YAAY,YAAY,UAAU,4BAA4B;;oBAGlE,SAAS;;sCAEX,6LAAC,6MAAA,CAAA,SAAM;4BAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY,gBAAgB;;;;;;wBAAc;;;;;;;;;;;;;;;;;;AAK3E;KApDa","debugId":null}},
    {"offset": {"line": 1169, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/DepartmentColumn.tsx"],"sourcesContent":["// src/components/schedule/DepartmentColumn.tsx\n\nimport React from 'react';\nimport { useDroppable } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Plus, Trash2 } from 'lucide-react';\nimport type { Department, ShiftAssignment, Employee } from '@/types/schedule'; // Assuming types exist\nimport { ShiftCard } from './ShiftCard'; // Assuming ShiftCard component exists\nimport { format } from 'date-fns';\nimport { cn } from '@/lib/utils'; // Added cn\n\ninterface DepartmentColumnProps {\n  department: Department;\n  assignments: ShiftAssignment[];\n  onRemoveShift: (departmentId: string, assignmentId: string) => void;\n  date: Date; // Date for this column\n  onAssign: (employee: Employee, departmentId: string, date: Date) => void; // Handler for '+' button assignment\n  isWeekView?: boolean; // Flag for potentially different rendering in week view\n}\n\nexport const DepartmentColumn: React.FC<DepartmentColumnProps> = ({\n  department,\n  assignments,\n  onRemoveShift,\n  date,\n  onAssign,\n  isWeekView = false,\n}) => {\n  const dateKey = format(date, 'yyyy-MM-dd');\n  const { setNodeRef, isOver } = useDroppable({\n    id: `${department.id}_${dateKey}`, // Make ID unique per department and date\n    data: {\n        type: 'department',\n        id: department.id,\n        date: dateKey, // Pass date string in data\n    }\n  });\n\n  const style = {\n    // Highlight when dragging over\n    backgroundColor: isOver ? 'hsl(var(--accent)/0.1)' : undefined,\n    borderColor: isOver ? 'hsl(var(--accent))' : (isWeekView ? 'hsl(var(--border) / 0.3)' : undefined), // Lighter border in week view normal state\n    borderWidth: '1px', // Use 1px border always\n    borderStyle: isOver ? 'dashed' : 'solid',\n    minHeight: isWeekView ? '60px' : '200px', // Shorter min-height for week view\n    transition: 'background-color 0.2s ease, border-color 0.2s ease', // Smooth transition\n    borderRadius: isWeekView ? '0.375rem' : undefined, // Add rounding in week view\n  };\n\n  // Simplified rendering for week view\n  if (isWeekView) {\n    return ( // Start of return statement for week view\n      <div ref={setNodeRef} style={style} className=\"p-1 space-y-0.5\"> {/* Reduced padding and space */}\n          {assignments.length > 0 ? (\n              assignments.map((assignment) => (\n                  <ShiftCard\n                      key={assignment.id}\n                      assignment={assignment}\n                      onRemove={() => onRemoveShift(department.id, assignment.id)}\n                      isCompact // Use compact rendering\n                  />\n              ))\n          ) : (\n              <p className=\"text-[9px] text-muted-foreground text-center py-1 italic\">Vacío</p> // Smaller text and padding\n          )}\n      </div>\n    ); // End of return statement for week view\n  }\n\n  // Full rendering for day view\n  return ( // Start of return for day view\n    <Card ref={setNodeRef} style={style} className=\"flex flex-col h-full shadow-sm\">\n      <CardHeader className=\"flex flex-row items-center justify-between pb-2 pt-4 px-4 border-b\">\n         <CardTitle className=\"text-base font-medium flex items-center gap-2 text-foreground\"> {/* Adjusted size */}\n             {department.icon && <department.icon className=\"h-3.5 w-3.5 text-muted-foreground\" />}\n             {department.name} ({assignments.length})\n         </CardTitle>\n        {/* Add shift button - Logic needed: needs a way to select employee */}\n        {/* <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={() => console.log(\"Add shift clicked\")}>\n          <Plus className=\"h-4 w-4\" />\n        </Button> */}\n      </CardHeader>\n      <CardContent className=\"flex-grow p-3 space-y-2 overflow-y-auto\"> {/* Adjusted padding */}\n        {/* Use SortableContext if items within the column need to be sortable */}\n        {/* <SortableContext items={assignments.map(a => a.id)} strategy={verticalListSortingStrategy}> */}\n        {assignments.length > 0 ? (\n          assignments.map((assignment) => (\n             <ShiftCard\n                 key={assignment.id}\n                 assignment={assignment}\n                 onRemove={() => onRemoveShift(department.id, assignment.id)}\n             />\n          ))\n        ) : (\n          <p className=\"text-xs text-muted-foreground text-center pt-4 italic\">\n            Arrastra un colaborador aquí\n          </p>\n        )}\n        {/* </SortableContext> */}\n      </CardContent>\n    </Card>\n  ); // End of return for day view\n};\n"],"names":[],"mappings":"AAAA,+CAA+C;;;;;AAG/C;AAEA;AAIA,2PAAyC,sCAAsC;AAC/E;;;;;;;AAYO,MAAM,mBAAoD,CAAC,EAChE,UAAU,EACV,WAAW,EACX,aAAa,EACb,IAAI,EACJ,QAAQ,EACR,aAAa,KAAK,EACnB;;IACC,MAAM,UAAU,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;IAC7B,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,eAAY,AAAD,EAAE;QAC1C,IAAI,GAAG,WAAW,EAAE,CAAC,CAAC,EAAE,SAAS;QACjC,MAAM;YACF,MAAM;YACN,IAAI,WAAW,EAAE;YACjB,MAAM;QACV;IACF;IAEA,MAAM,QAAQ;QACZ,+BAA+B;QAC/B,iBAAiB,SAAS,2BAA2B;QACrD,aAAa,SAAS,uBAAwB,aAAa,6BAA6B;QACxF,aAAa;QACb,aAAa,SAAS,WAAW;QACjC,WAAW,aAAa,SAAS;QACjC,YAAY;QACZ,cAAc,aAAa,aAAa;IAC1C;IAEA,qCAAqC;IACrC,IAAI,YAAY;QACd,qBACE,6LAAC;YAAI,KAAK;YAAY,OAAO;YAAO,WAAU;;gBAAkB;gBAC3D,YAAY,MAAM,GAAG,IAClB,YAAY,GAAG,CAAC,CAAC,2BACb,6LAAC,8IAAA,CAAA,YAAS;wBAEN,YAAY;wBACZ,UAAU,IAAM,cAAc,WAAW,EAAE,EAAE,WAAW,EAAE;wBAC1D,SAAS;uBAHJ,WAAW,EAAE;;;;8CAO1B,6LAAC;oBAAE,WAAU;8BAA2D;;;;;yBAAU,2BAA2B;;;;;;kBAGpH,wCAAwC;IAC7C;IAEA,8BAA8B;IAC9B,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,KAAK;QAAY,OAAO;QAAO,WAAU;;0BAC7C,6LAAC,mIAAA,CAAA,aAAU;gBAAC,WAAU;0BACnB,cAAA,6LAAC,mIAAA,CAAA,YAAS;oBAAC,WAAU;;wBAAgE;wBAChF,WAAW,IAAI,kBAAI,6LAAC,WAAW,IAAI;4BAAC,WAAU;;;;;;wBAC9C,WAAW,IAAI;wBAAC;wBAAG,YAAY,MAAM;wBAAC;;;;;;;;;;;;0BAO9C,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;;oBAA0C;oBAG9D,YAAY,MAAM,GAAG,IACpB,YAAY,GAAG,CAAC,CAAC,2BACd,6LAAC,8IAAA,CAAA,YAAS;4BAEN,YAAY;4BACZ,UAAU,IAAM,cAAc,WAAW,EAAE,EAAE,WAAW,EAAE;2BAFrD,WAAW,EAAE;;;;kDAMzB,6LAAC;wBAAE,WAAU;kCAAwD;;;;;;;;;;;;;;;;;cAO1E,6BAA6B;AAClC;GAlFa;;QASoB,8JAAA,CAAA,eAAY;;;KAThC","debugId":null}},
    {"offset": {"line": 1319, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ScheduleView.tsx"],"sourcesContent":["\n\nimport React from 'react';\nimport type { Department, ScheduleData } from '@/types/schedule'; // Assuming types exist\nimport { DepartmentColumn } from './DepartmentColumn'; // Assuming DepartmentColumn component exists\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card'; // Added CardFooter\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { Button } from '../ui/button';\nimport { Plus, Copy, Eraser } from 'lucide-react'; // Added Copy icon, Eraser\nimport type { Employee } from '@/types/schedule';\n\ninterface ScheduleViewProps {\n  departments: Department[];\n  scheduleData: { [dateKey: string]: ScheduleData }; // Now a map of dateKey to ScheduleData\n  onRemoveShift: (dateKey: string, departmentId: string, assignmentId: string) => void;\n  viewMode: 'day' | 'week';\n  weekDates: Date[];\n  currentDate: Date; // For day view\n  onAssign: (employee: Employee, departmentId: string, date: Date) => void; // Handler for adding shift via button\n  getScheduleForDate: (date: Date) => ScheduleData; // Function to get schedule for a specific date\n  onDuplicateDay: (sourceDate: Date) => void; // Add prop for duplicating a day's schedule\n  onClearDay: (dateToClear: Date) => void; // Add prop for clearing a day's schedule\n}\n\nexport const ScheduleView: React.FC<ScheduleViewProps> = ({\n    departments,\n    scheduleData,\n    onRemoveShift,\n    viewMode,\n    weekDates,\n    currentDate,\n    onAssign,\n    getScheduleForDate, // Receive helper function\n    onDuplicateDay, // Receive duplicate handler\n    onClearDay, // Receive clear handler\n}) => {\n\n    if (viewMode === 'day') {\n         // --- Day View ---\n        const daySchedule = getScheduleForDate(currentDate);\n        const dynamicGridClass = `grid-cols-1 sm:grid-cols-2 lg:grid-cols-${Math.min(departments.length, 4)} xl:grid-cols-${Math.min(departments.length, 5)}`; // Adjust as needed\n\n        return (\n            <Card className=\"shadow-md bg-card border border-border\">\n                <CardHeader className=\"border-b\">\n                    <CardTitle className=\"text-lg font-medium text-foreground\">\n                        Horario para el {format(currentDate, 'EEEE, d MMMM yyyy', { locale: es })}\n                    </CardTitle>\n                    {/* Add description or other info if needed */}\n                </CardHeader>\n                <CardContent className=\"p-4\">\n                    {departments.length > 0 ? (\n                        <div className={`grid ${dynamicGridClass} gap-4`}>\n                            {departments.map((department) => (\n                                <DepartmentColumn\n                                    key={department.id}\n                                    department={department}\n                                    assignments={daySchedule.assignments[department.id] || []}\n                                    onRemoveShift={(deptId, assignId) => onRemoveShift(format(currentDate, 'yyyy-MM-dd'), deptId, assignId)}\n                                    date={currentDate} // Pass the date\n                                    onAssign={onAssign} // Pass assign handler\n                                />\n                            ))}\n                        </div>\n                    ) : (\n                         <p className=\"text-center text-muted-foreground italic py-4\">\n                             No hay departamentos definidos para esta sede. Agrega departamentos en la sección de configuración.\n                         </p>\n                    )}\n                </CardContent>\n            </Card>\n        );\n    } else {\n        // --- Week View ---\n         // Map the dates to Card components first\n         const weekViewContent = weekDates.map((date, index) => {\n            const daySchedule = getScheduleForDate(date);\n            const dateKey = format(date, 'yyyy-MM-dd');\n            const totalAssignmentsForDay = Object.values(daySchedule.assignments).reduce((sum, deptAssignments) => sum + deptAssignments.length, 0);\n            const isLastDayOfWeek = index === weekDates.length - 1; // Check if it's the last day\n\n            // Card represents a single day column in the week view\n            return (\n                <Card key={dateKey} className=\"shadow-sm bg-card border border-border/50 flex flex-col min-w-[140px]\"> {/* Adjusted min-width */}\n                    <CardHeader className=\"pb-2 pt-3 px-3 border-b relative\"> {/* Added relative positioning */}\n                        <CardTitle className=\"text-sm font-medium text-foreground text-center whitespace-nowrap\"> {/* Reduced size, nowrap */}\n                            {format(date, 'EEE d', { locale: es })} {/* Short day name, date */}\n                        </CardTitle>\n                        <CardDescription className=\"text-[10px] text-muted-foreground text-center\"> {/* Smaller description */}\n                            {format(date, 'MMM', { locale: es })} ({totalAssignmentsForDay}) {/* Short month, count */}\n                        </CardDescription>\n                         {/* Action Buttons: Duplicate and Clear */}\n                        <div className=\"absolute top-1 right-1 flex flex-col gap-0.5\">\n                            {/* Duplicate button for all days except the last one */}\n                            {!isLastDayOfWeek && (\n                                <Button\n                                    variant=\"ghost\"\n                                    size=\"icon\"\n                                    className=\"h-5 w-5 p-0 text-muted-foreground hover:text-foreground opacity-50 hover:opacity-100\"\n                                    onClick={() => onDuplicateDay(date)}\n                                    title=\"Duplicar al día siguiente\"\n                                >\n                                    <Copy className=\"h-3 w-3\" />\n                                </Button>\n                            )}\n                            {/* Clear Day Button */}\n                            <Button\n                                variant=\"ghost\"\n                                size=\"icon\"\n                                className=\"h-5 w-5 p-0 text-destructive hover:text-destructive opacity-50 hover:opacity-100\"\n                                onClick={() => onClearDay(date)} // Trigger clear confirmation\n                                title=\"Limpiar turnos del día\"\n                                disabled={totalAssignmentsForDay === 0} // Disable if no assignments\n                            >\n                                <Eraser className=\"h-3 w-3\" />\n                            </Button>\n                        </div>\n                    </CardHeader>\n                    <CardContent className=\"p-1.5 space-y-2 flex-grow overflow-y-auto\"> {/* Reduced padding, smaller space */}\n                        {departments.length > 0 ? (\n                            departments.map((department) => (\n                                <div key={department.id} className=\"border rounded-md p-1.5 bg-muted/10\"> {/* Reduced padding, lighter bg */}\n                                    <div className=\"flex justify-between items-center mb-1\">\n                                        <h4 className=\"text-[11px] font-semibold text-foreground flex items-center gap-1 whitespace-nowrap overflow-hidden text-ellipsis\"> {/* Smaller title, ellipsis */}\n                                             {department.icon && <department.icon className=\"h-2.5 w-2.5 text-muted-foreground\" />} {/* Smaller icon */}\n                                             <span className=\"overflow-hidden text-ellipsis\">{department.name}</span> {/* Ellipsis for name */}\n                                        </h4>\n                                    </div>\n                                    <DepartmentColumn\n                                        department={department}\n                                        assignments={daySchedule.assignments[department.id] || []}\n                                        onRemoveShift={(deptId, assignId) => onRemoveShift(dateKey, deptId, assignId)}\n                                        isWeekView // Indicate week view for potentially different rendering\n                                        date={date}\n                                        onAssign={onAssign}\n                                    />\n                                </div>\n                            ))\n                         ) : (\n                              <p className=\"text-center text-xs text-muted-foreground italic pt-2\"> {/* Smaller padding */}\n                                  No hay deptos.\n                              </p>\n                         )}\n                    </CardContent>\n                    {/* Optional Footer can be added here if needed */}\n                    {/* <CardFooter className=\"p-1.5 border-t\">\n                        <Button variant=\"outline\" size=\"xs\" className=\"w-full\">Acción</Button>\n                    </CardFooter> */}\n                </Card>\n            );\n         });\n\n         // Use CSS Grid for the container to manage column widths\n         return (\n            <div className=\"grid grid-cols-7 gap-2 w-full\"> {/* Grid with 7 columns and smaller gap */}\n                {weekViewContent}\n            </div>\n        );\n    }\n};\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1611, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,6LAAC,qKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1654, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ShiftDetailModal.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch'; // Import Switch\nimport { Save, X } from 'lucide-react';\nimport type { ShiftDetails } from '@/types/schedule'; // Assuming type exists\nimport { useToast } from '@/hooks/use-toast';\nimport { cn } from '@/lib/utils'; // Import cn\n\ninterface ShiftDetailModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (details: ShiftDetails) => void;\n  employeeName: string;\n  departmentName: string;\n  initialDetails?: Partial<ShiftDetails>; // For editing existing shifts\n}\n\n// Basic time validation (HH:MM format)\nconst timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\nconst timeErrorMessage = 'Formato HH:MM inválido.';\n\nexport const ShiftDetailModal: React.FC<ShiftDetailModalProps> = ({\n  isOpen,\n  onClose,\n  onSave,\n  employeeName,\n  departmentName,\n  initialDetails,\n}) => {\n  const { toast } = useToast();\n  const [startTime, setStartTime] = useState(initialDetails?.startTime || '08:00');\n  const [endTime, setEndTime] = useState(initialDetails?.endTime || '17:00');\n  const [includeBreak, setIncludeBreak] = useState(initialDetails?.includeBreak || false); // Default to false\n  const [breakStartTime, setBreakStartTime] = useState(initialDetails?.breakStartTime || '15:00'); // Default 3 PM\n  const [breakEndTime, setBreakEndTime] = useState(initialDetails?.breakEndTime || '18:00'); // Default 6 PM\n\n  const [startTimeError, setStartTimeError] = useState<string | null>(null);\n  const [endTimeError, setEndTimeError] = useState<string | null>(null);\n  const [breakStartTimeError, setBreakStartTimeError] = useState<string | null>(null);\n  const [breakEndTimeError, setBreakEndTimeError] = useState<string | null>(null);\n\n  // Reset state when modal opens or initial details change\n  useEffect(() => {\n    if (isOpen) {\n      setStartTime(initialDetails?.startTime || '08:00');\n      setEndTime(initialDetails?.endTime || '17:00');\n      setIncludeBreak(initialDetails?.includeBreak || false);\n      setBreakStartTime(initialDetails?.breakStartTime || '15:00');\n      setBreakEndTime(initialDetails?.breakEndTime || '18:00');\n      setStartTimeError(null);\n      setEndTimeError(null);\n      setBreakStartTimeError(null);\n      setBreakEndTimeError(null);\n    }\n  }, [isOpen, initialDetails]);\n\n  const handleSaveClick = () => {\n    let isValid = true;\n    setStartTimeError(null);\n    setEndTimeError(null);\n    setBreakStartTimeError(null);\n    setBreakEndTimeError(null);\n\n    if (!timeRegex.test(startTime)) {\n      setStartTimeError(timeErrorMessage);\n      isValid = false;\n    }\n    if (!timeRegex.test(endTime)) {\n      setEndTimeError(timeErrorMessage);\n      isValid = false;\n    }\n\n    // Validate break times only if break is included\n    if (includeBreak) {\n        if (!breakStartTime || !timeRegex.test(breakStartTime)) {\n            setBreakStartTimeError(timeErrorMessage);\n            isValid = false;\n        }\n        if (!breakEndTime || !timeRegex.test(breakEndTime)) {\n            setBreakEndTimeError(timeErrorMessage);\n            isValid = false;\n        }\n\n        // Check break end time is after break start time\n        if (isValid && breakStartTime && breakEndTime && breakStartTime >= breakEndTime) {\n             setBreakEndTimeError('Hora fin descanso debe ser posterior a hora inicio.');\n             isValid = false;\n             // Note: Simple comparison works for HH:MM within the same day.\n             // More complex logic needed if breaks can cross midnight (unlikely scenario).\n        }\n    }\n\n\n    // Basic check: end time should be after start time (doesn't handle overnight yet)\n    if (isValid && startTime >= endTime) {\n        // Allow overnight shifts for simplicity, maybe add a warning or flag later\n        // setEndTimeError('Hora de fin debe ser posterior a la hora de inicio.');\n        // isValid = false;\n    }\n\n\n    if (isValid) {\n      onSave({\n        startTime,\n        endTime,\n        includeBreak,\n        breakStartTime: includeBreak ? breakStartTime : undefined, // Only save if included\n        breakEndTime: includeBreak ? breakEndTime : undefined,     // Only save if included\n      });\n    } else {\n        toast({\n            title: \"Error de Validación\",\n            description: \"Por favor corrige los campos marcados.\",\n            variant: \"destructive\",\n        });\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>Detalles del Turno</DialogTitle>\n          <DialogDescription>\n            Asignando a <strong>{employeeName}</strong> en <strong>{departmentName}</strong>.\n            Ingresa las horas y el descanso.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"grid gap-4 py-4\">\n          {/* Start Time */}\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"start-time\" className=\"text-right\">\n              Inicio Turno\n            </Label>\n            <Input\n              id=\"start-time\"\n              type=\"time\"\n              value={startTime}\n              onChange={(e) => setStartTime(e.target.value)}\n              className={cn(\"col-span-3\", startTimeError && 'border-destructive ring-destructive')}\n            />\n             {startTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{startTimeError}</p>}\n          </div>\n          {/* End Time */}\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"end-time\" className=\"text-right\">\n              Fin Turno\n            </Label>\n            <Input\n              id=\"end-time\"\n              type=\"time\"\n              value={endTime}\n              onChange={(e) => setEndTime(e.target.value)}\n              className={cn(\"col-span-3\", endTimeError && 'border-destructive ring-destructive')}\n            />\n             {endTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{endTimeError}</p>}\n          </div>\n\n          {/* Include Break Switch */}\n          <div className=\"flex items-center justify-between space-x-2 pt-2 border-t mt-2\">\n             <Label htmlFor=\"include-break\" className=\"font-medium\">\n                Incluir Descanso\n             </Label>\n             <Switch\n                id=\"include-break\"\n                checked={includeBreak}\n                onCheckedChange={setIncludeBreak}\n             />\n          </div>\n\n\n          {/* Conditional Break Time Inputs */}\n          {includeBreak && (\n            <>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"break-start-time\" className=\"text-right\">\n                  Inicio Descanso\n                </Label>\n                <Input\n                  id=\"break-start-time\"\n                  type=\"time\"\n                  value={breakStartTime}\n                  onChange={(e) => setBreakStartTime(e.target.value)}\n                  className={cn(\"col-span-3\", breakStartTimeError && 'border-destructive ring-destructive')}\n                />\n                 {breakStartTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{breakStartTimeError}</p>}\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"break-end-time\" className=\"text-right\">\n                  Fin Descanso\n                </Label>\n                <Input\n                  id=\"break-end-time\"\n                  type=\"time\"\n                  value={breakEndTime}\n                  onChange={(e) => setBreakEndTime(e.target.value)}\n                  className={cn(\"col-span-3\", breakEndTimeError && 'border-destructive ring-destructive')}\n                />\n                 {breakEndTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{breakEndTimeError}</p>}\n              </div>\n            </>\n          )}\n\n        </div>\n        <DialogFooter>\n          <DialogClose asChild>\n            <Button type=\"button\" variant=\"outline\">\n              <X className=\"mr-2 h-4 w-4\" /> Cancelar\n            </Button>\n          </DialogClose>\n          <Button type=\"button\" onClick={handleSaveClick} variant=\"default\">\n            <Save className=\"mr-2 h-4 w-4\" /> Guardar Turno\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2083, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/WeekNavigator.tsx"],"sourcesContent":["// src/components/schedule/WeekNavigator.tsx\n'use client';\n\nimport React from 'react';\nimport { Button } from '@/components/ui/button';\nimport { ChevronsLeft, ChevronsRight } from 'lucide-react';\nimport { format, startOfWeek, endOfWeek } from 'date-fns';\nimport { es } from 'date-fns/locale'; // Import Spanish locale\n\ninterface WeekNavigatorProps {\n  currentDate: Date;\n  onPreviousWeek: () => void;\n  onNextWeek: () => void;\n}\n\nexport const WeekNavigator: React.FC<WeekNavigatorProps> = ({\n  currentDate,\n  onPreviousWeek,\n  onNextWeek,\n}) => {\n  const weekStart = startOfWeek(currentDate, { weekStartsOn: 1 }); // Start on Monday\n  const weekEnd = endOfWeek(currentDate, { weekStartsOn: 1 });\n\n  // Format the week range string, handling year change within the week\n  const startYear = format(weekStart, 'yyyy');\n  const endYear = format(weekEnd, 'yyyy');\n  const weekRange = `Semana del ${format(weekStart, 'd MMM', { locale: es })}${startYear !== endYear ? ' ' + startYear : ''} al ${format(weekEnd, 'd MMM yyyy', { locale: es })}`;\n\n  return (\n    <div className=\"flex items-center justify-center gap-2\">\n      <Button variant=\"outline\" size=\"icon\" onClick={onPreviousWeek} className=\"h-8 w-8\">\n        <ChevronsLeft className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Semana Anterior</span>\n      </Button>\n      <span className=\"text-sm font-medium text-center min-w-[200px]\">\n        {weekRange}\n      </span>\n      <Button variant=\"outline\" size=\"icon\" onClick={onNextWeek} className=\"h-8 w-8\">\n        <ChevronsRight className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Semana Siguiente</span>\n      </Button>\n    </div>\n  );\n};\n"],"names":[],"mappings":"AAAA,4CAA4C;;;;;AAI5C;AACA;AAAA;AACA;AAAA;AAAA;AACA,0PAAsC,wBAAwB;AAN9D;;;;;;AAcO,MAAM,gBAA8C,CAAC,EAC1D,WAAW,EACX,cAAc,EACd,UAAU,EACX;IACC,MAAM,YAAY,CAAA,GAAA,8IAAA,CAAA,cAAW,AAAD,EAAE,aAAa;QAAE,cAAc;IAAE,IAAI,kBAAkB;IACnF,MAAM,UAAU,CAAA,GAAA,4IAAA,CAAA,YAAS,AAAD,EAAE,aAAa;QAAE,cAAc;IAAE;IAEzD,qEAAqE;IACrE,MAAM,YAAY,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,WAAW;IACpC,MAAM,UAAU,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,SAAS;IAChC,MAAM,YAAY,CAAC,WAAW,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,WAAW,SAAS;QAAE,QAAQ,+IAAA,CAAA,KAAE;IAAC,KAAK,cAAc,UAAU,MAAM,YAAY,GAAG,IAAI,EAAE,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,SAAS,cAAc;QAAE,QAAQ,+IAAA,CAAA,KAAE;IAAC,IAAI;IAE/K,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,qIAAA,CAAA,SAAM;gBAAC,SAAQ;gBAAU,MAAK;gBAAO,SAAS;gBAAgB,WAAU;;kCACvE,6LAAC,yNAAA,CAAA,eAAY;wBAAC,WAAU;;;;;;kCACxB,6LAAC;wBAAK,WAAU;kCAAU;;;;;;;;;;;;0BAE5B,6LAAC;gBAAK,WAAU;0BACb;;;;;;0BAEH,6LAAC,qIAAA,CAAA,SAAM;gBAAC,SAAQ;gBAAU,MAAK;gBAAO,SAAS;gBAAY,WAAU;;kCACnE,6LAAC,2NAAA,CAAA,gBAAa;wBAAC,WAAU;;;;;;kCACzB,6LAAC;wBAAK,WAAU;kCAAU;;;;;;;;;;;;;;;;;;AAIlC;KA5Ba","debugId":null}},
    {"offset": {"line": 2200, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/schedule/page.tsx"],"sourcesContent":["\n'use client'; // Ensure this directive is present\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { DndContext, DragEndEvent, closestCenter } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Plus, Trash2, Edit, ChevronsLeft, ChevronsRight, CalendarIcon, Users, Building, Building2, MinusCircle, ChevronsUpDown, Settings, Save, CopyPlus, Library, Eraser, Download, Upload, FileX2 } from 'lucide-react'; // Added Save, CopyPlus, Library, Eraser, Download, Upload, FileX2\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label'; // Import Label\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Separator } from '@/components/ui/separator'; // Import Separator\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\n\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter, DialogDescription, DialogClose, DialogTrigger } from \"@/components/ui/dialog\";\n\nimport { LocationSelector } from '@/components/schedule/LocationSelector';\nimport { EmployeeList } from '@/components/schedule/EmployeeList';\nimport { ScheduleView } from '@/components/schedule/ScheduleView';\nimport { ShiftDetailModal } from '@/components/schedule/ShiftDetailModal';\nimport { WeekNavigator } from '@/components/schedule/WeekNavigator'; // Import WeekNavigator\nimport { useToast } from '@/hooks/use-toast'; // Import useToast\n\nimport type { Location, Department, Employee, ShiftAssignment, ScheduleData, ShiftTemplate } from '@/types/schedule'; // Added ShiftTemplate\nimport { v4 as uuidv4 } from 'uuid';\nimport { startOfWeek, addDays, format, addWeeks, subWeeks, parseISO } from 'date-fns'; // Added parseISO\nimport { es } from 'date-fns/locale';\nimport { cn } from '@/lib/utils';\n\n// Helper to generate dates for the current week\nconst getWeekDates = (currentDate: Date): Date[] => {\n  const start = startOfWeek(currentDate, { weekStartsOn: 1 }); // Start on Monday\n  return Array.from({ length: 7 }).map((_, i) => addDays(start, i));\n};\n\n// LocalStorage Keys\nconst SCHEDULE_DATA_KEY = 'schedulePlannerData';\nconst SCHEDULE_TEMPLATES_KEY = 'scheduleTemplates';\n\n\nconst initialLocations: Location[] = [\n  { id: 'loc-1', name: 'Sede Principal' },\n  { id: 'loc-2', name: 'Sede Norte' },\n  { id: 'loc-3', name: 'Sede Occidente' },\n];\n\nconst initialDepartments: Department[] = [\n  { id: 'dep-1', name: 'Cocina', locationId: 'loc-1', icon: Building },\n  { id: 'dep-2', name: 'Salón', locationId: 'loc-1', icon: Users },\n  { id: 'dep-3', name: 'Caja & Barra', locationId: 'loc-2', icon: Edit },\n  { id: 'dep-4', name: 'Bodega', locationId: 'loc-2', icon: Building2 },\n  { id: 'dep-5', name: 'Cocina', locationId: 'loc-3', icon: Building },\n  { id: 'dep-6', name: 'Salón', locationId: 'loc-3', icon: Users },\n];\n\nconst initialEmployees: Employee[] = [\n  { id: 'emp-1', name: 'Carlos Pérez', primaryLocationId: 'loc-1' },\n  { id: 'emp-2', name: 'Ana Rodriguez', primaryLocationId: 'loc-1' },\n  { id: 'emp-3', name: 'Luis Gómez', primaryLocationId: 'loc-2' },\n  { id: 'emp-4', name: 'Sofía Vargas', primaryLocationId: 'loc-2' },\n  { id: 'emp-5', name: 'Diego Torres', primaryLocationId: 'loc-3' },\n  { id: 'emp-6', name: 'Isabel Castro', primaryLocationId: 'loc-3' },\n];\n\nexport default function SchedulePage() {\n    const [locations, setLocations] = useState<Location[]>(initialLocations);\n    const [departments, setDepartments] = useState<Department[]>(initialDepartments);\n    const [employees, setEmployees] = useState<Employee[]>(initialEmployees);\n    const [currentDate, setCurrentDate] = useState(new Date()); // Track current date for week view\n    const [scheduleData, setScheduleData] = useState<{ [dateKey: string]: ScheduleData }>({}); // Store data per date key \"yyyy-MM-dd\"\n    const [viewMode, setViewMode] = useState<'day' | 'week'>('week'); // Default to week view\n    const [selectedLocationId, setSelectedLocationId] = useState<string>(initialLocations[0].id);\n    const [isShiftModalOpen, setIsShiftModalOpen] = useState(false);\n    const [selectedEmployee, setSelectedEmployee] = useState<Employee | null>(null);\n    const [selectedDepartmentId, setSelectedDepartmentId] = useState<string | null>(null);\n    const [editingShiftDetails, setEditingShiftDetails] = useState<{ assignmentId: string; details: any } | null>(null); // For edit workflow\n    const [targetDate, setTargetDate] = useState<Date>(new Date()); // Track the date for shift assignment\n\n    // State for managing Location, Department, and Employee CRUD modals\n    const [isConfigModalOpen, setIsConfigModalOpen] = useState(false);\n    const [isLocationModalOpen, setIsLocationModalOpen] = useState(false);\n    const [isDepartmentModalOpen, setIsDepartmentModalOpen] = useState(false);\n    const [isEmployeeModalOpen, setIsEmployeeModalOpen] = useState(false);\n\n    const [editingLocation, setEditingLocation] = useState<Location | null>(null);\n    const [locationFormData, setLocationFormData] = useState({ name: '' });\n\n    const [editingDepartment, setEditingDepartment] = useState<Department | null>(null);\n    const [departmentFormData, setDepartmentFormData] = useState({ name: '', locationId: selectedLocationId });\n\n    const [editingEmployee, setEditingEmployee] = useState<Employee | null>(null);\n    const [employeeFormData, setEmployeeFormData] = useState({ name: '', primaryLocationId: selectedLocationId });\n\n    const [itemToDelete, setItemToDelete] = useState<{ type: 'location' | 'department' | 'employee' | 'template'; id: string; name: string } | null>(null); // Added 'template' type\n\n    // State for template saving dialog\n    const [isTemplateModalOpen, setIsTemplateModalOpen] = useState(false);\n    const [templateName, setTemplateName] = useState('');\n    const [savedTemplates, setSavedTemplates] = useState<ShiftTemplate[]>([]); // State for saved templates\n\n    // State for clear day confirmation\n    const [clearingDate, setClearingDate] = useState<Date | null>(null);\n\n\n    const { toast } = useToast(); // Get toast function\n\n    // Load schedule data and templates from localStorage on mount\n    useEffect(() => {\n        if (typeof window !== 'undefined') {\n            const savedSchedule = localStorage.getItem(SCHEDULE_DATA_KEY);\n            if (savedSchedule) {\n                try {\n                    const parsedData = JSON.parse(savedSchedule);\n                    // Revive date objects\n                    Object.keys(parsedData).forEach(key => {\n                        if (parsedData[key] && typeof parsedData[key].date === 'string') {\n                            parsedData[key].date = parseISO(parsedData[key].date);\n                        }\n                    });\n                    setScheduleData(parsedData);\n                } catch (error) {\n                    console.error(\"Error parsing schedule data from localStorage:\", error);\n                }\n            }\n\n            // Load saved templates\n            const savedTemplatesRaw = localStorage.getItem(SCHEDULE_TEMPLATES_KEY);\n             if (savedTemplatesRaw) {\n                 try {\n                     const parsedTemplates = JSON.parse(savedTemplatesRaw);\n                     // Basic validation: ensure it's an array\n                     if (Array.isArray(parsedTemplates)) {\n                         setSavedTemplates(parsedTemplates);\n                     } else {\n                         console.warn(\"Invalid template data found in localStorage, ignoring.\");\n                         localStorage.removeItem(SCHEDULE_TEMPLATES_KEY); // Clear invalid data\n                     }\n                 } catch (error) {\n                     console.error(\"Error parsing templates from localStorage:\", error);\n                     localStorage.removeItem(SCHEDULE_TEMPLATES_KEY); // Clear invalid data\n                 }\n             }\n        }\n    }, []);\n\n\n    const weekDates = getWeekDates(currentDate);\n    const currentDayKey = format(targetDate, 'yyyy-MM-dd'); // Date key for current schedule\n\n    // Helper to get schedule for a specific date, handling potential undefined\n    const getScheduleForDate = (date: Date): ScheduleData => {\n        const key = format(date, 'yyyy-MM-dd');\n        return scheduleData[key] || { date: date, assignments: {} };\n    }\n\n    // Derived state for filtering employees and departments by location\n    const filteredEmployees = useMemo(() => employees.filter(emp => emp.primaryLocationId === selectedLocationId), [employees, selectedLocationId]);\n    const filteredDepartments = useMemo(() => departments.filter(dep => dep.locationId === selectedLocationId), [departments, selectedLocationId]);\n    const filteredTemplates = useMemo(() => savedTemplates.filter(temp => temp.locationId === selectedLocationId), [savedTemplates, selectedLocationId]); // Filter templates by location\n\n    // Derived state for available employees (considering view mode)\n    const assignedEmployeeIds = useMemo(() => {\n        const ids = new Set<string>();\n        let dateKeysToCheck: string[] = [];\n\n        if (viewMode === 'day') {\n            dateKeysToCheck.push(format(targetDate, 'yyyy-MM-dd'));\n        }\n        // In week view, we don't filter based on assignment for the available list\n        // Filtering happens on drop\n\n        dateKeysToCheck.forEach(dateKey => {\n            const daySchedule = scheduleData[dateKey];\n            if (daySchedule) {\n                Object.values(daySchedule.assignments).forEach(deptAssignments => {\n                    deptAssignments.forEach(assignment => ids.add(assignment.employee.id));\n                });\n            }\n        });\n        return ids;\n    }, [scheduleData, targetDate, viewMode]); // Removed weekDates dependency as week view doesn't filter\n\n\n    const availableEmployees = useMemo(() => {\n        // Only filter out assigned employees in 'day' view\n        if (viewMode === 'day') {\n            return filteredEmployees.filter(emp => !assignedEmployeeIds.has(emp.id));\n        } else {\n            // In 'week' view, the available list shows all employees for the location\n            return filteredEmployees;\n        }\n    }, [filteredEmployees, assignedEmployeeIds, viewMode]);\n\n\n    useEffect(() => {\n        // Ensure department locationId defaults to current selected location\n        setDepartmentFormData(prev => ({ ...prev, locationId: selectedLocationId }));\n        setEmployeeFormData(prev => ({ ...prev, primaryLocationId: selectedLocationId }));\n    }, [selectedLocationId]);\n\n    const handleLocationChange = (locationId: string) => {\n        setSelectedLocationId(locationId);\n    };\n\n\n    const handleOpenShiftModal = (employee: Employee, departmentId: string, date: Date) => {\n        setSelectedEmployee(employee);\n        setSelectedDepartmentId(departmentId);\n        setTargetDate(date); // Set the date for which the shift is being added/edited\n        setIsShiftModalOpen(true);\n    };\n\n    const handleAddShift = (details: any) => {\n        if (!selectedEmployee || !selectedDepartmentId) return;\n\n        const dateKey = format(targetDate, 'yyyy-MM-dd');\n\n        const newAssignment: ShiftAssignment = {\n            id: uuidv4(),\n            employee: selectedEmployee,\n            startTime: details.startTime,\n            endTime: details.endTime,\n            includeBreak: details.includeBreak || false,\n            breakStartTime: details.includeBreak ? details.breakStartTime : undefined,\n            breakEndTime: details.includeBreak ? details.breakEndTime : undefined,\n        };\n\n        setScheduleData(prevData => {\n            const dayData = prevData[dateKey] || { date: targetDate, assignments: {} };\n            const departmentAssignments = dayData.assignments[selectedDepartmentId!] || [];\n            return {\n                ...prevData,\n                [dateKey]: {\n                    ...dayData,\n                    assignments: {\n                        ...dayData.assignments,\n                        [selectedDepartmentId!]: [...departmentAssignments, newAssignment],\n                    },\n                },\n            };\n        });\n        setIsShiftModalOpen(false);\n        setSelectedEmployee(null); // Clear selection after assigning\n        setSelectedDepartmentId(null);\n    };\n\n    const handleRemoveShift = (dateKey: string, departmentId: string, assignmentId: string) => {\n        setScheduleData(prevData => {\n            const dayData = prevData[dateKey];\n            if (!dayData) return prevData;\n\n            const departmentAssignments = (dayData.assignments[departmentId] || []).filter(a => a.id !== assignmentId);\n\n            // Create a new assignments object to avoid direct mutation\n            const newAssignments = { ...dayData.assignments, [departmentId]: departmentAssignments };\n\n            // If the department assignment list is now empty, consider removing the department key\n            if (newAssignments[departmentId].length === 0) {\n                delete newAssignments[departmentId];\n            }\n\n            return {\n                ...prevData,\n                [dateKey]: {\n                    ...dayData,\n                    assignments: newAssignments,\n                },\n            };\n        });\n    };\n\n\n    const handleDragEnd = (event: DragEndEvent) => {\n        const { over, active } = event;\n\n        if (!over || !active) return;\n\n        const employeeId = active.id as string;\n        const targetData = over.data.current as { type: string; id: string; date?: string }; // Expecting { type: 'department', id: 'dept-id', date: 'yyyy-MM-dd' }\n\n        if (!targetData || targetData.type !== 'department' || !targetData.date) {\n            console.warn(\"Invalid drop target data:\", targetData);\n            return;\n        }\n\n        const departmentId = targetData.id;\n        const dropDate = parseISO(targetData.date); // Parse date string back to Date object\n\n        const employee = employees.find(emp => emp.id === employeeId);\n        if (!employee) return;\n\n        // --- Check if employee is already assigned ANYWHERE on this date ---\n        const dateKey = format(dropDate, 'yyyy-MM-dd');\n        const daySchedule = scheduleData[dateKey];\n        if (daySchedule) {\n             const isAlreadyAssigned = Object.values(daySchedule.assignments)\n                                            .flat() // Combine assignments from all departments for the day\n                                            .some(assignment => assignment.employee.id === employeeId);\n             if (isAlreadyAssigned) {\n                 toast({\n                     title: 'Asignación Duplicada',\n                     description: `${employee.name} ya tiene un turno asignado para el ${format(dropDate, 'PPP', { locale: es })}.`,\n                     variant: 'destructive',\n                 });\n                 return; // Stop the assignment\n             }\n        }\n        // --- End Check ---\n\n        // If not already assigned on this date, proceed to open modal\n        handleOpenShiftModal(employee, departmentId, dropDate);\n    };\n\n    // CRUD Handlers\n    const handleOpenLocationModal = (location: Location | null) => {\n        setEditingLocation(location);\n        setLocationFormData({ name: location?.name || '' });\n        setIsLocationModalOpen(true);\n    };\n\n    const handleSaveLocation = () => {\n        if (editingLocation) {\n            // Update existing location\n            setLocations(locations.map(loc => loc.id === editingLocation.id ? { ...loc, ...locationFormData } : loc));\n        } else {\n            // Add new location\n            const newLocation = { id: uuidv4(), ...locationFormData };\n            setLocations([...locations, newLocation]);\n        }\n        setIsLocationModalOpen(false);\n        setEditingLocation(null); // Clear editing state\n    };\n\n    const handleOpenDepartmentModal = (department: Department | null) => {\n        setEditingDepartment(department);\n        setDepartmentFormData({ name: department?.name || '', locationId: department?.locationId || selectedLocationId });\n        setIsDepartmentModalOpen(true);\n    };\n\n    const handleSaveDepartment = () => {\n        if (editingDepartment) {\n            setDepartments(departments.map(dep => dep.id === editingDepartment.id ? { ...dep, ...departmentFormData } : dep));\n        } else {\n            const newDepartment = { id: uuidv4(), ...departmentFormData, icon: Plus }; // Assign default icon\n            setDepartments([...departments, newDepartment]);\n        }\n        setIsDepartmentModalOpen(false);\n        setEditingDepartment(null); // Clear editing state\n    };\n\n    const handleOpenEmployeeModal = (employee: Employee | null) => {\n        setEditingEmployee(employee);\n        setEmployeeFormData({ name: employee?.name || '', primaryLocationId: employee?.primaryLocationId || selectedLocationId });\n        setIsEmployeeModalOpen(true);\n    };\n\n    const handleSaveEmployee = () => {\n        if (editingEmployee) {\n            setEmployees(employees.map(emp => emp.id === editingEmployee.id ? { ...emp, ...employeeFormData } : emp));\n        } else {\n            const newEmployee = { id: uuidv4(), ...employeeFormData };\n            setEmployees([...employees, newEmployee]);\n        }\n        setIsEmployeeModalOpen(false);\n        setEditingEmployee(null); // Clear editing state\n    };\n\n     // Confirm before deleting\n     const confirmDeleteItem = (type: 'location' | 'department' | 'employee' | 'template', id: string, name: string) => {\n        setItemToDelete({ type, id, name });\n        // The AlertDialog will open via its trigger\n     };\n\n\n    const handleDeleteItem = () => {\n        if (!itemToDelete) return;\n\n        try {\n            switch (itemToDelete.type) {\n                case 'location':\n                    setLocations(locations.filter(loc => loc.id !== itemToDelete.id));\n                    setDepartments(departments.filter(dep => dep.locationId !== itemToDelete.id));\n                    setEmployees(emps => emps.map(emp => emp.primaryLocationId === itemToDelete.id ? {...emp, primaryLocationId: '' } : emp));\n                    if (selectedLocationId === itemToDelete.id) {\n                        setSelectedLocationId(locations.length > 1 ? locations.find(loc => loc.id !== itemToDelete.id)!.id : '');\n                    }\n                    break;\n                case 'department':\n                    setDepartments(departments.filter(dep => dep.id !== itemToDelete.id));\n                     const updatedSchedule = { ...scheduleData };\n                     Object.keys(updatedSchedule).forEach(dateKey => {\n                         delete updatedSchedule[dateKey].assignments[itemToDelete.id];\n                     });\n                     setScheduleData(updatedSchedule);\n                    break;\n                case 'employee':\n                    setEmployees(employees.filter(emp => emp.id !== itemToDelete.id));\n                     const updatedScheduleEmp = { ...scheduleData };\n                     Object.keys(updatedScheduleEmp).forEach(dateKey => {\n                          Object.keys(updatedScheduleEmp[dateKey].assignments).forEach(deptId => {\n                              updatedScheduleEmp[dateKey].assignments[deptId] = updatedScheduleEmp[dateKey].assignments[deptId].filter(a => a.employee.id !== itemToDelete.id);\n                          });\n                     });\n                     setScheduleData(updatedScheduleEmp);\n                    break;\n                 case 'template':\n                     const updatedTemplates = savedTemplates.filter(t => t.id !== itemToDelete.id);\n                     setSavedTemplates(updatedTemplates);\n                     if (typeof window !== 'undefined') {\n                         localStorage.setItem(SCHEDULE_TEMPLATES_KEY, JSON.stringify(updatedTemplates));\n                     }\n                     toast({ title: 'Formación Eliminada', description: `La formación \"${itemToDelete.name}\" ha sido eliminada.` });\n                    break;\n            }\n        } catch (error) {\n             console.error(`Error deleting item type ${itemToDelete.type}:`, error);\n             toast({ title: 'Error al Eliminar', description: 'No se pudo completar la eliminación.', variant: 'destructive' });\n        } finally {\n            setItemToDelete(null); // Close dialog\n        }\n    };\n\n     // Handlers for Week Navigation\n     const handlePreviousWeek = () => {\n        setCurrentDate(prevDate => subWeeks(prevDate, 1));\n     };\n\n     const handleNextWeek = () => {\n        setCurrentDate(prevDate => addWeeks(prevDate, 1));\n     };\n\n    // --- Advanced Action Handlers ---\n    const handleSaveSchedule = () => {\n        if (typeof window !== 'undefined') {\n            try {\n                localStorage.setItem(SCHEDULE_DATA_KEY, JSON.stringify(scheduleData));\n                toast({ title: 'Horario Guardado', description: 'El horario actual se ha guardado localmente.' });\n            } catch (error) {\n                console.error(\"Error saving schedule data to localStorage:\", error);\n                toast({ title: 'Error al Guardar', description: 'No se pudo guardar el horario.', variant: 'destructive' });\n            }\n        }\n    };\n\n     const handleDuplicateDay = (sourceDate: Date) => {\n         const sourceDayKey = format(sourceDate, 'yyyy-MM-dd');\n         const nextDayDate = addDays(sourceDate, 1);\n         const nextDayKey = format(nextDayDate, 'yyyy-MM-dd');\n         const sourceSchedule = scheduleData[sourceDayKey];\n\n         if (!sourceSchedule || Object.keys(sourceSchedule.assignments).length === 0) {\n             toast({ title: 'Nada que Duplicar', description: `No hay turnos asignados para el ${format(sourceDate, 'PPP', { locale: es })}.`, variant: 'destructive' });\n             return;\n         }\n\n         // Deep copy assignments to avoid reference issues\n         const duplicatedAssignments = JSON.parse(JSON.stringify(sourceSchedule.assignments));\n         // Regenerate unique IDs for duplicated assignments\n         Object.keys(duplicatedAssignments).forEach(deptId => {\n             duplicatedAssignments[deptId].forEach((assign: ShiftAssignment) => {\n                 assign.id = uuidv4();\n             });\n         });\n\n\n         setScheduleData(prevData => ({\n             ...prevData,\n             [nextDayKey]: {\n                 date: nextDayDate,\n                 assignments: duplicatedAssignments,\n             },\n         }));\n\n         // Optionally, navigate to the next day in day view\n         if (viewMode === 'day') {\n             setTargetDate(nextDayDate);\n             setCurrentDate(nextDayDate); // Ensure week navigator updates if view changes\n         }\n\n         toast({ title: 'Horario Duplicado', description: `El horario del ${format(sourceDate, 'dd/MM')} se duplicó al ${format(nextDayDate, 'dd/MM')}.` });\n     };\n\n      // --- Clear Day Handler ---\n     const handleConfirmClearDay = (dateToClear: Date) => {\n         setClearingDate(dateToClear);\n     };\n\n     const handleClearDay = () => {\n         if (!clearingDate) return;\n         const dateKey = format(clearingDate, 'yyyy-MM-dd');\n\n         setScheduleData(prevData => {\n             const updatedData = { ...prevData };\n             if (updatedData[dateKey]) {\n                 updatedData[dateKey] = {\n                     date: clearingDate,\n                     assignments: {} // Clear assignments for this day\n                 };\n             }\n             return updatedData;\n         });\n         setClearingDate(null); // Close dialog\n         toast({ title: 'Horario Limpiado', description: `Se eliminaron todos los turnos para el ${format(clearingDate, 'PPP', { locale: es })}.` });\n     };\n\n\n     const handleOpenTemplateModal = () => {\n        const currentDayKey = format(targetDate, 'yyyy-MM-dd');\n        const currentSchedule = scheduleData[currentDayKey];\n\n        if (!currentSchedule || Object.keys(currentSchedule.assignments).length === 0) {\n            toast({ title: 'Formación Vacía', description: `No hay turnos asignados hoy para guardar como formación.`, variant: 'destructive' });\n            return;\n        }\n        setTemplateName(''); // Reset template name\n        setIsTemplateModalOpen(true);\n     };\n\n     const handleSaveTemplate = () => {\n         if (!templateName.trim()) {\n             toast({ title: 'Nombre Inválido', description: 'Por favor ingresa un nombre para la formación.', variant: 'destructive' });\n             return;\n         }\n         const currentDayKey = format(targetDate, 'yyyy-MM-dd');\n         const currentAssignments = scheduleData[currentDayKey]?.assignments || {};\n\n         if (Object.keys(currentAssignments).length === 0) {\n             toast({ title: 'Formación Vacía', description: 'No hay turnos para guardar.', variant: 'destructive' });\n             setIsTemplateModalOpen(false);\n             return;\n         }\n\n         const newTemplate: ShiftTemplate = { // Add type annotation\n             id: uuidv4(),\n             name: templateName.trim(),\n             locationId: selectedLocationId, // Save with current location context\n             assignments: currentAssignments, // Save the current day's assignments\n             createdAt: new Date().toISOString(),\n         };\n\n         if (typeof window !== 'undefined') {\n            try {\n                const updatedTemplates = [...savedTemplates, newTemplate];\n                setSavedTemplates(updatedTemplates); // Update state\n                localStorage.setItem(SCHEDULE_TEMPLATES_KEY, JSON.stringify(updatedTemplates));\n                toast({ title: 'Formación Guardada', description: `La formación \"${newTemplate.name}\" se ha guardado.` });\n                setIsTemplateModalOpen(false);\n                setTemplateName('');\n            } catch (error) {\n                 console.error(\"Error saving template to localStorage:\", error);\n                 toast({ title: 'Error al Guardar', description: 'No se pudo guardar la formación.', variant: 'destructive' });\n            }\n         }\n\n     };\n\n     // --- Load Template Handler ---\n     const handleLoadTemplate = (templateId: string) => {\n         if (typeof window !== 'undefined') {\n             const templateToLoad = savedTemplates.find((t: any) => t.id === templateId);\n\n             if (!templateToLoad) {\n                 toast({ title: 'Formación no encontrada', variant: 'destructive' });\n                 return;\n             }\n             // Check if template matches current location\n             if (templateToLoad.locationId !== selectedLocationId) {\n                 toast({\n                     title: 'Sede Incorrecta',\n                     description: `La formación \"${templateToLoad.name}\" pertenece a otra sede. Cambia de sede para cargarla.`,\n                     variant: 'destructive',\n                 });\n                 return;\n             }\n\n\n             // Apply template to the current targetDate\n             const dateKey = format(targetDate, 'yyyy-MM-dd');\n             // Regenerate assignment IDs when loading a template\n             const loadedAssignments = JSON.parse(JSON.stringify(templateToLoad.assignments));\n             Object.keys(loadedAssignments).forEach(deptId => {\n                 loadedAssignments[deptId].forEach((assign: ShiftAssignment) => {\n                     assign.id = uuidv4();\n                 });\n             });\n\n             setScheduleData(prev => ({\n                 ...prev,\n                 [dateKey]: {\n                     date: targetDate,\n                     assignments: loadedAssignments,\n                 }\n             }));\n             toast({ title: 'Formación Cargada', description: `Se cargó la formación \"${templateToLoad.name}\" para hoy.` });\n             setIsConfigModalOpen(false); // Close config modal after loading\n         }\n     };\n\n\n  return (\n        <main className=\"container mx-auto p-4 md:p-8 max-w-full\"> {/* Use max-w-full for wider layout */}\n             <div className=\"flex justify-between items-center mb-6 gap-4 flex-wrap\"> {/* Added flex-wrap */}\n                 <h1 className=\"text-2xl font-bold text-foreground flex-shrink-0 mr-auto\">Planificador de Horarios</h1>\n                 <div className=\"flex items-center gap-4 order-1 md:order-none\"> {/* Center navigation */}\n                     <WeekNavigator\n                         currentDate={currentDate}\n                         onPreviousWeek={handlePreviousWeek}\n                         onNextWeek={handleNextWeek}\n                     />\n                 </div>\n                 <div className=\"flex items-center gap-2 flex-shrink-0 order-2 md:order-last\">\n                     {/* Configuration Button */}\n                     <Dialog open={isConfigModalOpen} onOpenChange={setIsConfigModalOpen}>\n                         <DialogTrigger asChild>\n                             <Button variant=\"outline\">\n                                <Settings className=\"mr-2 h-4 w-4\"/> Configuración\n                             </Button>\n                         </DialogTrigger>\n                         <DialogContent className=\"max-w-5xl max-h-[85vh] overflow-y-auto\"> {/* Even Wider modal, scrollable */}\n                              <DialogHeader>\n                                  <DialogTitle>Configuración General</DialogTitle>\n                                  <DialogDescription>Gestiona sedes, departamentos, colaboradores y formaciones guardadas.</DialogDescription>\n                              </DialogHeader>\n                              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 py-4\">\n                                  {/* Locations Column */}\n                                  <div className=\"space-y-4 border-r pr-4 md:border-r-0 md:pb-0\">\n                                      <div className=\"flex justify-between items-center\">\n                                         <h4 className=\"font-semibold text-foreground flex items-center gap-1\"><Building className=\"h-4 w-4 text-muted-foreground\"/>Sedes ({locations.length})</h4>\n                                         <Button variant=\"outline\" size=\"sm\" onClick={() => handleOpenLocationModal(null)} title=\"Agregar Sede\">\n                                             <Plus className=\"h-4 w-4\" />\n                                         </Button>\n                                      </div>\n                                      <ul className=\"space-y-2 text-sm\">\n                                          {locations.map((loc) => (\n                                              <li key={loc.id} className=\"flex items-center justify-between group py-1 border-b\">\n                                                  <span className={`truncate ${loc.id === selectedLocationId ? 'font-semibold text-primary' : 'text-muted-foreground'}`}>{loc.name}</span>\n                                                  <div className=\"opacity-0 group-hover:opacity-100 transition-opacity flex items-center space-x-1\">\n                                                      <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-muted-foreground hover:text-foreground\" onClick={() => handleOpenLocationModal(loc)} title=\"Editar Sede\"><Edit className=\"h-4 w-4\" /></Button>\n                                                      <AlertDialog>\n                                                          <AlertDialogTrigger asChild>\n                                                              <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-destructive hover:bg-destructive/10\" onClick={() => confirmDeleteItem('location', loc.id, loc.name)} title=\"Eliminar Sede\"><Trash2 className=\"h-4 w-4\" /></Button>\n                                                          </AlertDialogTrigger>\n                                                          {/* AlertDialogContent for Delete Confirmation is defined below */}\n                                                      </AlertDialog>\n                                                  </div>\n                                              </li>\n                                          ))}\n                                      </ul>\n                                  </div>\n                                  {/* Departments Column */}\n                                  <div className=\"space-y-4 border-r pr-4 md:border-r-0 md:pb-0\">\n                                       <div className=\"flex justify-between items-center\">\n                                          <h4 className=\"font-semibold text-foreground flex items-center gap-1\"><Building2 className=\"h-4 w-4 text-muted-foreground\"/>Departamentos ({departments.length})</h4>\n                                          <Button variant=\"outline\" size=\"sm\" onClick={() => handleOpenDepartmentModal(null)} title=\"Agregar Departamento\">\n                                              <Plus className=\"h-4 w-4\" />\n                                          </Button>\n                                       </div>\n                                      <ul className=\"space-y-2 text-sm\">\n                                          {departments.map((dep) => (\n                                              <li key={dep.id} className=\"flex items-center justify-between group py-1 border-b\">\n                                                  <span className=\"truncate text-muted-foreground\">{dep.name} <span className=\"text-xs italic\">({locations.find(l => l.id === dep.locationId)?.name || 'Sede inválida'})</span></span>\n                                                  <div className=\"opacity-0 group-hover:opacity-100 transition-opacity flex items-center space-x-1\">\n                                                      <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-muted-foreground hover:text-foreground\" onClick={() => handleOpenDepartmentModal(dep)} title=\"Editar Departamento\"><Edit className=\"h-4 w-4\" /></Button>\n                                                       <AlertDialog>\n                                                          <AlertDialogTrigger asChild>\n                                                               <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-destructive hover:bg-destructive/10\" onClick={() => confirmDeleteItem('department', dep.id, dep.name)} title=\"Eliminar Departamento\"><Trash2 className=\"h-4 w-4\" /></Button>\n                                                          </AlertDialogTrigger>\n                                                          {/* AlertDialogContent for Delete Confirmation is defined below */}\n                                                       </AlertDialog>\n                                                  </div>\n                                              </li>\n                                          ))}\n                                      </ul>\n                                  </div>\n                                   {/* Employees Column */}\n                                  <div className=\"space-y-4 border-r pr-4 md:border-r-0 md:pb-0\">\n                                      <div className=\"flex justify-between items-center\">\n                                          <h4 className=\"font-semibold text-foreground flex items-center gap-1\"><Users className=\"h-4 w-4 text-muted-foreground\"/>Colaboradores ({employees.length})</h4>\n                                          <Button variant=\"outline\" size=\"sm\" onClick={() => handleOpenEmployeeModal(null)} title=\"Agregar Colaborador\">\n                                              <Plus className=\"h-4 w-4\" />\n                                          </Button>\n                                      </div>\n                                       <ul className=\"space-y-2 text-sm\">\n                                           {employees.map((emp) => (\n                                               <li key={emp.id} className=\"flex items-center justify-between group py-1 border-b\">\n                                                   <span className=\"truncate text-muted-foreground\">{emp.name} <span className=\"text-xs italic\">({locations.find(l => l.id === emp.primaryLocationId)?.name || 'Sede inválida'})</span></span>\n                                                   <div className=\"opacity-0 group-hover:opacity-100 transition-opacity flex items-center space-x-1\">\n                                                       <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-muted-foreground hover:text-foreground\" onClick={() => handleOpenEmployeeModal(emp)} title=\"Editar Colaborador\"><Edit className=\"h-4 w-4\" /></Button>\n                                                        <AlertDialog>\n                                                           <AlertDialogTrigger asChild>\n                                                                <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-destructive hover:bg-destructive/10\" onClick={() => confirmDeleteItem('employee', emp.id, emp.name)} title=\"Eliminar Colaborador\"><Trash2 className=\"h-4 w-4\" /></Button>\n                                                           </AlertDialogTrigger>\n                                                           {/* AlertDialogContent for Delete Confirmation is defined below */}\n                                                        </AlertDialog>\n                                                   </div>\n                                               </li>\n                                           ))}\n                                       </ul>\n                                  </div>\n                                  {/* Saved Templates (Formaciones) Column */}\n                                  <div className=\"space-y-4\">\n                                      <div className=\"flex justify-between items-center\">\n                                          <h4 className=\"font-semibold text-foreground flex items-center gap-1\"><Library className=\"h-4 w-4 text-muted-foreground\"/>Formaciones Guardadas ({filteredTemplates.length})</h4>\n                                          {/* Add Template button moved to Actions Row */}\n                                      </div>\n                                       <ul className=\"space-y-2 text-sm\">\n                                            {filteredTemplates.length > 0 ? filteredTemplates.map((template) => (\n                                                <li key={template.id} className=\"flex items-center justify-between group py-1 border-b\">\n                                                    <span className=\"truncate text-muted-foreground\">{template.name}</span>\n                                                    <div className=\"opacity-0 group-hover:opacity-100 transition-opacity flex items-center space-x-1\">\n                                                        {/* Enable load button regardless of viewMode, but warn if not day view */}\n                                                        <Button\n                                                            variant=\"ghost\"\n                                                            size=\"icon\"\n                                                            className=\"h-6 w-6 text-muted-foreground hover:text-foreground\"\n                                                            onClick={() => {\n                                                                if (viewMode !== 'day') {\n                                                                     toast({title: 'Vista Inválida', description: 'Cambia a vista de \"Día\" para cargar una formación.', variant: 'destructive'});\n                                                                } else {\n                                                                    handleLoadTemplate(template.id);\n                                                                }\n                                                            }}\n                                                            title=\"Cargar Formación (Solo en vista de Día)\"\n                                                        >\n                                                            <Upload className=\"h-4 w-4\" />\n                                                        </Button>\n                                                        <AlertDialog>\n                                                            <AlertDialogTrigger asChild>\n                                                                <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-destructive hover:bg-destructive/10\" onClick={() => confirmDeleteItem('template', template.id, template.name)} title=\"Eliminar Formación\"><Trash2 className=\"h-4 w-4\" /></Button>\n                                                            </AlertDialogTrigger>\n                                                            {/* AlertDialogContent for Delete Confirmation is defined below */}\n                                                        </AlertDialog>\n                                                    </div>\n                                                </li>\n                                            )) : (\n                                                <p className=\"text-xs text-muted-foreground italic text-center pt-2\">No hay formaciones guardadas para esta sede.</p>\n                                            )}\n                                       </ul>\n                                  </div>\n                              </div>\n                              <DialogFooter>\n                                  <DialogClose asChild>\n                                      <Button variant=\"secondary\">Cerrar</Button>\n                                  </DialogClose>\n                              </DialogFooter>\n                         </DialogContent>\n                     </Dialog>\n\n                     {/* Day/Week View Toggle */}\n                     <Select value={viewMode} onValueChange={(value) => setViewMode(value as 'day' | 'week')}>\n                         <SelectTrigger className=\"w-[120px]\">\n                             <SelectValue placeholder=\"Vista\" />\n                         </SelectTrigger>\n                         <SelectContent>\n                             <SelectItem value=\"day\">Día</SelectItem>\n                             <SelectItem value=\"week\">Semana</SelectItem>\n                         </SelectContent>\n                     </Select>\n                     {/* Location Selector */}\n                     <div className=\"space-y-1\">\n                        {/* <Label htmlFor=\"location-select\" className=\"text-xs font-medium text-muted-foreground\">Sede</Label> */}\n                         <LocationSelector\n                            locations={locations}\n                            selectedLocationId={selectedLocationId}\n                            onLocationChange={handleLocationChange}\n                         />\n                     </div>\n                 </div>\n             </div>\n\n            {/* --- Actions Row --- */}\n            <div className=\"mb-6 flex flex-wrap justify-center gap-2\">\n                 <Button onClick={handleSaveSchedule} variant=\"outline\">\n                     <Save className=\"mr-2 h-4 w-4\" /> Guardar Horario\n                 </Button>\n                 {/* Conditionally render Duplicate Day button based on viewMode */}\n                 {viewMode === 'day' && (\n                    <Button onClick={() => handleDuplicateDay(targetDate)} variant=\"outline\">\n                        <CopyPlus className=\"mr-2 h-4 w-4\" /> Duplicar al Día Siguiente\n                    </Button>\n                 )}\n                 <Dialog open={isTemplateModalOpen} onOpenChange={setIsTemplateModalOpen}>\n                    <DialogTrigger asChild>\n                        <Button variant=\"outline\" onClick={handleOpenTemplateModal} disabled={viewMode !== 'day'}>\n                            <Download className=\"mr-2 h-4 w-4\" /> Guardar como Formación {/* Changed icon */}\n                        </Button>\n                    </DialogTrigger>\n                     <DialogContent>\n                         <DialogHeader>\n                             <DialogTitle>Guardar Formación</DialogTitle>\n                             <DialogDescription>Ingresa un nombre para esta formación (basada en el horario de hoy para {locations.find(l => l.id === selectedLocationId)?.name}).</DialogDescription>\n                         </DialogHeader>\n                         <div className=\"py-4\">\n                             <Label htmlFor=\"template-name\">Nombre Formación</Label>\n                             <Input\n                                id=\"template-name\"\n                                value={templateName}\n                                onChange={(e) => setTemplateName(e.target.value)}\n                                placeholder=\"Ej: Apertura Semana, Cierre FinDeSemana\"\n                             />\n                         </div>\n                         <DialogFooter>\n                            <DialogClose asChild>\n                              <Button variant=\"outline\">Cancelar</Button>\n                            </DialogClose>\n                             <Button onClick={handleSaveTemplate}>Guardar Formación</Button>\n                         </DialogFooter>\n                     </DialogContent>\n                 </Dialog>\n                 {/* Load Template Button (Placeholder/Example) - Actual load happens from config modal */}\n                  {/*\n                 <Button variant=\"outline\" disabled={viewMode !== 'day'}>\n                     <Upload className=\"mr-2 h-4 w-4\" /> Cargar Formación\n                 </Button>\n                  */}\n             </div>\n\n              {/* Main content grid */}\n             <DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\n                 <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-6 items-start\"> {/* Use 12 columns */}\n\n                     {/* --- Available Employees (Takes 2/12 width) --- */}\n                      <div className=\"lg:col-span-2 space-y-6\">\n                         {/* Available Employees Card */}\n                          <EmployeeList employees={availableEmployees} />\n                     </div>\n\n\n                     {/* --- Schedule View (Takes remaining 10/12 width) --- */}\n                     <div className=\"lg:col-span-10\"> {/* Schedule takes 10 columns */}\n                        <ScheduleView\n                            departments={filteredDepartments}\n                            scheduleData={scheduleData}\n                            onRemoveShift={handleRemoveShift}\n                            viewMode={viewMode}\n                            weekDates={weekDates} // Pass week dates\n                            currentDate={targetDate} // Pass target date for single day view or start of week\n                            onAssign={handleOpenShiftModal} // Pass handler for shift assignment via '+' button\n                            getScheduleForDate={getScheduleForDate} // Pass helper function\n                            onDuplicateDay={handleDuplicateDay} // Pass the duplicate handler\n                            onClearDay={handleConfirmClearDay} // Pass the clear handler trigger\n                        />\n                     </div>\n                 </div>\n             </DndContext>\n\n\n             {/* --- Modals --- */}\n\n             {/* Location Modal */}\n             <Dialog open={isLocationModalOpen} onOpenChange={setIsLocationModalOpen}>\n                  <DialogContent>\n                      <DialogHeader>\n                          <DialogTitle>{editingLocation ? 'Editar Sede' : 'Agregar Sede'}</DialogTitle>\n                      </DialogHeader>\n                      <div className=\"space-y-4 py-4\">\n                          <Label htmlFor=\"location-name\">Nombre</Label>\n                          <Input id=\"location-name\" value={locationFormData.name} onChange={(e) => setLocationFormData({ name: e.target.value })} />\n                      </div>\n                      <DialogFooter>\n                         <DialogClose asChild>\n                           <Button variant=\"outline\">Cancelar</Button>\n                         </DialogClose>\n                          <Button onClick={handleSaveLocation}>Guardar</Button>\n                      </DialogFooter>\n                  </DialogContent>\n             </Dialog>\n\n             {/* Department Modal */}\n            <Dialog open={isDepartmentModalOpen} onOpenChange={setIsDepartmentModalOpen}>\n                 <DialogContent>\n                     <DialogHeader>\n                         <DialogTitle>{editingDepartment ? 'Editar Departamento' : 'Agregar Departamento'}</DialogTitle>\n                     </DialogHeader>\n                     <div className=\"space-y-4 py-4\">\n                          <div>\n                             <Label htmlFor=\"department-name\">Nombre</Label>\n                             <Input id=\"department-name\" value={departmentFormData.name} onChange={(e) => setDepartmentFormData(prev => ({ ...prev, name: e.target.value }))} />\n                          </div>\n                         <div>\n                              <Label htmlFor=\"department-location\">Sede</Label>\n                              <Select value={departmentFormData.locationId} onValueChange={(value) => setDepartmentFormData(prev => ({ ...prev, locationId: value }))}>\n                                  <SelectTrigger id=\"department-location\">\n                                      <SelectValue placeholder=\"Selecciona sede\" />\n                                  </SelectTrigger>\n                                  <SelectContent>\n                                      {locations.map(loc => (\n                                          <SelectItem key={loc.id} value={loc.id}>{loc.name}</SelectItem>\n                                      ))}\n                                  </SelectContent>\n                              </Select>\n                         </div>\n                     </div>\n                     <DialogFooter>\n                          <DialogClose asChild>\n                            <Button variant=\"outline\">Cancelar</Button>\n                          </DialogClose>\n                         <Button onClick={handleSaveDepartment}>Guardar</Button>\n                     </DialogFooter>\n                 </DialogContent>\n            </Dialog>\n\n\n             {/* Employee Modal */}\n            <Dialog open={isEmployeeModalOpen} onOpenChange={setIsEmployeeModalOpen}>\n                <DialogContent>\n                    <DialogHeader>\n                        <DialogTitle>{editingEmployee ? 'Editar Colaborador' : 'Agregar Colaborador'}</DialogTitle>\n                    </DialogHeader>\n                     <div className=\"space-y-4 py-4\">\n                          <div>\n                             <Label htmlFor=\"employee-name\">Nombre</Label>\n                             <Input id=\"employee-name\" value={employeeFormData.name} onChange={(e) => setEmployeeFormData(prev => ({ ...prev, name: e.target.value }))} />\n                          </div>\n                         <div>\n                              <Label htmlFor=\"employee-location\">Sede Principal</Label>\n                              <Select value={employeeFormData.primaryLocationId} onValueChange={(value) => setEmployeeFormData(prev => ({ ...prev, primaryLocationId: value }))}>\n                                  <SelectTrigger id=\"employee-location\">\n                                      <SelectValue placeholder=\"Selecciona sede\" />\n                                  </SelectTrigger>\n                                  <SelectContent>\n                                      {locations.map(loc => (\n                                          <SelectItem key={loc.id} value={loc.id}>{loc.name}</SelectItem>\n                                      ))}\n                                  </SelectContent>\n                              </Select>\n                         </div>\n                     </div>\n                    <DialogFooter>\n                         <DialogClose asChild>\n                            <Button variant=\"outline\">Cancelar</Button>\n                          </DialogClose>\n                        <Button onClick={handleSaveEmployee}>Guardar</Button>\n                    </DialogFooter>\n                </DialogContent>\n            </Dialog>\n\n             {/* Shift Detail Modal */}\n             <ShiftDetailModal\n                 isOpen={isShiftModalOpen}\n                 onClose={() => setIsShiftModalOpen(false)}\n                 onSave={handleAddShift}\n                 employeeName={selectedEmployee?.name || ''}\n                 departmentName={departments.find(d => d.id === selectedDepartmentId)?.name || ''}\n                 initialDetails={editingShiftDetails?.details}\n             />\n\n             {/* Universal Delete Confirmation */}\n            <AlertDialog open={!!itemToDelete} onOpenChange={(open) => !open && setItemToDelete(null)}>\n                 <AlertDialogContent>\n                     <AlertDialogHeader>\n                         <AlertDialogTitle>¿Estás seguro?</AlertDialogTitle>\n                         <AlertDialogDescription>\n                             ¿Eliminar {itemToDelete?.type === 'location' ? 'Sede' : itemToDelete?.type === 'department' ? 'Departamento' : itemToDelete?.type === 'employee' ? 'Colaborador' : 'Formación'} \"{itemToDelete?.name}\"?\n                             {itemToDelete?.type === 'location' && \" Se eliminarán los departamentos, colaboradores y formaciones asociados.\"}\n                             {itemToDelete?.type === 'department' && \" Se eliminarán los turnos asociados en los horarios y formaciones.\"}\n                             {itemToDelete?.type === 'employee' && \" Se eliminarán los turnos asociados en los horarios y formaciones.\"}\n                             {itemToDelete?.type === 'template' && \" Se eliminará esta formación guardada.\"}\n                             <br/>Esta acción no se puede deshacer.\n                         </AlertDialogDescription>\n                     </AlertDialogHeader>\n                     <AlertDialogFooter>\n                         <AlertDialogCancel onClick={() => setItemToDelete(null)}>Cancelar</AlertDialogCancel>\n                         <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={handleDeleteItem}>Eliminar</AlertDialogAction>\n                     </AlertDialogFooter>\n                 </AlertDialogContent>\n            </AlertDialog>\n\n            {/* Clear Day Confirmation */}\n            <AlertDialog open={!!clearingDate} onOpenChange={(open) => !open && setClearingDate(null)}>\n                 <AlertDialogContent>\n                     <AlertDialogHeader>\n                         <AlertDialogTitle>¿Limpiar Turnos del Día?</AlertDialogTitle>\n                         <AlertDialogDescription>\n                            Esta acción eliminará todos los turnos asignados para el{' '}\n                            <strong>{clearingDate ? format(clearingDate, 'PPP', { locale: es }) : ''}</strong>. No se puede deshacer.\n                         </AlertDialogDescription>\n                     </AlertDialogHeader>\n                     <AlertDialogFooter>\n                         <AlertDialogCancel onClick={() => setClearingDate(null)}>Cancelar</AlertDialogCancel>\n                         <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={handleClearDay}>Limpiar Día</AlertDialogAction>\n                     </AlertDialogFooter>\n                 </AlertDialogContent>\n            </AlertDialog>\n\n\n        </main>\n    );\n}\n\n\n"],"names":[],"mappings":"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","debugId":null}}]
}