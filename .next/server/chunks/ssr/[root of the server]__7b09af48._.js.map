{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement, // Changed to HTMLParagraphElement for semantic correctness if it's a heading paragraph\n  React.HTMLAttributes<HTMLHeadingElement> // Kept HTMLHeadingElement for attribute compatibility, adjust if needed\n>(({ className, ...props }, ref) => (\n  <h3 // Changed from div to h3 for semantic meaning, adjust level (h2, h4, etc.) as appropriate\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight text-foreground\", // Changed from text-xl to text-lg and explicitly set text-foreground\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p // Changed from div to p for semantic correctness\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,KAAG,0FAA0F;;QAC5F,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qEACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,IAAE,iDAAiD;;QAClD,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        xs: \"h-7 rounded-md px-2 text-xs\", // Added extra small size\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\", // Changed text-base md:text-sm to just text-sm\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qXACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mTACA;QAED,GAAG,KAAK;;YAER;0BACD,8OAAC,kKAAA,CAAA,OAAoB;gBAAC,OAAO;0BAC3B,cAAA,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,qCAAuB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,iBAA8B;QAC7B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,gNAAA,CAAA,YAAS;YAAC,WAAU;;;;;;;;;;;AAGzB,qBAAqB,WAAW,GAAG,kKAAA,CAAA,iBAA8B,CAAC,WAAW;AAE7E,MAAM,uCAAyB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,mBAAgC;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oNAAA,CAAA,cAAW;YAAC,WAAU;;;;;;;;;;;AAG3B,uBAAuB,WAAW,GAChC,kKAAA,CAAA,mBAAgC,CAAC,WAAW;AAE9C,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACzD,8OAAC,kKAAA,CAAA,SAAsB;kBACrB,cAAA,8OAAC,kKAAA,CAAA,UAAuB;YACtB,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,ucACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,8OAAC;;;;;8BACD,8OAAC,kKAAA,CAAA,WAAwB;oBACvB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,8OAAC;;;;;;;;;;;;;;;;AAIP,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,kKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6NACA;QAED,GAAG,KAAK;;0BAET,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,kKAAA,CAAA,gBAA6B;8BAC5B,cAAA,8OAAC,oMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIrB,8OAAC,kKAAA,CAAA,WAAwB;0BAAE;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,kKAAA,CAAA,OAAoB,CAAC,WAAW;AAEzD,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,YAAyB;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG,kKAAA,CAAA,YAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 531, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger // Export DialogTrigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close // Export DialogClose\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose, // Export DialogClose\n  DialogTrigger, // Export DialogTrigger\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,mKAAwB,uBAAuB;AAA/C,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,mKAAsB,qBAAqB;AAA3C,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 665, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 706, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker, type DateFormatter, type DayModifiers, type Matcher } from \"react-day-picker\" // Added DayModifiers, Matcher\nimport type { Locale } from 'date-fns'; // Import Locale type\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\n// --- Added modifier props ---\nexport type CalendarProps = React.ComponentProps<typeof DayPicker> & {\n    locale?: Locale; // Add locale prop\n    modifiers?: DayModifiers; // Allow passing custom modifiers\n    modifiersClassNames?: Record<string, string>; // Allow passing class names for modifiers\n}\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  locale, // Destructure locale\n  modifiers, // Destructure modifiers\n  modifiersClassNames, // Destructure modifier class names\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      locale={locale} // Pass locale to DayPicker\n      modifiers={modifiers} // Pass modifiers\n      modifiersClassNames={{\n          // Adjusted holiday style: use primary text color, medium font weight, and primary border\n          holiday: 'text-primary font-medium border border-primary',\n          ...modifiersClassNames // Merge with any passed modifier classes\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAIA;AAAA;AACA,kRAAkG,8BAA8B;AAGhI;AACA;AARA;;;;;;AAiBA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,MAAM,EACN,SAAS,EACT,mBAAmB,EACnB,GAAG,OACW;IACd,qBACE,8OAAC,8JAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACA,QAAQ;QACR,WAAW;QACX,qBAAqB;YACjB,yFAAyF;YACzF,SAAS;YACT,GAAG,oBAAoB,yCAAyC;QACpE;QACC,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 793, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50', // Removed text-base and md:text-sm for consistency\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 821, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1019, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/LocationSelector.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport type { Location } from '@/types/schedule'; // Assuming type exists\n\ninterface LocationSelectorProps {\n  locations: Location[];\n  selectedLocationId?: string;\n  onLocationChange: (locationId: string) => void;\n}\n\nexport const LocationSelector: React.FC<LocationSelectorProps> = ({\n  locations,\n  selectedLocationId,\n  onLocationChange,\n}) => {\n  return (\n    <Select value={selectedLocationId} onValueChange={onLocationChange}>\n      <SelectTrigger id=\"location-select\">\n        <SelectValue placeholder=\"Selecciona una sede\" />\n      </SelectTrigger>\n      <SelectContent>\n        {locations.map((location) => (\n          <SelectItem key={location.id} value={location.id}>\n            {location.name}\n          </SelectItem>\n        ))}\n      </SelectContent>\n    </Select>\n  );\n};\n\n    "],"names":[],"mappings":";;;;AAEA;;;AASO,MAAM,mBAAoD,CAAC,EAChE,SAAS,EACT,kBAAkB,EAClB,gBAAgB,EACjB;IACC,qBACE,8OAAC,kIAAA,CAAA,SAAM;QAAC,OAAO;QAAoB,eAAe;;0BAChD,8OAAC,kIAAA,CAAA,gBAAa;gBAAC,IAAG;0BAChB,cAAA,8OAAC,kIAAA,CAAA,cAAW;oBAAC,aAAY;;;;;;;;;;;0BAE3B,8OAAC,kIAAA,CAAA,gBAAa;0BACX,UAAU,GAAG,CAAC,CAAC,yBACd,8OAAC,kIAAA,CAAA,aAAU;wBAAmB,OAAO,SAAS,EAAE;kCAC7C,SAAS,IAAI;uBADC,SAAS,EAAE;;;;;;;;;;;;;;;;AAOtC","debugId":null}},
    {"offset": {"line": 1072, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/DraggableEmployee.tsx"],"sourcesContent":["\n'use client'; // Add this directive\n\nimport React, { useState, useEffect } from 'react'; // Import useState and useEffect\nimport { useDraggable } from '@dnd-kit/core';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Button } from '@/components/ui/button';\nimport { GripVertical } from 'lucide-react';\nimport type { Employee } from '@/types/schedule'; // Assuming type exists\nimport { cn } from '@/lib/utils'; // Import cn\n\ninterface DraggableEmployeeProps {\n  employee: Employee;\n}\n\nexport const DraggableEmployee: React.FC<DraggableEmployeeProps> = ({ employee }) => {\n  const [isClient, setIsClient] = useState(false); // State to track client-side rendering\n\n  useEffect(() => {\n    setIsClient(true); // Set to true only on the client after initial render\n  }, []);\n\n  const { attributes, listeners, setNodeRef, transform, isDragging } = useDraggable({\n    id: employee.id, // Use employee ID as the draggable ID\n    data: { type: 'employee', employee }, // Pass employee data\n  });\n\n  const style = {\n    transform: CSS.Translate.toString(transform),\n    opacity: isDragging ? 0.5 : 1,\n    zIndex: isDragging ? 100 : 'auto', // Ensure dragged item is on top\n    cursor: isDragging ? 'grabbing' : 'grab',\n  };\n\n  // Render only on the client side to avoid hydration mismatch\n  if (!isClient) {\n    // Optionally render a placeholder or null during SSR and initial hydration\n    return (\n      <Button\n        variant=\"outline\"\n        className=\"w-full flex items-center justify-between p-2 bg-card hover:bg-muted/50 opacity-50 cursor-wait\" // Indicate loading/placeholder state\n        disabled\n      >\n        <span className=\"truncate\">{employee.name}</span> {/* Add truncate here */}\n        <GripVertical className=\"h-4 w-4 text-muted-foreground\" />\n      </Button>\n    );\n  }\n\n  return (\n    <Button\n      ref={setNodeRef}\n      style={style}\n      variant=\"outline\"\n      className=\"w-full flex items-center justify-between p-2 bg-card hover:bg-muted/50\"\n      {...listeners}\n      {...attributes}\n    >\n      <span className=\"truncate\">{employee.name}</span> {/* Add truncate here */}\n      <GripVertical className=\"h-4 w-4 text-muted-foreground\" />\n    </Button>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA,oVAAoD,gCAAgC;AACpF;AACA;AACA;AACA;AANA,cAAc,qBAAqB;;;;;;;AAc5B,MAAM,oBAAsD,CAAC,EAAE,QAAQ,EAAE;IAC9E,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,uCAAuC;IAExF,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,YAAY,OAAO,sDAAsD;IAC3E,GAAG,EAAE;IAEL,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,eAAY,AAAD,EAAE;QAChF,IAAI,SAAS,EAAE;QACf,MAAM;YAAE,MAAM;YAAY;QAAS;IACrC;IAEA,MAAM,QAAQ;QACZ,WAAW,qKAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClC,SAAS,aAAa,MAAM;QAC5B,QAAQ,aAAa,MAAM;QAC3B,QAAQ,aAAa,aAAa;IACpC;IAEA,6DAA6D;IAC7D,IAAI,CAAC,UAAU;QACb,2EAA2E;QAC3E,qBACE,8OAAC,kIAAA,CAAA,SAAM;YACL,SAAQ;YACR,WAAU,gGAAgG,qCAAqC;;YAC/I,QAAQ;;8BAER,8OAAC;oBAAK,WAAU;8BAAY,SAAS,IAAI;;;;;;gBAAQ;8BACjD,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAU;;;;;;;;;;;;IAG9B;IAEA,qBACE,8OAAC,kIAAA,CAAA,SAAM;QACL,KAAK;QACL,OAAO;QACP,SAAQ;QACR,WAAU;QACT,GAAG,SAAS;QACZ,GAAG,UAAU;;0BAEd,8OAAC;gBAAK,WAAU;0BAAY,SAAS,IAAI;;;;;;YAAQ;0BACjD,8OAAC,sNAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;;;;;;;AAG9B","debugId":null}},
    {"offset": {"line": 1175, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-mobile.tsx"],"sourcesContent":["import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,oBAAoB;AAEnB,SAAS;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAuB;IAEpE,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,MAAM,MAAM,OAAO,UAAU,CAAC,CAAC,YAAY,EAAE,oBAAoB,EAAE,GAAG,CAAC;QACvE,MAAM,WAAW;YACf,YAAY,OAAO,UAAU,GAAG;QAClC;QACA,IAAI,gBAAgB,CAAC,UAAU;QAC/B,YAAY,OAAO,UAAU,GAAG;QAChC,OAAO,IAAM,IAAI,mBAAmB,CAAC,UAAU;IACjD,GAAG,EAAE;IAEL,OAAO,CAAC,CAAC;AACX","debugId":null}},
    {"offset": {"line": 1200, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/EmployeeList.tsx"],"sourcesContent":["\n'use client'; // Add this directive\n\nimport React, { useState, useEffect } from 'react'; // Import useState and useEffect\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { DraggableEmployee } from './DraggableEmployee';\nimport type { Employee } from '@/types/schedule';\nimport { Users } from 'lucide-react';\nimport { useIsMobile } from '@/hooks/use-mobile'; // Import the hook\n\ninterface EmployeeListProps {\n  employees: Employee[];\n}\n\nexport const EmployeeList: React.FC<EmployeeListProps> = ({ employees }) => {\n  const [isClient, setIsClient] = useState(false);\n  const isMobile = useIsMobile(); // Use the hook\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  // Calculate count only on client\n  const employeeCount = isClient ? employees.length : 0;\n\n  // Do not render this component on mobile\n  if (isMobile) {\n    return null;\n  }\n\n  return (\n    <Card className=\"h-full\"> {/* Allow card to take full height */}\n      <CardHeader>\n         <CardTitle className=\"text-lg font-medium flex items-center gap-2 truncate\"> {/* Add truncate here */}\n             <Users className=\"h-5 w-5 text-muted-foreground flex-shrink-0\" /> {/* Prevent icon shrink */}\n             Colaboradores Disponibles ({employeeCount}) {/* Use client-side count */}\n         </CardTitle>\n      </CardHeader>\n       <CardContent className=\"space-y-3 overflow-y-auto max-h-[calc(100vh-200px)]\"> {/* Make content scrollable */}\n        {isClient ? ( // Only render the list on the client\n          employees.length > 0 ? (\n            employees.map((employee) => (\n              <DraggableEmployee key={employee.id} employee={employee} />\n            ))\n          ) : (\n            <p className=\"text-sm text-muted-foreground text-center pt-4 italic\">\n              No hay colaboradores para esta sede o ya están asignados.\n            </p>\n          )\n        ) : (\n          // Optionally show a loading state or placeholder during SSR/initial hydration\n          <p className=\"text-sm text-muted-foreground text-center pt-4 italic\">\n            Cargando colaboradores...\n          </p>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA,oVAAoD,gCAAgC;AACpF;AACA;AAEA;AACA,2NAAkD,kBAAkB;AAPpE,cAAc,qBAAqB;;;;;;;AAa5B,MAAM,eAA4C,CAAC,EAAE,SAAS,EAAE;IACrE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,WAAW,CAAA,GAAA,8HAAA,CAAA,cAAW,AAAD,KAAK,eAAe;IAE/C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,YAAY;IACd,GAAG,EAAE;IAEL,iCAAiC;IACjC,MAAM,gBAAgB,WAAW,UAAU,MAAM,GAAG;IAEpD,yCAAyC;IACzC,IAAI,UAAU;QACZ,OAAO;IACT;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;YAAS;0BACvB,8OAAC,gIAAA,CAAA,aAAU;0BACR,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;;wBAAuD;sCACxE,8OAAC,oMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;wBAAgD;wBAA4B;wBACjE;wBAAc;;;;;;;;;;;;0BAGhD,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;oBAAsD;oBAC3E,WACC,UAAU,MAAM,GAAG,IACjB,UAAU,GAAG,CAAC,CAAC,yBACb,8OAAC,mJAAA,CAAA,oBAAiB;4BAAmB,UAAU;2BAAvB,SAAS,EAAE;;;;kDAGrC,8OAAC;wBAAE,WAAU;kCAAwD;;;;;+BAKvE,8EAA8E;kCAC9E,8OAAC;wBAAE,WAAU;kCAAwD;;;;;;;;;;;;;;;;;;AAO/E","debugId":null}},
    {"offset": {"line": 1304, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/time-utils.ts"],"sourcesContent":["// src/lib/time-utils.ts\n\nimport { format as formatFns, parse as parseFns } from 'date-fns';\nimport { es } from 'date-fns/locale'; // Import Spanish locale if needed for 'am/pm'\n\n/**\n * Formats a time string (HH:mm) into 12-hour format (h:mm a).\n * Handles invalid input gracefully.\n *\n * @param timeString - The time string in \"HH:mm\" format.\n * @returns The formatted time string (e.g., \"8:00 AM\") or the original string if invalid.\n */\nexport function formatTo12Hour(timeString: string | undefined): string {\n  if (!timeString || !/^\\d{2}:\\d{2}$/.test(timeString)) {\n    return timeString || ''; // Return original or empty string if invalid/undefined\n  }\n\n  try {\n    // Create a dummy date object with the time to use date-fns formatting\n    const dummyDate = parseFns(timeString, 'HH:mm', new Date());\n    // Format using 'h:mm a' for 12-hour format with AM/PM\n    // Use locale 'es' if you want 'a. m.'/'p. m.' instead of AM/PM\n    return formatFns(dummyDate, 'h:mm a', { locale: es });\n  } catch (error) {\n    console.error(`Error formatting time string \"${timeString}\":`, error);\n    return timeString; // Return original string on error\n  }\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;AAExB;AAAA;AACA,oPAAsC,8CAA8C;;;AAS7E,SAAS,eAAe,UAA8B;IAC3D,IAAI,CAAC,cAAc,CAAC,gBAAgB,IAAI,CAAC,aAAa;QACpD,OAAO,cAAc,IAAI,uDAAuD;IAClF;IAEA,IAAI;QACF,sEAAsE;QACtE,MAAM,YAAY,CAAA,GAAA,qJAAA,CAAA,QAAQ,AAAD,EAAE,YAAY,SAAS,IAAI;QACpD,sDAAsD;QACtD,+DAA+D;QAC/D,OAAO,CAAA,GAAA,sJAAA,CAAA,SAAS,AAAD,EAAE,WAAW,UAAU;YAAE,QAAQ,4IAAA,CAAA,KAAE;QAAC;IACrD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,8BAA8B,EAAE,WAAW,EAAE,CAAC,EAAE;QAC/D,OAAO,YAAY,kCAAkC;IACvD;AACF","debugId":null}},
    {"offset": {"line": 1336, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ShiftCard.tsx"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Trash2, Clock, Coffee } from 'lucide-react'; // Added Coffee icon for break\nimport type { ShiftAssignment } from '@/types/schedule'; // Assuming type exists\nimport { cn } from '@/lib/utils'; // Import cn\nimport { formatTo12Hour } from '@/lib/time-utils'; // Import the formatting helper\n\ninterface ShiftCardProps {\n  assignment: ShiftAssignment;\n  onRemove: (event: React.MouseEvent<HTMLButtonElement>) => void; // Pass event to stop propagation\n  isCompact?: boolean; // Optional flag for compact view\n  onClick?: () => void; // Optional click handler for the card\n}\n\nexport const ShiftCard: React.FC<ShiftCardProps> = ({ assignment, onRemove, isCompact = false, onClick }) => {\n  // Add useSortable hook here if making items within a column sortable\n  // const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ id: assignment.id });\n  // const style = { transform: CSS.Transform.toString(transform), transition };\n\n  const handleRemoveClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.stopPropagation(); // Prevent triggering the card's onClick\n    onRemove(event);\n  };\n\n\n  return (\n     <Card\n        // ref={setNodeRef} // For sortable\n        // style={style} // For sortable\n        className={cn(\n            \"group bg-background border shadow-sm transition-colors duration-150 relative\", // Add 'group' class, transition, and relative positioning\n            isCompact ? \"border-none shadow-none bg-transparent p-0 hover:bg-accent/50 cursor-pointer\" : \"hover:border-primary\", // Remove borders/padding if compact, add hover background and cursor\n            onClick && \"cursor-pointer\" // Add cursor pointer if onClick is provided\n        )}\n        // {...attributes} // For sortable\n        // {...listeners} // For sortable - Be careful with listeners vs onClick\n        onClick={onClick} // Add onClick handler to the card\n     >\n       <CardContent className={cn(\n           \"flex items-start justify-between\", // Changed items-center to items-start\n           isCompact ? \"p-0.5\" : \"p-3\" // Smaller padding if compact\n       )}>\n         {/* Content Wrapper */}\n         <div className=\"flex-grow min-w-0 overflow-hidden mr-1 pr-4\"> {/* Add padding-right to prevent overlap with absolute button */}\n             <p className={cn(\n                 \"font-medium truncate\",\n                 isCompact ? \"text-xs\" : \"text-sm\" // Increased compact font size back to xs\n             )} title={assignment.employee.name}>{assignment.employee.name}</p>\n             <div className={cn( // Wrap times in a div for better spacing control\n                 \"text-muted-foreground flex flex-wrap items-center\", // Use flex-wrap and items-center\n                 isCompact ? \"text-[11px] gap-x-1 gap-y-0\" : \"text-xs gap-x-1.5 gap-y-0.5\" // Increased compact font size from 10px, allow wrapping\n             )}>\n                 {/* Shift Time */}\n                 <span className=\"flex items-center gap-0.5\">\n                     <Clock className={cn(\"flex-shrink-0\", isCompact ? \"h-2.5 w-2.5\" : \"h-3 w-3\")} /> {/* Slightly larger icon, prevent shrink */}\n                     {/* Format times using the helper */}\n                     <span className=\"whitespace-nowrap\">{formatTo12Hour(assignment.startTime)}-{formatTo12Hour(assignment.endTime)}</span> {/* Prevent time wrap */}\n                 </span>\n                 {/* Break Time - Show icon and text if included */}\n                 {assignment.includeBreak && assignment.breakStartTime && assignment.breakEndTime && (\n                    <span className={cn(\n                        \"flex items-center gap-0.5\",\n                        isCompact && \"text-blue-600 dark:text-blue-400\" // Optional: different color for break icon in compact\n                        )} title={`Descanso: ${formatTo12Hour(assignment.breakStartTime)}-${formatTo12Hour(assignment.breakEndTime)}`}>\n                        <Coffee className={cn(\"flex-shrink-0\", isCompact ? \"h-2.5 w-2.5\" : \"h-3 w-3\")} /> {/* Break icon */}\n                        {/* Show break times in compact view as well */}\n                        {/* Format break times using the helper */}\n                        <span className=\"whitespace-nowrap\">D: {formatTo12Hour(assignment.breakStartTime)}-{formatTo12Hour(assignment.breakEndTime)}</span>\n                    </span>\n                 )}\n             </div>\n         </div>\n          {/* Delete Button - Positioned absolute top-right */}\n         <Button\n             variant=\"ghost\"\n             size=\"icon\"\n             className={cn(\n                 \"absolute top-1 right-1\", // Position top-right\n                 \"text-destructive flex-shrink-0 opacity-0 group-hover:opacity-100 transition-opacity hover:bg-destructive/10\", // Hide by default, show on group hover, add transition, add red hover\n                 isCompact ? \"h-4 w-4\" : \"h-7 w-7\", // Smaller button if compact\n                 // Keep the button hidden on mobile/tablet for compact view unless hovering\n                 isCompact && \"group-hover:opacity-100 md:opacity-0\"\n             )}\n             onClick={handleRemoveClick} // Use the new handler\n             title=\"Eliminar turno\" // Add title for accessibility\n          >\n           <Trash2 className={cn(isCompact ? \"h-2.5 w-2.5\" : \"h-4 w-4\")} /> {/* Smaller icon if compact */}\n         </Button>\n       </CardContent>\n     </Card>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;AACA,6VAAsD,8BAA8B;AAApF;AAAA;AAEA,wMAAkC,YAAY;AAC9C,qNAAmD,+BAA+B;;;;;;;AAS3E,MAAM,YAAsC,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,KAAK,EAAE,OAAO,EAAE;IACtG,qEAAqE;IACrE,2GAA2G;IAC3G,8EAA8E;IAE9E,MAAM,oBAAoB,CAAC;QACzB,MAAM,eAAe,IAAI,wCAAwC;QACjE,SAAS;IACX;IAGA,qBACG,8OAAC,gIAAA,CAAA,OAAI;QACF,mCAAmC;QACnC,gCAAgC;QAChC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,gFACA,YAAY,iFAAiF,wBAC7F,WAAW,iBAAiB,4CAA4C;;QAE5E,kCAAkC;QAClC,wEAAwE;QACxE,SAAS;kBAEV,cAAA,8OAAC,gIAAA,CAAA,cAAW;YAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACrB,oCACA,YAAY,UAAU,MAAM,6BAA6B;;;8BAG3D,8OAAC;oBAAI,WAAU;;wBAA8C;sCACzD,8OAAC;4BAAE,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,wBACA,YAAY,YAAY,UAAU,yCAAyC;;4BAC5E,OAAO,WAAW,QAAQ,CAAC,IAAI;sCAAG,WAAW,QAAQ,CAAC,IAAI;;;;;;sCAC7D,8OAAC;4BAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACb,qDACA,YAAY,gCAAgC,8BAA8B,wDAAwD;;;8CAGlI,8OAAC;oCAAK,WAAU;;sDACZ,8OAAC,oMAAA,CAAA,QAAK;4CAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB,YAAY,gBAAgB;;;;;;wCAAc;sDAEhF,8OAAC;4CAAK,WAAU;;gDAAqB,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,SAAS;gDAAE;gDAAE,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,OAAO;;;;;;;wCAAS;;;;;;;gCAGzH,WAAW,YAAY,IAAI,WAAW,cAAc,IAAI,WAAW,YAAY,kBAC7E,8OAAC;oCAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACd,6BACA,aAAa,mCAAmC,sDAAsD;;oCACnG,OAAO,CAAC,UAAU,EAAE,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,cAAc,EAAE,CAAC,EAAE,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,YAAY,GAAG;;sDAC7G,8OAAC,sMAAA,CAAA,SAAM;4CAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB,YAAY,gBAAgB;;;;;;wCAAc;sDAGjF,8OAAC;4CAAK,WAAU;;gDAAoB;gDAAI,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,cAAc;gDAAE;gDAAE,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;8BAMzI,8OAAC,kIAAA,CAAA,SAAM;oBACH,SAAQ;oBACR,MAAK;oBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,0BACA,+GACA,YAAY,YAAY,WACxB,2EAA2E;oBAC3E,aAAa;oBAEjB,SAAS;oBACT,OAAM,iBAAiB,8BAA8B;;;sCAEvD,8OAAC,0MAAA,CAAA,SAAM;4BAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY,gBAAgB;;;;;;wBAAc;;;;;;;;;;;;;;;;;;AAK3E","debugId":null}},
    {"offset": {"line": 1506, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1530, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/DepartmentColumn.tsx"],"sourcesContent":["\n// src/components/schedule/DepartmentColumn.tsx\n'use client'; // Ensure client component\n\nimport React, { useState, useEffect } from 'react'; // Import useState and useEffect\nimport { useDroppable } from '@dnd-kit/core';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Plus, Trash2 } from 'lucide-react';\nimport type { Department, ShiftAssignment, Employee } from '@/types/schedule'; // Assuming types exist\nimport { ShiftCard } from './ShiftCard'; // Assuming ShiftCard component exists\nimport { format } from 'date-fns';\nimport { cn } from '@/lib/utils'; // Added cn\nimport { Skeleton } from '@/components/ui/skeleton'; // Import Skeleton for placeholder\n\ninterface DepartmentColumnProps {\n  department: Department;\n  assignments: ShiftAssignment[];\n  onRemoveShift: (departmentId: string, assignmentId: string) => void;\n  date: Date; // Date for this column\n  onAddShiftRequest: (departmentId: string, date: Date) => void; // New handler for '+' button click\n  onShiftClick: (assignment: ShiftAssignment, date: Date, departmentId: string) => void; // Handler for clicking a shift card\n  isWeekView?: boolean; // Flag for potentially different rendering in week view\n  isMobile: boolean; // Flag to detect mobile view\n}\n\nexport const DepartmentColumn: React.FC<DepartmentColumnProps> = ({\n  department,\n  assignments,\n  onRemoveShift,\n  date,\n  onAddShiftRequest, // Destructure new handler\n  onShiftClick, // Destructure shift click handler\n  isWeekView = false,\n  isMobile, // Destructure mobile flag\n}) => {\n  const [isClient, setIsClient] = useState(false); // State for client-side rendering\n\n  useEffect(() => {\n    setIsClient(true); // Set true after initial mount\n  }, []);\n\n  const dateKey = format(date, 'yyyy-MM-dd');\n  const { setNodeRef, isOver } = useDroppable({\n    id: `${department.id}_${dateKey}`, // Make ID unique per department and date\n    data: {\n        type: 'department',\n        id: department.id,\n        date: dateKey, // Pass date string in data\n    },\n    disabled: isMobile, // Disable dropping on mobile\n  });\n\n  const style = {\n    backgroundColor: isOver ? 'hsl(var(--accent)/0.1)' : undefined,\n    borderColor: isOver ? 'hsl(var(--accent))' : (isWeekView ? 'hsl(var(--border) / 0.3)' : undefined), // Lighter border in week view normal state\n    borderWidth: '1px',\n    borderStyle: isOver ? 'dashed' : 'solid',\n    minHeight: isWeekView ? '60px' : '200px',\n    transition: 'background-color 0.2s ease, border-color 0.2s ease',\n    borderRadius: isWeekView ? '0.375rem' : undefined,\n  };\n\n  // Render placeholder on server and initial client render\n  const renderPlaceholder = () => {\n    if (isWeekView) {\n      return <Skeleton className=\"h-6 w-full\" />; // Simple skeleton for week view\n    }\n    return (\n      <div className=\"p-3 space-y-2\">\n        <Skeleton className=\"h-8 w-full\" />\n        <Skeleton className=\"h-5 w-3/4\" />\n      </div>\n    );\n  };\n\n  // Actual content rendering logic\n  const renderContent = () => {\n    if (isWeekView) {\n      return (\n        <>\n          {assignments.length > 0 ? (\n            assignments.map((assignment) => (\n              <ShiftCard\n                key={assignment.id}\n                assignment={assignment}\n                onRemove={(e) => { e.stopPropagation(); onRemoveShift(department.id, assignment.id); }}\n                isCompact\n                onClick={() => onShiftClick(assignment, date, department.id)}\n              />\n            ))\n          ) : (\n             // Show '+' button prominently if empty in week/mobile view\n             isMobile && (\n                  <Button\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      className=\"h-6 w-6 p-0 text-muted-foreground hover:text-primary block mx-auto mt-1\"\n                      onClick={() => onAddShiftRequest(department.id, date)}\n                      title=\"Añadir Colaborador\"\n                  >\n                      <Plus className=\"h-4 w-4\" />\n                  </Button>\n             )\n          )}\n          {/* Show '+' button on mobile/tablet at the bottom of the card content even if not empty */}\n          {(isMobile) && (\n               <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"h-5 w-5 p-0 text-muted-foreground hover:text-primary block mx-auto mt-1\"\n                  onClick={() => onAddShiftRequest(department.id, date)}\n                  title=\"Añadir Colaborador\"\n              >\n                  <Plus className=\"h-3 w-3\" />\n              </Button>\n          )}\n        </>\n      );\n    } else {\n      // Full rendering for day view\n      return (\n        <>\n          {assignments.length > 0 ? (\n            assignments.map((assignment) => (\n              <ShiftCard\n                key={assignment.id}\n                assignment={assignment}\n                onRemove={(e) => { e.stopPropagation(); onRemoveShift(department.id, assignment.id); }}\n                onClick={() => onShiftClick(assignment, date, department.id)}\n              />\n            ))\n          ) : (\n            <p className=\"text-xs text-muted-foreground text-center pt-4 italic\">\n              Arrastra o usa '+'\n            </p>\n          )}\n        </>\n      );\n    }\n  };\n\n  // Main return logic\n  if (isWeekView) {\n    return (\n      <div ref={setNodeRef} style={style} className=\"p-1 space-y-0.5\">\n        {isClient ? renderContent() : renderPlaceholder()}\n      </div>\n    );\n  } else {\n    // Day view with Card structure\n    return (\n      <Card ref={setNodeRef} style={style} className=\"flex flex-col h-full shadow-sm\">\n        <CardHeader className=\"flex flex-row items-center justify-between pb-2 pt-4 px-4 border-b\">\n           <CardTitle className=\"text-base font-medium flex items-center gap-2 text-foreground\">\n               {department.icon && <department.icon className=\"h-3.5 w-3.5 text-muted-foreground\" />}\n               {department.name} ({isClient ? assignments.length : '...'}) {/* Show count only on client */}\n           </CardTitle>\n          <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"h-7 w-7\"\n              onClick={() => onAddShiftRequest(department.id, date)}\n              title=\"Añadir Colaborador\"\n          >\n            <Plus className=\"h-4 w-4\" />\n          </Button>\n        </CardHeader>\n        <CardContent className=\"flex-grow p-3 space-y-2 overflow-y-auto\">\n          {isClient ? renderContent() : renderPlaceholder()}\n        </CardContent>\n      </Card>\n    );\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1781, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ScheduleView.tsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react'; // Added useState, useEffect\nimport type { Department, ScheduleData, ShiftAssignment } from '@/types/schedule'; // Assuming types exist, Added ShiftAssignment\nimport { DepartmentColumn } from './DepartmentColumn'; // Assuming DepartmentColumn component exists\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card'; // Added CardFooter\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { Button } from '../ui/button';\nimport { Plus, Copy, Eraser } from 'lucide-react'; // Added Copy icon, Eraser\nimport type { Employee } from '@/types/schedule';\nimport { cn } from '@/lib/utils'; // Import cn\n\ninterface ScheduleViewProps {\n  departments: Department[];\n  scheduleData: { [dateKey: string]: ScheduleData }; // Now a map of dateKey to ScheduleData\n  onRemoveShift: (dateKey: string, departmentId: string, assignmentId: string) => void;\n  viewMode: 'day' | 'week';\n  weekDates: Date[];\n  currentDate: Date; // For day view\n  onAddShiftRequest: (departmentId: string, date: Date) => void; // New handler for '+' button click\n  onShiftClick: (assignment: ShiftAssignment, date: Date, departmentId: string) => void; // Handler for clicking a shift card\n  getScheduleForDate: (date: Date) => ScheduleData; // Function to get schedule for a specific date\n  onDuplicateDay: (sourceDate: Date) => void; // Add prop for duplicating a day's schedule\n  onClearDay: (dateToClear: Date) => void; // Add prop for clearing a day's schedule\n  isHoliday: (date: Date | null | undefined) => boolean; // Function to check if a date is a holiday\n  isMobile: boolean; // Flag to detect mobile view\n}\n\nexport const ScheduleView: React.FC<ScheduleViewProps> = ({\n    departments,\n    scheduleData,\n    onRemoveShift,\n    viewMode,\n    weekDates,\n    currentDate,\n    onAddShiftRequest, // Destructure new handler\n    onShiftClick, // Destructure shift click handler\n    getScheduleForDate, // Receive helper function\n    onDuplicateDay, // Receive duplicate handler\n    onClearDay, // Receive clear handler\n    isHoliday, // Receive holiday check function\n    isMobile, // Receive mobile flag\n}) => {\n  const [isClient, setIsClient] = useState(false); // State for client-side rendering check\n\n  useEffect(() => {\n    setIsClient(true); // Set to true after initial mount\n  }, []);\n\n    if (viewMode === 'day') {\n         // --- Day View ---\n        const daySchedule = getScheduleForDate(currentDate);\n        const dynamicGridClass = `grid-cols-1 sm:grid-cols-2 lg:grid-cols-${Math.min(departments.length, 4)} xl:grid-cols-${Math.min(departments.length, 5)}`; // Adjust as needed\n        const isCurrentHoliday = isHoliday(currentDate);\n\n        return (\n            <Card className={cn(\n                \"shadow-md bg-card border\",\n                isCurrentHoliday ? \"border-primary\" : \"border-border\" // Highlight border if holiday\n            )}>\n                <CardHeader className=\"border-b\">\n                    <CardTitle className={cn(\n                        \"text-lg font-medium\",\n                        isCurrentHoliday ? \"text-primary font-semibold\" : \"text-foreground\" // Highlight text if holiday\n                    )}>\n                        Horario para el {format(currentDate, 'PPPP', { locale: es })}\n                        {isCurrentHoliday && <span className=\"text-xs font-normal ml-2\">(Festivo)</span>}\n                    </CardTitle>\n                    {/* Add description or other info if needed */}\n                </CardHeader>\n                <CardContent className=\"p-4\">\n                    {departments.length > 0 ? (\n                        <div className={`grid ${dynamicGridClass} gap-4`}>\n                            {departments.map((department) => (\n                                <DepartmentColumn\n                                    key={department.id}\n                                    department={department}\n                                    assignments={daySchedule.assignments[department.id] || []}\n                                    onRemoveShift={(deptId, assignId) => onRemoveShift(format(currentDate, 'yyyy-MM-dd'), deptId, assignId)}\n                                    date={currentDate} // Pass the date\n                                    onAddShiftRequest={onAddShiftRequest} // Pass new assign handler\n                                    onShiftClick={onShiftClick} // Pass shift click handler\n                                    isMobile={isMobile} // Pass mobile flag\n                                />\n                            ))}\n                        </div>\n                    ) : (\n                         <p className=\"text-center text-muted-foreground italic py-4\">\n                             No hay departamentos definidos para esta sede. Agrega departamentos en la sección de configuración.\n                         </p>\n                    )}\n                </CardContent>\n                 <CardFooter className=\"flex justify-end gap-2 border-t pt-4\">\n                     {/* Duplicate Button */}\n                     <Button\n                         variant=\"outline\"\n                         size=\"sm\"\n                         onClick={() => onDuplicateDay(currentDate)}\n                         title=\"Duplicar horario al día siguiente\"\n                         // Disable if it's the last day of the week maybe? Or handle in the function itself.\n                     >\n                         <Copy className=\"mr-2 h-4 w-4\" /> Duplicar Día Sig.\n                     </Button>\n                      {/* Clear Day Button */}\n                     <Button\n                         variant=\"destructive\"\n                         size=\"sm\"\n                         onClick={() => onClearDay(currentDate)} // Trigger clear confirmation\n                         title=\"Limpiar turnos del día\"\n                         disabled={Object.values(daySchedule.assignments).flat().length === 0} // Disable if no assignments\n                     >\n                         <Eraser className=\"mr-2 h-4 w-4\" /> Limpiar Día\n                     </Button>\n                 </CardFooter>\n            </Card>\n        );\n    } else {\n         // --- Week View ---\n         const weekViewContent = (\n            <div className=\"grid grid-cols-7 gap-1 min-w-[1000px]\"> {/* Reduced gap, ensure min-width */}\n              {weekDates.map((date, index) => {\n                  const daySchedule = getScheduleForDate(date);\n                  const dateKey = format(date, 'yyyy-MM-dd');\n                   // Calculate count only on client to avoid hydration mismatch\n                   const totalAssignmentsForDay = isClient\n                       ? Object.values(daySchedule.assignments).reduce((sum, deptAssignments) => sum + deptAssignments.length, 0)\n                       : 0; // Show 0 during SSR and initial render\n                  const isLastDayOfWeek = index === weekDates.length - 1;\n                  const isCurrentHoliday = isHoliday(date);\n\n                  // Card represents a single day column in the week view\n                  return (\n                      <div key={dateKey} className=\"flex flex-col h-full\"> {/* Ensure day column takes height */}\n                          <Card className={cn(\n                              \"shadow-sm bg-card border flex flex-col flex-grow\", // Use flex-grow\n                              isCurrentHoliday ? \"border-primary border-2\" : \"border-border/50\" // Thicker primary border for holiday\n                          )}>\n                              <CardHeader className={cn(\n                                  \"pb-2 pt-3 px-2 border-b relative\", // Reduced padding\n                                  isCurrentHoliday ? \"border-primary\" : \"border-border/50\" // Match border color\n                              )}>\n                                  <CardTitle className={cn(\n                                      \"text-xs font-semibold text-center whitespace-nowrap\", // Adjusted size to xs, kept font-semibold\n                                      isCurrentHoliday ? \"text-primary\" : \"text-foreground\" // Highlight title text with primary color\n                                  )}>\n                                      {format(date, 'EEE d', { locale: es })} {/* Short day name, date */}\n                                  </CardTitle>\n                                  <CardDescription className=\"text-[10px] text-muted-foreground text-center\"> {/* Extra small text */}\n                                      {format(date, 'MMM', { locale: es })} ({totalAssignmentsForDay})\n                                      {isCurrentHoliday && <span className=\"text-primary block font-medium\">Festivo</span>} {/* Use primary color for Festivo text */}\n                                  </CardDescription>\n                                  {/* Action Buttons: Duplicate and Clear */}\n                                  <div className=\"absolute top-0.5 right-0.5 flex flex-col gap-0\"> {/* Reduced gap, adjusted position */}\n                                      {!isLastDayOfWeek && (\n                                          <Button\n                                              variant=\"ghost\"\n                                              size=\"icon\"\n                                              className=\"h-4 w-4 p-0 text-muted-foreground hover:text-foreground opacity-50 hover:opacity-100\"\n                                              onClick={() => onDuplicateDay(date)}\n                                              title=\"Duplicar al día siguiente\"\n                                          >\n                                              <Copy className=\"h-2.5 w-2.5\" /> {/* Smaller icon */}\n                                          </Button>\n                                      )}\n                                      <Button\n                                          variant=\"ghost\"\n                                          size=\"icon\"\n                                          className=\"h-4 w-4 p-0 text-destructive hover:text-destructive opacity-50 hover:opacity-100\"\n                                          onClick={() => onClearDay(date)}\n                                          title=\"Limpiar turnos del día\"\n                                          disabled={totalAssignmentsForDay === 0}\n                                      >\n                                          <Eraser className=\"h-2.5 w-2.5\" /> {/* Smaller icon */}\n                                      </Button>\n                                  </div>\n                              </CardHeader>\n                              <CardContent className=\"p-1 space-y-1 flex-grow overflow-y-auto\"> {/* Reduced padding, smaller space */}\n                                  {departments.length > 0 ? (\n                                      departments.map((department) => (\n                                          <div key={department.id} className=\"border rounded-sm p-1 bg-muted/10 relative\"> {/* Reduced padding/rounding, lighter bg */}\n                                              <div className=\"flex justify-between items-center mb-0.5\"> {/* Reduced margin */}\n                                                  <h4 className=\"text-[10px] font-semibold text-foreground flex items-center gap-0.5 whitespace-nowrap overflow-hidden text-ellipsis pr-4\"> {/* Extra small, reduced gap/padding */}\n                                                       {department.icon && <department.icon className=\"h-2.5 w-2.5 text-muted-foreground\" />} {/* Smaller icon */}\n                                                       <span className=\"overflow-hidden text-ellipsis\">{department.name}</span>\n                                                  </h4>\n                                              </div>\n                                              <DepartmentColumn\n                                                  department={department}\n                                                  assignments={daySchedule.assignments[department.id] || []}\n                                                  onRemoveShift={(deptId, assignId) => onRemoveShift(dateKey, deptId, assignId)}\n                                                  isWeekView\n                                                  date={date}\n                                                  onAddShiftRequest={onAddShiftRequest}\n                                                  onShiftClick={onShiftClick}\n                                                  isMobile={isMobile} // Pass mobile flag\n                                              />\n                                          </div>\n                                      ))\n                                   ) : (\n                                        <p className=\"text-center text-[10px] text-muted-foreground italic pt-1\"> {/* Smaller text/padding */}\n                                            No hay deptos.\n                                        </p>\n                                   )}\n                              </CardContent>\n                          </Card>\n                      </div>\n                  );\n              })}\n            </div>\n          );\n\n         // Return the scrollable container wrapping the week view content\n         return weekViewContent;\n    }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2169, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,kKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2205, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ShiftDetailModal.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch'; // Import Switch\nimport { Save, X, PencilLine } from 'lucide-react'; // Added PencilLine\nimport type { ShiftDetails } from '@/types/schedule'; // Assuming type exists\nimport { useToast } from '@/hooks/use-toast';\nimport { cn } from '@/lib/utils'; // Import cn\nimport { formatTo12Hour } from '@/lib/time-utils'; // Import the time formatting helper\n\ninterface ShiftDetailModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (details: ShiftDetails) => void;\n  employeeName: string;\n  departmentName: string;\n  initialDetails?: Partial<ShiftDetails>; // For editing existing shifts\n  isEditing?: boolean; // Flag to indicate if editing\n}\n\n// Basic time validation (HH:MM format)\nconst timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\nconst timeErrorMessage = 'Formato HH:MM inválido.';\n\nexport const ShiftDetailModal: React.FC<ShiftDetailModalProps> = ({\n  isOpen,\n  onClose,\n  onSave,\n  employeeName,\n  departmentName,\n  initialDetails,\n  isEditing = false, // Default to false (adding)\n}) => {\n  const { toast } = useToast();\n  const [startTime, setStartTime] = useState(initialDetails?.startTime || '08:00');\n  const [endTime, setEndTime] = useState(initialDetails?.endTime || '17:00');\n  const [includeBreak, setIncludeBreak] = useState(initialDetails?.includeBreak || false); // Default to false\n  const [breakStartTime, setBreakStartTime] = useState(initialDetails?.breakStartTime || '15:00'); // Default 3 PM\n  const [breakEndTime, setBreakEndTime] = useState(initialDetails?.breakEndTime || '18:00'); // Default 6 PM\n\n  const [startTimeError, setStartTimeError] = useState<string | null>(null);\n  const [endTimeError, setEndTimeError] = useState<string | null>(null);\n  const [breakStartTimeError, setBreakStartTimeError] = useState<string | null>(null);\n  const [breakEndTimeError, setBreakEndTimeError] = useState<string | null>(null);\n\n  // Reset state when modal opens or initial details change\n  useEffect(() => {\n    if (isOpen) {\n        const defaultStartTime = '08:00';\n        const defaultEndTime = '17:00';\n        const defaultBreakStartTime = '15:00';\n        const defaultBreakEndTime = '18:00';\n\n        setStartTime(initialDetails?.startTime || defaultStartTime);\n        setEndTime(initialDetails?.endTime || defaultEndTime);\n        setIncludeBreak(initialDetails?.includeBreak || false);\n        setBreakStartTime(initialDetails?.breakStartTime || defaultBreakStartTime);\n        setBreakEndTime(initialDetails?.breakEndTime || defaultBreakEndTime);\n        setStartTimeError(null);\n        setEndTimeError(null);\n        setBreakStartTimeError(null);\n        setBreakEndTimeError(null);\n    }\n   // Dependency includes initialDetails to reset when editing a different shift\n   // isEditing is included to ensure reset happens correctly when switching between add/edit modes\n  }, [isOpen, initialDetails, isEditing]);\n\n\n  const handleSaveClick = () => {\n    let isValid = true;\n    setStartTimeError(null);\n    setEndTimeError(null);\n    setBreakStartTimeError(null);\n    setBreakEndTimeError(null);\n\n    if (!timeRegex.test(startTime)) {\n      setStartTimeError(timeErrorMessage);\n      isValid = false;\n    }\n    if (!timeRegex.test(endTime)) {\n      setEndTimeError(timeErrorMessage);\n      isValid = false;\n    }\n\n    // Validate break times only if break is included\n    if (includeBreak) {\n        if (!breakStartTime || !timeRegex.test(breakStartTime)) {\n            setBreakStartTimeError(timeErrorMessage);\n            isValid = false;\n        }\n        if (!breakEndTime || !timeRegex.test(breakEndTime)) {\n            setBreakEndTimeError(timeErrorMessage);\n            isValid = false;\n        }\n\n        // Check break end time is after break start time\n        if (isValid && breakStartTime && breakEndTime && breakStartTime >= breakEndTime) {\n             setBreakEndTimeError('Hora fin descanso debe ser posterior a hora inicio.');\n             isValid = false;\n             // Note: Simple comparison works for HH:MM within the same day.\n             // More complex logic needed if breaks can cross midnight (unlikely scenario).\n        }\n    }\n\n\n    // Basic check: end time should be after start time (doesn't handle overnight yet)\n    if (isValid && startTime >= endTime) {\n        // Allow overnight shifts for simplicity, maybe add a warning or flag later\n        // setEndTimeError('Hora de fin debe ser posterior a la hora de inicio.');\n        // isValid = false;\n    }\n\n\n    if (isValid) {\n      onSave({\n        startTime,\n        endTime,\n        includeBreak,\n        breakStartTime: includeBreak ? breakStartTime : undefined, // Only save if included\n        breakEndTime: includeBreak ? breakEndTime : undefined,     // Only save if included\n      });\n    } else {\n        toast({\n            title: \"Error de Validación\",\n            description: \"Por favor corrige los campos marcados.\",\n            variant: \"destructive\",\n        });\n    }\n  };\n\n  const title = isEditing ? 'Editar Detalles del Turno' : 'Detalles del Turno';\n  const saveButtonText = isEditing ? 'Guardar Cambios' : 'Guardar Turno';\n  const SaveIcon = isEditing ? PencilLine : Save; // Use different icon for editing\n\n  // Helper function to handle input changes and keep 24-hour format internally\n  const handleTimeChange = (setter: React.Dispatch<React.SetStateAction<string>>, value: string) => {\n    if (timeRegex.test(value)) {\n      setter(value);\n    } else {\n      // Handle potential partial input or conversion if needed\n      // For now, just update if valid 24-hour format\n      setter(value); // Allow intermediate typing\n    }\n  };\n\n\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>{title}</DialogTitle>\n          <DialogDescription>\n            {isEditing ? 'Modificando' : 'Asignando'} a <strong>{employeeName}</strong> en <strong>{departmentName}</strong>.\n            Ingresa las horas y el descanso.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"grid gap-4 py-4\">\n          {/* Start Time */}\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"start-time\" className=\"text-right\">\n              Inicio Turno\n            </Label>\n             <Input\n                id=\"start-time\"\n                type=\"time\" // Use type=\"time\" for the native picker\n                value={startTime} // Bind directly to the 24-hour state\n                onChange={(e) => handleTimeChange(setStartTime, e.target.value)}\n                className={cn(\"col-span-3\", startTimeError && 'border-destructive ring-destructive')}\n            />\n             {startTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{startTimeError}</p>}\n          </div>\n          {/* End Time */}\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"end-time\" className=\"text-right\">\n              Fin Turno\n            </Label>\n             <Input\n                id=\"end-time\"\n                type=\"time\"\n                value={endTime}\n                onChange={(e) => handleTimeChange(setEndTime, e.target.value)}\n                className={cn(\"col-span-3\", endTimeError && 'border-destructive ring-destructive')}\n             />\n             {endTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{endTimeError}</p>}\n          </div>\n\n          {/* Include Break Switch */}\n          <div className=\"flex items-center justify-between space-x-2 pt-2 border-t mt-2\">\n             <Label htmlFor=\"include-break\" className=\"font-medium\">\n                Incluir Descanso\n             </Label>\n             <Switch\n                id=\"include-break\"\n                checked={includeBreak}\n                onCheckedChange={setIncludeBreak}\n             />\n          </div>\n\n\n          {/* Conditional Break Time Inputs */}\n          {includeBreak && (\n            <>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"break-start-time\" className=\"text-right\">\n                  Inicio Descanso\n                </Label>\n                <Input\n                  id=\"break-start-time\"\n                  type=\"time\"\n                  value={breakStartTime}\n                  onChange={(e) => handleTimeChange(setBreakStartTime, e.target.value)}\n                  className={cn(\"col-span-3\", breakStartTimeError && 'border-destructive ring-destructive')}\n                />\n                 {breakStartTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{breakStartTimeError}</p>}\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"break-end-time\" className=\"text-right\">\n                  Fin Descanso\n                </Label>\n                <Input\n                  id=\"break-end-time\"\n                  type=\"time\"\n                  value={breakEndTime}\n                  onChange={(e) => handleTimeChange(setBreakEndTime, e.target.value)}\n                  className={cn(\"col-span-3\", breakEndTimeError && 'border-destructive ring-destructive')}\n                />\n                 {breakEndTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{breakEndTimeError}</p>}\n              </div>\n            </>\n          )}\n\n        </div>\n        <DialogFooter>\n          <DialogClose asChild>\n            <Button type=\"button\" variant=\"outline\">\n              <X className=\"mr-2 h-4 w-4\" /> Cancelar\n            </Button>\n          </DialogClose>\n          <Button type=\"button\" onClick={handleSaveClick} variant=\"default\">\n            <SaveIcon className=\"mr-2 h-4 w-4\" /> {saveButtonText}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2643, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/WeekNavigator.tsx"],"sourcesContent":["// src/components/schedule/WeekNavigator.tsx\n'use client';\n\nimport React from 'react';\nimport { Button } from '@/components/ui/button';\nimport { ChevronsLeft, ChevronsRight } from 'lucide-react';\nimport { format, startOfWeek, endOfWeek } from 'date-fns';\nimport { es } from 'date-fns/locale'; // Import Spanish locale\nimport { Card } from '@/components/ui/card'; // Import Card for background\n\ninterface WeekNavigatorProps {\n  currentDate: Date;\n  onPreviousWeek: () => void;\n  onNextWeek: () => void;\n}\n\nexport const WeekNavigator: React.FC<WeekNavigatorProps> = ({\n  currentDate,\n  onPreviousWeek,\n  onNextWeek,\n}) => {\n  const weekStart = startOfWeek(currentDate, { weekStartsOn: 1 }); // Start on Monday\n  const weekEnd = endOfWeek(currentDate, { weekStartsOn: 1 });\n\n  // Format the week range string, handling year change within the week\n  const startYear = format(weekStart, 'yyyy');\n  const endYear = format(weekEnd, 'yyyy');\n  const weekRange = `Semana del ${format(weekStart, 'd MMM', { locale: es })}${startYear !== endYear ? ' ' + startYear : ''} al ${format(weekEnd, 'd MMM yyyy', { locale: es })}`;\n\n  return (\n    <Card className=\"flex items-center justify-center gap-2 px-3 py-2 bg-card shadow-sm border border-border rounded-lg\"> {/* Wrap in Card, add padding */}\n      <Button variant=\"ghost\" size=\"icon\" onClick={onPreviousWeek} className=\"h-9 w-9 text-muted-foreground hover:text-primary\"> {/* Larger button, ghost variant */}\n        <ChevronsLeft className=\"h-5 w-5\" /> {/* Larger icon */}\n        <span className=\"sr-only\">Semana Anterior</span>\n      </Button>\n      <span className=\"text-base font-semibold text-foreground text-center min-w-[220px]\"> {/* Larger, bolder text */}\n        {weekRange}\n      </span>\n      <Button variant=\"ghost\" size=\"icon\" onClick={onNextWeek} className=\"h-9 w-9 text-muted-foreground hover:text-primary\"> {/* Larger button, ghost variant */}\n        <ChevronsRight className=\"h-5 w-5\" /> {/* Larger icon */}\n        <span className=\"sr-only\">Semana Siguiente</span>\n      </Button>\n    </Card>\n  );\n};\n"],"names":[],"mappings":"AAAA,4CAA4C;;;;;AAI5C;AACA;AAAA;AACA;AAAA;AAAA;AACA,oPAAsC,wBAAwB;AAC9D,+NAA6C,6BAA6B;AAP1E;;;;;;;AAeO,MAAM,gBAA8C,CAAC,EAC1D,WAAW,EACX,cAAc,EACd,UAAU,EACX;IACC,MAAM,YAAY,CAAA,GAAA,2IAAA,CAAA,cAAW,AAAD,EAAE,aAAa;QAAE,cAAc;IAAE,IAAI,kBAAkB;IACnF,MAAM,UAAU,CAAA,GAAA,yIAAA,CAAA,YAAS,AAAD,EAAE,aAAa;QAAE,cAAc;IAAE;IAEzD,qEAAqE;IACrE,MAAM,YAAY,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,WAAW;IACpC,MAAM,UAAU,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,SAAS;IAChC,MAAM,YAAY,CAAC,WAAW,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,WAAW,SAAS;QAAE,QAAQ,4IAAA,CAAA,KAAE;IAAC,KAAK,cAAc,UAAU,MAAM,YAAY,GAAG,IAAI,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,SAAS,cAAc;QAAE,QAAQ,4IAAA,CAAA,KAAE;IAAC,IAAI;IAE/K,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;YAAqG;0BACnH,8OAAC,kIAAA,CAAA,SAAM;gBAAC,SAAQ;gBAAQ,MAAK;gBAAO,SAAS;gBAAgB,WAAU;;oBAAmD;kCACxH,8OAAC,sNAAA,CAAA,eAAY;wBAAC,WAAU;;;;;;oBAAY;kCACpC,8OAAC;wBAAK,WAAU;kCAAU;;;;;;;;;;;;0BAE5B,8OAAC;gBAAK,WAAU;;oBAAoE;oBACjF;;;;;;;0BAEH,8OAAC,kIAAA,CAAA,SAAM;gBAAC,SAAQ;gBAAQ,MAAK;gBAAO,SAAS;gBAAY,WAAU;;oBAAmD;kCACpH,8OAAC,wNAAA,CAAA,gBAAa;wBAAC,WAAU;;;;;;oBAAY;kCACrC,8OAAC;wBAAK,WAAU;kCAAU;;;;;;;;;;;;;;;;;;AAIlC","debugId":null}},
    {"offset": {"line": 2764, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2832, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/EmployeeSelectionModal.tsx"],"sourcesContent":["// src/components/schedule/EmployeeSelectionModal.tsx\n'use client';\n\nimport React from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogClose,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { ScrollArea } from '@/components/ui/scroll-area'; // Use ScrollArea for potentially long lists\nimport type { Employee } from '@/types/schedule';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { X, UserPlus } from 'lucide-react';\n\ninterface EmployeeSelectionModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  employees: Employee[];\n  onSelectEmployee: (employee: Employee) => void;\n  departmentName: string;\n  date: Date;\n}\n\nexport const EmployeeSelectionModal: React.FC<EmployeeSelectionModalProps> = ({\n  isOpen,\n  onClose,\n  employees,\n  onSelectEmployee,\n  departmentName,\n  date,\n}) => {\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>Seleccionar Colaborador</DialogTitle>\n          <DialogDescription>\n            Elige un colaborador disponible para asignar a <strong>{departmentName}</strong> el{' '}\n            <strong>{format(date, 'PPP', { locale: es })}</strong>.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"py-4\">\n           {employees.length > 0 ? (\n             <ScrollArea className=\"h-[300px] pr-4\"> {/* Add max height and scrolling */}\n                <div className=\"space-y-2\">\n                  {employees.map((employee) => (\n                    <Button\n                      key={employee.id}\n                      variant=\"outline\"\n                      className=\"w-full justify-start\"\n                      onClick={() => onSelectEmployee(employee)}\n                    >\n                       <UserPlus className=\"mr-2 h-4 w-4\" /> {employee.name}\n                    </Button>\n                  ))}\n                </div>\n             </ScrollArea>\n           ) : (\n             <p className=\"text-center text-muted-foreground italic\">\n               No hay colaboradores disponibles para asignar en esta fecha/departamento.\n             </p>\n           )}\n        </div>\n         <DialogFooter>\n             <DialogClose asChild>\n                 <Button type=\"button\" variant=\"outline\">\n                    <X className=\"mr-2 h-4 w-4\" /> Cancelar\n                 </Button>\n             </DialogClose>\n         </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n"],"names":[],"mappings":"AAAA,qDAAqD;;;;;AAIrD;AASA;AACA,gPAA0D,4CAA4C;AAEtG;AACA;AACA;AAAA;AAjBA;;;;;;;;AA4BO,MAAM,yBAAgE,CAAC,EAC5E,MAAM,EACN,OAAO,EACP,SAAS,EACT,gBAAgB,EAChB,cAAc,EACd,IAAI,EACL;IACC,qBACE,8OAAC,kIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc,CAAC,OAAS,CAAC,QAAQ;kBACrD,cAAA,8OAAC,kIAAA,CAAA,gBAAa;YAAC,WAAU;;8BACvB,8OAAC,kIAAA,CAAA,eAAY;;sCACX,8OAAC,kIAAA,CAAA,cAAW;sCAAC;;;;;;sCACb,8OAAC,kIAAA,CAAA,oBAAiB;;gCAAC;8CAC8B,8OAAC;8CAAQ;;;;;;gCAAwB;gCAAI;8CACpF,8OAAC;8CAAQ,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM,OAAO;wCAAE,QAAQ,4IAAA,CAAA,KAAE;oCAAC;;;;;;gCAAY;;;;;;;;;;;;;8BAG1D,8OAAC;oBAAI,WAAU;8BACX,UAAU,MAAM,GAAG,kBAClB,8OAAC,0IAAA,CAAA,aAAU;wBAAC,WAAU;;4BAAiB;0CACpC,8OAAC;gCAAI,WAAU;0CACZ,UAAU,GAAG,CAAC,CAAC,yBACd,8OAAC,kIAAA,CAAA,SAAM;wCAEL,SAAQ;wCACR,WAAU;wCACV,SAAS,IAAM,iBAAiB;;0DAE/B,8OAAC,8MAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;4CAAiB;4CAAE,SAAS,IAAI;;uCALhD,SAAS,EAAE;;;;;;;;;;;;;;;6CAWzB,8OAAC;wBAAE,WAAU;kCAA2C;;;;;;;;;;;8BAK5D,8OAAC,kIAAA,CAAA,eAAY;8BACT,cAAA,8OAAC,kIAAA,CAAA,cAAW;wBAAC,OAAO;kCAChB,cAAA,8OAAC,kIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,SAAQ;;8CAC3B,8OAAC,4LAAA,CAAA,IAAC;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOlD","debugId":null}},
    {"offset": {"line": 3002, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/colombian-holidays.ts"],"sourcesContent":["/**\n * Representa una fecha.\n */\nexport interface Date {\n  year: number;\n  month: number; // 1-12\n  day: number;\n}\n\n/**\n * Obtiene de forma asíncrona una lista de festivos colombianos para un año dado.\n *\n * @param year El año para el cual obtener los festivos.\n * @returns Una promesa que resuelve a un array de objetos Date representando los festivos.\n */\nexport async function getColombianHolidays(year: number): Promise<Date[]> {\n  // TODO: Implementar esto llamando a una API externa o usando una biblioteca confiable.\n  // Ejemplo de estructura placeholder:\n  // const response = await fetch(`https://api.example.com/holidays/co/${year}`);\n  // if (!response.ok) {\n  //   throw new Error('Fallo al obtener los festivos');\n  // }\n  // const holidays = await response.json();\n  // return holidays.map(holiday => ({ year: year, month: ..., day: ... }));\n\n   console.warn(`Obteniendo festivos para ${year} - Usando datos de ejemplo. Implementar llamada API.`);\n\n   // Datos de ejemplo SOLO para desarrollo/pruebas\n   if (year === 2024) {\n        return [\n            { year: 2024, month: 1, day: 1 }, { year: 2024, month: 1, day: 8 }, // Año Nuevo, Reyes Magos\n            { year: 2024, month: 3, day: 25 }, { year: 2024, month: 3, day: 28 }, // San José, Jueves Santo\n            { year: 2024, month: 3, day: 29 }, { year: 2024, month: 5, day: 1 }, // Viernes Santo, Día del Trabajo\n            { year: 2024, month: 5, day: 13 }, { year: 2024, month: 6, day: 3 }, // Ascensión del Señor, Corpus Christi\n            { year: 2024, month: 6, day: 10 }, { year: 2024, month: 7, day: 1 }, // Sagrado Corazón, San Pedro y San Pablo\n            { year: 2024, month: 7, day: 20 }, { year: 2024, month: 8, day: 7 }, // Independencia, Batalla de Boyacá\n            { year: 2024, month: 8, day: 19 }, { year: 2024, month: 10, day: 14 }, // Asunción de la Virgen, Día de la Raza\n            { year: 2024, month: 11, day: 4 }, { year: 2024, month: 11, day: 11 }, // Todos los Santos, Independencia de Cartagena\n            { year: 2024, month: 12, day: 8 }, { year: 2024, month: 12, day: 25 } // Inmaculada Concepción, Navidad\n        ];\n   }\n   if (year === 2025) {\n     return [\n       { year: 2025, month: 1, day: 1 }, { year: 2025, month: 1, day: 6 }, // Año Nuevo, Reyes Magos\n       { year: 2025, month: 3, day: 24 }, { year: 2025, month: 4, day: 17 }, // San José, Jueves Santo\n       { year: 2025, month: 4, day: 18 }, { year: 2025, month: 5, day: 1 }, // Viernes Santo, Día del Trabajo\n       { year: 2025, month: 6, day: 2 }, { year: 2025, month: 6, day: 23 }, // Ascensión del Señor, Corpus Christi\n       { year: 2025, month: 6, day: 30 }, { year: 2025, month: 7, day: 20 }, // Sagrado Corazón, San Pedro y San Pablo (Nota: 20 Julio cae Domingo, no se traslada)\n       { year: 2025, month: 8, day: 7 }, { year: 2025, month: 8, day: 18 }, // Batalla de Boyacá, Asunción de la Virgen\n       { year: 2025, month: 10, day: 13 }, { year: 2025, month: 11, day: 3 }, // Día de la Raza, Todos los Santos\n       { year: 2025, month: 11, day: 17 }, { year: 2025, month: 12, day: 8 }, // Independencia de Cartagena, Inmaculada Concepción\n       { year: 2025, month: 12, day: 25 } // Navidad\n     ];\n   }\n    if (year === 2023) {\n        return [\n            { year: 2023, month: 1, day: 1 }, { year: 2023, month: 1, day: 9 },\n            { year: 2023, month: 3, day: 20 }, { year: 2023, month: 4, day: 6 },\n            { year: 2023, month: 4, day: 7 }, { year: 2023, month: 5, day: 1 },\n            { year: 2023, month: 5, day: 22 }, { year: 2023, month: 6, day: 12 },\n            { year: 2023, month: 6, day: 19 }, { year: 2023, month: 7, day: 3 },\n            { year: 2023, month: 7, day: 20 }, { year: 2023, month: 8, day: 7 },\n            { year: 2023, month: 8, day: 21 }, { year: 2023, month: 10, day: 16 },\n            { year: 2023, month: 11, day: 6 }, { year: 2023, month: 11, day: 13 },\n            { year: 2023, month: 12, day: 8 }, { year: 2023, month: 12, day: 25 }\n        ];\n    }\n\n\n  // Retorna array vacío si no hay datos de ejemplo o la API falla en el futuro\n  return [];\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3312, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/schedule-pdf-exporter.ts"],"sourcesContent":["// src/lib/schedule-pdf-exporter.ts\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { format, parse } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport type { ScheduleData, Department, Employee, ShiftAssignment } from '@/types/schedule';\nimport { formatTo12Hour } from './time-utils'; // Import the helper\n\n// Extend jsPDF interface for autoTable\ndeclare module 'jspdf' {\n  interface jsPDF {\n    autoTable: (options: any) => jsPDF;\n  }\n}\n\ninterface ScheduleExportData {\n    locationName: string;\n    weekDates: Date[];\n    departments: Department[];\n    employees: Employee[]; // List of all employees for the selected location\n    scheduleData: { [dateKey: string]: ScheduleData };\n    getScheduleForDate: (date: Date) => ScheduleData;\n    calculateShiftDuration: (assignment: ShiftAssignment, shiftDate: Date) => number;\n}\n\nexport function exportScheduleToPDF(data: ScheduleExportData): void {\n    const doc = new jsPDF({\n        orientation: 'landscape', // Landscape for week view\n        unit: 'pt', // Use points for better precision\n        format: 'a4' // Standard A4 size\n    });\n\n    const pageHeight = doc.internal.pageSize.height;\n    const pageWidth = doc.internal.pageSize.width;\n    let currentY = 40; // Start position for content (with margin)\n    const leftMargin = 40;\n    const rightMargin = 40;\n    const tableWidth = pageWidth - leftMargin - rightMargin;\n\n    // --- Header ---\n    doc.setFontSize(16);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Horario Semanal de Trabajo', pageWidth / 2, currentY, { align: 'center' });\n    currentY += 20;\n\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    const weekStartFormatted = format(data.weekDates[0], 'dd MMMM', { locale: es });\n    const weekEndFormatted = format(data.weekDates[6], 'dd MMMM yyyy', { locale: es });\n    doc.text(`Sede: ${data.locationName}`, leftMargin, currentY);\n    doc.text(`Semana: ${weekStartFormatted} - ${weekEndFormatted}`, pageWidth - rightMargin, currentY, { align: 'right' });\n    currentY += 30;\n\n    // --- Table Setup ---\n    const head: any[] = [\n        [{ content: 'EMPLEADO / DÍA', styles: { halign: 'left', valign: 'middle' } }] // First header cell for employee names\n    ];\n    // Add days of the week to header\n    data.weekDates.forEach(date => {\n        head[0].push({\n            content: `${format(date, 'EEE', { locale: es }).toUpperCase()}\\n${format(date, 'dd MMM', { locale: es })}`,\n            styles: { halign: 'center', valign: 'middle' }\n        });\n    });\n\n    const body: any[] = [];\n\n    // Group employees by department for the PDF structure\n    const employeesByDept: { [deptId: string]: Employee[] } = {};\n    data.employees.forEach(emp => {\n        // Find which department the employee worked in *most* this week, or just use primary?\n        // For simplicity, let's group by primary department for now.\n        // A more complex logic might group by actual assignments.\n        // We need to iterate through all assignments to build rows per employee.\n\n        // Alternative: Iterate departments, then employees assigned to that dept\n    });\n\n\n    data.departments.forEach(dept => {\n         // Add Department Row\n         body.push([\n             {\n                 content: `${dept.name} (${data.employees.filter(e => {\n                     // Check if employee has any shift in this dept this week\n                     return data.weekDates.some(date => {\n                         const daySchedule = data.getScheduleForDate(date);\n                         return (daySchedule.assignments[dept.id] || []).some(a => a.employee.id === e.id);\n                     });\n                 }).length} empleados)`,\n                 colSpan: data.weekDates.length + 1, // Span across all columns\n                 styles: { fontStyle: 'bold', fillColor: [230, 230, 230], textColor: [0, 0, 0] } // Gray background\n             }\n         ]);\n\n        // Find employees who have at least one shift in this department during the week\n        const deptEmployees = data.employees.filter(emp =>\n            data.weekDates.some(date => {\n                const daySchedule = data.getScheduleForDate(date);\n                return (daySchedule.assignments[dept.id] || []).some(a => a.employee.id === emp.id);\n            })\n        );\n\n\n        // Add Employee Rows for this department\n        deptEmployees.forEach(emp => {\n             const employeeRow: any[] = [{ content: emp.name, styles: { valign: 'middle' } }]; // First cell is employee name\n\n             data.weekDates.forEach(date => {\n                const daySchedule = data.getScheduleForDate(date);\n                const assignment = (daySchedule.assignments[dept.id] || []).find(a => a.employee.id === emp.id);\n\n                if (assignment) {\n                    // Format times using the helper\n                    let cellContent = `${formatTo12Hour(assignment.startTime)} - ${formatTo12Hour(assignment.endTime)}`;\n                    // Append break time if included\n                    if (assignment.includeBreak && assignment.breakStartTime && assignment.breakEndTime) {\n                        cellContent += `\\nD: ${formatTo12Hour(assignment.breakStartTime)}-${formatTo12Hour(assignment.breakEndTime)}`; // Add break time on new line\n                    }\n                     employeeRow.push({ content: cellContent, styles: { halign: 'center', valign: 'middle', fontSize: 8 } });\n                } else {\n                     employeeRow.push({ content: 'Sin turno', styles: { halign: 'center', valign: 'middle', textColor: [150, 150, 150], fontSize: 8 } }); // Gray text for \"Sin turno\"\n                }\n             });\n             body.push(employeeRow);\n        });\n    });\n\n\n    // --- Draw Table ---\n    autoTable(doc, {\n        head: head,\n        body: body,\n        startY: currentY,\n        theme: 'grid',\n        headStyles: {\n            fillColor: [76, 67, 223], // Primary color #4C43DF\n            textColor: [255, 255, 255], // White text\n            fontSize: 9,\n            lineWidth: 0.5,\n            lineColor: [200, 200, 200]\n        },\n        columnStyles: {\n            0: { cellWidth: 100, fontStyle: 'bold' }, // Employee name column wider and bold\n             // Dynamically apply styles to day columns\n             ...Array.from({ length: data.weekDates.length }).reduce((styles, _, index) => {\n                styles[index + 1] = { cellWidth: 'auto', halign: 'center', fontSize: 8 }; // Smaller font size for shifts\n                return styles;\n            }, {} as any)\n        },\n        styles: {\n            cellPadding: 4,\n            fontSize: 9,\n            overflow: 'linebreak', // Break long text\n            lineWidth: 0.5,\n            lineColor: [200, 200, 200]\n        },\n        didDrawPage: (hookData) => { currentY = hookData.cursor?.y ?? currentY; }\n    });\n\n    // --- Save the PDF ---\n    const timestamp = format(new Date(), 'yyyyMMdd_HHmmss');\n    const filename = `Horario_Semanal_${data.locationName}_${timestamp}.pdf`;\n    doc.save(filename);\n}\n\n// Helper to parse HH:MM to minutes (same as in page.tsx, consider moving to utils)\nconst parseTimeToMinutes = (timeStr: string): number => {\n    if (!timeStr || !/^\\d{2}:\\d{2}$/.test(timeStr)) return 0;\n    const [hours, minutes] = timeStr.split(':').map(Number);\n    return hours * 60 + minutes;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3547, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/schedule/page.tsx"],"sourcesContent":["// src/app/schedule/page.tsx\n'use client'; // Ensure this directive is present\n\nimport React, { useState, useEffect, useCallback, useMemo, useRef, ChangeEvent } from 'react';\nimport { DndContext, DragEndEvent, closestCenter } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardFooter,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Plus, Trash2, Edit, ChevronsLeft, ChevronsRight, Calendar as CalendarModernIcon, Users, Building, Building2, MinusCircle, ChevronsUpDown, Settings, Save, CopyPlus, Library, Eraser, Download, Upload, FileX2, FileSpreadsheet, FileDown, PencilLine, Share2, Loader2, Check, FileUp } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Separator } from '@/components/ui/separator';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter, DialogDescription, DialogClose, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Textarea } from '@/components/ui/textarea';\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\n\n\nimport { LocationSelector } from '@/components/schedule/LocationSelector';\nimport { EmployeeList } from '@/components/schedule/EmployeeList';\nimport { ScheduleView } from '@/components/schedule/ScheduleView';\nimport { ShiftDetailModal } from '@/components/schedule/ShiftDetailModal';\nimport { WeekNavigator } from '@/components/schedule/WeekNavigator';\nimport { useToast } from '@/hooks/use-toast';\nimport { useIsMobile } from '@/hooks/use-mobile';\nimport { EmployeeSelectionModal } from '@/components/schedule/EmployeeSelectionModal';\n\nimport type { Location, Department, Employee, ShiftAssignment, ScheduleData, ShiftTemplate, DailyAssignments, WeeklyAssignments } from '@/types/schedule';\nimport { startOfWeek, endOfWeek, addDays, format, addWeeks, subWeeks, parseISO, getYear, isValid, differenceInMinutes, parse as parseDateFnsInternal, isSameDay, isWithinInterval, getDay } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { cn } from '@/lib/utils';\nimport { getColombianHolidays } from '@/services/colombian-holidays';\nimport { exportScheduleToPDF } from '@/lib/schedule-pdf-exporter';\nimport { formatTo12Hour } from '@/lib/time-utils';\nimport { z } from 'zod';\n\n// Helper to generate dates for the current week\nconst getWeekDates = (currentDate: Date): Date[] => {\n  const start = startOfWeek(currentDate, { weekStartsOn: 1 }); // Start on Monday\n  return Array.from({ length: 7 }).map((_, i) => addDays(start, i));\n};\n\n// LocalStorage Keys\nconst SCHEDULE_DATA_KEY = 'schedulePlannerData';\nconst SCHEDULE_TEMPLATES_KEY = 'scheduleTemplates';\nconst SCHEDULE_NOTES_KEY = 'schedulePlannerNotes';\nconst LOCATIONS_KEY = 'schedulePlannerLocations';\nconst DEPARTMENTS_KEY = 'schedulePlannerDepartments';\nconst EMPLOYEES_KEY = 'schedulePlannerEmployees';\n\n// Cache for holidays\nlet holidaysCache: { [year: number]: Set<string> } = {};\n\nasync function fetchAndCacheHolidays(year: number): Promise<Set<string>> {\n    if (holidaysCache[year]) {\n        return holidaysCache[year];\n    }\n    try {\n        const holidays = await getColombianHolidays(year);\n        if (!Array.isArray(holidays)) {\n            console.error(`Error: getColombianHolidays(${year}) did not return an array.`);\n            throw new Error(`Formato de respuesta inválido para festivos de ${year}.`);\n        }\n        const holidaySet = new Set(holidays.map(h => {\n            if (!h || typeof h.year !== 'number' || typeof h.month !== 'number' || typeof h.day !== 'number') {\n                console.error(`Error: Invalid holiday object structure for year ${year}:`, h);\n                return '';\n            }\n             try {\n                 const dateToFormat = new Date(h.year, h.month - 1, h.day);\n                 if (!isValid(dateToFormat) || getYear(dateToFormat) !== h.year) {\n                     console.error(`Error: Invalid date components for holiday in year ${year}:`, h);\n                     return '';\n                 }\n                 return format(dateToFormat, 'yyyy-MM-dd');\n             } catch (formatError) {\n                 console.error(`Error formatting holiday date for year ${year}:`, h, formatError);\n                 return '';\n             }\n        }).filter(dateStr => dateStr !== ''));\n\n        holidaysCache[year] = holidaySet;\n        return holidaySet;\n    } catch (error) {\n        console.error(`Error fetching or caching holidays for ${year}:`, error);\n        return new Set();\n    }\n}\n\nconst initialLocations: Location[] = [\n  { id: 'loc-1', name: 'Sede Principal' },\n  { id: 'loc-2', name: 'Sede Norte' },\n];\n\n// Define initial departments with icon components\nconst iconMap: { [key: string]: React.ElementType } = {\n    Building: Building,\n    Users: Users,\n    Edit: Edit,\n    Building2: Building2, // Add other icons used\n};\nconst initialDepartments: Department[] = [\n  { id: 'dep-1', name: 'Cocina', locationId: 'loc-1', icon: Building },\n  { id: 'dep-2', name: 'Salón', locationId: 'loc-1', icon: Users },\n  { id: 'dep-3', name: 'Caja & Barra', locationId: 'loc-2', icon: Edit },\n].map(dep => ({ ...dep, iconName: Object.keys(iconMap).find(key => iconMap[key] === dep.icon) })); // Add iconName initially\n\n\nconst initialEmployees: Employee[] = [\n  { id: '101', name: 'Carlos Pérez', locationIds: ['loc-1'] },\n  { id: '102', name: 'Ana Rodriguez', locationIds: ['loc-1'] },\n  { id: '201', name: 'Luis Gómez', locationIds: ['loc-2'] },\n  { id: '202', name: 'Maria García', locationIds: ['loc-1', 'loc-2'] }, // Example multi-location employee\n];\n\nconst defaultNotesText = `Lun a Jue: Parrillazo y Gauchos 12am. - Gaucho 11pm. | Vie a Sab: Parrillazo y Gauchos 1am. - Gaucho 12am. | Dom: Todos 11 pm`;\n\nconst parseTimeToMinutes = (timeStr: string): number => {\n  if (!timeStr || !/^\\d{2}:\\d{2}$/.test(timeStr)) return 0;\n  const [hours, minutes] = timeStr.split(':').map(Number);\n  return hours * 60 + minutes;\n};\n\nconst calculateShiftDuration = (assignment: ShiftAssignment, shiftDate: Date): number => {\n    try {\n        const startDateStr = format(shiftDate, 'yyyy-MM-dd');\n        const startTime = parseDateFnsInternal(`${startDateStr} ${assignment.startTime}`, 'yyyy-MM-dd HH:mm', new Date());\n\n        const startTimeMinutes = parseTimeToMinutes(assignment.startTime);\n        const endTimeMinutes = parseTimeToMinutes(assignment.endTime);\n        let endTime = parseDateFnsInternal(`${startDateStr} ${assignment.endTime}`, 'yyyy-MM-dd HH:mm', new Date());\n        if (!isValid(endTime) || endTimeMinutes < startTimeMinutes) {\n             if (endTimeMinutes < startTimeMinutes) {\n                endTime = addDays(parseDateFnsInternal(`${startDateStr} ${assignment.endTime}`, 'yyyy-MM-dd HH:mm', new Date()), 1);\n             } else {\n                 console.warn('Invalid end time for duration calculation:', assignment);\n                 return 0;\n             }\n        }\n\n        if (!isValid(startTime) || !isValid(endTime)) {\n            console.warn('Invalid start or end time for duration calculation:', assignment);\n            return 0;\n        }\n\n        let totalShiftMinutes = differenceInMinutes(endTime, startTime);\n\n        let breakMinutes = 0;\n        if (assignment.includeBreak && assignment.breakStartTime && assignment.breakEndTime) {\n            const breakStartMinutes = parseTimeToMinutes(assignment.breakStartTime);\n            const breakEndMinutes = parseTimeToMinutes(assignment.breakEndTime);\n            if (breakEndMinutes > breakStartMinutes) {\n                 breakMinutes = breakEndMinutes - breakStartMinutes;\n            }\n        }\n\n        const netMinutes = totalShiftMinutes - breakMinutes;\n        return Math.max(0, netMinutes) / 60;\n    } catch (error) {\n        console.error(\"Error calculating shift duration:\", error, assignment);\n        return 0;\n    }\n};\n\n// Helper function to load data from localStorage safely\nconst loadFromLocalStorage = <T,>(key: string, defaultValue: T): T => {\n    if (typeof window === 'undefined') {\n        return defaultValue; // Return default during SSR\n    }\n    try {\n        const savedData = localStorage.getItem(key);\n\n        // Handle notes specifically as a string\n        if (key === SCHEDULE_NOTES_KEY) {\n             // Directly return the string or default, no JSON parsing\n             return savedData !== null ? (savedData as unknown as T) : defaultValue;\n        }\n\n        if (savedData) {\n             const parsed = JSON.parse(savedData);\n             // Basic check to see if parsed data looks like the expected type (array for lists)\n             if (key === LOCATIONS_KEY || key === EMPLOYEES_KEY || key === DEPARTMENTS_KEY || key === SCHEDULE_TEMPLATES_KEY) {\n                 if (Array.isArray(parsed)) {\n                      // Ensure employees have locationIds array\n                       if (key === EMPLOYEES_KEY) {\n                           return parsed.map((emp: any) => ({\n                               ...emp,\n                               locationIds: Array.isArray(emp.locationIds)\n                                   ? emp.locationIds\n                                   : (emp.primaryLocationId ? [emp.primaryLocationId] : []) // Convert old primaryLocationId\n                           })) as T;\n                       }\n                        // Specific parsing for templates to ensure dates are handled if necessary\n                        if (key === SCHEDULE_TEMPLATES_KEY) {\n                             return parsed.map((template: any) => ({\n                                 ...template,\n                                 // Parse createdAt if it exists, otherwise set null or default\n                                 createdAt: template.createdAt ? template.createdAt : new Date().toISOString(),\n                                 // Ensure assignments are correctly structured (might need deeper checks if dates are inside)\n                             })) as T;\n                         }\n                      return parsed as T;\n                 } else {\n                     console.warn(`[loadFromLocalStorage] Expected array for key ${key}, but found:`, typeof parsed, \". Returning default.\");\n                     return defaultValue; // Return default if type mismatch\n                 }\n             } else if (key === SCHEDULE_DATA_KEY) {\n                 // More complex types might need more checks, but for now assume it's okay if it parses\n                 return parsed as T;\n             } else {\n                 // For unknown keys, just return the parsed data if it's not null/undefined\n                 return parsed as T;\n             }\n        }\n    } catch (error) {\n        // More specific error handling for JSON parsing\n         if (error instanceof SyntaxError) {\n             console.error(`Error parsing JSON from localStorage for key ${key}:`, error.message, \"Saved data:\", localStorage.getItem(key)); // Log the problematic data\n             // Attempt to remove the invalid item to prevent future errors\n             try {\n                 localStorage.removeItem(key);\n                 console.warn(`Removed invalid item from localStorage for key: ${key}`);\n             } catch (removeError) {\n                 console.error(`Error removing invalid item from localStorage for key ${key}:`, removeError);\n             }\n         } else {\n             console.error(`Error loading ${key} from localStorage:`, error);\n         }\n    }\n    return defaultValue; // Return default if nothing saved or error occurred\n};\n\n\n// Helper specifically for loading departments and restoring icons\nconst loadDepartmentsFromLocalStorage = (defaultValue: Department[]): Department[] => {\n    const savedDepartments = loadFromLocalStorage<{id: string, name: string, locationId: string, iconName?: string}[]>(DEPARTMENTS_KEY, []);\n    if (savedDepartments.length > 0) {\n         return savedDepartments.map(dep => ({\n            ...dep,\n            icon: dep.iconName ? iconMap[dep.iconName] : Building, // Use map or default\n         }));\n    }\n     // If nothing loaded, map initial data to include iconName\n     return defaultValue.map(dep => ({\n         ...dep,\n         iconName: Object.keys(iconMap).find(key => iconMap[key] === dep.icon)\n     }));\n};\n\n// Helper for loading schedule data and parsing dates/employees\nconst loadScheduleDataFromLocalStorage = (employees: Employee[], defaultValue: { [dateKey: string]: ScheduleData }): { [dateKey: string]: ScheduleData } => {\n    const savedSchedule = loadFromLocalStorage<{ [dateKey: string]: any }>(SCHEDULE_DATA_KEY, defaultValue);\n     try {\n         const hydratedSchedule: { [dateKey: string]: ScheduleData } = {};\n         Object.keys(savedSchedule).forEach(key => {\n             const dayData = savedSchedule[key];\n             if (!dayData || !dayData.date) return; // Skip invalid entries\n\n             const date = typeof dayData.date === 'string' ? parseISO(dayData.date) : dayData.date;\n             if (!isValid(date)) return; // Skip if date is invalid\n\n             const hydratedAssignments: { [departmentId: string]: ShiftAssignment[] } = {};\n             if (dayData.assignments) {\n                 Object.keys(dayData.assignments).forEach(deptId => {\n                     const assignments = dayData.assignments[deptId];\n                     if (Array.isArray(assignments)) {\n                         hydratedAssignments[deptId] = assignments.map((assign: any) => {\n                             // Ensure employee object is fully populated\n                             if (assign.employee && typeof assign.employee === 'object') {\n                                 const fullEmployee = employees.find(emp => emp.id === assign.employee.id);\n                                 if (fullEmployee) {\n                                     return { ...assign, employee: fullEmployee };\n                                 } else {\n                                     console.warn(`Employee ID ${assign.employee.id} not found while loading schedule for assignment ${assign.id}`);\n                                     return { ...assign, employee: { id: assign.employee.id, name: `(ID: ${assign.employee.id})`, locationIds: [] } }; // Placeholder if employee not found\n                                 }\n                             }\n                             return assign; // Should not happen if saved correctly\n                         });\n                     }\n                 });\n             }\n             hydratedSchedule[key] = { date, assignments: hydratedAssignments };\n         });\n         return hydratedSchedule;\n     } catch (error) {\n         console.error(\"Error parsing schedule data from localStorage:\", error);\n         return defaultValue;\n     }\n};\n\n// Define a Zod schema for basic CSV row validation\nconst csvRowSchema = z.object({\n    ID_Empleado: z.string().min(1, \"ID_Empleado es requerido\"),\n    // Fecha is optional for template mode but validated if present\n    Fecha: z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/, \"Formato de Fecha debe ser AAAA-MM-DD\").optional(),\n    Departamento: z.string().min(1, \"Departamento es requerido\"),\n    Hora_Inicio: z.string().regex(/^([01]\\d|2[0-3]):([0-5]\\d)$/, \"Hora_Inicio formato inválido (HH:MM)\"),\n    Hora_Fin: z.string().regex(/^([01]\\d|2[0-3]):([0-5]\\d)$/, \"Hora_Fin formato inválido (HH:MM)\"),\n    Incluye_Descanso: z.string().optional(),\n    Inicio_Descanso: z.string().optional(),\n    Fin_Descanso: z.string().optional(),\n}).refine(data => {\n    const includesBreakRaw = data.Incluye_Descanso?.trim().toLowerCase();\n    const includeBreakParsed = includesBreakRaw === 'sí' || includesBreakRaw === 'si' || includesBreakRaw === 'true' || includesBreakRaw === '1';\n    if (includeBreakParsed) {\n        const isBreakStartValid = data.Inicio_Descanso && /^([01]\\d|2[0-3]):([0-5]\\d)$/.test(data.Inicio_Descanso);\n        const isBreakEndValid = data.Fin_Descanso && /^([01]\\d|2[0-3]):([0-5]\\d)$/.test(data.Fin_Descanso);\n        if (!isBreakStartValid || !isBreakEndValid) return false; // Fail if break included but times invalid\n        // Check if break end is after break start\n        return data.Fin_Descanso > data.Inicio_Descanso;\n    }\n    return true;\n}, {\n    message: \"Si Incluye_Descanso es Sí/True/1, Inicio_Descanso y Fin_Descanso son requeridos (HH:MM) y Fin debe ser mayor que Inicio.\",\n    path: [\"Inicio_Descanso\"],\n});\n\ntype CsvRowData = z.infer<typeof csvRowSchema>;\n\n\nexport default function SchedulePage() {\n    // --- State Initialization ---\n    const [currentDate, setCurrentDate] = useState(new Date());\n    const [viewMode, setViewMode] = useState<'day' | 'week'>('week');\n    const [locations, setLocations] = useState<Location[]>([]);\n    const [departments, setDepartments] = useState<Department[]>([]);\n    const [employees, setEmployees] = useState<Employee[]>([]);\n    const [scheduleData, setScheduleData] = useState<{ [dateKey: string]: ScheduleData }>({});\n    const [savedTemplates, setSavedTemplates] = useState<ShiftTemplate[]>([]);\n    const [notes, setNotes] = useState<string>(\"\");\n    const [selectedLocationId, setSelectedLocationId] = useState<string>('');\n\n    const [isShiftModalOpen, setIsShiftModalOpen] = useState(false);\n    const [isEmployeeSelectionModalOpen, setIsEmployeeSelectionModalOpen] = useState(false);\n    const [shiftRequestContext, setShiftRequestContext] = useState<{ departmentId: string; date: Date } | null>(null);\n    const [selectedEmployee, setSelectedEmployee] = useState<Employee | null>(null);\n    const [editingShift, setEditingShift] = useState<{ assignment: ShiftAssignment; date: Date; departmentId: string } | null>(null);\n    const [targetDate, setTargetDate] = useState<Date>(new Date());\n\n    const [isConfigModalOpen, setIsConfigModalOpen] = useState(false);\n    const [isLocationModalOpen, setIsLocationModalOpen] = useState(false);\n    const [isDepartmentModalOpen, setIsDepartmentModalOpen] = useState(false);\n    const [isEmployeeModalOpen, setIsEmployeeModalOpen] = useState(false);\n\n    const [editingLocation, setEditingLocation] = useState<Location | null>(null);\n    const [locationFormData, setLocationFormData] = useState({ name: '' });\n\n    const [editingDepartment, setEditingDepartment] = useState<Department | null>(null);\n    const [departmentFormData, setDepartmentFormData] = useState<{name: string, locationId: string, iconName?: string}>({ name: '', locationId: '', iconName: undefined });\n\n    const [editingEmployee, setEditingEmployee] = useState<Employee | null>(null);\n    const [employeeFormData, setEmployeeFormData] = useState<{ id: string, name: string, locationIds: string[] }>({ id: '', name: '', locationIds: [] });\n\n    const [itemToDelete, setItemToDelete] = useState<{ type: 'location' | 'department' | 'employee' | 'template'; id: string; name: string } | null>(null);\n\n    const [isTemplateModalOpen, setIsTemplateModalOpen] = useState(false);\n    const [templateName, setTemplateName] = useState('');\n\n    const [clearingDate, setClearingDate] = useState<Date | null>(null);\n\n    const [holidaySet, setHolidaySet] = useState<Set<string>>(new Set());\n    const [isCheckingHoliday, setIsCheckingHoliday] = useState<boolean>(false);\n\n    const fileInputRef = useRef<HTMLInputElement>(null);\n    const [isImportingCSV, setIsImportingCSV] = useState<boolean>(false);\n    const [isClient, setIsClient] = useState(false);\n\n\n    const isMobile = useIsMobile();\n    const { toast } = useToast();\n\n    // --- Load Data from localStorage on Mount (Client-side only) ---\n    useEffect(() => {\n        setIsClient(true);\n        const loadedLocations = loadFromLocalStorage(LOCATIONS_KEY, initialLocations);\n        const loadedDepts = loadDepartmentsFromLocalStorage(initialDepartments);\n        const loadedEmps = loadFromLocalStorage(EMPLOYEES_KEY, initialEmployees);\n        const loadedSched = loadScheduleDataFromLocalStorage(loadedEmps, {});\n        const loadedTemps = loadFromLocalStorage<ShiftTemplate[]>(SCHEDULE_TEMPLATES_KEY, []);\n        const loadedNotesStr = loadFromLocalStorage(SCHEDULE_NOTES_KEY, defaultNotesText);\n\n        setLocations(loadedLocations);\n        setDepartments(loadedDepts);\n        setEmployees(loadedEmps);\n        setScheduleData(loadedSched);\n        setSavedTemplates(loadedTemps);\n        console.log(\"Loaded templates from localStorage on mount:\", loadedTemps);\n        setNotes(loadedNotesStr);\n\n        const initialSelectedLoc = loadedLocations.length > 0 ? loadedLocations[0].id : '';\n        setSelectedLocationId(initialSelectedLoc);\n        // Set initial form data location based on loaded data\n        setDepartmentFormData(prev => ({ ...prev, locationId: initialSelectedLoc }));\n        setEmployeeFormData(prev => ({ ...prev, locationIds: [initialSelectedLoc] }));\n\n    }, []); // Empty dependency array ensures this runs only once on mount\n\n    useEffect(() => {\n        const startYear = getYear(startOfWeek(currentDate, { weekStartsOn: 1 }));\n        const endYear = getYear(endOfWeek(currentDate, { weekStartsOn: 1 }));\n        const yearsToFetch = new Set([startYear, endYear]);\n\n        setIsCheckingHoliday(true);\n        Promise.all(Array.from(yearsToFetch).map(year => fetchAndCacheHolidays(year)))\n            .then(results => {\n                const combinedSet = new Set<string>();\n                results.forEach(set => set.forEach(date => combinedSet.add(date)));\n                setHolidaySet(combinedSet);\n            })\n            .catch(error => {\n                console.error(\"Error fetching holidays for week view:\", error);\n                setHolidaySet(new Set());\n            })\n            .finally(() => {\n                setIsCheckingHoliday(false);\n            });\n    }, [currentDate]);\n\n     // --- Save Data to localStorage on Change ---\n     useEffect(() => {\n         if (isClient) {\n             try { localStorage.setItem(LOCATIONS_KEY, JSON.stringify(locations)); }\n             catch (e) { console.error(\"Error saving locations:\", e); }\n         }\n     }, [locations, isClient]);\n\n     useEffect(() => {\n         if (isClient) {\n             try {\n                 const departmentsToSave = departments.map(({ icon, ...rest }) => ({\n                    ...rest,\n                    iconName: Object.keys(iconMap).find(key => iconMap[key] === icon)\n                 }));\n                 localStorage.setItem(DEPARTMENTS_KEY, JSON.stringify(departmentsToSave));\n             }\n             catch (e) { console.error(\"Error saving departments:\", e); }\n         }\n     }, [departments, isClient]);\n\n     useEffect(() => {\n         if (isClient) {\n             try { localStorage.setItem(EMPLOYEES_KEY, JSON.stringify(employees)); }\n             catch (e) { console.error(\"Error saving employees:\", e); }\n         }\n     }, [employees, isClient]);\n\n     useEffect(() => {\n        if (isClient) {\n            try {\n                const dataToSave = JSON.parse(JSON.stringify(scheduleData));\n                 Object.keys(dataToSave).forEach(key => {\n                     if (dataToSave[key] && dataToSave[key].date instanceof Date) {\n                         dataToSave[key].date = dataToSave[key].date.toISOString();\n                     }\n                     if (dataToSave[key] && dataToSave[key].assignments) {\n                         Object.keys(dataToSave[key].assignments).forEach(deptId => {\n                             dataToSave[key].assignments[deptId].forEach((assign: any) => {\n                                 if (assign.employee && typeof assign.employee === 'object') {\n                                     assign.employee = { id: assign.employee.id };\n                                 }\n                             });\n                         });\n                     }\n                 });\n                localStorage.setItem(SCHEDULE_DATA_KEY, JSON.stringify(dataToSave));\n            } catch (error) {\n                console.error(\"Error saving schedule data to localStorage:\", error);\n                 toast({\n                     title: \"Error al Guardar Horario\",\n                     description: \"No se pudo guardar el horario en el almacenamiento local.\",\n                     variant: \"destructive\",\n                 });\n            }\n        }\n    }, [scheduleData, isClient, toast]);\n\n    useEffect(() => {\n        if (isClient) {\n            try {\n                localStorage.setItem(SCHEDULE_NOTES_KEY, notes);\n            } catch (error) {\n                console.error(\"Error saving notes to localStorage:\", error);\n            }\n        }\n    }, [notes, isClient]);\n\n     useEffect(() => {\n        if (isClient) {\n            try {\n                 console.log(\"[Save Effect] Saving templates:\", savedTemplates); // Log before saving\n                 localStorage.setItem(SCHEDULE_TEMPLATES_KEY, JSON.stringify(savedTemplates));\n                  console.log(\"[Save Effect] Templates saved successfully.\"); // Log if saving succeeds\n            } catch (error) {\n                 console.error(\"Error saving templates to localStorage:\", error);\n                 toast({\n                     title: 'Error al Guardar Templates',\n                     description: 'No se pudieron guardar los templates localmente.',\n                     variant: 'destructive',\n                 });\n            }\n        }\n     }, [savedTemplates, isClient, toast]);\n\n    // ---- End LocalStorage Effects ---\n\n    const weekDates = getWeekDates(currentDate);\n\n    const getScheduleForDate = useCallback((date: Date): ScheduleData => {\n        const key = format(date, 'yyyy-MM-dd');\n        const dayData = scheduleData[key];\n        const hydratedAssignments: { [departmentId: string]: ShiftAssignment[] } = {};\n\n        if (dayData && dayData.assignments) {\n             Object.keys(dayData.assignments).forEach(deptId => {\n                 hydratedAssignments[deptId] = (dayData.assignments[deptId] || []).map(assign => {\n                    const fullEmployee = employees.find(emp => emp.id === assign.employee?.id);\n                    if (fullEmployee) {\n                        return { ...assign, employee: fullEmployee };\n                    } else {\n                        console.warn(`Employee with ID ${assign.employee?.id || 'undefined'} not found for assignment ${assign.id}`);\n                         return { ...assign, employee: { id: assign.employee?.id || 'unknown', name: `(ID: ${assign.employee?.id || '??'})`, locationIds: [] } };\n                    }\n                 }).filter(assign => assign !== null);\n             });\n        }\n        return {\n            date: date,\n            assignments: hydratedAssignments\n        };\n    }, [scheduleData, employees]);\n\n\n    const filteredEmployees = useMemo(() => employees.filter(emp =>\n        Array.isArray(emp.locationIds) && emp.locationIds.includes(selectedLocationId)\n    ), [employees, selectedLocationId]);\n\n    const filteredDepartments = useMemo(() => departments.filter(dep => dep.locationId === selectedLocationId), [departments, selectedLocationId]);\n\n    // Filter templates based on current location and view mode\n    const filteredTemplates = useMemo(() => {\n        console.log(\"[Filter Memo] All templates in state:\", savedTemplates);\n        const templatesArray = Array.isArray(savedTemplates) ? savedTemplates : [];\n        const filtered = templatesArray.filter(temp => {\n            const locationMatch = temp.locationId === selectedLocationId;\n            const typeMatch = temp.type === viewMode;\n            console.log(`[Filter Memo] Template ${temp.id} (${temp.name}): Loc Match=${locationMatch}, Type Match=${typeMatch}`);\n            return locationMatch && typeMatch;\n        });\n        console.log(`[Filter Memo] Filtered templates for loc ${selectedLocationId}, view ${viewMode}:`, filtered);\n        return filtered;\n    }, [savedTemplates, selectedLocationId, viewMode]);\n\n\n    const assignedEmployeeIdsForTargetDate = useMemo(() => {\n        const ids = new Set<string>();\n        const dateToUse = viewMode === 'day' ? targetDate : (shiftRequestContext?.date || null);\n\n        if (dateToUse) {\n            const dateKey = format(dateToUse, 'yyyy-MM-dd');\n            const daySchedule = scheduleData[dateKey];\n            if (daySchedule && daySchedule.assignments) {\n                Object.values(daySchedule.assignments).flat().forEach(assignment => {\n                    ids.add(assignment.employee.id);\n                });\n            }\n        }\n        return ids;\n    }, [scheduleData, targetDate, viewMode, shiftRequestContext]);\n\n    const availableEmployees = useMemo(() => {\n        if (viewMode === 'week' && !isEmployeeSelectionModalOpen) {\n            // In week view, when not specifically selecting for a day (via modal), show all employees for the location\n            return filteredEmployees;\n        }\n        // In day view, OR when the selection modal is open (implies selecting for a specific day)\n        const dateForFiltering = viewMode === 'day' ? targetDate : (shiftRequestContext?.date || null);\n        if (!dateForFiltering) return filteredEmployees; // Fallback if date context is somehow missing\n\n        const dateKey = format(dateForFiltering, 'yyyy-MM-dd');\n        const assignedIdsOnDate = new Set<string>();\n        const daySchedule = scheduleData[dateKey];\n        if (daySchedule && daySchedule.assignments) {\n            Object.values(daySchedule.assignments).flat().forEach(assignment => {\n                assignedIdsOnDate.add(assignment.employee.id);\n            });\n        }\n        return filteredEmployees.filter(emp => !assignedIdsOnDate.has(emp.id));\n\n    }, [filteredEmployees, scheduleData, targetDate, viewMode, shiftRequestContext, isEmployeeSelectionModalOpen]);\n\n\n    useEffect(() => {\n        if (!departmentFormData.locationId || departmentFormData.locationId !== selectedLocationId) {\n           setDepartmentFormData(prev => ({ ...prev, locationId: selectedLocationId }));\n        }\n    }, [selectedLocationId, departmentFormData.locationId]);\n\n    useEffect(() => {\n        setEmployeeFormData(prev => ({\n            ...prev,\n            locationIds: Array.isArray(prev.locationIds)\n                ? (prev.locationIds.includes(selectedLocationId) ? prev.locationIds : [selectedLocationId])\n                : [selectedLocationId]\n        }));\n    }, [selectedLocationId]);\n\n\n    const handleLocationChange = (locationId: string) => {\n        setSelectedLocationId(locationId);\n         setDepartmentFormData(prev => ({ ...prev, locationId: locationId }));\n         setEmployeeFormData(prev => {\n            const currentLocationIds = Array.isArray(prev.locationIds) ? prev.locationIds : [];\n            return {\n                ...prev,\n                locationIds: currentLocationIds.length > 0 ? currentLocationIds : [locationId]\n            };\n         });\n    };\n\n    const handleOpenEmployeeSelectionModal = (departmentId: string, date: Date) => {\n         setEditingShift(null);\n         setShiftRequestContext({ departmentId, date });\n         setTargetDate(date); // Ensure targetDate is set for filtering available employees\n         setIsEmployeeSelectionModalOpen(true);\n    };\n\n    const handleEmployeeSelectedForShift = (employee: Employee) => {\n        if (!shiftRequestContext) return;\n        setSelectedEmployee(employee);\n        setIsEmployeeSelectionModalOpen(false);\n        setIsShiftModalOpen(true);\n    };\n\n    const handleOpenShiftModalForDrop = (employee: Employee, departmentId: string, date: Date) => {\n        setEditingShift(null);\n        setSelectedEmployee(employee);\n        setShiftRequestContext({ departmentId, date });\n        setIsShiftModalOpen(true);\n    };\n\n    const handleShiftClick = (assignment: ShiftAssignment, date: Date, departmentId: string) => {\n        setEditingShift({ assignment, date, departmentId });\n        setSelectedEmployee(assignment.employee);\n        setShiftRequestContext({ departmentId, date });\n        setIsShiftModalOpen(true);\n    };\n\n    const handleAddOrUpdateShift = (details: any) => {\n        const context = editingShift || shiftRequestContext;\n        const employeeForShift = editingShift?.assignment.employee || selectedEmployee;\n\n        if (!employeeForShift || !context) return;\n\n        const { departmentId, date } = context;\n        const dateKey = format(date, 'yyyy-MM-dd');\n\n        const newAssignmentId = `shift_${employeeForShift.id}_${dateKey}_${details.startTime.replace(':', '')}`;\n\n        const assignmentPayload: ShiftAssignment = {\n            id: editingShift?.assignment.id || newAssignmentId,\n            employee: employeeForShift,\n            startTime: details.startTime,\n            endTime: details.endTime,\n            includeBreak: details.includeBreak || false,\n            breakStartTime: details.includeBreak ? details.breakStartTime : undefined,\n            breakEndTime: details.includeBreak ? details.breakEndTime : undefined,\n        };\n\n        setScheduleData(prevData => {\n            const currentDayData = getScheduleForDate(date);\n            const departmentAssignments = currentDayData.assignments[departmentId] || [];\n\n            let updatedAssignments;\n            if (editingShift) {\n                updatedAssignments = departmentAssignments.map(a =>\n                    a.id === editingShift.assignment.id ? assignmentPayload : a\n                );\n            } else {\n                 const isAlreadyAssignedOnDate = Object.values(currentDayData.assignments)\n                                                .flat()\n                                                .some(a => a.employee.id === employeeForShift.id);\n\n                 if (isAlreadyAssignedOnDate) {\n                     toast({\n                         title: 'Asignación Duplicada',\n                         description: `${employeeForShift.name} ya tiene un turno asignado para el ${format(date, 'PPP', { locale: es })}.`,\n                         variant: 'destructive',\n                     });\n                     return prevData;\n                 }\n                updatedAssignments = [...departmentAssignments, assignmentPayload];\n            }\n\n             const updatedDayData: ScheduleData = {\n                 ...currentDayData,\n                 date: date,\n                 assignments: {\n                     ...currentDayData.assignments,\n                     [departmentId]: updatedAssignments,\n                 },\n             };\n\n            return {\n                ...prevData,\n                [dateKey]: updatedDayData,\n            };\n        });\n        setIsShiftModalOpen(false);\n        setSelectedEmployee(null);\n        setShiftRequestContext(null);\n        setEditingShift(null);\n         toast({\n            title: editingShift ? 'Turno Actualizado' : 'Turno Agregado',\n            description: `Turno para ${employeeForShift.name} el ${format(date, 'PPP', { locale: es })} ${editingShift ? 'actualizado.' : 'agregado.'}`,\n        });\n    };\n\n    const handleRemoveShift = (dateKey: string, departmentId: string, assignmentId: string) => {\n        setScheduleData(prevData => {\n            const dayData = prevData[dateKey];\n            if (!dayData) return prevData;\n\n            const departmentAssignments = (dayData.assignments[departmentId] || []).filter(a => a.id !== assignmentId);\n\n            const newAssignments = { ...dayData.assignments, [departmentId]: departmentAssignments };\n\n            // Optional: Clean up empty department arrays\n            if (newAssignments[departmentId]?.length === 0) {\n                delete newAssignments[departmentId];\n            }\n\n             // Optional: Clean up day data if no assignments left\n             const remainingAssignmentsCount = Object.values(newAssignments).reduce((sum, dept) => sum + dept.length, 0);\n             if (remainingAssignmentsCount === 0) {\n                 const updatedData = { ...prevData };\n                 delete updatedData[dateKey];\n                 return updatedData;\n             }\n\n\n            return {\n                ...prevData,\n                [dateKey]: {\n                    ...dayData,\n                    assignments: newAssignments,\n                },\n            };\n        });\n         toast({ title: 'Turno Eliminado', variant: 'destructive' });\n    };\n\n    const handleDragEnd = (event: DragEndEvent) => {\n        const { over, active } = event;\n\n        if (isMobile || !over || !active) return; // Ignore drag on mobile\n\n        const employeeId = active.id as string;\n        const targetData = over.data.current as { type: string; id: string; date?: string };\n\n        if (!targetData || targetData.type !== 'department' || !targetData.date) {\n            console.warn(\"Invalid drop target data:\", targetData);\n            return;\n        }\n\n        const departmentId = targetData.id;\n        const dropDate = parseISO(targetData.date);\n\n        const employee = employees.find(emp => emp.id === employeeId);\n        if (!employee) return;\n\n        // Check if employee is already assigned on this specific date\n        const dateKey = format(dropDate, 'yyyy-MM-dd');\n        const daySchedule = scheduleData[dateKey];\n        if (daySchedule && daySchedule.assignments) {\n             const isAlreadyAssignedOnDate = Object.values(daySchedule.assignments)\n                                            .flat()\n                                            .some(assignment => assignment.employee.id === employeeId);\n             if (isAlreadyAssignedOnDate) {\n                 toast({\n                     title: 'Asignación Duplicada',\n                     description: `${employee.name} ya tiene un turno asignado para el ${format(dropDate, 'PPP', { locale: es })}.`,\n                     variant: 'destructive',\n                 });\n                 return; // Prevent assigning again on the same day\n             }\n        }\n        handleOpenShiftModalForDrop(employee, departmentId, dropDate);\n    };\n\n\n    // CRUD Handlers\n    const handleOpenLocationModal = (location: Location | null) => {\n        setEditingLocation(location);\n        setLocationFormData({ name: location?.name || '' });\n        setIsLocationModalOpen(true);\n    };\n\n    const handleSaveLocation = () => {\n        const name = locationFormData.name.trim();\n        if (!name) {\n            toast({ title: 'Nombre Inválido', description: 'El nombre de la sede no puede estar vacío.', variant: 'destructive' });\n            return;\n        }\n        if (editingLocation) {\n            setLocations(locations.map(loc => loc.id === editingLocation.id ? { ...loc, name } : loc));\n             toast({ title: 'Sede Actualizada', description: `Sede \"${name}\" actualizada.` });\n        } else {\n             const newLocation = { id: `loc-${Date.now()}`, name };\n            setLocations([...locations, newLocation]);\n            toast({ title: 'Sede Agregada', description: `Sede \"${name}\" agregada.` });\n            // If it's the first location or none was selected, select the new one\n            if (locations.length === 0 || !selectedLocationId) {\n                 setSelectedLocationId(newLocation.id);\n            }\n        }\n        setIsLocationModalOpen(false);\n        setEditingLocation(null);\n    };\n\n    const handleOpenDepartmentModal = (department: Department | null) => {\n        setEditingDepartment(department);\n        const iconName = department ? Object.keys(iconMap).find(key => iconMap[key] === department.icon) : undefined;\n        setDepartmentFormData({\n            name: department?.name || '',\n            locationId: department?.locationId || selectedLocationId,\n            iconName: iconName\n        });\n        setIsDepartmentModalOpen(true);\n    };\n\n    const handleSaveDepartment = () => {\n         const name = departmentFormData.name.trim();\n         const locationId = departmentFormData.locationId;\n         const iconName = departmentFormData.iconName;\n        if (!name || !locationId) {\n            toast({ title: 'Datos Incompletos', description: 'El nombre y la sede del departamento son requeridos.', variant: 'destructive' });\n            return;\n        }\n         const icon = iconName ? iconMap[iconName] : Building; // Default to Building icon if none selected\n\n        if (editingDepartment) {\n            setDepartments(departments.map(dep => dep.id === editingDepartment.id ? { ...dep, name, locationId, icon, iconName } : dep));\n             toast({ title: 'Departamento Actualizado', description: `Departamento \"${name}\" actualizado.` });\n        } else {\n             const newDepartment = { id: `dep-${Date.now()}`, name, locationId, icon, iconName };\n            setDepartments([...departments, newDepartment]);\n            toast({ title: 'Departamento Agregado', description: `Departamento \"${name}\" agregado.` });\n        }\n        setIsDepartmentModalOpen(false);\n        setEditingDepartment(null);\n    };\n\n    const handleOpenEmployeeModal = (employee: Employee | null) => {\n        setEditingEmployee(employee);\n        // Ensure locationIds is always initialized as an array\n        const initialLocationIds = Array.isArray(employee?.locationIds) ? employee.locationIds : (selectedLocationId ? [selectedLocationId] : []);\n        setEmployeeFormData({\n            id: employee?.id || '',\n            name: employee?.name || '',\n            locationIds: initialLocationIds\n        });\n        setIsEmployeeModalOpen(true);\n    };\n\n    const handleToggleEmployeeLocation = (locationId: string) => {\n        setEmployeeFormData(prev => {\n            const currentIds = Array.isArray(prev.locationIds) ? prev.locationIds : [];\n            let newLocationIds;\n            if (currentIds.includes(locationId)) {\n                // Prevent removing the last location ID\n                newLocationIds = currentIds.length > 1 ? currentIds.filter(id => id !== locationId) : currentIds;\n                 if (newLocationIds.length === 0 && currentIds.length > 0) {\n                    toast({ title: \"Validación\", description: \"El colaborador debe estar asignado al menos a una sede.\", variant: \"destructive\" });\n                    return prev; // Return previous state if trying to remove the last one\n                }\n            } else {\n                newLocationIds = [...currentIds, locationId];\n            }\n            return { ...prev, locationIds: newLocationIds };\n        });\n    };\n\n\n    const handleSaveEmployee = () => {\n         const id = employeeFormData.id.trim();\n         const name = employeeFormData.name.trim();\n         // Ensure locationIds is an array and has at least one selection, default to selectedLocationId if somehow empty\n         const locationIds = Array.isArray(employeeFormData.locationIds) && employeeFormData.locationIds.length > 0\n                             ? employeeFormData.locationIds\n                             : (selectedLocationId ? [selectedLocationId] : []);\n\n          if (!id || !name) { // Removed locationIds check here, handled below\n             toast({ title: 'Datos Incompletos', description: 'El ID y el nombre del colaborador son requeridos.', variant: 'destructive' });\n             return;\n          }\n           if (locationIds.length === 0) {\n               toast({ title: 'Sede Requerida', description: 'Debes asignar el colaborador al menos a una sede.', variant: 'destructive' });\n               return;\n           }\n\n         // Check for duplicate ID only if adding a new employee\n         if (!editingEmployee) {\n             const isDuplicateId = employees.some(emp => emp.id === id);\n             if (isDuplicateId) {\n                 toast({ title: 'ID Duplicado', description: `El ID \"${id}\" ya está en uso por otro colaborador.`, variant: 'destructive' });\n                 return;\n             }\n         }\n\n         const updatedEmployeeData: Employee = { id, name, locationIds };\n\n        if (editingEmployee) {\n            // Update existing employee\n            setEmployees(employees.map(emp => emp.id === editingEmployee.id ? updatedEmployeeData : emp));\n             toast({ title: 'Colaborador Actualizado', description: `Colaborador \"${name}\" (ID: ${id}) actualizado.` });\n             // Update employee details within existing schedule assignments\n             setScheduleData(prevSchedule => {\n                const updatedSchedule = { ...prevSchedule };\n                Object.keys(updatedSchedule).forEach(dateKey => {\n                    Object.keys(updatedSchedule[dateKey].assignments).forEach(deptId => {\n                        updatedSchedule[dateKey].assignments[deptId] = updatedSchedule[dateKey].assignments[deptId].map(assignment => {\n                            if (assignment.employee.id === id) {\n                                // Update the employee object within the assignment\n                                return { ...assignment, employee: updatedEmployeeData };\n                            }\n                            return assignment;\n                        });\n                    });\n                });\n                return updatedSchedule;\n             });\n        } else {\n            // Add new employee\n            const newEmployee = updatedEmployeeData;\n            setEmployees(prev => [...prev, newEmployee]);\n             toast({ title: 'Colaborador Agregado', description: `Colaborador \"${name}\" (ID: ${id}) agregado.` });\n        }\n        setIsEmployeeModalOpen(false);\n        setEditingEmployee(null); // Reset editing state\n    };\n\n\n     const confirmDeleteItem = (type: 'location' | 'department' | 'employee' | 'template', id: string, name: string) => {\n        setItemToDelete({ type, id, name });\n     };\n\n    const handleDeleteItem = () => {\n        if (!itemToDelete) return;\n\n        try {\n            let message = '';\n            switch (itemToDelete.type) {\n                case 'location':\n                    setLocations(prevLocs => {\n                        const remaining = prevLocs.filter(loc => loc.id !== itemToDelete.id);\n                        // If the deleted location was selected, select the first remaining one or clear selection\n                        if (selectedLocationId === itemToDelete.id) {\n                           setSelectedLocationId(remaining.length > 0 ? remaining[0].id : '');\n                        }\n                        return remaining;\n                    });\n                    // Find departments associated with the deleted location\n                    const depsToDelete = departments.filter(dep => dep.locationId === itemToDelete.id).map(d => d.id);\n                    // Remove associated departments\n                    setDepartments(prevDeps => prevDeps.filter(dep => dep.locationId !== itemToDelete.id));\n                    // Remove location association from employees, filter out employees with no locations left\n                    setEmployees(prevEmps => prevEmps.map(emp => ({\n                        ...emp,\n                        locationIds: emp.locationIds.filter(locId => locId !== itemToDelete.id)\n                    })).filter(emp => emp.locationIds.length > 0)); // Remove employees with no locations left\n\n                    // Remove templates associated with the deleted location\n                    setSavedTemplates(prevTemplates => (Array.isArray(prevTemplates) ? prevTemplates : []).filter(t => t.locationId !== itemToDelete.id));\n                    // Clean up schedule data: remove assignments in departments of the deleted location\n                     setScheduleData(prevSchedule => {\n                         const updatedSchedule = { ...prevSchedule };\n                         Object.keys(updatedSchedule).forEach(dateKey => {\n                             let dayHasOtherAssignments = false;\n                             const currentAssignments = updatedSchedule[dateKey].assignments;\n                             const newAssignments: { [deptId: string]: ShiftAssignment[] } = {};\n                             Object.keys(currentAssignments).forEach(deptId => {\n                                 if (!depsToDelete.includes(deptId)) { // Keep assignments from other departments\n                                     newAssignments[deptId] = currentAssignments[deptId];\n                                     if (currentAssignments[deptId].length > 0) {\n                                         dayHasOtherAssignments = true;\n                                     }\n                                 }\n                             });\n                              // Update assignments or delete day entry if empty\n                              if (Object.keys(newAssignments).length > 0) {\n                                  updatedSchedule[dateKey].assignments = newAssignments;\n                              } else {\n                                   delete updatedSchedule[dateKey];\n                              }\n                         });\n                         return updatedSchedule;\n                     });\n\n                    message = `Sede \"${itemToDelete.name}\" y sus datos asociados eliminados.`;\n                    break;\n                case 'department':\n                    setDepartments(prevDeps => prevDeps.filter(dep => dep.id !== itemToDelete.id));\n                    // Remove assignments for this department from schedule data\n                     const updatedScheduleDept = { ...scheduleData };\n                     Object.keys(updatedScheduleDept).forEach(dateKey => {\n                          if (updatedScheduleDept[dateKey].assignments[itemToDelete.id]) {\n                              delete updatedScheduleDept[dateKey].assignments[itemToDelete.id];\n                              // If no assignments left for the day, remove the day entry\n                              if (Object.keys(updatedScheduleDept[dateKey].assignments).length === 0) {\n                                   delete updatedScheduleDept[dateKey];\n                              }\n                          }\n                     });\n                     setScheduleData(updatedScheduleDept);\n\n                    // Remove assignments for this department from templates\n                     const currentTemplatesDept = Array.isArray(savedTemplates) ? savedTemplates : [];\n                     const updatedTemplatesDept = currentTemplatesDept.map(t => {\n                         let newAssignments = JSON.parse(JSON.stringify(t.assignments));\n                         let templateChanged = false;\n                         if (t.type === 'daily') {\n                              if ((newAssignments as DailyAssignments)[itemToDelete.id]) {\n                                 delete (newAssignments as DailyAssignments)[itemToDelete.id];\n                                 templateChanged = true;\n                              }\n                         } else if (t.type === 'weekly') {\n                             Object.keys(newAssignments).forEach(dateKey => {\n                                 if ((newAssignments as any)[dateKey]?.[itemToDelete.id]) {\n                                     delete (newAssignments as WeeklyAssignments)[dateKey][itemToDelete.id];\n                                     templateChanged = true;\n                                      // If no departments left for the day in the template, remove the day\n                                      if (Object.keys((newAssignments as WeeklyAssignments)[dateKey]).length === 0) {\n                                         delete (newAssignments as WeeklyAssignments)[dateKey];\n                                      }\n                                 }\n                             });\n                         }\n                          // If template becomes empty after removal, filter it out later\n                          if (Object.keys(newAssignments).length === 0) {\n                              return null; // Mark for removal\n                          }\n                         return templateChanged ? { ...t, assignments: newAssignments } : t;\n                     }).filter(t => t !== null) as ShiftTemplate[]; // Filter out nulls\n                     setSavedTemplates(updatedTemplatesDept);\n                    message = `Departamento \"${itemToDelete.name}\" eliminado.`;\n                    break;\n                case 'employee':\n                    setEmployees(prevEmps => prevEmps.filter(emp => emp.id !== itemToDelete.id));\n                    // Remove assignments for this employee from schedule data\n                     const updatedScheduleEmp = { ...scheduleData };\n                     Object.keys(updatedScheduleEmp).forEach(dateKey => {\n                          let dayChanged = false;\n                          Object.keys(updatedScheduleEmp[dateKey].assignments).forEach(deptId => {\n                              const originalLength = updatedScheduleEmp[dateKey].assignments[deptId].length;\n                              updatedScheduleEmp[dateKey].assignments[deptId] = updatedScheduleEmp[dateKey].assignments[deptId].filter(a => a.employee.id !== itemToDelete.id);\n                              if (updatedScheduleEmp[dateKey].assignments[deptId].length < originalLength) {\n                                  dayChanged = true;\n                              }\n                              // If department becomes empty, remove it\n                              if (updatedScheduleEmp[dateKey].assignments[deptId].length === 0) {\n                                  delete updatedScheduleEmp[dateKey].assignments[deptId];\n                              }\n                          });\n                           // If day becomes empty, remove it\n                           if (dayChanged && Object.keys(updatedScheduleEmp[dateKey].assignments).length === 0) {\n                               delete updatedScheduleEmp[dateKey];\n                           }\n                     });\n                     setScheduleData(updatedScheduleEmp);\n\n                       // Remove assignments for this employee from templates\n                       const currentTemplatesEmp = Array.isArray(savedTemplates) ? savedTemplates : [];\n                       const updatedTemplatesEmp = currentTemplatesEmp.map(t => {\n                           let newAssignments = JSON.parse(JSON.stringify(t.assignments));\n                           let templateChanged = false;\n                           if (t.type === 'daily') {\n                               Object.keys(newAssignments).forEach(deptId => {\n                                  const originalLength = (newAssignments[deptId] || []).length;\n                                   newAssignments[deptId] = (newAssignments[deptId] || []).filter((a: any) => a.employee.id !== itemToDelete.id);\n                                   if (newAssignments[deptId].length < originalLength) {\n                                       templateChanged = true;\n                                   }\n                                   if (newAssignments[deptId].length === 0) {\n                                       delete newAssignments[deptId];\n                                   }\n                               });\n                           } else if (t.type === 'weekly') {\n                               Object.keys(newAssignments).forEach(dateKey => {\n                                   let dayInTemplateChanged = false;\n                                   Object.keys(newAssignments[dateKey] || {}).forEach(deptId => {\n                                      const originalLength = (newAssignments[dateKey][deptId] || []).length;\n                                       newAssignments[dateKey][deptId] = (newAssignments[dateKey][deptId] || []).filter((a: any) => a.employee.id !== itemToDelete.id);\n                                       if (newAssignments[dateKey][deptId].length < originalLength) {\n                                           templateChanged = true;\n                                           dayInTemplateChanged = true;\n                                       }\n                                       if (newAssignments[dateKey][deptId].length === 0) {\n                                           delete newAssignments[dateKey][deptId];\n                                       }\n                                   });\n                                    // If day becomes empty in template, remove it\n                                    if (dayInTemplateChanged && Object.keys(newAssignments[dateKey]).length === 0) {\n                                       delete newAssignments[dateKey];\n                                    }\n                               });\n                           }\n                           // If template becomes empty after removal, filter it out later\n                            if (Object.keys(newAssignments).length === 0) {\n                                return null; // Mark for removal\n                            }\n                           return templateChanged ? { ...t, assignments: newAssignments } : t;\n                       }).filter(t => t !== null) as ShiftTemplate[]; // Filter out nulls\n                      setSavedTemplates(updatedTemplatesEmp);\n                     message = `Colaborador \"${itemToDelete.name}\" eliminado.`;\n                     break;\n                  case 'template':\n                      const currentTemplates = Array.isArray(savedTemplates) ? savedTemplates : [];\n                      const updatedTemplates = currentTemplates.filter(t => t.id !== itemToDelete.id);\n                      setSavedTemplates(updatedTemplates);\n                      message = `Template \"${itemToDelete.name}\" eliminado.`;\n                     break;\n             }\n             toast({ title: 'Elemento Eliminado', description: message, variant: 'destructive' });\n         } catch (error) {\n              console.error(`Error deleting item type ${itemToDelete.type}:`, error);\n              toast({ title: 'Error al Eliminar', description: 'No se pudo completar la eliminación.', variant: 'destructive' });\n         } finally {\n             setItemToDelete(null); // Close the dialog\n         }\n     };\n\n\n     const handlePreviousWeek = () => {\n        setCurrentDate(prevDate => subWeeks(prevDate, 1));\n     };\n\n     const handleNextWeek = () => {\n        setCurrentDate(prevDate => addWeeks(prevDate, 1));\n     };\n\n    const handleSaveSchedule = () => {\n        // Since data is saved via useEffect, this button might just provide user feedback\n        toast({ title: 'Horario Guardado', description: 'Los cambios en el horario se guardan automáticamente.' });\n        // Optionally trigger a manual save if needed, though useEffect should handle it\n        // localStorage.setItem(SCHEDULE_DATA_KEY, JSON.stringify(scheduleData)); // Example manual save\n    };\n\n\n     const handleDuplicateDay = (sourceDate: Date) => {\n         const sourceDayKey = format(sourceDate, 'yyyy-MM-dd');\n         const nextDayDate = addDays(sourceDate, 1);\n         const nextDayKey = format(nextDayDate, 'yyyy-MM-dd');\n         const sourceSchedule = scheduleData[sourceDayKey];\n\n         // Check if source day has any assignments\n         if (!sourceSchedule || Object.keys(sourceSchedule.assignments).length === 0 || Object.values(sourceSchedule.assignments).every(dept => dept.length === 0)) {\n             toast({ title: 'Nada que Duplicar', description: `No hay turnos asignados para el ${format(sourceDate, 'PPP', { locale: es })}.`, variant: 'default' });\n             return;\n         }\n\n         // Create a deep copy of the assignments to avoid reference issues\n         const duplicatedAssignments = JSON.parse(JSON.stringify(sourceSchedule.assignments));\n         // Update assignment IDs and potentially re-fetch full employee objects if needed\n         Object.keys(duplicatedAssignments).forEach(deptId => {\n             duplicatedAssignments[deptId].forEach((assign: ShiftAssignment) => {\n                 // Generate a new unique ID for the duplicated assignment\n                 assign.id = `shift_${assign.employee.id}_${nextDayKey}_${assign.startTime.replace(':', '')}_${Math.random().toString(36).substring(2, 7)}`;\n                  // Ensure the employee object is the full object, not just the ID reference if that was stored\n                  const fullEmployee = employees.find(emp => emp.id === assign.employee.id);\n                  if (fullEmployee) {\n                      assign.employee = fullEmployee;\n                  } else {\n                       // Handle case where employee might not be found (e.g., if deleted between planning and duplicating)\n                       console.warn(`Employee ${assign.employee.id} not found during duplication.`);\n                       assign.employee = { id: assign.employee.id, name: `(ID: ${assign.employee.id})`, locationIds: [] }; // Placeholder\n                  }\n             });\n         });\n\n         // Update the schedule data state\n         setScheduleData(prevData => ({\n             ...prevData,\n             [nextDayKey]: {\n                 date: nextDayDate,\n                 assignments: duplicatedAssignments,\n             },\n         }));\n\n         // If in day view, switch to the next day\n         if (viewMode === 'day') {\n             setTargetDate(nextDayDate);\n         }\n\n         toast({ title: 'Horario Duplicado', description: `El horario del ${format(sourceDate, 'dd/MM')} se duplicó al ${format(nextDayDate, 'dd/MM')}.` });\n     };\n\n    const handleDuplicateWeek = () => {\n        const nextWeekStartDate = addWeeks(startOfWeek(currentDate, { weekStartsOn: 1 }), 1);\n        let updatedData = { ...scheduleData };\n        let duplicatedCount = 0;\n\n        weekDates.forEach(sourceDate => {\n            const sourceDayKey = format(sourceDate, 'yyyy-MM-dd');\n            const sourceDaySchedule = scheduleData[sourceDayKey];\n            // Check if there are assignments to duplicate for the source day\n            if (sourceDaySchedule && Object.keys(sourceDaySchedule.assignments).length > 0 && Object.values(sourceDaySchedule.assignments).some(dept => dept.length > 0)) {\n                 // Calculate target date based on the day of the week\n                 const dayOfWeek = getDay(sourceDate); // 0=Sun, 1=Mon,...\n                 const targetDateIndex = (dayOfWeek === 0 ? 6 : dayOfWeek - 1); // Adjust index for Monday start (0=Mon, 6=Sun)\n                 if (targetDateIndex < 0 || targetDateIndex >= 7) {\n                     console.error(\"Invalid target date index calculated:\", targetDateIndex, \"for date:\", sourceDate);\n                     return; // Skip this day if index calculation fails\n                 }\n                const targetDate = addDays(nextWeekStartDate, targetDateIndex);\n                const targetDayKey = format(targetDate, 'yyyy-MM-dd');\n\n                // Deep copy assignments and update IDs/employee objects\n                const duplicatedAssignments = JSON.parse(JSON.stringify(sourceDaySchedule.assignments));\n                Object.keys(duplicatedAssignments).forEach(deptId => {\n                     duplicatedAssignments[deptId].forEach((assign: ShiftAssignment) => {\n                         assign.id = `shift_${assign.employee.id}_${targetDayKey}_${assign.startTime.replace(':', '')}_${Math.random().toString(36).substring(2, 7)}`;\n                          const fullEmployee = employees.find(emp => emp.id === assign.employee.id);\n                          assign.employee = fullEmployee || { id: assign.employee.id, name: `(ID: ${assign.employee.id})`, locationIds: [] }; // Handle missing employee\n                     });\n                });\n\n                // Assign duplicated data to the target date\n                updatedData[targetDayKey] = {\n                    date: targetDate,\n                    assignments: duplicatedAssignments,\n                };\n                duplicatedCount++;\n            }\n        });\n\n        if (duplicatedCount > 0) {\n            setScheduleData(updatedData); // Update the state with all duplicated days\n            setCurrentDate(nextWeekStartDate); // Move view to the next week\n            toast({ title: 'Semana Duplicada', description: `El horario de esta semana (${duplicatedCount} día(s)) se duplicó a la siguiente.` });\n        } else {\n            toast({ title: 'Nada que Duplicar', description: 'No hay turnos en la semana actual para duplicar.', variant: 'default' });\n        }\n    };\n\n\n     const handleConfirmClearDay = (dateToClear: Date) => {\n         setClearingDate(dateToClear); // Set the date to be cleared, triggers the AlertDialog\n     };\n\n     const handleClearDay = () => {\n         if (!clearingDate) return;\n         const dateKey = format(clearingDate, 'yyyy-MM-dd');\n\n         setScheduleData(prevData => {\n             const updatedData = { ...prevData };\n             // Remove the assignments for the specific day, or remove the day entry entirely\n             if (updatedData[dateKey]) {\n                 // Option 1: Keep the day entry but clear assignments\n                 // updatedData[dateKey].assignments = {};\n                 // Option 2: Remove the day entry completely\n                  delete updatedData[dateKey];\n             }\n             return updatedData;\n         });\n         setClearingDate(null); // Close the dialog\n         toast({ title: 'Horario Limpiado', description: `Se eliminaron todos los turnos para el ${format(clearingDate, 'PPP', { locale: es })}.`, variant: 'destructive' });\n     };\n\n\n     const handleOpenTemplateModal = () => {\n         let hasAssignments = false;\n         if (viewMode === 'day') {\n             const currentDayKey = format(targetDate, 'yyyy-MM-dd');\n             const currentSchedule = scheduleData[currentDayKey];\n             // Check if assignments exist and are not empty arrays\n             hasAssignments = !!currentSchedule && Object.keys(currentSchedule.assignments).length > 0 && Object.values(currentSchedule.assignments).some(dept => dept.length > 0);\n         } else { // Week view\n             // Check if any day in the week has assignments\n             hasAssignments = weekDates.some(date => {\n                 const dayKey = format(date, 'yyyy-MM-dd');\n                 const daySchedule = scheduleData[dayKey];\n                 return !!daySchedule && Object.keys(daySchedule.assignments).length > 0 && Object.values(daySchedule.assignments).some(dept => dept.length > 0);\n             });\n         }\n\n         if (!hasAssignments) {\n             const contextDescription = viewMode === 'day' ? `el ${format(targetDate, 'PPP', { locale: es })}` : 'la semana actual';\n             toast({ title: 'Template Vacío', description: `No hay turnos asignados en ${contextDescription} para guardar como template.`, variant: 'default' });\n             return; // Don't open modal if no data\n         }\n\n         setTemplateName(''); // Clear previous name\n         setIsTemplateModalOpen(true); // Open the modal\n     };\n\n    const handleSaveTemplate = () => {\n         if (!templateName.trim()) {\n             toast({ title: 'Nombre Inválido', description: 'Por favor ingresa un nombre para el template.', variant: 'destructive' });\n             return;\n         }\n\n         let templateAssignments: ShiftTemplate['assignments'];\n         const templateType = viewMode === 'day' ? 'daily' : 'weekly';\n         let hasDataToSave = false; // Flag to check if there's actual data\n\n         if (templateType === 'daily') {\n             const sourceDate = targetDate;\n             const currentDayKey = format(sourceDate, 'yyyy-MM-dd');\n             const currentAssignmentsRaw = scheduleData[currentDayKey]?.assignments || {};\n             const cleanedAssignments: DailyAssignments = {};\n             Object.keys(currentAssignmentsRaw).forEach(deptId => {\n                  if (currentAssignmentsRaw[deptId]?.length > 0) {\n                     // Map assignments, removing instance ID and storing only employee ID\n                     cleanedAssignments[deptId] = currentAssignmentsRaw[deptId].map(({ id, employee, ...rest }) => ({\n                          ...rest,\n                          employee: { id: employee.id } // Only store employee ID reference\n                     }));\n                     hasDataToSave = true; // Mark that we have data\n                  }\n             });\n             templateAssignments = cleanedAssignments;\n         } else { // Weekly template\n             templateAssignments = {};\n             weekDates.forEach(date => {\n                 const dateKey = format(date, 'yyyy-MM-dd');\n                 const dailyAssignmentsRaw = scheduleData[dateKey]?.assignments || {};\n                 const cleanedDailyAssignments: DailyAssignments = {};\n                 let dayHasData = false;\n                 Object.keys(dailyAssignmentsRaw).forEach(deptId => {\n                      if (dailyAssignmentsRaw[deptId]?.length > 0) {\n                         cleanedDailyAssignments[deptId] = dailyAssignmentsRaw[deptId].map(({ id, employee, ...rest }) => ({\n                             ...rest,\n                             employee: { id: employee.id } // Store only employee ID\n                         }));\n                         dayHasData = true;\n                         hasDataToSave = true; // Mark that we have data\n                      }\n                 });\n                 // Only add the day to the template if it has assignments\n                 if (dayHasData) {\n                      (templateAssignments as WeeklyAssignments)[dateKey] = cleanedDailyAssignments;\n                 }\n             });\n         }\n\n         // Prevent saving if no actual assignments were found\n         if (!hasDataToSave) {\n             toast({ title: 'Template Vacío', description: 'No se encontraron turnos válidos para guardar.', variant: 'default' });\n             setIsTemplateModalOpen(false);\n             return;\n         }\n\n         // Create the new template object\n         const newTemplate: ShiftTemplate = {\n             id: `tpl-${Date.now()}`,\n             name: templateName.trim(),\n             locationId: selectedLocationId,\n             type: templateType,\n             assignments: templateAssignments,\n             createdAt: new Date().toISOString(), // Add creation timestamp\n         };\n\n          // Update the state with the new template\n          setSavedTemplates(prev => {\n              // Ensure 'prev' is an array, defaulting to empty if not\n              const validPrev = Array.isArray(prev) ? prev : [];\n              const updatedTemplates = [...validPrev, newTemplate];\n               console.log(\"[Save Template] Updating state with new templates:\", updatedTemplates);\n              return updatedTemplates; // Return the updated array\n          });\n\n         toast({ title: 'Template Guardado', description: `El template \"${newTemplate.name}\" (${templateType === 'daily' ? 'Diario' : 'Semanal'}) se ha guardado.` });\n         setIsTemplateModalOpen(false); // Close modal\n         setTemplateName(''); // Reset name field\n     };\n\n\n    const handleLoadTemplate = (templateId: string) => {\n        if (typeof window === 'undefined') return; // Client-side only\n\n        const templatesArray = Array.isArray(savedTemplates) ? savedTemplates : [];\n        console.log(`[Load Template] Attempting load. ID: ${templateId}. All templates in state:`, templatesArray);\n        const templateToLoad = templatesArray.find(t => t.id === templateId);\n\n        if (!templateToLoad) {\n            console.error(`[Load Template] Template with ID ${templateId} not found.`);\n            toast({ title: 'Template no encontrado', variant: 'destructive' });\n            return;\n        }\n        console.log(`[Load Template] Found template:`, templateToLoad);\n\n        // --- Validations ---\n        if (templateToLoad.locationId !== selectedLocationId) {\n            toast({\n                title: 'Sede Incorrecta',\n                description: `El template \"${templateToLoad.name}\" pertenece a otra sede. Cambia de sede para cargarlo.`,\n                variant: 'destructive',\n            });\n            return;\n        }\n        if (templateToLoad.type !== viewMode) {\n            const requiredView = templateToLoad.type === 'daily' ? 'diaria' : 'semanal';\n            toast({\n                title: 'Vista Incorrecta',\n                description: `El template \"${templateToLoad.name}\" es ${templateToLoad.type === 'daily' ? 'diario' : 'semanal'}. Cambia a la vista ${requiredView} para cargarlo.`,\n                variant: 'destructive',\n            });\n            return;\n        }\n\n        // --- Confirmation Dialog ---\n         // You might want to add a confirmation dialog here before overwriting the schedule\n         // For now, proceeding directly with loading.\n\n        // --- Loading Logic ---\n        let updatedScheduleData = { ...scheduleData };\n        let successMessage = '';\n        let assignmentsLoadedCount = 0;\n\n        try {\n            if (templateToLoad.type === 'daily') {\n                const loadTargetDate = targetDate; // Use the currently viewed date in day mode\n                const dateKey = format(loadTargetDate, 'yyyy-MM-dd');\n                const loadedAssignments: { [deptId: string]: ShiftAssignment[] } = {};\n\n                // Iterate through departments in the template's assignments\n                Object.keys(templateToLoad.assignments).forEach(deptId => {\n                    const assignmentsForDept = (templateToLoad.assignments as DailyAssignments)[deptId];\n                    if (Array.isArray(assignmentsForDept)) {\n                        // Map template assignments to full ShiftAssignment objects\n                        loadedAssignments[deptId] = assignmentsForDept\n                            .map((assignTemplate: Omit<ShiftAssignment, 'id'> & { employee: { id: string } }) => {\n                                const employee = employees.find(emp => emp.id === assignTemplate.employee.id);\n                                if (employee) { // Check if employee exists\n                                    // Generate a new unique ID for the loaded assignment\n                                    const newAssignId = `shift_${employee.id}_${dateKey}_${assignTemplate.startTime.replace(':', '')}_${Math.random().toString(36).substring(2, 7)}`;\n                                    assignmentsLoadedCount++;\n                                    return {\n                                        ...assignTemplate,\n                                        id: newAssignId,\n                                        employee: employee, // Use the full employee object\n                                    };\n                                }\n                                console.warn(`[LOAD Daily] Employee ID ${assignTemplate.employee.id} not found while loading template. Skipping assignment.`);\n                                return null; // Skip if employee doesn't exist\n                            })\n                            .filter((a): a is ShiftAssignment => a !== null); // Filter out nulls\n                    } else {\n                        console.warn(`[LOAD Daily] Assignments for dept ${deptId} in template ${templateId} is not an array.`);\n                    }\n                });\n\n                 if (assignmentsLoadedCount === 0) {\n                     console.warn(`[LOAD Daily] No valid assignments found or matched in template ${templateId}.`);\n                     toast({ title: 'Template Vacío o Sin Coincidencias', description: `No se encontraron turnos válidos para cargar del template \"${templateToLoad.name}\".`, variant: 'default' });\n                     setIsConfigModalOpen(false); // Close config modal if open\n                     return;\n                 }\n                 // Overwrite the schedule data for the target date\n                updatedScheduleData[dateKey] = {\n                     date: loadTargetDate,\n                     assignments: loadedAssignments,\n                };\n                successMessage = `Se cargó el template \"${templateToLoad.name}\" para ${format(loadTargetDate, 'PPP', { locale: es })}.`;\n\n            } else { // Weekly template\n                // Clear the current week's data before applying the template\n                 weekDates.forEach(date => {\n                     const dateKey = format(date, 'yyyy-MM-dd');\n                     updatedScheduleData[dateKey] = { date: date, assignments: {} }; // Reset assignments for each day\n                 });\n\n                 // Iterate through dates defined in the weekly template's assignments\n                Object.keys(templateToLoad.assignments).forEach(sourceDateKey => {\n                    const templateDate = parseDateFnsInternal(sourceDateKey, 'yyyy-MM-dd', new Date()); // Get Date object from template key\n                    if (!isValid(templateDate)) {\n                         console.warn(`[LOAD Weekly] Invalid date key ${sourceDateKey} in template. Skipping.`);\n                         return;\n                    }\n\n                    // Find the corresponding date in the currently viewed week based on the day of the week\n                     const dayOfWeek = getDay(templateDate); // 0=Sun, 1=Mon,...\n                     const targetDateIndex = (dayOfWeek === 0 ? 6 : dayOfWeek - 1); // Map to Monday-start index (0=Mon, 6=Sun)\n\n                    if (targetDateIndex >= 0 && targetDateIndex < weekDates.length) {\n                         const targetWeekDate = weekDates[targetDateIndex]; // The actual Date object for the target day in the current week\n                         const targetDateKey = format(targetWeekDate, 'yyyy-MM-dd'); // The key for the scheduleData state\n\n                        const dailyAssignmentsFromTemplate = (templateToLoad.assignments as WeeklyAssignments)[sourceDateKey] || {};\n                        const loadedDailyAssignments: { [deptId: string]: ShiftAssignment[] } = {};\n\n                        // Process assignments for each department within the day from the template\n                        Object.keys(dailyAssignmentsFromTemplate).forEach(deptId => {\n                             const assignmentsForDept = dailyAssignmentsFromTemplate[deptId];\n                             if (Array.isArray(assignmentsForDept)) {\n                                loadedDailyAssignments[deptId] = assignmentsForDept\n                                    .map((assignTemplate: Omit<ShiftAssignment, 'id'> & { employee: { id: string } }) => {\n                                        const employee = employees.find(emp => emp.id === assignTemplate.employee.id);\n                                        if (employee) {\n                                            const newAssignId = `shift_${employee.id}_${targetDateKey}_${assignTemplate.startTime.replace(':', '')}_${Math.random().toString(36).substring(2, 7)}`;\n                                            assignmentsLoadedCount++;\n                                            return {\n                                                ...assignTemplate,\n                                                id: newAssignId,\n                                                employee: employee,\n                                            };\n                                        }\n                                        console.warn(`[LOAD Weekly] Employee ID ${assignTemplate.employee.id} not found for ${sourceDateKey}. Skipping.`);\n                                        return null;\n                                    })\n                                    .filter((a): a is ShiftAssignment => a !== null);\n                            } else {\n                                 console.warn(`[LOAD Weekly] Assignments for dept ${deptId} on ${sourceDateKey} is not array.`);\n                             }\n                        });\n\n                         // If assignments were loaded for this day, update the scheduleData for the target date\n                         if (Object.keys(loadedDailyAssignments).length > 0) {\n                             // Merge with existing data for the target day (though we cleared it earlier)\n                             updatedScheduleData[targetDateKey] = {\n                                ...updatedScheduleData[targetDateKey], // Keep the correct Date object\n                                assignments: loadedDailyAssignments // Apply the loaded assignments\n                             };\n                         }\n\n                    } else {\n                        console.warn(`[LOAD Weekly] Could not map template date ${sourceDateKey} to current week. Index: ${targetDateIndex}`);\n                    }\n                });\n\n                 if (assignmentsLoadedCount === 0) {\n                     console.warn(`[LOAD Weekly] No valid assignments found or matched in template ${templateId}.`);\n                     toast({ title: 'Template Vacío o Sin Coincidencias', description: `No se encontraron turnos válidos para cargar del template \"${templateToLoad.name}\".`, variant: 'default' });\n                     setIsConfigModalOpen(false); // Close config modal if open\n                     return;\n                 }\n\n                successMessage = `Se cargó el template semanal \"${templateToLoad.name}\" en la semana actual.`;\n            }\n\n\n             setScheduleData(updatedScheduleData); // Update the main schedule state\n             toast({ title: 'Template Cargado', description: successMessage });\n             setIsConfigModalOpen(false); // Close the config/template selection modal\n         } catch (error) {\n             console.error(\"[Load Template] Error loading template:\", error);\n             toast({ title: 'Error al Cargar Template', description: 'No se pudo cargar el template seleccionado.', variant: 'destructive' });\n         }\n     };\n\n\n\n    const isHoliday = useCallback((date: Date | null | undefined): boolean => {\n        if (!date || !isValid(date)) return false;\n        const dateStr = format(date, 'yyyy-MM-dd');\n        return holidaySet.has(dateStr);\n    }, [holidaySet]);\n\n    const handleNotesChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setNotes(event.target.value);\n    };\n\n    const handleSaveNotes = () => {\n        toast({ title: 'Notas Guardadas', description: 'Tus notas han sido guardadas localmente.' });\n    };\n\n    // --- CSV Import Handlers ---\n    const parseScheduleCSV = (content: string): CsvRowData[] => {\n        const rows = content.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n').trim().split('\\n');\n        if (rows.length < 2) return [];\n\n        const headers = rows[0].split(',').map(h => h.trim());\n        const data: CsvRowData[] = [];\n\n        // Required headers for template mode\n        const requiredHeaders = ['ID_Empleado', 'Departamento', 'Hora_Inicio', 'Hora_Fin'];\n\n        // Check if required headers are present (case-insensitive)\n        const missingHeaders = requiredHeaders.filter(reqHeader =>\n            !headers.some(h => h.toLowerCase() === reqHeader.toLowerCase())\n        );\n\n        if (missingHeaders.length > 0) {\n             // Provide a more informative error message\n             throw new Error(`Faltan encabezados CSV requeridos: ${missingHeaders.join(', ')}. Asegúrate de que el archivo incluya estas columnas.`);\n        }\n\n        // Find the actual header names used in the CSV for mapping\n         const headerMapping: { [key in keyof CsvRowData]?: string } = {};\n         const schemaKeys = Object.keys(csvRowSchema.shape) as (keyof CsvRowData)[];\n         schemaKeys.forEach(key => {\n            const foundHeader = headers.find(h => h.toLowerCase() === key.toLowerCase());\n            if (foundHeader) {\n                headerMapping[key] = foundHeader;\n            }\n         });\n         // Manually add Fecha if it exists, even if not strictly required by the new logic\n         const fechaHeader = headers.find(h => h.toLowerCase() === 'fecha');\n         if (fechaHeader) {\n             headerMapping['Fecha'] = fechaHeader;\n         }\n\n\n        for (let i = 1; i < rows.length; i++) {\n            if (!rows[i].trim()) continue;\n\n            const values = rows[i].split(',');\n            const rowObject: Partial<CsvRowData> = {};\n\n            // Map values using the found header names\n             headers.forEach((header, index) => {\n                 // Find the standard key that matches the current CSV header\n                 const standardKey = (Object.keys(headerMapping) as (keyof CsvRowData)[]).find(\n                     stdKey => headerMapping[stdKey]?.toLowerCase() === header.toLowerCase()\n                 );\n                 if (standardKey) {\n                     rowObject[standardKey] = values[index]?.trim() || '';\n                 }\n             });\n\n             // Provide a default 'Fecha' if missing in the CSV, using the current year's first Monday\n             if (!rowObject['Fecha']) {\n                 const firstMondayOfYear = startOfWeek(new Date(new Date().getFullYear(), 0, 1), { weekStartsOn: 1 });\n                 rowObject['Fecha'] = format(firstMondayOfYear, 'yyyy-MM-dd');\n                 console.log(`Fila CSV ${i + 1}: Usando fecha por defecto ${rowObject['Fecha']} ya que 'Fecha' no se encontró.`);\n             }\n\n            try {\n                const validatedRow = csvRowSchema.parse(rowObject);\n                data.push(validatedRow);\n            } catch (error) {\n                console.warn(`Saltando fila CSV ${i + 1} por error de validación:`, error instanceof z.ZodError ? error.errors : error);\n            }\n        }\n        return data;\n    };\n\n\n     // Process the parsed CSV data (Template Import Logic)\n    const processCSVAsTemplate = useCallback((parsedData: CsvRowData[]) => {\n        if (parsedData.length === 0) {\n            toast({ title: 'Sin Datos Válidos', description: 'No se encontraron filas válidas en el archivo CSV.', variant: 'destructive' });\n            return;\n        }\n\n        let importedCount = 0;\n        let skippedCount = 0;\n        let errorCount = 0;\n        // Start with a clean slate for the current week, preserving the dates\n        const newScheduleAssignmentsForWeek: { [dateKey: string]: ScheduleData } = {};\n        weekDates.forEach(date => {\n            newScheduleAssignmentsForWeek[format(date, 'yyyy-MM-dd')] = { date, assignments: {} };\n        });\n\n        parsedData.forEach(row => {\n            // --- Find Employee ---\n            const employee = employees.find(emp => emp.id === row.ID_Empleado);\n            if (!employee) {\n                console.warn(`[CSV Import] Empleado ID ${row.ID_Empleado} no encontrado, saltando turno.`);\n                skippedCount++;\n                return;\n            }\n            // Ensure employee belongs to the current location\n             if (!employee.locationIds.includes(selectedLocationId)) {\n                console.warn(`[CSV Import] Empleado ${employee.name} no pertenece a la sede ${selectedLocationId}, saltando turno.`);\n                skippedCount++;\n                return;\n             }\n\n            // --- Find Department ---\n            const department = filteredDepartments.find(dep => dep.name.toLowerCase() === row.Departamento.toLowerCase());\n            if (!department) {\n                console.warn(`[CSV Import] Departamento \"${row.Departamento}\" no encontrado en la sede actual (${selectedLocationId}), saltando turno.`);\n                errorCount++;\n                return;\n            }\n\n            // --- Determine Target Date ---\n            // Use the Fecha from CSV (even if default was inserted) to determine day of week\n            const csvDate = parseDateFnsInternal(row.Fecha || format(new Date(), 'yyyy-MM-dd'), 'yyyy-MM-dd', new Date()); // Use today if Fecha somehow missing after parsing\n            if (!isValid(csvDate)) {\n                console.warn(`[CSV Import] Fecha inválida en CSV \"${row.Fecha}\", saltando turno.`);\n                errorCount++;\n                return;\n            }\n             let csvDayIndex = getDay(csvDate); // 0=Sun, 1=Mon,...\n             csvDayIndex = (csvDayIndex === 0) ? 6 : csvDayIndex - 1; // Map Sunday(0) to index 6, Monday(1) to 0, etc.\n\n            // Ensure the index is within the bounds of the weekDates array\n            if (csvDayIndex < 0 || csvDayIndex >= weekDates.length) {\n                 console.warn(`[CSV Import] Índice de día calculado (${csvDayIndex}) fuera de rango para fecha CSV \"${row.Fecha}\". Saltando turno.`);\n                 errorCount++;\n                 return;\n            }\n\n            const targetDateForShift = weekDates[csvDayIndex];\n            if (!targetDateForShift) {\n                // This case should ideally not happen if csvDayIndex is validated\n                console.warn(`[CSV Import] No se pudo mapear el día de la semana del CSV (${row.Fecha}) a la semana actual.`);\n                errorCount++;\n                return;\n            }\n            const targetDateKey = format(targetDateForShift, 'yyyy-MM-dd');\n\n            // Initialize department array if it doesn't exist for the target date\n            if (!newScheduleAssignmentsForWeek[targetDateKey].assignments[department.id]) {\n                newScheduleAssignmentsForWeek[targetDateKey].assignments[department.id] = [];\n            }\n\n            // --- Check for Duplicate Assignment on Target Day ---\n            const existingAssignmentsForTargetDay = Object.values(newScheduleAssignmentsForWeek[targetDateKey].assignments).flat();\n            if (existingAssignmentsForTargetDay.some(a => a.employee.id === employee.id)) {\n                console.warn(`[CSV Import] Empleado ${employee.name} ya tiene un turno asignado el ${targetDateKey} (importado de CSV), saltando duplicado.`);\n                skippedCount++;\n                return;\n            }\n\n            // --- Create New Assignment ---\n            const includesBreakRaw = row.Incluye_Descanso?.trim().toLowerCase();\n            const includeBreakParsed = includesBreakRaw === 'sí' || includesBreakRaw === 'si' || includesBreakRaw === 'true' || includesBreakRaw === '1';\n\n            const newAssignment: ShiftAssignment = {\n                id: `shift_${employee.id}_${targetDateKey}_${row.Hora_Inicio.replace(':', '')}_${Math.random().toString(36).substring(2, 7)}`,\n                employee: employee,\n                startTime: row.Hora_Inicio,\n                endTime: row.Hora_Fin,\n                includeBreak: includeBreakParsed,\n                breakStartTime: includeBreakParsed ? row.Inicio_Descanso : undefined,\n                breakEndTime: includeBreakParsed ? row.Fin_Descanso : undefined,\n            };\n\n            // Add the new assignment\n            newScheduleAssignmentsForWeek[targetDateKey].assignments[department.id].push(newAssignment);\n            importedCount++;\n        });\n\n        // --- Update State ---\n        // Overwrite the schedule for the current week with the imported data\n        setScheduleData(prevData => ({\n            ...prevData,\n            ...newScheduleAssignmentsForWeek\n        }));\n\n        // --- User Feedback ---\n        let toastDescription = `${importedCount} turno(s) importado(s) y aplicados a la semana actual.`;\n        if (skippedCount > 0) toastDescription += ` ${skippedCount} omitido(s) (duplicados o empleado no encontrado/válido).`;\n        if (errorCount > 0) toastDescription += ` ${errorCount} error(es) de datos (departamento no encontrado o fecha inválida).`;\n\n        toast({\n            title: 'Importación CSV (modo Template) Completa',\n            description: toastDescription,\n            variant: errorCount > 0 ? 'destructive' : 'default',\n            duration: 7000,\n        });\n\n    }, [employees, filteredDepartments, selectedLocationId, setScheduleData, toast, weekDates]);\n\n\n     // Handle file selection from input\n     const handleCSVFileChange = useCallback(async (event: ChangeEvent<HTMLInputElement>) => {\n         const file = event.target.files?.[0];\n         if (!file) return;\n\n         setIsImportingCSV(true);\n         try {\n             const content = await file.text();\n             const parsedData = parseScheduleCSV(content);\n             // Process the data using the template logic\n             processCSVAsTemplate(parsedData);\n         } catch (error) {\n             console.error(\"Error procesando archivo CSV:\", error);\n             const errorMessage = error instanceof Error ? error.message : 'No se pudo leer o procesar el archivo.';\n             toast({\n                 title: 'Error al Importar CSV',\n                 description: errorMessage, // Display the improved error message\n                 variant: 'destructive',\n                 duration: 9000, // Slightly longer duration\n             });\n         } finally {\n             setIsImportingCSV(false);\n             // Reset the file input so the same file can be selected again\n             if (fileInputRef.current) {\n                 fileInputRef.current.value = '';\n             }\n         }\n     }, [processCSVAsTemplate, toast]); // Dependencies include the processing function\n\n     // Trigger file input click\n     const triggerCSVFileInput = () => {\n         fileInputRef.current?.click();\n     };\n\n\n    const DndWrapper: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n        // Disable DndContext completely on mobile\n        if (isMobile || !isClient) {\n            return <>{children}</>;\n        }\n        // Render DndContext only on desktop and client-side\n        return (\n            <DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\n                {children}\n            </DndContext>\n        );\n    };\n\n    const handleExportCSV = () => {\n        const dataToExport: any[] = [];\n        const headers = [\n            'ID_Empleado',\n            'Nombre_Empleado',\n            'Fecha',\n            'Departamento',\n            'Hora_Inicio',\n            'Hora_Fin',\n            'Incluye_Descanso',\n            'Inicio_Descanso',\n            'Fin_Descanso',\n            'Horas_Trabajadas',\n        ];\n        dataToExport.push(headers);\n\n        weekDates.forEach(date => {\n            const dateKey = format(date, 'yyyy-MM-dd');\n            const daySchedule = scheduleData[dateKey];\n\n            if (daySchedule) {\n                Object.entries(daySchedule.assignments).forEach(([deptId, assignments]) => {\n                    const department = departments.find(d => d.id === deptId);\n                    assignments.forEach(assignment => {\n                         const employee = employees.find(emp => emp.id === assignment.employee.id);\n                         if (!employee) return; // Skip if employee details not found (should not happen ideally)\n\n                        const durationHours = calculateShiftDuration(assignment, date);\n                        dataToExport.push([\n                            employee.id,\n                            employee.name,\n                            dateKey,\n                            department?.name || deptId, // Use department name if found\n                            formatTo12Hour(assignment.startTime), // Format time\n                            formatTo12Hour(assignment.endTime),   // Format time\n                            assignment.includeBreak ? 'Sí' : 'No',\n                            assignment.includeBreak && assignment.breakStartTime ? formatTo12Hour(assignment.breakStartTime) : '', // Format break time\n                            assignment.includeBreak && assignment.breakEndTime ? formatTo12Hour(assignment.breakEndTime) : '',     // Format break time\n                            durationHours.toFixed(2), // Format hours\n                        ]);\n                    });\n                });\n            }\n        });\n\n\n        if (dataToExport.length <= 1) { // Only headers means no data\n            toast({ title: 'Sin Datos', description: 'No hay turnos asignados en la semana actual para exportar.', variant: 'default' });\n            return;\n        }\n\n        // Create CSV content\n        const csvContent = \"data:text/csv;charset=utf-8,\"\n            + dataToExport.map(row =>\n                 row.map((field: string | number | undefined) =>\n                    `\"${String(field ?? '').replace(/\"/g, '\"\"')}\"` // Quote fields and escape double quotes\n                 ).join(\",\")\n             ).join(\"\\n\");\n\n\n        // Trigger download\n        const encodedUri = encodeURI(csvContent);\n        const link = document.createElement(\"a\");\n        link.setAttribute(\"href\", encodedUri);\n        // Create a safe filename\n        const locationNameSafe = locations.find(l => l.id === selectedLocationId)?.name.replace(/[^a-zA-Z0-9]/g, '_') || selectedLocationId;\n        const weekStartFormatted = format(weekDates[0], 'yyyyMMdd');\n        const weekEndFormatted = format(weekDates[6], 'yyyyMMdd');\n        link.setAttribute(\"download\", `Horario_${locationNameSafe}_${weekStartFormatted}-${weekEndFormatted}.csv`);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n\n        toast({ title: 'Exportación CSV Exitosa', description: 'Se ha descargado el archivo de horas trabajadas.' });\n    };\n\n    const handleExportPDF = () => {\n        const locationName = locations.find(l => l.id === selectedLocationId)?.name || selectedLocationId;\n        // Prepare data specifically for the PDF export function\n        const dataForPDF = {\n            locationName,\n            weekDates,\n            departments: filteredDepartments, // Use filtered departments for the current location\n            employees: employees, // Pass the full list (the PDF function might filter or group)\n            scheduleData,\n            getScheduleForDate: (date: Date) => getScheduleForDate(date),\n            calculateShiftDuration, // Pass the calculation function\n        };\n\n        try {\n            exportScheduleToPDF(dataForPDF); // Call the export function\n            toast({ title: 'Exportación PDF Exitosa', description: 'Se ha descargado el horario semanal.' });\n        } catch (error) {\n            console.error(\"Error exporting schedule to PDF:\", error);\n            toast({ title: 'Error al Exportar PDF', description: 'No se pudo generar el archivo PDF.', variant: 'destructive' });\n        }\n    };\n\n\n     const handleShareSchedule = async () => {\n        let textToCopy = \"\";\n        const locationName = locations.find(l => l.id === selectedLocationId)?.name || selectedLocationId;\n\n        if (viewMode === 'day') {\n            const dateStr = format(targetDate, 'EEEE dd \\'de\\' MMMM', { locale: es });\n            textToCopy = `*Horario ${locationName} - ${dateStr}*\\n\\n`;\n            const daySchedule = getScheduleForDate(targetDate);\n            let dayHasAssignments = false;\n\n            filteredDepartments.forEach(dept => {\n                const assignments = daySchedule.assignments[dept.id] || [];\n                if (assignments.length > 0) {\n                    dayHasAssignments = true;\n                    textToCopy += `*${dept.name}*\\n`;\n                    assignments.forEach(a => {\n                         const employeeName = a.employee?.name || `(ID: ${a.employee?.id || '??'})`;\n                        // Format times using helper\n                        textToCopy += `- ${employeeName}: ${formatTo12Hour(a.startTime)} - ${formatTo12Hour(a.endTime)}`;\n                        if (a.includeBreak && a.breakStartTime && a.breakEndTime) {\n                             textToCopy += ` (D: ${formatTo12Hour(a.breakStartTime)}-${formatTo12Hour(a.breakEndTime)})`;\n                        }\n                        textToCopy += \"\\n\";\n                    });\n                    textToCopy += \"\\n\"; // Add space between departments\n                }\n            });\n             if (!dayHasAssignments) {\n                 textToCopy += \"_No hay turnos asignados para este día._\\n\";\n             }\n\n        } else { // Week View\n            const weekStartFormatted = format(weekDates[0], 'dd MMM', { locale: es });\n            const weekEndFormatted = format(weekDates[6], 'dd MMM yyyy', { locale: es });\n            textToCopy = `*Horario ${locationName} - Semana ${weekStartFormatted} al ${weekEndFormatted}*\\n\\n`;\n            let weekHasAssignments = false;\n\n            weekDates.forEach(date => {\n                const dateStr = format(date, 'EEEE dd', { locale: es });\n                const daySchedule = getScheduleForDate(date);\n                let dayHasAssignments = false;\n                let dayText = `*${dateStr.charAt(0).toUpperCase() + dateStr.slice(1)}:*\\n`; // Capitalize day name\n\n                filteredDepartments.forEach(dept => {\n                     const assignments = daySchedule.assignments[dept.id] || [];\n                     if (assignments.length > 0) {\n                         dayHasAssignments = true;\n                         weekHasAssignments = true;\n                         dayText += `_${dept.name}_\\n`; // Italicize department name\n                         assignments.forEach(a => {\n                              const employeeName = a.employee?.name || `(ID: ${a.employee?.id || '??'})`;\n                              // Format times using helper\n                             dayText += `- ${employeeName}: ${formatTo12Hour(a.startTime)} - ${formatTo12Hour(a.endTime)}`;\n                            if (a.includeBreak && a.breakStartTime && a.breakEndTime) {\n                                // Format break times\n                                dayText += ` (D: ${formatTo12Hour(a.breakStartTime)}-${formatTo12Hour(a.breakEndTime)})`;\n                            }\n                             dayText += \"\\n\";\n                         });\n                     }\n                });\n\n                // Only add the day's text if it has assignments\n                if (dayHasAssignments) {\n                    textToCopy += dayText + \"\\n\"; // Add space between days\n                }\n            });\n             if (!weekHasAssignments) {\n                 textToCopy += \"_No hay turnos asignados para esta semana._\\n\";\n             }\n        }\n\n        // Prevent copying if no meaningful content generated\n        if (!textToCopy || textToCopy.trim() === `*Horario ${locationName} - Semana ${format(weekDates[0], 'dd MMM', { locale: es })} al ${format(weekDates[6], 'dd MMM yyyy', { locale: es })}*` || textToCopy.includes(\"_No hay turnos asignados\")) {\n            toast({ title: 'Sin Horario', description: 'No hay turnos asignados para compartir.', variant: 'default' });\n            return;\n        }\n\n\n        // Attempt to copy to clipboard\n        try {\n            await navigator.clipboard.writeText(textToCopy);\n            toast({ title: 'Horario Copiado', description: 'El horario ha sido copiado al portapapeles. Puedes pegarlo en WhatsApp.' });\n        } catch (err) {\n            console.error('Error al copiar al portapapeles:', err);\n            toast({ title: 'Error al Copiar', description: 'No se pudo copiar el horario.', variant: 'destructive' });\n        }\n     };\n\n\n\n  return (\n        <main className=\"container mx-auto p-4 md:p-8 max-w-full\">\n             {/* Title */}\n             <div className=\"text-center mb-6 md:mb-8\">\n                 <h1 className=\"text-2xl sm:text-3xl md:text-4xl font-bold tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-primary via-foreground/80 to-primary\">\n                    Planificador de Horarios\n                 </h1>\n                 <p className=\"text-sm sm:text-base text-muted-foreground mt-1 md:mt-2\">Gestiona turnos, sedes y colaboradores</p>\n             </div>\n\n              {/* Hidden file input for CSV */}\n              <input\n                  type=\"file\"\n                  ref={fileInputRef}\n                  onChange={handleCSVFileChange}\n                  accept=\".csv\"\n                  className=\"hidden\"\n              />\n\n             {/* Controls Section - Adjusted Layout */}\n              <div className=\"flex flex-col md:flex-row items-center justify-center gap-4 mb-6 md:mb-8 flex-wrap\">\n\n                  {/* Location Selector */}\n                   <div className=\"flex items-center gap-2\">\n                       <Building className=\"h-5 w-5 text-primary\" />\n                     <LocationSelector\n                         locations={locations}\n                         selectedLocationId={selectedLocationId}\n                         onLocationChange={handleLocationChange}\n                     />\n                   </div>\n\n                 {/* Configuration Button */}\n                  <div className=\"flex items-center gap-2\">\n                     <Dialog open={isConfigModalOpen} onOpenChange={setIsConfigModalOpen}>\n                         <DialogTrigger asChild>\n                             <Button variant=\"outline\" size=\"icon\" title=\"Configuración\">\n                                 <Settings className=\"h-5 w-5\"/>\n                             </Button>\n                         </DialogTrigger>\n                        <DialogContent className=\"max-w-5xl max-h-[85vh] overflow-y-auto\">\n                            <DialogHeader>\n                                <DialogTitle>Configuración General</DialogTitle>\n                                <DialogDescription>Gestiona sedes, departamentos, colaboradores y templates guardados.</DialogDescription>\n                            </DialogHeader>\n                            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 py-4\">\n                                {/* Locations Column */}\n                                <div className=\"space-y-4 border-r pr-4 md:border-r-0 md:pb-0\">\n                                    <div className=\"flex justify-between items-center mb-2\">\n                                        <h4 className=\"font-semibold text-foreground flex items-center gap-1\"><Building className=\"h-4 w-4 text-muted-foreground\"/>Sedes ({locations.length})</h4>\n                                        <Button variant=\"outline\" size=\"sm\" onClick={() => handleOpenLocationModal(null)} title=\"Agregar Sede\">\n                                            <Plus className=\"h-4 w-4\" />\n                                        </Button>\n                                    </div>\n                                    <ScrollArea className=\"h-[40vh]\">\n                                        <ul className=\"space-y-2 text-sm pr-2\">\n                                            {locations.map((loc) => (\n                                                <li key={loc.id} className=\"flex items-center justify-between group py-1 border-b\">\n                                                    <span className={`truncate ${loc.id === selectedLocationId ? 'font-semibold text-primary' : 'text-muted-foreground'}`}>{loc.name}</span>\n                                                    <div className=\"opacity-0 group-hover:opacity-100 transition-opacity flex items-center space-x-1\">\n                                                        <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-muted-foreground hover:text-foreground\" onClick={() => handleOpenLocationModal(loc)} title=\"Editar Sede\"><Edit className=\"h-4 w-4\" /></Button>\n                                                        <AlertDialog>\n                                                            <AlertDialogTrigger asChild>\n                                                                <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-destructive hover:bg-destructive/10\" onClick={() => confirmDeleteItem('location', loc.id, loc.name)} title=\"Eliminar Sede\"><Trash2 className=\"h-4 w-4\" /></Button>\n                                                            </AlertDialogTrigger>\n                                                            <AlertDialogContent>\n                                                                <AlertDialogHeader>\n                                                                    <AlertDialogTitle>¿Estás seguro?</AlertDialogTitle>\n                                                                    <AlertDialogDescription>\n                                                                        Eliminar Sede \"{itemToDelete?.name}\"? Se eliminarán sus departamentos, los colaboradores asociados se desvincularán (si no tienen más sedes), y se borrarán templates y turnos relacionados. Esta acción no se puede deshacer.\n                                                                    </AlertDialogDescription>\n                                                                </AlertDialogHeader>\n                                                                <AlertDialogFooter>\n                                                                    <AlertDialogCancel onClick={() => setItemToDelete(null)}>Cancelar</AlertDialogCancel>\n                                                                    <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={handleDeleteItem}>Eliminar</AlertDialogAction>\n                                                                </AlertDialogFooter>\n                                                            </AlertDialogContent>\n                                                        </AlertDialog>\n                                                    </div>\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </ScrollArea>\n                                </div>\n                                {/* Departments Column */}\n                                <div className=\"space-y-4 border-r pr-4 md:border-r-0 md:pb-0\">\n                                    <div className=\"flex justify-between items-center mb-2\">\n                                        <h4 className=\"font-semibold text-foreground flex items-center gap-1\"><Building2 className=\"h-4 w-4 text-muted-foreground\"/>Departamentos ({departments.length})</h4>\n                                        <Button variant=\"outline\" size=\"sm\" onClick={() => handleOpenDepartmentModal(null)} title=\"Agregar Departamento\">\n                                            <Plus className=\"h-4 w-4\" />\n                                        </Button>\n                                    </div>\n                                     <ScrollArea className=\"h-[40vh]\">\n                                        <ul className=\"space-y-2 text-sm pr-2\">\n                                            {departments.map((dep) => (\n                                                <li key={dep.id} className=\"flex items-center justify-between group py-1 border-b\">\n                                                    <span className=\"truncate text-muted-foreground flex items-center gap-1\">\n                                                         {dep.icon && <dep.icon className=\"h-3 w-3 mr-1 flex-shrink-0\" />}\n                                                         {dep.name} <span className=\"text-xs italic ml-1\">({locations.find(l => l.id === dep.locationId)?.name || 'Sede?'})</span>\n                                                    </span>\n                                                    <div className=\"opacity-0 group-hover:opacity-100 transition-opacity flex items-center space-x-1\">\n                                                        <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-muted-foreground hover:text-foreground\" onClick={() => handleOpenDepartmentModal(dep)} title=\"Editar Departamento\"><Edit className=\"h-4 w-4\" /></Button>\n                                                        <AlertDialog>\n                                                            <AlertDialogTrigger asChild>\n                                                                <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-destructive hover:bg-destructive/10\" onClick={() => confirmDeleteItem('department', dep.id, dep.name)} title=\"Eliminar Departamento\"><Trash2 className=\"h-4 w-4\" /></Button>\n                                                            </AlertDialogTrigger>\n                                                            <AlertDialogContent>\n                                                                <AlertDialogHeader>\n                                                                    <AlertDialogTitle>¿Estás seguro?</AlertDialogTitle>\n                                                                    <AlertDialogDescription>\n                                                                        Eliminar Departamento \"{itemToDelete?.name}\"? Se eliminarán los turnos asociados en los horarios y templates. Esta acción no se puede deshacer.\n                                                                    </AlertDialogDescription>\n                                                                </AlertDialogHeader>\n                                                                <AlertDialogFooter>\n                                                                    <AlertDialogCancel onClick={() => setItemToDelete(null)}>Cancelar</AlertDialogCancel>\n                                                                    <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={handleDeleteItem}>Eliminar</AlertDialogAction>\n                                                                </AlertDialogFooter>\n                                                            </AlertDialogContent>\n                                                        </AlertDialog>\n                                                    </div>\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </ScrollArea>\n                                </div>\n                                {/* Employees Column */}\n                                <div className=\"space-y-4 border-r pr-4 md:border-r-0 md:pb-0\">\n                                    <div className=\"flex justify-between items-center mb-2\">\n                                        <h4 className=\"font-semibold text-foreground flex items-center gap-1\"><Users className=\"h-4 w-4 text-muted-foreground\"/>Colaboradores ({employees.length})</h4>\n                                        <Button variant=\"outline\" size=\"sm\" onClick={() => handleOpenEmployeeModal(null)} title=\"Agregar Colaborador\">\n                                            <Plus className=\"h-4 w-4\" />\n                                        </Button>\n                                    </div>\n                                    <ScrollArea className=\"h-[40vh]\">\n                                        <ul className=\"space-y-2 text-sm pr-2\">\n                                            {employees.map((emp) => (\n                                                <li key={emp.id} className=\"flex items-center justify-between group py-1 border-b\">\n                                                    <span className=\"truncate text-muted-foreground\">{emp.name} <span className=\"text-xs italic\">(ID: {emp.id})</span></span>\n                                                    <div className=\"opacity-0 group-hover:opacity-100 transition-opacity flex items-center space-x-1\">\n                                                        <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-muted-foreground hover:text-foreground\" onClick={() => handleOpenEmployeeModal(emp)} title=\"Editar Colaborador\"><Edit className=\"h-4 w-4\" /></Button>\n                                                        <AlertDialog>\n                                                            <AlertDialogTrigger asChild>\n                                                                <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-destructive hover:bg-destructive/10\" onClick={() => confirmDeleteItem('employee', emp.id, emp.name)} title=\"Eliminar Colaborador\"><Trash2 className=\"h-4 w-4\" /></Button>\n                                                            </AlertDialogTrigger>\n                                                            <AlertDialogContent>\n                                                                <AlertDialogHeader>\n                                                                    <AlertDialogTitle>¿Estás seguro?</AlertDialogTitle>\n                                                                    <AlertDialogDescription>\n                                                                        Eliminar Colaborador \"{itemToDelete?.name}\"? Se eliminarán sus turnos asociados en horarios y templates. Esta acción no se puede deshacer.\n                                                                    </AlertDialogDescription>\n                                                                </AlertDialogHeader>\n                                                                <AlertDialogFooter>\n                                                                    <AlertDialogCancel onClick={() => setItemToDelete(null)}>Cancelar</AlertDialogCancel>\n                                                                    <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={handleDeleteItem}>Eliminar</AlertDialogAction>\n                                                                </AlertDialogFooter>\n                                                            </AlertDialogContent>\n                                                        </AlertDialog>\n                                                    </div>\n                                                </li>\n                                            ))}\n                                        </ul>\n                                    </ScrollArea>\n                                </div>\n                                {/* Saved Templates Column */}\n                                <div className=\"space-y-4\">\n                                    <div className=\"flex justify-between items-center mb-2\">\n                                        <h4 className=\"font-semibold text-foreground flex items-center gap-1\">\n                                            <Library className=\"h-4 w-4 text-muted-foreground\"/>\n                                            Templates ({filteredTemplates.length} {viewMode === 'day' ? 'Diarios' : 'Semanales'})\n                                        </h4>\n                                        <Button\n                                            variant=\"outline\"\n                                            size=\"sm\"\n                                            onClick={handleOpenTemplateModal}\n                                            title={`Guardar horario actual como template ${viewMode === 'day' ? 'diario' : 'semanal'}`}\n                                        >\n                                            <Download className=\"h-4 w-4\" />\n                                        </Button>\n                                    </div>\n                                    <ScrollArea className=\"h-[40vh]\">\n                                        <ul className=\"space-y-2 text-sm pr-2\">\n                                            {filteredTemplates.length > 0 ? filteredTemplates.map((template) => (\n                                                <li key={template.id} className=\"flex items-center justify-between group py-1 border-b\">\n                                                    <span className=\"truncate text-muted-foreground\">{template.name}</span>\n                                                    <div className=\"opacity-0 group-hover:opacity-100 transition-opacity flex items-center space-x-1\">\n                                                        <Button\n                                                            variant=\"ghost\"\n                                                            size=\"icon\"\n                                                            className=\"h-6 w-6 text-muted-foreground hover:text-foreground\"\n                                                            onClick={() => handleLoadTemplate(template.id)}\n                                                            title={`Cargar Template (${template.type === 'daily' ? 'Diario' : 'Semanal'})`}\n                                                        >\n                                                            <Upload className=\"h-4 w-4\" />\n                                                        </Button>\n                                                        <AlertDialog>\n                                                            <AlertDialogTrigger asChild>\n                                                                <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-destructive hover:bg-destructive/10\" onClick={() => confirmDeleteItem('template', template.id, template.name)} title=\"Eliminar Template\"><Trash2 className=\"h-4 w-4\" /></Button>\n                                                            </AlertDialogTrigger>\n                                                            <AlertDialogContent>\n                                                                <AlertDialogHeader>\n                                                                    <AlertDialogTitle>¿Estás seguro?</AlertDialogTitle>\n                                                                    <AlertDialogDescription>\n                                                                        Eliminar Template \"{itemToDelete?.name}\"? Esta acción no se puede deshacer.\n                                                                    </AlertDialogDescription>\n                                                                </AlertDialogHeader>\n                                                                <AlertDialogFooter>\n                                                                    <AlertDialogCancel onClick={() => setItemToDelete(null)}>Cancelar</AlertDialogCancel>\n                                                                    <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={handleDeleteItem}>Eliminar</AlertDialogAction>\n                                                                </AlertDialogFooter>\n                                                            </AlertDialogContent>\n                                                        </AlertDialog>\n                                                    </div>\n                                                </li>\n                                            )) : (\n                                                <p className=\"text-xs text-muted-foreground italic text-center pt-2\">\n                                                    No hay templates {viewMode === 'day' ? 'diarios' : 'semanales'} guardados para esta sede.\n                                                </p>\n                                            )}\n                                        </ul>\n                                    </ScrollArea>\n                                </div>\n                            </div>\n                            <DialogFooter>\n                                <DialogClose asChild>\n                                    <Button variant=\"secondary\">Cerrar</Button>\n                                </DialogClose>\n                            </DialogFooter>\n                        </DialogContent>\n                    </Dialog>\n                 </div>\n\n\n                 {/* --- Day View Date Selector OR Week View Navigator --- */}\n                 <div className=\"flex items-center justify-center gap-2\">\n                     {viewMode === 'day' ? (\n                         <Popover>\n                             <PopoverTrigger asChild>\n                                 <Button\n                                     variant={'outline'}\n                                     className={cn(\n                                         'w-[200px] sm:w-[280px] justify-start text-left font-normal',\n                                         !targetDate && 'text-muted-foreground',\n                                         isHoliday(targetDate) && 'border-primary border-2' // Use primary border\n                                     )}\n                                     disabled={isCheckingHoliday}\n                                 >\n                                     {isCheckingHoliday ? (\n                                         <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                                     ) : (\n                                         <CalendarModernIcon className=\"mr-2 h-4 w-4 text-primary\" /> // Icon color\n                                     )}\n                                     {targetDate ? format(targetDate, 'PPP', { locale: es }) : <span>Selecciona fecha</span>}\n                                     {isHoliday(targetDate) && !isCheckingHoliday && <span className=\"ml-2 text-xs font-semibold text-primary\">(Festivo)</span>}\n                                 </Button>\n                             </PopoverTrigger>\n                             <PopoverContent className=\"w-auto p-0\">\n                                 <Calendar\n                                     mode=\"single\"\n                                     selected={targetDate}\n                                     onSelect={(date) => { if (date) setTargetDate(date) }}\n                                     initialFocus\n                                     locale={es}\n                                     modifiers={{ holiday: (date) => isHoliday(date) }}\n                                     modifiersClassNames={{\n                                          holiday: 'text-primary font-semibold border border-primary rounded-md',\n                                     }}\n                                 />\n                             </PopoverContent>\n                         </Popover>\n                     ) : (\n                         <WeekNavigator\n                             currentDate={currentDate}\n                             onPreviousWeek={handlePreviousWeek}\n                             onNextWeek={handleNextWeek}\n                         />\n                     )}\n                 </div>\n\n                 {/* View Mode Toggle */}\n                  <div className=\"flex items-center justify-center gap-2\">\n                     <Select value={viewMode} onValueChange={(value) => setViewMode(value as 'day' | 'week')}>\n                         <SelectTrigger className=\"w-[120px]\">\n                             <SelectValue placeholder=\"Vista\" />\n                         </SelectTrigger>\n                         <SelectContent>\n                             <SelectItem value=\"day\">Día</SelectItem>\n                             <SelectItem value=\"week\">Semana</SelectItem>\n                         </SelectContent>\n                     </Select>\n                 </div>\n\n                  {/* CSV Import Button */}\n                  <div className=\"flex items-center gap-2\">\n                     <Button\n                         variant=\"outline\"\n                         onClick={triggerCSVFileInput}\n                         disabled={isImportingCSV}\n                         title=\"Importar Horario desde CSV (como Template)\"\n                     >\n                         {isImportingCSV ? (\n                             <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                         ) : (\n                             <FileUp className=\"mr-2 h-4 w-4\" />\n                         )}\n                         Importar CSV\n                     </Button>\n                 </div>\n\n             </div>\n\n\n              {/* Main content grid */}\n             <DndWrapper>\n                 <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-4 items-start mb-6\">\n\n                      {/* Employee List - Render only on desktop */}\n                      {!isMobile && (\n                           <div className=\"lg:col-span-2 space-y-4\">\n                               <EmployeeList employees={availableEmployees} />\n                           </div>\n                      )}\n\n\n                     <div className={cn(\n                         \"lg:col-span-10\", // Takes 10 columns on large screens\n                         isMobile && \"lg:col-span-12\", // Takes full width on mobile\n                         \"overflow-x-auto\" // Always allow horizontal scroll if needed\n                      )}>\n                         <ScheduleView\n                            departments={filteredDepartments}\n                            scheduleData={scheduleData}\n                            onRemoveShift={handleRemoveShift}\n                            viewMode={viewMode}\n                            weekDates={weekDates}\n                            currentDate={targetDate} // Use targetDate for day view consistency\n                            onAddShiftRequest={handleOpenEmployeeSelectionModal}\n                            onShiftClick={handleShiftClick}\n                            getScheduleForDate={getScheduleForDate}\n                            onDuplicateDay={handleDuplicateDay}\n                            onClearDay={handleConfirmClearDay}\n                            isHoliday={isHoliday}\n                            isMobile={isMobile}\n                        />\n                     </div>\n                 </div>\n             </DndWrapper>\n\n              {/* --- Actions Row (Moved Below Schedule) --- */}\n              <div className=\"flex flex-wrap justify-end gap-2 mt-6\">\n                 <Button onClick={handleShareSchedule} variant=\"outline\" className=\"hover:bg-primary hover:text-primary-foreground\">\n                     <Share2 className=\"mr-2 h-4 w-4\" /> Compartir (Texto)\n                 </Button>\n                 <Button onClick={handleExportPDF} variant=\"outline\" className=\"hover:bg-red-500 hover:text-white\"> {/* Red Hover */}\n                     <FileDown className=\"mr-2 h-4 w-4\" /> PDF\n                 </Button>\n                 <Button onClick={handleExportCSV} variant=\"outline\" className=\"hover:bg-green-500 hover:text-white\"> {/* Green Hover */}\n                     <FileSpreadsheet className=\"mr-2 h-4 w-4\" /> Exportar Horas (CSV)\n                 </Button>\n                 {viewMode === 'week' && (\n                     <Button\n                         variant=\"outline\"\n                         onClick={handleDuplicateWeek}\n                         title=\"Duplicar semana completa a la siguiente\"\n                         className=\"hover:bg-primary hover:text-primary-foreground\"\n                     >\n                         <CopyPlus className=\"mr-2 h-4 w-4\" /> Duplicar Semana\n                     </Button>\n                 )}\n                 <Button\n                    variant=\"outline\"\n                    onClick={handleOpenTemplateModal}\n                    title={`Guardar horario actual como template ${viewMode === 'day' ? 'diario' : 'semanal'}`}\n                    className=\"hover:bg-primary hover:text-primary-foreground\"\n                 >\n                    <Download className=\"mr-2 h-4 w-4\" /> Guardar Template\n                 </Button>\n                 <Button onClick={handleSaveSchedule} variant=\"outline\" className=\"hover:bg-primary hover:text-primary-foreground\">\n                     <Save className=\"mr-2 h-4 w-4\" /> Guardar Horario\n                 </Button>\n\n             </div>\n\n\n             {/* --- Modals --- */}\n\n             {/* Location Modal */}\n             <Dialog open={isLocationModalOpen} onOpenChange={setIsLocationModalOpen}>\n                  <DialogContent>\n                      <DialogHeader>\n                           <DialogTitle>{editingLocation ? 'Editar Sede' : 'Agregar Sede'}</DialogTitle>\n                      </DialogHeader>\n                      <div className=\"space-y-4 py-4\">\n                          <Label htmlFor=\"location-name\">Nombre</Label>\n                          <Input id=\"location-name\" value={locationFormData.name} onChange={(e) => setLocationFormData({ name: e.target.value })} placeholder=\"Nombre de la Sede\" />\n                      </div>\n                      <DialogFooter>\n                         <DialogClose asChild>\n                           <Button variant=\"outline\">Cancelar</Button>\n                         </DialogClose>\n                          <Button onClick={handleSaveLocation}>Guardar</Button>\n                      </DialogFooter>\n                  </DialogContent>\n             </Dialog>\n\n             {/* Department Modal */}\n            <Dialog open={isDepartmentModalOpen} onOpenChange={setIsDepartmentModalOpen}>\n                 <DialogContent>\n                     <DialogHeader>\n                         <DialogTitle>{editingDepartment ? 'Editar Departamento' : 'Agregar Departamento'}</DialogTitle>\n                     </DialogHeader>\n                     <div className=\"space-y-4 py-4\">\n                          <div>\n                             <Label htmlFor=\"department-name\">Nombre</Label>\n                             <Input id=\"department-name\" value={departmentFormData.name} onChange={(e) => setDepartmentFormData(prev => ({ ...prev, name: e.target.value }))} placeholder=\"Nombre del Departamento\"/>\n                          </div>\n                         <div>\n                              <Label htmlFor=\"department-location\">Sede</Label>\n                              <Select value={departmentFormData.locationId} onValueChange={(value) => setDepartmentFormData(prev => ({ ...prev, locationId: value }))}>\n                                  <SelectTrigger id=\"department-location\">\n                                      <SelectValue placeholder=\"Selecciona sede\" />\n                                  </SelectTrigger>\n                                  <SelectContent>\n                                      {locations.map(loc => (\n                                          <SelectItem key={loc.id} value={loc.id}>{loc.name}</SelectItem>\n                                      ))}\n                                  </SelectContent>\n                              </Select>\n                         </div>\n                          {/* Icon Selector */}\n                          <div>\n                              <Label htmlFor=\"department-icon\">Icono (Opcional)</Label>\n                              <Select value={departmentFormData.iconName} onValueChange={(value) => setDepartmentFormData(prev => ({ ...prev, iconName: value }))}>\n                                  <SelectTrigger id=\"department-icon\">\n                                      <SelectValue placeholder=\"Selecciona icono\" />\n                                  </SelectTrigger>\n                                  <SelectContent>\n                                      {Object.keys(iconMap).map(iconKey => {\n                                          const IconComponent = iconMap[iconKey];\n                                          return (\n                                              <SelectItem key={iconKey} value={iconKey}>\n                                                  <span className=\"flex items-center gap-2\">\n                                                      <IconComponent className=\"h-4 w-4\" /> {iconKey}\n                                                  </span>\n                                              </SelectItem>\n                                          );\n                                      })}\n                                  </SelectContent>\n                              </Select>\n                         </div>\n                     </div>\n                     <DialogFooter>\n                          <DialogClose asChild>\n                            <Button variant=\"outline\">Cancelar</Button>\n                          </DialogClose>\n                         <Button onClick={handleSaveDepartment}>Guardar</Button>\n                     </DialogFooter>\n                 </DialogContent>\n            </Dialog>\n\n             {/* Employee Modal */}\n            <Dialog open={isEmployeeModalOpen} onOpenChange={setIsEmployeeModalOpen}>\n                <DialogContent>\n                    <DialogHeader>\n                        <DialogTitle>{editingEmployee ? 'Editar Colaborador' : 'Agregar Colaborador'}</DialogTitle>\n                    </DialogHeader>\n                     <div className=\"space-y-4 py-4\">\n                           <div>\n                               <Label htmlFor=\"employee-id\">ID Colaborador</Label>\n                               <Input\n                                   id=\"employee-id\"\n                                   value={employeeFormData.id}\n                                   onChange={(e) => setEmployeeFormData(prev => ({ ...prev, id: e.target.value }))}\n                                   placeholder=\"Ej: 101, CEDULA123\"\n                                   disabled={!!editingEmployee} // Disable ID field when editing\n                               />\n                               {!!editingEmployee && <p className=\"text-xs text-muted-foreground mt-1\">El ID no se puede cambiar al editar.</p>}\n                           </div>\n                          <div>\n                             <Label htmlFor=\"employee-name\">Nombre</Label>\n                             <Input id=\"employee-name\" value={employeeFormData.name} onChange={(e) => setEmployeeFormData(prev => ({ ...prev, name: e.target.value }))} placeholder=\"Nombre Completo\" />\n                          </div>\n                          <div>\n                               <Label htmlFor=\"employee-locations\">Sedes Asignadas</Label>\n                                {/* Use Dropdown Menu for multi-select */}\n                                <DropdownMenu>\n                                    <DropdownMenuTrigger asChild>\n                                        <Button variant=\"outline\" className=\"w-full justify-start\">\n                                            {employeeFormData.locationIds.length > 0\n                                                ? employeeFormData.locationIds\n                                                      .map(id => locations.find(l => l.id === id)?.name)\n                                                      .filter(Boolean) // Remove undefined if location not found\n                                                      .join(', ')\n                                                : 'Selecciona sedes'}\n                                            <ChevronsUpDown className=\"ml-auto h-4 w-4 opacity-50\"/>\n                                        </Button>\n                                    </DropdownMenuTrigger>\n                                    <DropdownMenuContent className=\"w-full\">\n                                        <DropdownMenuLabel>Selecciona Sedes</DropdownMenuLabel>\n                                        <DropdownMenuSeparator />\n                                        {locations.map(loc => (\n                                            <DropdownMenuCheckboxItem\n                                                key={loc.id}\n                                                checked={employeeFormData.locationIds.includes(loc.id)}\n                                                onCheckedChange={() => handleToggleEmployeeLocation(loc.id)}\n                                                // Prevent closing the menu on item selection\n                                                onSelect={(e) => e.preventDefault()}\n                                            >\n                                                {loc.name}\n                                            </DropdownMenuCheckboxItem>\n                                        ))}\n                                    </DropdownMenuContent>\n                                </DropdownMenu>\n                                {employeeFormData.locationIds.length === 0 && <p className=\"text-xs text-destructive mt-1\">Debes seleccionar al menos una sede.</p>}\n                           </div>\n                     </div>\n                    <DialogFooter>\n                         <DialogClose asChild>\n                            <Button variant=\"outline\">Cancelar</Button>\n                          </DialogClose>\n                        <Button onClick={handleSaveEmployee}>Guardar</Button>\n                    </DialogFooter>\n                </DialogContent>\n            </Dialog>\n\n\n             {/* Employee Selection Modal */}\n             <EmployeeSelectionModal\n                 isOpen={isEmployeeSelectionModalOpen}\n                 onClose={() => setIsEmployeeSelectionModalOpen(false)}\n                 employees={availableEmployees}\n                 onSelectEmployee={handleEmployeeSelectedForShift}\n                 departmentName={departments.find(d => d.id === shiftRequestContext?.departmentId)?.name || ''}\n                 date={shiftRequestContext?.date || new Date()}\n             />\n\n             {/* Shift Detail Modal */}\n             <ShiftDetailModal\n                 isOpen={isShiftModalOpen}\n                 onClose={() => {\n                     setIsShiftModalOpen(false);\n                     setSelectedEmployee(null);\n                     setShiftRequestContext(null);\n                     setEditingShift(null);\n                 }}\n                 onSave={handleAddOrUpdateShift}\n                 employeeName={selectedEmployee?.name || ''}\n                 departmentName={departments.find(d => d.id === shiftRequestContext?.departmentId)?.name || ''}\n                 initialDetails={editingShift?.assignment}\n                 isEditing={!!editingShift}\n             />\n\n             {/* Universal Delete Confirmation */}\n              <AlertDialog open={!!itemToDelete} onOpenChange={(open) => !open && setItemToDelete(null)}>\n                  <AlertDialogContent>\n                      <AlertDialogHeader>\n                          <AlertDialogTitle>¿Estás seguro?</AlertDialogTitle>\n                          <AlertDialogDescription>\n                              {itemToDelete?.type === 'location' && `Eliminar Sede \"${itemToDelete?.name}\"? Se eliminarán sus departamentos, los colaboradores asociados se desvincularán (si no tienen más sedes), y se borrarán templates y turnos relacionados. Esta acción no se puede deshacer.`}\n                              {itemToDelete?.type === 'department' && `Eliminar Departamento \"${itemToDelete?.name}\"? Se eliminarán los turnos asociados en horarios y templates. Esta acción no se puede deshacer.`}\n                              {itemToDelete?.type === 'employee' && `Eliminar Colaborador \"${itemToDelete?.name}\"? Se eliminarán sus turnos asociados en horarios y templates. Esta acción no se puede deshacer.`}\n                              {itemToDelete?.type === 'template' && `Eliminar Template \"${itemToDelete?.name}\"? Esta acción no se puede deshacer.`}\n                          </AlertDialogDescription>\n                      </AlertDialogHeader>\n                      <AlertDialogFooter>\n                          <AlertDialogCancel onClick={() => setItemToDelete(null)}>Cancelar</AlertDialogCancel>\n                          <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={handleDeleteItem}>Eliminar</AlertDialogAction>\n                      </AlertDialogFooter>\n                  </AlertDialogContent>\n              </AlertDialog>\n\n\n            {/* Clear Day Confirmation */}\n            <AlertDialog open={!!clearingDate} onOpenChange={(open) => !open && setClearingDate(null)}>\n                 <AlertDialogContent>\n                     <AlertDialogHeader>\n                         <AlertDialogTitle>¿Limpiar Turnos del Día?</AlertDialogTitle>\n                         <AlertDialogDescription>\n                            Esta acción eliminará todos los turnos asignados para el{' '}\n                            <strong>{clearingDate ? format(clearingDate, 'PPP', { locale: es }) : ''}</strong>. No se puede deshacer.\n                         </AlertDialogDescription>\n                     </AlertDialogHeader>\n                     <AlertDialogFooter>\n                         <AlertDialogCancel onClick={() => setClearingDate(null)}>Cancelar</AlertDialogCancel>\n                         <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={handleClearDay}>Limpiar Día</AlertDialogAction>\n                     </AlertDialogFooter>\n                 </AlertDialogContent>\n            </AlertDialog>\n\n            {/* Template Saving Modal */}\n             <Dialog open={isTemplateModalOpen} onOpenChange={setIsTemplateModalOpen}>\n                 <DialogContent>\n                     <DialogHeader>\n                         <DialogTitle>Guardar Template {viewMode === 'day' ? 'Diario' : 'Semanal'}</DialogTitle>\n                         <DialogDescription>Ingresa un nombre para este template (basado en el horario {viewMode === 'day' ? `del ${format(targetDate, 'PPP', {locale: es})}` : 'de la semana actual'} para {locations.find(l => l.id === selectedLocationId)?.name}).</DialogDescription>\n                     </DialogHeader>\n                     <div className=\"py-4\">\n                         <Label htmlFor=\"template-name\">Nombre Template</Label>\n                         <Input\n                            id=\"template-name\"\n                            value={templateName}\n                            onChange={(e) => setTemplateName(e.target.value)}\n                            placeholder=\"Ej: Apertura Semana, Cierre FinDeSemana\"\n                         />\n                     </div>\n                     <DialogFooter>\n                        <DialogClose asChild>\n                          <Button variant=\"outline\">Cancelar</Button>\n                        </DialogClose>\n                         <Button onClick={handleSaveTemplate}>Guardar Template</Button>\n                     </DialogFooter>\n                 </DialogContent>\n             </Dialog>\n\n\n            {/* Editable Notes Section */}\n            <Card className=\"mt-8 shadow-lg bg-card\">\n                <CardHeader>\n                    <CardTitle className=\"text-lg text-foreground\">Notas Adicionales</CardTitle>\n                    <CardDescription>\n                        Agrega notas importantes sobre horarios, eventos especiales o cualquier información relevante para la semana.\n                    </CardDescription>\n                </CardHeader>\n                <CardContent>\n                    <Textarea\n                        value={notes}\n                        onChange={handleNotesChange}\n                        placeholder=\"Ej: Cierre anticipado el jueves por fumigación...\"\n                        rows={4}\n                        className=\"w-full\"\n                    />\n                </CardContent>\n                <CardFooter className=\"flex justify-end\">\n                    <Button onClick={handleSaveNotes}>Guardar Notas</Button>\n                </CardFooter>\n            </Card>\n        </main>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}