{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        xs: \"h-7 rounded-md px-2 text-xs\", // Added extra small size\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\", // Changed text-base md:text-sm to just text-sm\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qXACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 448, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger // Export DialogTrigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close // Export DialogClose\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose, // Export DialogClose\n  DialogTrigger, // Export DialogTrigger\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,mKAAwB,uBAAuB;AAA/C,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,mKAAsB,qBAAqB;AAA3C,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 582, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 623, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker, type DateFormatter, type DayModifiers, type Matcher } from \"react-day-picker\" // Added DayModifiers, Matcher\nimport type { Locale } from 'date-fns'; // Import Locale type\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\n// --- Added modifier props ---\nexport type CalendarProps = React.ComponentProps<typeof DayPicker> & {\n    locale?: Locale; // Add locale prop\n    modifiers?: DayModifiers; // Allow passing custom modifiers\n    modifiersClassNames?: Record<string, string>; // Allow passing class names for modifiers\n}\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  locale, // Destructure locale\n  modifiers, // Destructure modifiers\n  modifiersClassNames, // Destructure modifier class names\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      locale={locale} // Pass locale to DayPicker\n      modifiers={modifiers} // Pass modifiers\n      modifiersClassNames={{\n          // Adjusted holiday style: use primary text color, medium font weight, and primary border\n          holiday: 'text-primary font-medium border border-primary',\n          ...modifiersClassNames // Merge with any passed modifier classes\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAIA;AAAA;AACA,kRAAkG,8BAA8B;AAGhI;AACA;AARA;;;;;;AAiBA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,MAAM,EACN,SAAS,EACT,mBAAmB,EACnB,GAAG,OACW;IACd,qBACE,8OAAC,8JAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACA,QAAQ;QACR,WAAW;QACX,qBAAqB;YACjB,yFAAyF;YACzF,SAAS;YACT,GAAG,oBAAoB,yCAAyC;QACpE;QACC,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 710, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/LocationSelector.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport type { Location } from '@/types/schedule'; // Assuming type exists\n\ninterface LocationSelectorProps {\n  locations: Location[];\n  selectedLocationId?: string;\n  onLocationChange: (locationId: string) => void;\n}\n\nexport const LocationSelector: React.FC<LocationSelectorProps> = ({\n  locations,\n  selectedLocationId,\n  onLocationChange,\n}) => {\n  return (\n    <Select value={selectedLocationId} onValueChange={onLocationChange}>\n      <SelectTrigger id=\"location-select\">\n        <SelectValue placeholder=\"Selecciona una sede\" />\n      </SelectTrigger>\n      <SelectContent>\n        {locations.map((location) => (\n          <SelectItem key={location.id} value={location.id}>\n            {location.name}\n          </SelectItem>\n        ))}\n      </SelectContent>\n    </Select>\n  );\n};\n\n    "],"names":[],"mappings":";;;;AAEA;;;AASO,MAAM,mBAAoD,CAAC,EAChE,SAAS,EACT,kBAAkB,EAClB,gBAAgB,EACjB;IACC,qBACE,8OAAC,kIAAA,CAAA,SAAM;QAAC,OAAO;QAAoB,eAAe;;0BAChD,8OAAC,kIAAA,CAAA,gBAAa;gBAAC,IAAG;0BAChB,cAAA,8OAAC,kIAAA,CAAA,cAAW;oBAAC,aAAY;;;;;;;;;;;0BAE3B,8OAAC,kIAAA,CAAA,gBAAa;0BACX,UAAU,GAAG,CAAC,CAAC,yBACd,8OAAC,kIAAA,CAAA,aAAU;wBAAmB,OAAO,SAAS,EAAE;kCAC7C,SAAS,IAAI;uBADC,SAAS,EAAE;;;;;;;;;;;;;;;;AAOtC","debugId":null}},
    {"offset": {"line": 763, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement, // Changed to HTMLParagraphElement for semantic correctness if it's a heading paragraph\n  React.HTMLAttributes<HTMLHeadingElement> // Kept HTMLHeadingElement for attribute compatibility, adjust if needed\n>(({ className, ...props }, ref) => (\n  <h3 // Changed from div to h3 for semantic meaning, adjust level (h2, h4, etc.) as appropriate\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight text-foreground\", // Changed from text-xl to text-lg and explicitly set text-foreground\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p // Changed from div to p for semantic correctness\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,KAAG,0FAA0F;;QAC5F,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qEACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,IAAE,iDAAiD;;QAClD,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 846, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/DraggableEmployee.tsx"],"sourcesContent":["\n'use client'; // Add this directive\n\nimport React, { useState, useEffect } from 'react'; // Import useState and useEffect\nimport { useDraggable } from '@dnd-kit/core';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Button } from '@/components/ui/button';\nimport { GripVertical } from 'lucide-react';\nimport type { Employee } from '@/types/schedule'; // Assuming type exists\nimport { cn } from '@/lib/utils'; // Import cn\n\ninterface DraggableEmployeeProps {\n  employee: Employee;\n}\n\nexport const DraggableEmployee: React.FC<DraggableEmployeeProps> = ({ employee }) => {\n  const [isClient, setIsClient] = useState(false); // State to track client-side rendering\n\n  useEffect(() => {\n    setIsClient(true); // Set to true only on the client after initial render\n  }, []);\n\n  const { attributes, listeners, setNodeRef, transform, isDragging } = useDraggable({\n    id: employee.id, // Use employee ID as the draggable ID\n    data: { type: 'employee', employee }, // Pass employee data\n  });\n\n  const style = {\n    transform: CSS.Translate.toString(transform),\n    opacity: isDragging ? 0.5 : 1,\n    zIndex: isDragging ? 100 : 'auto', // Ensure dragged item is on top\n    cursor: isDragging ? 'grabbing' : 'grab',\n  };\n\n  // Render only on the client side to avoid hydration mismatch\n  if (!isClient) {\n    // Optionally render a placeholder or null during SSR and initial hydration\n    return (\n      <Button\n        variant=\"outline\"\n        className=\"w-full flex items-center justify-between p-2 bg-card hover:bg-muted/50 opacity-50 cursor-wait\" // Indicate loading/placeholder state\n        disabled\n      >\n        <span className=\"truncate\">{employee.name}</span> {/* Add truncate here */}\n        <GripVertical className=\"h-4 w-4 text-muted-foreground\" />\n      </Button>\n    );\n  }\n\n  return (\n    <Button\n      ref={setNodeRef}\n      style={style}\n      variant=\"outline\"\n      className=\"w-full flex items-center justify-between p-2 bg-card hover:bg-muted/50\"\n      {...listeners}\n      {...attributes}\n    >\n      <span className=\"truncate\">{employee.name}</span> {/* Add truncate here */}\n      <GripVertical className=\"h-4 w-4 text-muted-foreground\" />\n    </Button>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA,oVAAoD,gCAAgC;AACpF;AACA;AACA;AACA;AANA,cAAc,qBAAqB;;;;;;;AAc5B,MAAM,oBAAsD,CAAC,EAAE,QAAQ,EAAE;IAC9E,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,uCAAuC;IAExF,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,YAAY,OAAO,sDAAsD;IAC3E,GAAG,EAAE;IAEL,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,eAAY,AAAD,EAAE;QAChF,IAAI,SAAS,EAAE;QACf,MAAM;YAAE,MAAM;YAAY;QAAS;IACrC;IAEA,MAAM,QAAQ;QACZ,WAAW,qKAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClC,SAAS,aAAa,MAAM;QAC5B,QAAQ,aAAa,MAAM;QAC3B,QAAQ,aAAa,aAAa;IACpC;IAEA,6DAA6D;IAC7D,IAAI,CAAC,UAAU;QACb,2EAA2E;QAC3E,qBACE,8OAAC,kIAAA,CAAA,SAAM;YACL,SAAQ;YACR,WAAU,gGAAgG,qCAAqC;;YAC/I,QAAQ;;8BAER,8OAAC;oBAAK,WAAU;8BAAY,SAAS,IAAI;;;;;;gBAAQ;8BACjD,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAU;;;;;;;;;;;;IAG9B;IAEA,qBACE,8OAAC,kIAAA,CAAA,SAAM;QACL,KAAK;QACL,OAAO;QACP,SAAQ;QACR,WAAU;QACT,GAAG,SAAS;QACZ,GAAG,UAAU;;0BAEd,8OAAC;gBAAK,WAAU;0BAAY,SAAS,IAAI;;;;;;YAAQ;0BACjD,8OAAC,sNAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;;;;;;;AAG9B","debugId":null}},
    {"offset": {"line": 949, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/EmployeeList.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { DraggableEmployee } from './DraggableEmployee'; // Assuming DraggableEmployee component exists\nimport type { Employee } from '@/types/schedule'; // Assuming type exists\nimport { Users } from 'lucide-react';\n\ninterface EmployeeListProps {\n  employees: Employee[];\n}\n\nexport const EmployeeList: React.FC<EmployeeListProps> = ({ employees }) => {\n  return (\n    <Card className=\"h-full\"> {/* Allow card to take full height */}\n      <CardHeader>\n         <CardTitle className=\"text-lg font-medium flex items-center gap-2 truncate\"> {/* Add truncate here */}\n             <Users className=\"h-5 w-5 text-muted-foreground flex-shrink-0\" /> {/* Prevent icon shrink */}\n             Colaboradores Disponibles ({employees.length})\n         </CardTitle>\n      </CardHeader>\n       <CardContent className=\"space-y-3 overflow-y-auto max-h-[calc(100vh-200px)]\"> {/* Make content scrollable */}\n        {employees.length > 0 ? (\n          employees.map((employee) => (\n            <DraggableEmployee key={employee.id} employee={employee} />\n          ))\n        ) : (\n          <p className=\"text-sm text-muted-foreground text-center pt-4 italic\">\n            No hay colaboradores para esta sede.\n          </p>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA,qQAAyD,8CAA8C;AAEvG;;;;;AAMO,MAAM,eAA4C,CAAC,EAAE,SAAS,EAAE;IACrE,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;YAAS;0BACvB,8OAAC,gIAAA,CAAA,aAAU;0BACR,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;;wBAAuD;sCACxE,8OAAC,oMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;wBAAgD;wBAA4B;wBACjE,UAAU,MAAM;wBAAC;;;;;;;;;;;;0BAGnD,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;oBAAsD;oBAC3E,UAAU,MAAM,GAAG,IAClB,UAAU,GAAG,CAAC,CAAC,yBACb,8OAAC,mJAAA,CAAA,oBAAiB;4BAAmB,UAAU;2BAAvB,SAAS,EAAE;;;;kDAGrC,8OAAC;wBAAE,WAAU;kCAAwD;;;;;;;;;;;;;;;;;;AAO/E","debugId":null}},
    {"offset": {"line": 1029, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/time-utils.ts"],"sourcesContent":["// src/lib/time-utils.ts\n\nimport { format as formatFns, parse as parseFns } from 'date-fns';\nimport { es } from 'date-fns/locale'; // Import Spanish locale if needed for 'am/pm'\n\n/**\n * Formats a time string (HH:mm) into 12-hour format (h:mm a).\n * Handles invalid input gracefully.\n *\n * @param timeString - The time string in \"HH:mm\" format.\n * @returns The formatted time string (e.g., \"8:00 AM\") or the original string if invalid.\n */\nexport function formatTo12Hour(timeString: string | undefined): string {\n  if (!timeString || !/^\\d{2}:\\d{2}$/.test(timeString)) {\n    return timeString || ''; // Return original or empty string if invalid/undefined\n  }\n\n  try {\n    // Create a dummy date object with the time to use date-fns formatting\n    const dummyDate = parseFns(timeString, 'HH:mm', new Date());\n    // Format using 'h:mm a' for 12-hour format with AM/PM\n    // Use locale 'es' if you want 'a. m.'/'p. m.' instead of AM/PM\n    return formatFns(dummyDate, 'h:mm a', { locale: es });\n  } catch (error) {\n    console.error(`Error formatting time string \"${timeString}\":`, error);\n    return timeString; // Return original string on error\n  }\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;AAExB;AAAA;AACA,oPAAsC,8CAA8C;;;AAS7E,SAAS,eAAe,UAA8B;IAC3D,IAAI,CAAC,cAAc,CAAC,gBAAgB,IAAI,CAAC,aAAa;QACpD,OAAO,cAAc,IAAI,uDAAuD;IAClF;IAEA,IAAI;QACF,sEAAsE;QACtE,MAAM,YAAY,CAAA,GAAA,qJAAA,CAAA,QAAQ,AAAD,EAAE,YAAY,SAAS,IAAI;QACpD,sDAAsD;QACtD,+DAA+D;QAC/D,OAAO,CAAA,GAAA,sJAAA,CAAA,SAAS,AAAD,EAAE,WAAW,UAAU;YAAE,QAAQ,4IAAA,CAAA,KAAE;QAAC;IACrD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,8BAA8B,EAAE,WAAW,EAAE,CAAC,EAAE;QAC/D,OAAO,YAAY,kCAAkC;IACvD;AACF","debugId":null}},
    {"offset": {"line": 1061, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ShiftCard.tsx"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Trash2, Clock, Coffee } from 'lucide-react'; // Added Coffee icon for break\nimport type { ShiftAssignment } from '@/types/schedule'; // Assuming type exists\nimport { cn } from '@/lib/utils'; // Import cn\nimport { formatTo12Hour } from '@/lib/time-utils'; // Import the formatting helper\n\ninterface ShiftCardProps {\n  assignment: ShiftAssignment;\n  onRemove: (event: React.MouseEvent<HTMLButtonElement>) => void; // Pass event to stop propagation\n  isCompact?: boolean; // Optional flag for compact view\n  onClick?: () => void; // Optional click handler for the card\n}\n\nexport const ShiftCard: React.FC<ShiftCardProps> = ({ assignment, onRemove, isCompact = false, onClick }) => {\n  // Add useSortable hook here if making items within a column sortable\n  // const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ id: assignment.id });\n  // const style = { transform: CSS.Transform.toString(transform), transition };\n\n  const handleRemoveClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.stopPropagation(); // Prevent triggering the card's onClick\n    onRemove(event);\n  };\n\n\n  return (\n     <Card\n        // ref={setNodeRef} // For sortable\n        // style={style} // For sortable\n        className={cn(\n            \"group bg-background border shadow-sm transition-colors duration-150 relative\", // Add 'group' class, transition, and relative positioning\n            isCompact ? \"border-none shadow-none bg-transparent p-0 hover:bg-accent/50 cursor-pointer\" : \"hover:border-primary\", // Remove borders/padding if compact, add hover background and cursor\n            onClick && \"cursor-pointer\" // Add cursor pointer if onClick is provided\n        )}\n        // {...attributes} // For sortable\n        // {...listeners} // For sortable - Be careful with listeners vs onClick\n        onClick={onClick} // Add onClick handler to the card\n     >\n       <CardContent className={cn(\n           \"flex items-start justify-between\", // Changed items-center to items-start\n           isCompact ? \"p-0.5\" : \"p-3\" // Smaller padding if compact\n       )}>\n         {/* Content Wrapper */}\n         <div className=\"flex-grow min-w-0 overflow-hidden mr-1 pr-4\"> {/* Add padding-right to prevent overlap with absolute button */}\n             <p className={cn(\n                 \"font-medium truncate\",\n                 isCompact ? \"text-xs\" : \"text-sm\" // Increased compact font size back to xs\n             )} title={assignment.employee.name}>{assignment.employee.name}</p>\n             <div className={cn( // Wrap times in a div for better spacing control\n                 \"text-muted-foreground flex flex-wrap items-center\", // Use flex-wrap and items-center\n                 isCompact ? \"text-[11px] gap-x-1 gap-y-0\" : \"text-xs gap-x-1.5 gap-y-0.5\" // Increased compact font size from 10px, allow wrapping\n             )}>\n                 {/* Shift Time */}\n                 <span className=\"flex items-center gap-0.5\">\n                     <Clock className={cn(\"flex-shrink-0\", isCompact ? \"h-2.5 w-2.5\" : \"h-3 w-3\")} /> {/* Slightly larger icon, prevent shrink */}\n                     {/* Format times using the helper */}\n                     <span className=\"whitespace-nowrap\">{formatTo12Hour(assignment.startTime)}-{formatTo12Hour(assignment.endTime)}</span> {/* Prevent time wrap */}\n                 </span>\n                 {/* Break Time - Show icon and text if included */}\n                 {assignment.includeBreak && assignment.breakStartTime && assignment.breakEndTime && (\n                    <span className={cn(\n                        \"flex items-center gap-0.5\",\n                        isCompact && \"text-blue-600 dark:text-blue-400\" // Optional: different color for break icon in compact\n                        )} title={`Descanso: ${formatTo12Hour(assignment.breakStartTime)}-${formatTo12Hour(assignment.breakEndTime)}`}>\n                        <Coffee className={cn(\"flex-shrink-0\", isCompact ? \"h-2.5 w-2.5\" : \"h-3 w-3\")} /> {/* Break icon */}\n                        {/* Show break times in compact view as well */}\n                        {/* Format break times using the helper */}\n                        <span className=\"whitespace-nowrap\">D: {formatTo12Hour(assignment.breakStartTime)}-{formatTo12Hour(assignment.breakEndTime)}</span>\n                    </span>\n                 )}\n             </div>\n         </div>\n          {/* Delete Button - Positioned absolute top-right */}\n         <Button\n             variant=\"ghost\"\n             size=\"icon\"\n             className={cn(\n                 \"absolute top-1 right-1\", // Position top-right\n                 \"text-destructive flex-shrink-0 opacity-0 group-hover:opacity-100 transition-opacity hover:bg-destructive/10\", // Hide by default, show on group hover, add transition, add red hover\n                 isCompact ? \"h-4 w-4\" : \"h-7 w-7\", // Smaller button if compact\n                 // Keep the button hidden on mobile/tablet for compact view unless hovering\n                 isCompact && \"group-hover:opacity-100 md:opacity-0\"\n             )}\n             onClick={handleRemoveClick} // Use the new handler\n             title=\"Eliminar turno\" // Add title for accessibility\n          >\n           <Trash2 className={cn(isCompact ? \"h-2.5 w-2.5\" : \"h-4 w-4\")} /> {/* Smaller icon if compact */}\n         </Button>\n       </CardContent>\n     </Card>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;AACA,6VAAsD,8BAA8B;AAApF;AAAA;AAEA,wMAAkC,YAAY;AAC9C,qNAAmD,+BAA+B;;;;;;;AAS3E,MAAM,YAAsC,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,KAAK,EAAE,OAAO,EAAE;IACtG,qEAAqE;IACrE,2GAA2G;IAC3G,8EAA8E;IAE9E,MAAM,oBAAoB,CAAC;QACzB,MAAM,eAAe,IAAI,wCAAwC;QACjE,SAAS;IACX;IAGA,qBACG,8OAAC,gIAAA,CAAA,OAAI;QACF,mCAAmC;QACnC,gCAAgC;QAChC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,gFACA,YAAY,iFAAiF,wBAC7F,WAAW,iBAAiB,4CAA4C;;QAE5E,kCAAkC;QAClC,wEAAwE;QACxE,SAAS;kBAEV,cAAA,8OAAC,gIAAA,CAAA,cAAW;YAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACrB,oCACA,YAAY,UAAU,MAAM,6BAA6B;;;8BAG3D,8OAAC;oBAAI,WAAU;;wBAA8C;sCACzD,8OAAC;4BAAE,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,wBACA,YAAY,YAAY,UAAU,yCAAyC;;4BAC5E,OAAO,WAAW,QAAQ,CAAC,IAAI;sCAAG,WAAW,QAAQ,CAAC,IAAI;;;;;;sCAC7D,8OAAC;4BAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACb,qDACA,YAAY,gCAAgC,8BAA8B,wDAAwD;;;8CAGlI,8OAAC;oCAAK,WAAU;;sDACZ,8OAAC,oMAAA,CAAA,QAAK;4CAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB,YAAY,gBAAgB;;;;;;wCAAc;sDAEhF,8OAAC;4CAAK,WAAU;;gDAAqB,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,SAAS;gDAAE;gDAAE,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,OAAO;;;;;;;wCAAS;;;;;;;gCAGzH,WAAW,YAAY,IAAI,WAAW,cAAc,IAAI,WAAW,YAAY,kBAC7E,8OAAC;oCAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACd,6BACA,aAAa,mCAAmC,sDAAsD;;oCACnG,OAAO,CAAC,UAAU,EAAE,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,cAAc,EAAE,CAAC,EAAE,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,YAAY,GAAG;;sDAC7G,8OAAC,sMAAA,CAAA,SAAM;4CAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB,YAAY,gBAAgB;;;;;;wCAAc;sDAGjF,8OAAC;4CAAK,WAAU;;gDAAoB;gDAAI,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,cAAc;gDAAE;gDAAE,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;8BAMzI,8OAAC,kIAAA,CAAA,SAAM;oBACH,SAAQ;oBACR,MAAK;oBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,0BACA,+GACA,YAAY,YAAY,WACxB,2EAA2E;oBAC3E,aAAa;oBAEjB,SAAS;oBACT,OAAM,iBAAiB,8BAA8B;;;sCAEvD,8OAAC,0MAAA,CAAA,SAAM;4BAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY,gBAAgB;;;;;;wBAAc;;;;;;;;;;;;;;;;;;AAK3E","debugId":null}},
    {"offset": {"line": 1231, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/DepartmentColumn.tsx"],"sourcesContent":["// src/components/schedule/DepartmentColumn.tsx\n\nimport React from 'react';\nimport { useDroppable } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Plus, Trash2 } from 'lucide-react';\nimport type { Department, ShiftAssignment, Employee } from '@/types/schedule'; // Assuming types exist\nimport { ShiftCard } from './ShiftCard'; // Assuming ShiftCard component exists\nimport { format } from 'date-fns';\nimport { cn } from '@/lib/utils'; // Added cn\n\ninterface DepartmentColumnProps {\n  department: Department;\n  assignments: ShiftAssignment[];\n  onRemoveShift: (departmentId: string, assignmentId: string) => void;\n  date: Date; // Date for this column\n  onAddShiftRequest: (departmentId: string, date: Date) => void; // New handler for '+' button click\n  onShiftClick: (assignment: ShiftAssignment, date: Date, departmentId: string) => void; // Handler for clicking a shift card\n  isWeekView?: boolean; // Flag for potentially different rendering in week view\n}\n\nexport const DepartmentColumn: React.FC<DepartmentColumnProps> = ({\n  department,\n  assignments,\n  onRemoveShift,\n  date,\n  onAddShiftRequest, // Destructure new handler\n  onShiftClick, // Destructure shift click handler\n  isWeekView = false,\n}) => {\n  const dateKey = format(date, 'yyyy-MM-dd');\n  const { setNodeRef, isOver } = useDroppable({\n    id: `${department.id}_${dateKey}`, // Make ID unique per department and date\n    data: {\n        type: 'department',\n        id: department.id,\n        date: dateKey, // Pass date string in data\n    }\n  });\n\n  const style = {\n    // Highlight when dragging over\n    backgroundColor: isOver ? 'hsl(var(--accent)/0.1)' : undefined,\n    borderColor: isOver ? 'hsl(var(--accent))' : (isWeekView ? 'hsl(var(--border) / 0.3)' : undefined), // Lighter border in week view normal state\n    borderWidth: '1px', // Use 1px border always\n    borderStyle: isOver ? 'dashed' : 'solid',\n    minHeight: isWeekView ? '60px' : '200px', // Shorter min-height for week view\n    transition: 'background-color 0.2s ease, border-color 0.2s ease', // Smooth transition\n    borderRadius: isWeekView ? '0.375rem' : undefined, // Add rounding in week view\n  };\n\n  // Simplified rendering for week view\n  if (isWeekView) {\n    return ( // Start of return statement for week view\n      // Ensure this div correctly wraps the content\n      <div ref={setNodeRef} style={style} className=\"p-1 space-y-0.5\"> {/* Reduced padding and space */}\n          {assignments.length > 0 ? (\n              assignments.map((assignment) => (\n                  <ShiftCard\n                      key={assignment.id}\n                      assignment={assignment}\n                      onRemove={(e) => { e.stopPropagation(); onRemoveShift(department.id, assignment.id); }} // Stop propagation\n                      isCompact // Use compact rendering\n                      onClick={() => onShiftClick(assignment, date, department.id)} // Pass assignment, date, and deptId to handler\n                  />\n              ))\n          ) : (\n              <p className=\"text-[11px] text-muted-foreground text-center py-1 italic\">Vacío</p> // Slightly larger text, increased from 10px\n          )}\n           {/* Add + Button for Mobile/Tablet - Always visible at the bottom in week view */}\n            <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"h-5 w-5 p-0 text-muted-foreground hover:text-primary block mx-auto mt-1 md:hidden\" // Center button, show only on mobile/tablet\n                onClick={() => onAddShiftRequest(department.id, date)} // Call new handler\n                title=\"Añadir Colaborador\"\n            >\n                <Plus className=\"h-3 w-3\" />\n            </Button>\n      </div>\n    ); // End of return statement for week view\n  }\n\n  // Full rendering for day view\n  return ( // Start of return for day view\n    <Card ref={setNodeRef} style={style} className=\"flex flex-col h-full shadow-sm\">\n      <CardHeader className=\"flex flex-row items-center justify-between pb-2 pt-4 px-4 border-b\">\n         <CardTitle className=\"text-base font-medium flex items-center gap-2 text-foreground\"> {/* Adjusted size */}\n             {department.icon && <department.icon className=\"h-3.5 w-3.5 text-muted-foreground\" />}\n             {department.name} ({assignments.length})\n         </CardTitle>\n        {/* Add shift button - Now enabled also for Day View */}\n        <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"h-7 w-7\"\n            onClick={() => onAddShiftRequest(department.id, date)} // Call new handler\n            title=\"Añadir Colaborador\"\n        >\n          <Plus className=\"h-4 w-4\" />\n        </Button>\n      </CardHeader>\n      <CardContent className=\"flex-grow p-3 space-y-2 overflow-y-auto\"> {/* Adjusted padding */}\n        {/* Use SortableContext if items within the column need to be sortable */}\n        {/* <SortableContext items={assignments.map(a => a.id)} strategy={verticalListSortingStrategy}> */}\n        {assignments.length > 0 ? (\n          assignments.map((assignment) => (\n             <ShiftCard\n                 key={assignment.id}\n                 assignment={assignment}\n                 onRemove={(e) => { e.stopPropagation(); onRemoveShift(department.id, assignment.id); }} // Stop propagation\n                 onClick={() => onShiftClick(assignment, date, department.id)} // Pass assignment, date, and deptId to handler\n             />\n          ))\n        ) : (\n          <p className=\"text-xs text-muted-foreground text-center pt-4 italic\">\n            Arrastra o usa '+'\n          </p> // Updated placeholder text\n        )}\n        {/* </SortableContext> */}\n      </CardContent>\n    </Card>\n  ); // End of return for day view\n};\n"],"names":[],"mappings":"AAAA,+CAA+C;;;;;AAG/C;AAEA;AACA;AACA;AAEA,qPAAyC,sCAAsC;AAC/E;;;;;;;;AAaO,MAAM,mBAAoD,CAAC,EAChE,UAAU,EACV,WAAW,EACX,aAAa,EACb,IAAI,EACJ,iBAAiB,EACjB,YAAY,EACZ,aAAa,KAAK,EACnB;IACC,MAAM,UAAU,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;IAC7B,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,eAAY,AAAD,EAAE;QAC1C,IAAI,GAAG,WAAW,EAAE,CAAC,CAAC,EAAE,SAAS;QACjC,MAAM;YACF,MAAM;YACN,IAAI,WAAW,EAAE;YACjB,MAAM;QACV;IACF;IAEA,MAAM,QAAQ;QACZ,+BAA+B;QAC/B,iBAAiB,SAAS,2BAA2B;QACrD,aAAa,SAAS,uBAAwB,aAAa,6BAA6B;QACxF,aAAa;QACb,aAAa,SAAS,WAAW;QACjC,WAAW,aAAa,SAAS;QACjC,YAAY;QACZ,cAAc,aAAa,aAAa;IAC1C;IAEA,qCAAqC;IACrC,IAAI,YAAY;QACd,OACE,8CAA8C;sBAC9C,8OAAC;YAAI,KAAK;YAAY,OAAO;YAAO,WAAU;;gBAAkB;gBAC3D,YAAY,MAAM,GAAG,IAClB,YAAY,GAAG,CAAC,CAAC,2BACb,8OAAC,2IAAA,CAAA,YAAS;wBAEN,YAAY;wBACZ,UAAU,CAAC;4BAAQ,EAAE,eAAe;4BAAI,cAAc,WAAW,EAAE,EAAE,WAAW,EAAE;wBAAG;wBACrF,SAAS;wBACT,SAAS,IAAM,aAAa,YAAY,MAAM,WAAW,EAAE;uBAJtD,WAAW,EAAE;;;;8CAQ1B,8OAAC;oBAAE,WAAU;8BAA4D;;;;;yBAAU,4CAA4C;;8BAGjI,8OAAC,kIAAA,CAAA,SAAM;oBACH,SAAQ;oBACR,MAAK;oBACL,WAAU,oFAAoF,4CAA4C;;oBAC1I,SAAS,IAAM,kBAAkB,WAAW,EAAE,EAAE;oBAChD,OAAM;8BAEN,cAAA,8OAAC,kMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;;;;;;;;;;;mBAGzB,wCAAwC;IAC7C;IAEA,8BAA8B;IAC9B,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,KAAK;QAAY,OAAO;QAAO,WAAU;;0BAC7C,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACnB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;;4BAAgE;4BAChF,WAAW,IAAI,kBAAI,8OAAC,WAAW,IAAI;gCAAC,WAAU;;;;;;4BAC9C,WAAW,IAAI;4BAAC;4BAAG,YAAY,MAAM;4BAAC;;;;;;;kCAG5C,8OAAC,kIAAA,CAAA,SAAM;wBACH,SAAQ;wBACR,MAAK;wBACL,WAAU;wBACV,SAAS,IAAM,kBAAkB,WAAW,EAAE,EAAE;wBAChD,OAAM;kCAER,cAAA,8OAAC,kMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAGpB,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;oBAA0C;oBAG9D,YAAY,MAAM,GAAG,IACpB,YAAY,GAAG,CAAC,CAAC,2BACd,8OAAC,2IAAA,CAAA,YAAS;4BAEN,YAAY;4BACZ,UAAU,CAAC;gCAAQ,EAAE,eAAe;gCAAI,cAAc,WAAW,EAAE,EAAE,WAAW,EAAE;4BAAG;4BACrF,SAAS,IAAM,aAAa,YAAY,MAAM,WAAW,EAAE;2BAHtD,WAAW,EAAE;;;;kDAOzB,8OAAC;wBAAE,WAAU;kCAAwD;;;;;6BAEhE,2BAA2B;;;;;;;;;;;;cAKrC,6BAA6B;AAClC","debugId":null}},
    {"offset": {"line": 1421, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ScheduleView.tsx"],"sourcesContent":["import React from 'react';\nimport type { Department, ScheduleData, ShiftAssignment } from '@/types/schedule'; // Assuming types exist, Added ShiftAssignment\nimport { DepartmentColumn } from './DepartmentColumn'; // Assuming DepartmentColumn component exists\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card'; // Added CardFooter\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { Button } from '../ui/button';\nimport { Plus, Copy, Eraser } from 'lucide-react'; // Added Copy icon, Eraser\nimport type { Employee } from '@/types/schedule';\nimport { cn } from '@/lib/utils'; // Import cn\n\ninterface ScheduleViewProps {\n  departments: Department[];\n  scheduleData: { [dateKey: string]: ScheduleData }; // Now a map of dateKey to ScheduleData\n  onRemoveShift: (dateKey: string, departmentId: string, assignmentId: string) => void;\n  viewMode: 'day' | 'week';\n  weekDates: Date[];\n  currentDate: Date; // For day view\n  onAddShiftRequest: (departmentId: string, date: Date) => void; // New handler for '+' button click\n  onShiftClick: (assignment: ShiftAssignment, date: Date, departmentId: string) => void; // Handler for clicking a shift card\n  getScheduleForDate: (date: Date) => ScheduleData; // Function to get schedule for a specific date\n  onDuplicateDay: (sourceDate: Date) => void; // Add prop for duplicating a day's schedule\n  onClearDay: (dateToClear: Date) => void; // Add prop for clearing a day's schedule\n  isHoliday: (date: Date | null | undefined) => boolean; // Function to check if a date is a holiday\n}\n\nexport const ScheduleView: React.FC<ScheduleViewProps> = ({\n    departments,\n    scheduleData,\n    onRemoveShift,\n    viewMode,\n    weekDates,\n    currentDate,\n    onAddShiftRequest, // Destructure new handler\n    onShiftClick, // Destructure shift click handler\n    getScheduleForDate, // Receive helper function\n    onDuplicateDay, // Receive duplicate handler\n    onClearDay, // Receive clear handler\n    isHoliday, // Receive holiday check function\n}) => {\n\n    if (viewMode === 'day') {\n         // --- Day View ---\n        const daySchedule = getScheduleForDate(currentDate);\n        const dynamicGridClass = `grid-cols-1 sm:grid-cols-2 lg:grid-cols-${Math.min(departments.length, 4)} xl:grid-cols-${Math.min(departments.length, 5)}`; // Adjust as needed\n        const isCurrentHoliday = isHoliday(currentDate);\n\n        return (\n            <Card className={cn(\n                \"shadow-md bg-card border\",\n                isCurrentHoliday ? \"border-primary\" : \"border-border\" // Highlight border if holiday\n            )}>\n                <CardHeader className=\"border-b\">\n                    <CardTitle className={cn(\n                        \"text-lg font-medium\",\n                        isCurrentHoliday ? \"text-primary font-semibold\" : \"text-foreground\" // Highlight text if holiday\n                    )}>\n                        Horario para el {format(currentDate, 'PPPP', { locale: es })}\n                        {isCurrentHoliday && <span className=\"text-xs font-normal ml-2\">(Festivo)</span>}\n                    </CardTitle>\n                    {/* Add description or other info if needed */}\n                </CardHeader>\n                <CardContent className=\"p-4\">\n                    {departments.length > 0 ? (\n                        <div className={`grid ${dynamicGridClass} gap-4`}>\n                            {departments.map((department) => (\n                                <DepartmentColumn\n                                    key={department.id}\n                                    department={department}\n                                    assignments={daySchedule.assignments[department.id] || []}\n                                    onRemoveShift={(deptId, assignId) => onRemoveShift(format(currentDate, 'yyyy-MM-dd'), deptId, assignId)}\n                                    date={currentDate} // Pass the date\n                                    onAddShiftRequest={onAddShiftRequest} // Pass new assign handler\n                                    onShiftClick={onShiftClick} // Pass shift click handler\n                                />\n                            ))}\n                        </div>\n                    ) : (\n                         <p className=\"text-center text-muted-foreground italic py-4\">\n                             No hay departamentos definidos para esta sede. Agrega departamentos en la sección de configuración.\n                         </p>\n                    )}\n                </CardContent>\n            </Card>\n        );\n    } else {\n        // --- Week View ---\n         // Restore original grid setup for week view\n         const weekViewContent = weekDates.map((date, index) => {\n            const daySchedule = getScheduleForDate(date);\n            const dateKey = format(date, 'yyyy-MM-dd');\n            const totalAssignmentsForDay = Object.values(daySchedule.assignments).reduce((sum, deptAssignments) => sum + deptAssignments.length, 0);\n            const isLastDayOfWeek = index === weekDates.length - 1; // Check if it's the last day\n            const isCurrentHoliday = isHoliday(date); // Check if this specific date is a holiday\n\n            // Card represents a single day column in the week view\n            return (\n                <div key={dateKey} className={cn(\n                    \"flex flex-col\",\n                     // Removed explicit width styling\n                )}>\n                    <Card className={cn(\n                        \"shadow-sm bg-card border flex flex-col flex-grow\", // Use flex-grow\n                        isCurrentHoliday ? \"border-primary\" : \"border-border/50\" // Highlight border with primary color\n                    )}>\n                        <CardHeader className={cn(\n                            \"pb-2 pt-3 px-3 border-b relative\",\n                            isCurrentHoliday ? \"border-primary\" : \"border-border/50\" // Match border color\n                        )}>\n                            <CardTitle className={cn(\n                                \"text-base font-medium text-center whitespace-nowrap\", // Adjusted size back to base\n                                isCurrentHoliday ? \"text-primary font-semibold\" : \"text-foreground\" // Highlight title text with primary color\n                            )}>\n                                {format(date, 'EEE d', { locale: es })} {/* Short day name, date */}\n                            </CardTitle>\n                            <CardDescription className=\"text-xs text-muted-foreground text-center\"> {/* Increased size back to xs */}\n                                {format(date, 'MMM', { locale: es })} ({totalAssignmentsForDay}) {/* Short month, count */}\n                                {isCurrentHoliday && <span className=\"text-primary block text-[10px] font-medium\">Festivo</span>} {/* Use primary color for Festivo text */}\n                            </CardDescription>\n                             {/* Action Buttons: Duplicate and Clear */}\n                            <div className=\"absolute top-1 right-1 flex flex-col gap-0.5\">\n                                {/* Duplicate button for all days except the last one */}\n                                {!isLastDayOfWeek && (\n                                    <Button\n                                        variant=\"ghost\"\n                                        size=\"icon\"\n                                        className=\"h-5 w-5 p-0 text-muted-foreground hover:text-foreground opacity-50 hover:opacity-100\"\n                                        onClick={() => onDuplicateDay(date)}\n                                        title=\"Duplicar al día siguiente\"\n                                    >\n                                        <Copy className=\"h-3 w-3\" />\n                                    </Button>\n                                )}\n                                {/* Clear Day Button */}\n                                <Button\n                                    variant=\"ghost\"\n                                    size=\"icon\"\n                                    className=\"h-5 w-5 p-0 text-destructive hover:text-destructive opacity-50 hover:opacity-100\"\n                                    onClick={() => onClearDay(date)} // Trigger clear confirmation\n                                    title=\"Limpiar turnos del día\"\n                                    disabled={totalAssignmentsForDay === 0} // Disable if no assignments\n                                >\n                                    <Eraser className=\"h-3 w-3\" />\n                                </Button>\n                            </div>\n                        </CardHeader>\n                        <CardContent className=\"p-1.5 space-y-2 flex-grow overflow-y-auto\"> {/* Reduced padding, smaller space */}\n                            {departments.length > 0 ? (\n                                departments.map((department) => (\n                                    <div key={department.id} className=\"border rounded-md p-1.5 bg-muted/10 relative\"> {/* Reduced padding, lighter bg, relative positioning */}\n                                        <div className=\"flex justify-between items-center mb-1\">\n                                            <h4 className=\"text-xs font-semibold text-foreground flex items-center gap-1 whitespace-nowrap overflow-hidden text-ellipsis pr-5\"> {/* Increased size back to xs */}\n                                                 {department.icon && <department.icon className=\"h-3 w-3 text-muted-foreground\" />} {/* Slightly larger icon */}\n                                                 <span className=\"overflow-hidden text-ellipsis\">{department.name}</span> {/* Ellipsis for name */}\n                                            </h4>\n                                             {/* Add + Button for Mobile/Tablet - Moved to DepartmentColumn */}\n                                        </div>\n                                        <DepartmentColumn\n                                            department={department}\n                                            assignments={daySchedule.assignments[department.id] || []}\n                                            onRemoveShift={(deptId, assignId) => onRemoveShift(dateKey, deptId, assignId)}\n                                            isWeekView // Indicate week view for potentially different rendering\n                                            date={date}\n                                            onAddShiftRequest={onAddShiftRequest} // Pass new assign handler\n                                            onShiftClick={onShiftClick} // Pass shift click handler\n                                        />\n                                    </div>\n                                ))\n                             ) : (\n                                  <p className=\"text-center text-xs text-muted-foreground italic pt-2\"> {/* Smaller padding */}\n                                      No hay deptos.\n                                  </p>\n                             )}\n                        </CardContent>\n                    </Card>\n                </div>\n            );\n         });\n\n         // Restore the original grid layout instead of flex with scroll\n         return (\n             <div className=\"grid grid-cols-1 md:grid-cols-7 gap-2\"> {/* Reverted to grid with 7 columns on medium screens and up */}\n                 {weekViewContent}\n             </div>\n         );\n    }\n};\n"],"names":[],"mappings":";;;;AAEA,mQAAuD,6CAA6C;AACpG,+NAA8G,mBAAmB;AACjI;AACA;AACA;AACA,gVAAmD,0BAA0B;AAA7E;AAEA,wMAAkC,YAAY;;;;;;;;;AAiBvC,MAAM,eAA4C,CAAC,EACtD,WAAW,EACX,YAAY,EACZ,aAAa,EACb,QAAQ,EACR,SAAS,EACT,WAAW,EACX,iBAAiB,EACjB,YAAY,EACZ,kBAAkB,EAClB,cAAc,EACd,UAAU,EACV,SAAS,EACZ;IAEG,IAAI,aAAa,OAAO;QACnB,mBAAmB;QACpB,MAAM,cAAc,mBAAmB;QACvC,MAAM,mBAAmB,CAAC,wCAAwC,EAAE,KAAK,GAAG,CAAC,YAAY,MAAM,EAAE,GAAG,cAAc,EAAE,KAAK,GAAG,CAAC,YAAY,MAAM,EAAE,IAAI,EAAE,mBAAmB;QAC1K,MAAM,mBAAmB,UAAU;QAEnC,qBACI,8OAAC,gIAAA,CAAA,OAAI;YAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACd,4BACA,mBAAmB,mBAAmB,gBAAgB,8BAA8B;;;8BAEpF,8OAAC,gIAAA,CAAA,aAAU;oBAAC,WAAU;8BAClB,cAAA,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACnB,uBACA,mBAAmB,+BAA+B,kBAAkB,4BAA4B;;;4BACjG;4BACkB,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,aAAa,QAAQ;gCAAE,QAAQ,4IAAA,CAAA,KAAE;4BAAC;4BACzD,kCAAoB,8OAAC;gCAAK,WAAU;0CAA2B;;;;;;;;;;;;;;;;;8BAIxE,8OAAC,gIAAA,CAAA,cAAW;oBAAC,WAAU;8BAClB,YAAY,MAAM,GAAG,kBAClB,8OAAC;wBAAI,WAAW,CAAC,KAAK,EAAE,iBAAiB,MAAM,CAAC;kCAC3C,YAAY,GAAG,CAAC,CAAC,2BACd,8OAAC,kJAAA,CAAA,mBAAgB;gCAEb,YAAY;gCACZ,aAAa,YAAY,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE;gCACzD,eAAe,CAAC,QAAQ,WAAa,cAAc,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,aAAa,eAAe,QAAQ;gCAC9F,MAAM;gCACN,mBAAmB;gCACnB,cAAc;+BANT,WAAW,EAAE;;;;;;;;;6CAW7B,8OAAC;wBAAE,WAAU;kCAAgD;;;;;;;;;;;;;;;;;IAOlF,OAAO;QACH,oBAAoB;QACnB,4CAA4C;QAC5C,MAAM,kBAAkB,UAAU,GAAG,CAAC,CAAC,MAAM;YAC1C,MAAM,cAAc,mBAAmB;YACvC,MAAM,UAAU,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;YAC7B,MAAM,yBAAyB,OAAO,MAAM,CAAC,YAAY,WAAW,EAAE,MAAM,CAAC,CAAC,KAAK,kBAAoB,MAAM,gBAAgB,MAAM,EAAE;YACrI,MAAM,kBAAkB,UAAU,UAAU,MAAM,GAAG,GAAG,6BAA6B;YACrF,MAAM,mBAAmB,UAAU,OAAO,2CAA2C;YAErF,uDAAuD;YACvD,qBACI,8OAAC;gBAAkB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAC3B;0BAGA,cAAA,8OAAC,gIAAA,CAAA,OAAI;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACd,oDACA,mBAAmB,mBAAmB,mBAAmB,sCAAsC;;;sCAE/F,8OAAC,gIAAA,CAAA,aAAU;4BAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACpB,oCACA,mBAAmB,mBAAmB,mBAAmB,qBAAqB;;;8CAE9E,8OAAC,gIAAA,CAAA,YAAS;oCAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACnB,uDACA,mBAAmB,+BAA+B,kBAAkB,0CAA0C;;;wCAE7G,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM,SAAS;4CAAE,QAAQ,4IAAA,CAAA,KAAE;wCAAC;wCAAG;;;;;;;8CAE3C,8OAAC,gIAAA,CAAA,kBAAe;oCAAC,WAAU;;wCAA4C;wCAClE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM,OAAO;4CAAE,QAAQ,4IAAA,CAAA,KAAE;wCAAC;wCAAG;wCAAG;wCAAuB;wCAC9D,kCAAoB,8OAAC;4CAAK,WAAU;sDAA6C;;;;;;wCAAe;;;;;;;8CAGrG,8OAAC;oCAAI,WAAU;;wCAEV,CAAC,iCACE,8OAAC,kIAAA,CAAA,SAAM;4CACH,SAAQ;4CACR,MAAK;4CACL,WAAU;4CACV,SAAS,IAAM,eAAe;4CAC9B,OAAM;sDAEN,cAAA,8OAAC,kMAAA,CAAA,OAAI;gDAAC,WAAU;;;;;;;;;;;sDAIxB,8OAAC,kIAAA,CAAA,SAAM;4CACH,SAAQ;4CACR,MAAK;4CACL,WAAU;4CACV,SAAS,IAAM,WAAW;4CAC1B,OAAM;4CACN,UAAU,2BAA2B;sDAErC,cAAA,8OAAC,sMAAA,CAAA,SAAM;gDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;sCAI9B,8OAAC,gIAAA,CAAA,cAAW;4BAAC,WAAU;;gCAA4C;gCAC9D,YAAY,MAAM,GAAG,IAClB,YAAY,GAAG,CAAC,CAAC,2BACb,8OAAC;wCAAwB,WAAU;;4CAA+C;0DAC9E,8OAAC;gDAAI,WAAU;0DACX,cAAA,8OAAC;oDAAG,WAAU;;wDAAqH;wDAC7H,WAAW,IAAI,kBAAI,8OAAC,WAAW,IAAI;4DAAC,WAAU;;;;;;wDAAmC;sEAClF,8OAAC;4DAAK,WAAU;sEAAiC,WAAW,IAAI;;;;;;wDAAQ;;;;;;;;;;;;0DAIjF,8OAAC,kJAAA,CAAA,mBAAgB;gDACb,YAAY;gDACZ,aAAa,YAAY,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE;gDACzD,eAAe,CAAC,QAAQ,WAAa,cAAc,SAAS,QAAQ;gDACpE,UAAU;gDACV,MAAM;gDACN,mBAAmB;gDACnB,cAAc;;;;;;;uCAfZ,WAAW,EAAE;;;;8DAoBzB,8OAAC;oCAAE,WAAU;;wCAAwD;wCAAwB;;;;;;;;;;;;;;;;;;;eAxErG;;;;;QAgFjB;QAEA,+DAA+D;QAC/D,qBACI,8OAAC;YAAI,WAAU;;gBAAwC;gBAClD;;;;;;;IAGd;AACJ","debugId":null}},
    {"offset": {"line": 1739, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,kKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1775, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ShiftDetailModal.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch'; // Import Switch\nimport { Save, X, PencilLine } from 'lucide-react'; // Added PencilLine\nimport type { ShiftDetails } from '@/types/schedule'; // Assuming type exists\nimport { useToast } from '@/hooks/use-toast';\nimport { cn } from '@/lib/utils'; // Import cn\nimport { formatTo12Hour } from '@/lib/time-utils'; // Import the time formatting helper\n\ninterface ShiftDetailModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (details: ShiftDetails) => void;\n  employeeName: string;\n  departmentName: string;\n  initialDetails?: Partial<ShiftDetails>; // For editing existing shifts\n  isEditing?: boolean; // Flag to indicate if editing\n}\n\n// Basic time validation (HH:MM format)\nconst timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\nconst timeErrorMessage = 'Formato HH:MM inválido.';\n\nexport const ShiftDetailModal: React.FC<ShiftDetailModalProps> = ({\n  isOpen,\n  onClose,\n  onSave,\n  employeeName,\n  departmentName,\n  initialDetails,\n  isEditing = false, // Default to false (adding)\n}) => {\n  const { toast } = useToast();\n  const [startTime, setStartTime] = useState(initialDetails?.startTime || '08:00');\n  const [endTime, setEndTime] = useState(initialDetails?.endTime || '17:00');\n  const [includeBreak, setIncludeBreak] = useState(initialDetails?.includeBreak || false); // Default to false\n  const [breakStartTime, setBreakStartTime] = useState(initialDetails?.breakStartTime || '15:00'); // Default 3 PM\n  const [breakEndTime, setBreakEndTime] = useState(initialDetails?.breakEndTime || '18:00'); // Default 6 PM\n\n  const [startTimeError, setStartTimeError] = useState<string | null>(null);\n  const [endTimeError, setEndTimeError] = useState<string | null>(null);\n  const [breakStartTimeError, setBreakStartTimeError] = useState<string | null>(null);\n  const [breakEndTimeError, setBreakEndTimeError] = useState<string | null>(null);\n\n  // Reset state when modal opens or initial details change\n  useEffect(() => {\n    if (isOpen) {\n        const defaultStartTime = '08:00';\n        const defaultEndTime = '17:00';\n        const defaultBreakStartTime = '15:00';\n        const defaultBreakEndTime = '18:00';\n\n        setStartTime(initialDetails?.startTime || defaultStartTime);\n        setEndTime(initialDetails?.endTime || defaultEndTime);\n        setIncludeBreak(initialDetails?.includeBreak || false);\n        setBreakStartTime(initialDetails?.breakStartTime || defaultBreakStartTime);\n        setBreakEndTime(initialDetails?.breakEndTime || defaultBreakEndTime);\n        setStartTimeError(null);\n        setEndTimeError(null);\n        setBreakStartTimeError(null);\n        setBreakEndTimeError(null);\n    }\n   // Dependency includes initialDetails to reset when editing a different shift\n   // isEditing is included to ensure reset happens correctly when switching between add/edit modes\n  }, [isOpen, initialDetails, isEditing]);\n\n\n  const handleSaveClick = () => {\n    let isValid = true;\n    setStartTimeError(null);\n    setEndTimeError(null);\n    setBreakStartTimeError(null);\n    setBreakEndTimeError(null);\n\n    if (!timeRegex.test(startTime)) {\n      setStartTimeError(timeErrorMessage);\n      isValid = false;\n    }\n    if (!timeRegex.test(endTime)) {\n      setEndTimeError(timeErrorMessage);\n      isValid = false;\n    }\n\n    // Validate break times only if break is included\n    if (includeBreak) {\n        if (!breakStartTime || !timeRegex.test(breakStartTime)) {\n            setBreakStartTimeError(timeErrorMessage);\n            isValid = false;\n        }\n        if (!breakEndTime || !timeRegex.test(breakEndTime)) {\n            setBreakEndTimeError(timeErrorMessage);\n            isValid = false;\n        }\n\n        // Check break end time is after break start time\n        if (isValid && breakStartTime && breakEndTime && breakStartTime >= breakEndTime) {\n             setBreakEndTimeError('Hora fin descanso debe ser posterior a hora inicio.');\n             isValid = false;\n             // Note: Simple comparison works for HH:MM within the same day.\n             // More complex logic needed if breaks can cross midnight (unlikely scenario).\n        }\n    }\n\n\n    // Basic check: end time should be after start time (doesn't handle overnight yet)\n    if (isValid && startTime >= endTime) {\n        // Allow overnight shifts for simplicity, maybe add a warning or flag later\n        // setEndTimeError('Hora de fin debe ser posterior a la hora de inicio.');\n        // isValid = false;\n    }\n\n\n    if (isValid) {\n      onSave({\n        startTime,\n        endTime,\n        includeBreak,\n        breakStartTime: includeBreak ? breakStartTime : undefined, // Only save if included\n        breakEndTime: includeBreak ? breakEndTime : undefined,     // Only save if included\n      });\n    } else {\n        toast({\n            title: \"Error de Validación\",\n            description: \"Por favor corrige los campos marcados.\",\n            variant: \"destructive\",\n        });\n    }\n  };\n\n  const title = isEditing ? 'Editar Detalles del Turno' : 'Detalles del Turno';\n  const saveButtonText = isEditing ? 'Guardar Cambios' : 'Guardar Turno';\n  const SaveIcon = isEditing ? PencilLine : Save; // Use different icon for editing\n\n  // Helper function to handle input changes and keep 24-hour format internally\n  const handleTimeChange = (setter: React.Dispatch<React.SetStateAction<string>>, value: string) => {\n    if (timeRegex.test(value)) {\n      setter(value);\n    } else {\n      // Handle potential partial input or conversion if needed\n      // For now, just update if valid 24-hour format\n      setter(value); // Allow intermediate typing\n    }\n  };\n\n\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>{title}</DialogTitle>\n          <DialogDescription>\n            {isEditing ? 'Modificando' : 'Asignando'} a <strong>{employeeName}</strong> en <strong>{departmentName}</strong>.\n            Ingresa las horas y el descanso.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"grid gap-4 py-4\">\n          {/* Start Time */}\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"start-time\" className=\"text-right\">\n              Inicio Turno\n            </Label>\n             <Input\n                id=\"start-time\"\n                type=\"time\" // Use type=\"time\" for the native picker\n                value={startTime} // Bind directly to the 24-hour state\n                onChange={(e) => handleTimeChange(setStartTime, e.target.value)}\n                className={cn(\"col-span-3\", startTimeError && 'border-destructive ring-destructive')}\n            />\n             {startTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{startTimeError}</p>}\n          </div>\n          {/* End Time */}\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"end-time\" className=\"text-right\">\n              Fin Turno\n            </Label>\n             <Input\n                id=\"end-time\"\n                type=\"time\"\n                value={endTime}\n                onChange={(e) => handleTimeChange(setEndTime, e.target.value)}\n                className={cn(\"col-span-3\", endTimeError && 'border-destructive ring-destructive')}\n             />\n             {endTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{endTimeError}</p>}\n          </div>\n\n          {/* Include Break Switch */}\n          <div className=\"flex items-center justify-between space-x-2 pt-2 border-t mt-2\">\n             <Label htmlFor=\"include-break\" className=\"font-medium\">\n                Incluir Descanso\n             </Label>\n             <Switch\n                id=\"include-break\"\n                checked={includeBreak}\n                onCheckedChange={setIncludeBreak}\n             />\n          </div>\n\n\n          {/* Conditional Break Time Inputs */}\n          {includeBreak && (\n            <>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"break-start-time\" className=\"text-right\">\n                  Inicio Descanso\n                </Label>\n                <Input\n                  id=\"break-start-time\"\n                  type=\"time\"\n                  value={breakStartTime}\n                  onChange={(e) => handleTimeChange(setBreakStartTime, e.target.value)}\n                  className={cn(\"col-span-3\", breakStartTimeError && 'border-destructive ring-destructive')}\n                />\n                 {breakStartTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{breakStartTimeError}</p>}\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"break-end-time\" className=\"text-right\">\n                  Fin Descanso\n                </Label>\n                <Input\n                  id=\"break-end-time\"\n                  type=\"time\"\n                  value={breakEndTime}\n                  onChange={(e) => handleTimeChange(setBreakEndTime, e.target.value)}\n                  className={cn(\"col-span-3\", breakEndTimeError && 'border-destructive ring-destructive')}\n                />\n                 {breakEndTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{breakEndTimeError}</p>}\n              </div>\n            </>\n          )}\n\n        </div>\n        <DialogFooter>\n          <DialogClose asChild>\n            <Button type=\"button\" variant=\"outline\">\n              <X className=\"mr-2 h-4 w-4\" /> Cancelar\n            </Button>\n          </DialogClose>\n          <Button type=\"button\" onClick={handleSaveClick} variant=\"default\">\n            <SaveIcon className=\"mr-2 h-4 w-4\" /> {saveButtonText}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2213, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/WeekNavigator.tsx"],"sourcesContent":["// src/components/schedule/WeekNavigator.tsx\n'use client';\n\nimport React from 'react';\nimport { Button } from '@/components/ui/button';\nimport { ChevronsLeft, ChevronsRight } from 'lucide-react';\nimport { format, startOfWeek, endOfWeek } from 'date-fns';\nimport { es } from 'date-fns/locale'; // Import Spanish locale\nimport { Card } from '@/components/ui/card'; // Import Card for background\n\ninterface WeekNavigatorProps {\n  currentDate: Date;\n  onPreviousWeek: () => void;\n  onNextWeek: () => void;\n}\n\nexport const WeekNavigator: React.FC<WeekNavigatorProps> = ({\n  currentDate,\n  onPreviousWeek,\n  onNextWeek,\n}) => {\n  const weekStart = startOfWeek(currentDate, { weekStartsOn: 1 }); // Start on Monday\n  const weekEnd = endOfWeek(currentDate, { weekStartsOn: 1 });\n\n  // Format the week range string, handling year change within the week\n  const startYear = format(weekStart, 'yyyy');\n  const endYear = format(weekEnd, 'yyyy');\n  const weekRange = `Semana del ${format(weekStart, 'd MMM', { locale: es })}${startYear !== endYear ? ' ' + startYear : ''} al ${format(weekEnd, 'd MMM yyyy', { locale: es })}`;\n\n  return (\n    <Card className=\"flex items-center justify-center gap-2 px-3 py-2 bg-card shadow-sm border border-border rounded-lg\"> {/* Wrap in Card, add padding */}\n      <Button variant=\"ghost\" size=\"icon\" onClick={onPreviousWeek} className=\"h-9 w-9 text-muted-foreground hover:text-primary\"> {/* Larger button, ghost variant */}\n        <ChevronsLeft className=\"h-5 w-5\" /> {/* Larger icon */}\n        <span className=\"sr-only\">Semana Anterior</span>\n      </Button>\n      <span className=\"text-base font-semibold text-foreground text-center min-w-[220px]\"> {/* Larger, bolder text */}\n        {weekRange}\n      </span>\n      <Button variant=\"ghost\" size=\"icon\" onClick={onNextWeek} className=\"h-9 w-9 text-muted-foreground hover:text-primary\"> {/* Larger button, ghost variant */}\n        <ChevronsRight className=\"h-5 w-5\" /> {/* Larger icon */}\n        <span className=\"sr-only\">Semana Siguiente</span>\n      </Button>\n    </Card>\n  );\n};\n"],"names":[],"mappings":"AAAA,4CAA4C;;;;;AAI5C;AACA;AAAA;AACA;AAAA;AAAA;AACA,oPAAsC,wBAAwB;AAC9D,+NAA6C,6BAA6B;AAP1E;;;;;;;AAeO,MAAM,gBAA8C,CAAC,EAC1D,WAAW,EACX,cAAc,EACd,UAAU,EACX;IACC,MAAM,YAAY,CAAA,GAAA,2IAAA,CAAA,cAAW,AAAD,EAAE,aAAa;QAAE,cAAc;IAAE,IAAI,kBAAkB;IACnF,MAAM,UAAU,CAAA,GAAA,yIAAA,CAAA,YAAS,AAAD,EAAE,aAAa;QAAE,cAAc;IAAE;IAEzD,qEAAqE;IACrE,MAAM,YAAY,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,WAAW;IACpC,MAAM,UAAU,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,SAAS;IAChC,MAAM,YAAY,CAAC,WAAW,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,WAAW,SAAS;QAAE,QAAQ,4IAAA,CAAA,KAAE;IAAC,KAAK,cAAc,UAAU,MAAM,YAAY,GAAG,IAAI,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,SAAS,cAAc;QAAE,QAAQ,4IAAA,CAAA,KAAE;IAAC,IAAI;IAE/K,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;YAAqG;0BACnH,8OAAC,kIAAA,CAAA,SAAM;gBAAC,SAAQ;gBAAQ,MAAK;gBAAO,SAAS;gBAAgB,WAAU;;oBAAmD;kCACxH,8OAAC,sNAAA,CAAA,eAAY;wBAAC,WAAU;;;;;;oBAAY;kCACpC,8OAAC;wBAAK,WAAU;kCAAU;;;;;;;;;;;;0BAE5B,8OAAC;gBAAK,WAAU;;oBAAoE;oBACjF;;;;;;;0BAEH,8OAAC,kIAAA,CAAA,SAAM;gBAAC,SAAQ;gBAAQ,MAAK;gBAAO,SAAS;gBAAY,WAAU;;oBAAmD;kCACpH,8OAAC,wNAAA,CAAA,gBAAa;wBAAC,WAAU;;;;;;oBAAY;kCACrC,8OAAC;wBAAK,WAAU;kCAAU;;;;;;;;;;;;;;;;;;AAIlC","debugId":null}},
    {"offset": {"line": 2334, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-mobile.tsx"],"sourcesContent":["import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,oBAAoB;AAEnB,SAAS;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAuB;IAEpE,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,MAAM,MAAM,OAAO,UAAU,CAAC,CAAC,YAAY,EAAE,oBAAoB,EAAE,GAAG,CAAC;QACvE,MAAM,WAAW;YACf,YAAY,OAAO,UAAU,GAAG;QAClC;QACA,IAAI,gBAAgB,CAAC,UAAU;QAC/B,YAAY,OAAO,UAAU,GAAG;QAChC,OAAO,IAAM,IAAI,mBAAmB,CAAC,UAAU;IACjD,GAAG,EAAE;IAEL,OAAO,CAAC,CAAC;AACX","debugId":null}},
    {"offset": {"line": 2359, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2427, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/EmployeeSelectionModal.tsx"],"sourcesContent":["// src/components/schedule/EmployeeSelectionModal.tsx\n'use client';\n\nimport React from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogClose,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { ScrollArea } from '@/components/ui/scroll-area'; // Use ScrollArea for potentially long lists\nimport type { Employee } from '@/types/schedule';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { X, UserPlus } from 'lucide-react';\n\ninterface EmployeeSelectionModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  employees: Employee[];\n  onSelectEmployee: (employee: Employee) => void;\n  departmentName: string;\n  date: Date;\n}\n\nexport const EmployeeSelectionModal: React.FC<EmployeeSelectionModalProps> = ({\n  isOpen,\n  onClose,\n  employees,\n  onSelectEmployee,\n  departmentName,\n  date,\n}) => {\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>Seleccionar Colaborador</DialogTitle>\n          <DialogDescription>\n            Elige un colaborador disponible para asignar a <strong>{departmentName}</strong> el{' '}\n            <strong>{format(date, 'PPP', { locale: es })}</strong>.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"py-4\">\n           {employees.length > 0 ? (\n             <ScrollArea className=\"h-[300px] pr-4\"> {/* Add max height and scrolling */}\n                <div className=\"space-y-2\">\n                  {employees.map((employee) => (\n                    <Button\n                      key={employee.id}\n                      variant=\"outline\"\n                      className=\"w-full justify-start\"\n                      onClick={() => onSelectEmployee(employee)}\n                    >\n                       <UserPlus className=\"mr-2 h-4 w-4\" /> {employee.name}\n                    </Button>\n                  ))}\n                </div>\n             </ScrollArea>\n           ) : (\n             <p className=\"text-center text-muted-foreground italic\">\n               No hay colaboradores disponibles para asignar en esta fecha/departamento.\n             </p>\n           )}\n        </div>\n         <DialogFooter>\n             <DialogClose asChild>\n                 <Button type=\"button\" variant=\"outline\">\n                    <X className=\"mr-2 h-4 w-4\" /> Cancelar\n                 </Button>\n             </DialogClose>\n         </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n"],"names":[],"mappings":"AAAA,qDAAqD;;;;;AAIrD;AASA;AACA,gPAA0D,4CAA4C;AAEtG;AACA;AACA;AAAA;AAjBA;;;;;;;;AA4BO,MAAM,yBAAgE,CAAC,EAC5E,MAAM,EACN,OAAO,EACP,SAAS,EACT,gBAAgB,EAChB,cAAc,EACd,IAAI,EACL;IACC,qBACE,8OAAC,kIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc,CAAC,OAAS,CAAC,QAAQ;kBACrD,cAAA,8OAAC,kIAAA,CAAA,gBAAa;YAAC,WAAU;;8BACvB,8OAAC,kIAAA,CAAA,eAAY;;sCACX,8OAAC,kIAAA,CAAA,cAAW;sCAAC;;;;;;sCACb,8OAAC,kIAAA,CAAA,oBAAiB;;gCAAC;8CAC8B,8OAAC;8CAAQ;;;;;;gCAAwB;gCAAI;8CACpF,8OAAC;8CAAQ,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM,OAAO;wCAAE,QAAQ,4IAAA,CAAA,KAAE;oCAAC;;;;;;gCAAY;;;;;;;;;;;;;8BAG1D,8OAAC;oBAAI,WAAU;8BACX,UAAU,MAAM,GAAG,kBAClB,8OAAC,0IAAA,CAAA,aAAU;wBAAC,WAAU;;4BAAiB;0CACpC,8OAAC;gCAAI,WAAU;0CACZ,UAAU,GAAG,CAAC,CAAC,yBACd,8OAAC,kIAAA,CAAA,SAAM;wCAEL,SAAQ;wCACR,WAAU;wCACV,SAAS,IAAM,iBAAiB;;0DAE/B,8OAAC,8MAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;4CAAiB;4CAAE,SAAS,IAAI;;uCALhD,SAAS,EAAE;;;;;;;;;;;;;;;6CAWzB,8OAAC;wBAAE,WAAU;kCAA2C;;;;;;;;;;;8BAK5D,8OAAC,kIAAA,CAAA,eAAY;8BACT,cAAA,8OAAC,kIAAA,CAAA,cAAW;wBAAC,OAAO;kCAChB,cAAA,8OAAC,kIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,SAAQ;;8CAC3B,8OAAC,4LAAA,CAAA,IAAC;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOlD","debugId":null}},
    {"offset": {"line": 2605, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/colombian-holidays.ts"],"sourcesContent":["/**\n * Representa una fecha.\n */\nexport interface Date {\n  year: number;\n  month: number; // 1-12\n  day: number;\n}\n\n/**\n * Obtiene de forma asíncrona una lista de festivos colombianos para un año dado.\n *\n * @param year El año para el cual obtener los festivos.\n * @returns Una promesa que resuelve a un array de objetos Date representando los festivos.\n */\nexport async function getColombianHolidays(year: number): Promise<Date[]> {\n  // TODO: Implementar esto llamando a una API externa o usando una biblioteca confiable.\n  // Ejemplo de estructura placeholder:\n  // const response = await fetch(`https://api.example.com/holidays/co/${year}`);\n  // if (!response.ok) {\n  //   throw new Error('Fallo al obtener los festivos');\n  // }\n  // const holidays = await response.json();\n  // return holidays.map(holiday => ({ year: year, month: ..., day: ... }));\n\n   console.warn(`Obteniendo festivos para ${year} - Usando datos de ejemplo. Implementar llamada API.`);\n\n   // Datos de ejemplo SOLO para desarrollo/pruebas\n   if (year === 2024) {\n        return [\n            { year: 2024, month: 1, day: 1 }, { year: 2024, month: 1, day: 8 }, // Año Nuevo, Reyes Magos\n            { year: 2024, month: 3, day: 25 }, { year: 2024, month: 3, day: 28 }, // San José, Jueves Santo\n            { year: 2024, month: 3, day: 29 }, { year: 2024, month: 5, day: 1 }, // Viernes Santo, Día del Trabajo\n            { year: 2024, month: 5, day: 13 }, { year: 2024, month: 6, day: 3 }, // Ascensión del Señor, Corpus Christi\n            { year: 2024, month: 6, day: 10 }, { year: 2024, month: 7, day: 1 }, // Sagrado Corazón, San Pedro y San Pablo\n            { year: 2024, month: 7, day: 20 }, { year: 2024, month: 8, day: 7 }, // Independencia, Batalla de Boyacá\n            { year: 2024, month: 8, day: 19 }, { year: 2024, month: 10, day: 14 }, // Asunción de la Virgen, Día de la Raza\n            { year: 2024, month: 11, day: 4 }, { year: 2024, month: 11, day: 11 }, // Todos los Santos, Independencia de Cartagena\n            { year: 2024, month: 12, day: 8 }, { year: 2024, month: 12, day: 25 } // Inmaculada Concepción, Navidad\n        ];\n   }\n   if (year === 2025) {\n     return [\n       { year: 2025, month: 1, day: 1 }, { year: 2025, month: 1, day: 6 }, // Año Nuevo, Reyes Magos\n       { year: 2025, month: 3, day: 24 }, { year: 2025, month: 4, day: 17 }, // San José, Jueves Santo\n       { year: 2025, month: 4, day: 18 }, { year: 2025, month: 5, day: 1 }, // Viernes Santo, Día del Trabajo\n       { year: 2025, month: 6, day: 2 }, { year: 2025, month: 6, day: 23 }, // Ascensión del Señor, Corpus Christi\n       { year: 2025, month: 6, day: 30 }, { year: 2025, month: 7, day: 20 }, // Sagrado Corazón, San Pedro y San Pablo (Nota: 20 Julio cae Domingo, no se traslada)\n       { year: 2025, month: 8, day: 7 }, { year: 2025, month: 8, day: 18 }, // Batalla de Boyacá, Asunción de la Virgen\n       { year: 2025, month: 10, day: 13 }, { year: 2025, month: 11, day: 3 }, // Día de la Raza, Todos los Santos\n       { year: 2025, month: 11, day: 17 }, { year: 2025, month: 12, day: 8 }, // Independencia de Cartagena, Inmaculada Concepción\n       { year: 2025, month: 12, day: 25 } // Navidad\n     ];\n   }\n    if (year === 2023) {\n        return [\n            { year: 2023, month: 1, day: 1 }, { year: 2023, month: 1, day: 9 },\n            { year: 2023, month: 3, day: 20 }, { year: 2023, month: 4, day: 6 },\n            { year: 2023, month: 4, day: 7 }, { year: 2023, month: 5, day: 1 },\n            { year: 2023, month: 5, day: 22 }, { year: 2023, month: 6, day: 12 },\n            { year: 2023, month: 6, day: 19 }, { year: 2023, month: 7, day: 3 },\n            { year: 2023, month: 7, day: 20 }, { year: 2023, month: 8, day: 7 },\n            { year: 2023, month: 8, day: 21 }, { year: 2023, month: 10, day: 16 },\n            { year: 2023, month: 11, day: 6 }, { year: 2023, month: 11, day: 13 },\n            { year: 2023, month: 12, day: 8 }, { year: 2023, month: 12, day: 25 }\n        ];\n    }\n\n\n  // Retorna array vacío si no hay datos de ejemplo o la API falla en el futuro\n  return [];\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2915, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/schedule-pdf-exporter.ts"],"sourcesContent":["// src/lib/schedule-pdf-exporter.ts\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { format, parse } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport type { ScheduleData, Department, Employee, ShiftAssignment } from '@/types/schedule';\nimport { formatTo12Hour } from './time-utils'; // Import the helper\n\n// Extend jsPDF interface for autoTable\ndeclare module 'jspdf' {\n  interface jsPDF {\n    autoTable: (options: any) => jsPDF;\n  }\n}\n\ninterface ScheduleExportData {\n    locationName: string;\n    weekDates: Date[];\n    departments: Department[];\n    employees: Employee[]; // List of all employees for the selected location\n    scheduleData: { [dateKey: string]: ScheduleData };\n    getScheduleForDate: (date: Date) => ScheduleData;\n    calculateShiftDuration: (assignment: ShiftAssignment, shiftDate: Date) => number;\n}\n\nexport function exportScheduleToPDF(data: ScheduleExportData): void {\n    const doc = new jsPDF({\n        orientation: 'landscape', // Landscape for week view\n        unit: 'pt', // Use points for better precision\n        format: 'a4' // Standard A4 size\n    });\n\n    const pageHeight = doc.internal.pageSize.height;\n    const pageWidth = doc.internal.pageSize.width;\n    let currentY = 40; // Start position for content (with margin)\n    const leftMargin = 40;\n    const rightMargin = 40;\n    const tableWidth = pageWidth - leftMargin - rightMargin;\n\n    // --- Header ---\n    doc.setFontSize(16);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Horario Semanal de Trabajo', pageWidth / 2, currentY, { align: 'center' });\n    currentY += 20;\n\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    const weekStartFormatted = format(data.weekDates[0], 'dd MMMM', { locale: es });\n    const weekEndFormatted = format(data.weekDates[6], 'dd MMMM yyyy', { locale: es });\n    doc.text(`Sede: ${data.locationName}`, leftMargin, currentY);\n    doc.text(`Semana: ${weekStartFormatted} - ${weekEndFormatted}`, pageWidth - rightMargin, currentY, { align: 'right' });\n    currentY += 30;\n\n    // --- Table Setup ---\n    const head: any[] = [\n        [{ content: 'EMPLEADO / DÍA', styles: { halign: 'left', valign: 'middle' } }] // First header cell for employee names\n    ];\n    // Add days of the week to header\n    data.weekDates.forEach(date => {\n        head[0].push({\n            content: `${format(date, 'EEE', { locale: es }).toUpperCase()}\\n${format(date, 'dd MMM', { locale: es })}`,\n            styles: { halign: 'center', valign: 'middle' }\n        });\n    });\n\n    const body: any[] = [];\n\n    // Group employees by department for the PDF structure\n    const employeesByDept: { [deptId: string]: Employee[] } = {};\n    data.employees.forEach(emp => {\n        // Find which department the employee worked in *most* this week, or just use primary?\n        // For simplicity, let's group by primary department for now.\n        // A more complex logic might group by actual assignments.\n        // We need to iterate through all assignments to build rows per employee.\n\n        // Alternative: Iterate departments, then employees assigned to that dept\n    });\n\n\n    data.departments.forEach(dept => {\n         // Add Department Row\n         body.push([\n             {\n                 content: `${dept.name} (${data.employees.filter(e => {\n                     // Check if employee has any shift in this dept this week\n                     return data.weekDates.some(date => {\n                         const daySchedule = data.getScheduleForDate(date);\n                         return (daySchedule.assignments[dept.id] || []).some(a => a.employee.id === e.id);\n                     });\n                 }).length} empleados)`,\n                 colSpan: data.weekDates.length + 1, // Span across all columns\n                 styles: { fontStyle: 'bold', fillColor: [230, 230, 230], textColor: [0, 0, 0] } // Gray background\n             }\n         ]);\n\n        // Find employees who have at least one shift in this department during the week\n        const deptEmployees = data.employees.filter(emp =>\n            data.weekDates.some(date => {\n                const daySchedule = data.getScheduleForDate(date);\n                return (daySchedule.assignments[dept.id] || []).some(a => a.employee.id === emp.id);\n            })\n        );\n\n\n        // Add Employee Rows for this department\n        deptEmployees.forEach(emp => {\n             const employeeRow: any[] = [{ content: emp.name, styles: { valign: 'middle' } }]; // First cell is employee name\n\n             data.weekDates.forEach(date => {\n                const daySchedule = data.getScheduleForDate(date);\n                const assignment = (daySchedule.assignments[dept.id] || []).find(a => a.employee.id === emp.id);\n\n                if (assignment) {\n                    // Format times using the helper\n                    let cellContent = `${formatTo12Hour(assignment.startTime)} - ${formatTo12Hour(assignment.endTime)}`;\n                    // Append break time if included\n                    if (assignment.includeBreak && assignment.breakStartTime && assignment.breakEndTime) {\n                        cellContent += `\\nD: ${formatTo12Hour(assignment.breakStartTime)}-${formatTo12Hour(assignment.breakEndTime)}`; // Add break time on new line\n                    }\n                     employeeRow.push({ content: cellContent, styles: { halign: 'center', valign: 'middle', fontSize: 8 } });\n                } else {\n                     employeeRow.push({ content: 'Sin turno', styles: { halign: 'center', valign: 'middle', textColor: [150, 150, 150], fontSize: 8 } }); // Gray text for \"Sin turno\"\n                }\n             });\n             body.push(employeeRow);\n        });\n    });\n\n\n    // --- Draw Table ---\n    autoTable(doc, {\n        head: head,\n        body: body,\n        startY: currentY,\n        theme: 'grid',\n        headStyles: {\n            fillColor: [76, 67, 223], // Primary color #4C43DF\n            textColor: [255, 255, 255], // White text\n            fontSize: 9,\n            lineWidth: 0.5,\n            lineColor: [200, 200, 200]\n        },\n        columnStyles: {\n            0: { cellWidth: 100, fontStyle: 'bold' }, // Employee name column wider and bold\n             // Dynamically apply styles to day columns\n             ...Array.from({ length: data.weekDates.length }).reduce((styles, _, index) => {\n                styles[index + 1] = { cellWidth: 'auto', halign: 'center', fontSize: 8 }; // Smaller font size for shifts\n                return styles;\n            }, {} as any)\n        },\n        styles: {\n            cellPadding: 4,\n            fontSize: 9,\n            overflow: 'linebreak', // Break long text\n            lineWidth: 0.5,\n            lineColor: [200, 200, 200]\n        },\n        didDrawPage: (hookData) => { currentY = hookData.cursor?.y ?? currentY; }\n    });\n\n    // --- Save the PDF ---\n    const timestamp = format(new Date(), 'yyyyMMdd_HHmmss');\n    const filename = `Horario_Semanal_${data.locationName}_${timestamp}.pdf`;\n    doc.save(filename);\n}\n\n// Helper to parse HH:MM to minutes (same as in page.tsx, consider moving to utils)\nconst parseTimeToMinutes = (timeStr: string): number => {\n    if (!timeStr || !/^\\d{2}:\\d{2}$/.test(timeStr)) return 0;\n    const [hours, minutes] = timeStr.split(':').map(Number);\n    return hours * 60 + minutes;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3150, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/schedule/page.tsx"],"sourcesContent":["\n'use client'; // Ensure this directive is present\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { DndContext, DragEndEvent, closestCenter } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Plus, Trash2, Edit, ChevronsLeft, ChevronsRight, Calendar as CalendarModernIcon, Users, Building, Building2, MinusCircle, ChevronsUpDown, Settings, Save, CopyPlus, Library, Eraser, Download, Upload, FileX2, FileSpreadsheet, FileDown, PencilLine } from 'lucide-react'; // Added FileDown icon, PencilLine, CalendarModernIcon\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label'; // Import Label\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Separator } from '@/components/ui/separator'; // Import Separator\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\n\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter, DialogDescription, DialogClose, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover'; // Import Popover\nimport { Calendar } from '@/components/ui/calendar'; // Import Calendar\n\nimport { LocationSelector } from '@/components/schedule/LocationSelector';\nimport { EmployeeList } from '@/components/schedule/EmployeeList';\nimport { ScheduleView } from '@/components/schedule/ScheduleView';\nimport { ShiftDetailModal } from '@/components/schedule/ShiftDetailModal';\nimport { WeekNavigator } from '@/components/schedule/WeekNavigator'; // Import WeekNavigator\nimport { useToast } from '@/hooks/use-toast'; // Import useToast\nimport { useIsMobile } from '@/hooks/use-mobile'; // Import useIsMobile\nimport { EmployeeSelectionModal } from '@/components/schedule/EmployeeSelectionModal'; // Import EmployeeSelectionModal\n\nimport type { Location, Department, Employee, ShiftAssignment, ScheduleData, ShiftTemplate, DailyAssignments, WeeklyAssignments } from '@/types/schedule'; // Added ShiftTemplate, DailyAssignments, WeeklyAssignments\nimport { v4 as uuidv4 } from 'uuid';\nimport { startOfWeek, endOfWeek, addDays, format, addWeeks, subWeeks, parseISO, getYear, isValid, differenceInMinutes, parse as parseDateFnsInternal } from 'date-fns'; // Added differenceInMinutes, parseDateFnsInternal, endOfWeek\nimport { es } from 'date-fns/locale';\nimport { cn } from '@/lib/utils';\nimport { getColombianHolidays } from '@/services/colombian-holidays'; // Import holiday service\nimport { exportScheduleToPDF } from '@/lib/schedule-pdf-exporter'; // Import the new PDF exporter\nimport { formatTo12Hour } from '@/lib/time-utils'; // Import the time formatting helper\n\n\n// Helper to generate dates for the current week\nconst getWeekDates = (currentDate: Date): Date[] => {\n  const start = startOfWeek(currentDate, { weekStartsOn: 1 }); // Start on Monday\n  return Array.from({ length: 7 }).map((_, i) => addDays(start, i));\n};\n\n// LocalStorage Keys\nconst SCHEDULE_DATA_KEY = 'schedulePlannerData';\nconst SCHEDULE_TEMPLATES_KEY = 'scheduleTemplates';\n\n// Cache for holidays\nlet holidaysCache: { [year: number]: Set<string> } = {};\n\nasync function fetchAndCacheHolidays(year: number): Promise<Set<string>> {\n    if (holidaysCache[year]) {\n        return holidaysCache[year];\n    }\n    try {\n        const holidays = await getColombianHolidays(year);\n        if (!Array.isArray(holidays)) {\n            console.error(`Error: getColombianHolidays(${year}) did not return an array.`);\n            throw new Error(`Formato de respuesta inválido para festivos de ${year}.`);\n        }\n        // Ensure holidays have correct structure before formatting\n        const holidaySet = new Set(holidays.map(h => {\n            if (!h || typeof h.year !== 'number' || typeof h.month !== 'number' || typeof h.day !== 'number') {\n                console.error(`Error: Invalid holiday object structure for year ${year}:`, h);\n                return ''; // Skip invalid entry\n            }\n             try {\n                 const dateToFormat = new Date(h.year, h.month - 1, h.day);\n                 if (!isValid(dateToFormat) || getYear(dateToFormat) !== h.year) {\n                     console.error(`Error: Invalid date components for holiday in year ${year}:`, h);\n                     return ''; // Skip invalid date\n                 }\n                 return format(dateToFormat, 'yyyy-MM-dd');\n             } catch (formatError) {\n                 console.error(`Error formatting holiday date for year ${year}:`, h, formatError);\n                 return ''; // Skip on formatting error\n             }\n        }).filter(dateStr => dateStr !== '')); // Filter out empty strings from errors\n\n        holidaysCache[year] = holidaySet;\n        return holidaySet;\n    } catch (error) {\n        console.error(`Error fetching or caching holidays for ${year}:`, error);\n        return new Set(); // Return empty set on error\n    }\n}\n\nconst initialLocations: Location[] = [\n  { id: 'loc-1', name: 'Sede Principal' },\n  { id: 'loc-2', name: 'Sede Norte' },\n  { id: 'loc-3', name: 'Sede Occidente' },\n];\n\nconst initialDepartments: Department[] = [\n  { id: 'dep-1', name: 'Cocina', locationId: 'loc-1', icon: Building },\n  { id: 'dep-2', name: 'Salón', locationId: 'loc-1', icon: Users },\n  { id: 'dep-3', name: 'Caja & Barra', locationId: 'loc-2', icon: Edit },\n  { id: 'dep-4', name: 'Bodega', locationId: 'loc-2', icon: Building2 },\n  { id: 'dep-5', name: 'Cocina', locationId: 'loc-3', icon: Building },\n  { id: 'dep-6', name: 'Salón', locationId: 'loc-3', icon: Users },\n];\n\nconst initialEmployees: Employee[] = [\n  { id: 'emp-1', name: 'Carlos Pérez', primaryLocationId: 'loc-1' },\n  { id: 'emp-2', name: 'Ana Rodriguez', primaryLocationId: 'loc-1' },\n  { id: 'emp-3', name: 'Luis Gómez', primaryLocationId: 'loc-2' },\n  { id: 'emp-4', name: 'Sofía Vargas', primaryLocationId: 'loc-2' },\n  { id: 'emp-5', name: 'Diego Torres', primaryLocationId: 'loc-3' },\n  { id: 'emp-6', name: 'Isabel Castro', primaryLocationId: 'loc-3' },\n];\n\n// Helper function to parse HH:MM time into minutes from midnight\nconst parseTimeToMinutes = (timeStr: string): number => {\n  if (!timeStr || !/^\\d{2}:\\d{2}$/.test(timeStr)) return 0; // Return 0 for invalid format\n  const [hours, minutes] = timeStr.split(':').map(Number);\n  return hours * 60 + minutes;\n};\n\n// Helper function to calculate shift duration in hours\nconst calculateShiftDuration = (assignment: ShiftAssignment, shiftDate: Date): number => {\n    try {\n        const startDateStr = format(shiftDate, 'yyyy-MM-dd');\n        const startTime = parseDateFnsInternal(`${startDateStr} ${assignment.startTime}`, 'yyyy-MM-dd HH:mm', new Date());\n\n        // Determine end date/time, considering overnight shifts\n        const startTimeMinutes = parseTimeToMinutes(assignment.startTime);\n        const endTimeMinutes = parseTimeToMinutes(assignment.endTime);\n        let endTime = parseDateFnsInternal(`${startDateStr} ${assignment.endTime}`, 'yyyy-MM-dd HH:mm', new Date());\n        if (!isValid(endTime) || endTimeMinutes < startTimeMinutes) { // Handle invalid end time or overnight shift\n             if (endTimeMinutes < startTimeMinutes) {\n                endTime = addDays(parseDateFnsInternal(`${startDateStr} ${assignment.endTime}`, 'yyyy-MM-dd HH:mm', new Date()), 1);\n             } else {\n                 // If endTime is invalid but not overnight, return 0 or handle as error\n                 console.warn('Invalid end time for duration calculation:', assignment);\n                 return 0;\n             }\n        }\n\n\n        if (!isValid(startTime) || !isValid(endTime)) {\n            console.warn('Invalid start or end time for duration calculation:', assignment);\n            return 0;\n        }\n\n        let totalShiftMinutes = differenceInMinutes(endTime, startTime);\n\n        // Subtract break duration if applicable\n        let breakMinutes = 0;\n        if (assignment.includeBreak && assignment.breakStartTime && assignment.breakEndTime) {\n            const breakStartMinutes = parseTimeToMinutes(assignment.breakStartTime);\n            const breakEndMinutes = parseTimeToMinutes(assignment.breakEndTime);\n            if (breakEndMinutes > breakStartMinutes) { // Ensure break end is after start\n                 // Complex check: Does the break interval actually fall within the shift interval?\n                 // For simplicity now, assume the entered break happens during the shift if includeBreak is true.\n                 breakMinutes = breakEndMinutes - breakStartMinutes;\n            }\n        }\n\n        const netMinutes = totalShiftMinutes - breakMinutes;\n        return Math.max(0, netMinutes) / 60; // Return hours, ensure non-negative\n    } catch (error) {\n        console.error(\"Error calculating shift duration:\", error, assignment);\n        return 0;\n    }\n};\n\n\nexport default function SchedulePage() {\n    const [locations, setLocations] = useState<Location[]>(initialLocations);\n    const [departments, setDepartments] = useState<Department[]>(initialDepartments);\n    const [employees, setEmployees] = useState<Employee[]>(initialEmployees);\n    const [currentDate, setCurrentDate] = useState(new Date()); // Track current date for week/day view navigation\n    const [scheduleData, setScheduleData] = useState<{ [dateKey: string]: ScheduleData }>({}); // Store data per date key \"yyyy-MM-dd\"\n    const [viewMode, setViewMode] = useState<'day' | 'week'>('week'); // Default to week view\n    const [selectedLocationId, setSelectedLocationId] = useState<string>(initialLocations[0].id);\n    const [isShiftModalOpen, setIsShiftModalOpen] = useState(false); // Shift details modal\n    // State for selecting employee via '+' button\n    const [isEmployeeSelectionModalOpen, setIsEmployeeSelectionModalOpen] = useState(false);\n    const [shiftRequestContext, setShiftRequestContext] = useState<{ departmentId: string; date: Date } | null>(null);\n    const [selectedEmployee, setSelectedEmployee] = useState<Employee | null>(null); // Employee selected for the shift being added/edited\n    // State for tracking the shift being edited\n    const [editingShift, setEditingShift] = useState<{ assignment: ShiftAssignment; date: Date; departmentId: string } | null>(null);\n    // Target date: Used specifically for DAY VIEW and for MODALS (shift add/edit, template load)\n    const [targetDate, setTargetDate] = useState<Date>(new Date());\n\n    // State for managing Location, Department, and Employee CRUD modals\n    const [isConfigModalOpen, setIsConfigModalOpen] = useState(false);\n    const [isLocationModalOpen, setIsLocationModalOpen] = useState(false);\n    const [isDepartmentModalOpen, setIsDepartmentModalOpen] = useState(false);\n    const [isEmployeeModalOpen, setIsEmployeeModalOpen] = useState(false);\n\n    const [editingLocation, setEditingLocation] = useState<Location | null>(null);\n    const [locationFormData, setLocationFormData] = useState({ name: '' });\n\n    const [editingDepartment, setEditingDepartment] = useState<Department | null>(null);\n    const [departmentFormData, setDepartmentFormData] = useState({ name: '', locationId: selectedLocationId });\n\n    const [editingEmployee, setEditingEmployee] = useState<Employee | null>(null);\n    const [employeeFormData, setEmployeeFormData] = useState({ name: '', primaryLocationId: selectedLocationId });\n\n    const [itemToDelete, setItemToDelete] = useState<{ type: 'location' | 'department' | 'employee' | 'template'; id: string; name: string } | null>(null); // Added 'template' type\n\n    // State for template saving dialog\n    const [isTemplateModalOpen, setIsTemplateModalOpen] = useState(false);\n    const [templateName, setTemplateName] = useState('');\n    const [savedTemplates, setSavedTemplates] = useState<ShiftTemplate[]>([]); // State for saved templates\n\n    // State for clear day confirmation\n    const [clearingDate, setClearingDate] = useState<Date | null>(null);\n\n    // State for holidays\n    const [holidaySet, setHolidaySet] = useState<Set<string>>(new Set());\n    const [isCheckingHoliday, setIsCheckingHoliday] = useState<boolean>(false);\n\n    const isMobile = useIsMobile(); // Hook to detect mobile/tablet view\n    const { toast } = useToast(); // Get toast function\n\n    // Fetch holidays whenever the year of the current week changes\n    useEffect(() => {\n        const startYear = getYear(startOfWeek(currentDate, { weekStartsOn: 1 }));\n        const endYear = getYear(endOfWeek(currentDate, { weekStartsOn: 1 }));\n        const yearsToFetch = new Set([startYear, endYear]);\n\n        setIsCheckingHoliday(true);\n        Promise.all(Array.from(yearsToFetch).map(year => fetchAndCacheHolidays(year)))\n            .then(results => {\n                // Combine results from potentially multiple years\n                const combinedSet = new Set<string>();\n                results.forEach(set => set.forEach(date => combinedSet.add(date)));\n                setHolidaySet(combinedSet);\n            })\n            .catch(error => {\n                console.error(\"Error fetching holidays for week view:\", error);\n                setHolidaySet(new Set()); // Reset on error\n            })\n            .finally(() => {\n                setIsCheckingHoliday(false);\n            });\n    }, [currentDate]); // Re-run when the navigated date changes\n\n    // Load schedule data and templates from localStorage on mount\n    useEffect(() => {\n        if (typeof window !== 'undefined') {\n            const savedSchedule = localStorage.getItem(SCHEDULE_DATA_KEY);\n            if (savedSchedule) {\n                try {\n                    const parsedData = JSON.parse(savedSchedule);\n                    // Revive date objects\n                    Object.keys(parsedData).forEach(key => {\n                        if (parsedData[key] && typeof parsedData[key].date === 'string') {\n                            parsedData[key].date = parseISO(parsedData[key].date);\n                        }\n                    });\n                    setScheduleData(parsedData);\n                } catch (error) {\n                    console.error(\"Error parsing schedule data from localStorage:\", error);\n                }\n            }\n\n            // Load saved templates\n            const savedTemplatesRaw = localStorage.getItem(SCHEDULE_TEMPLATES_KEY);\n             if (savedTemplatesRaw) {\n                 try {\n                     const parsedTemplates = JSON.parse(savedTemplatesRaw);\n                     // Basic validation: ensure it's an array and items have expected structure (optional but good)\n                     if (Array.isArray(parsedTemplates) && parsedTemplates.every(t => t && typeof t.id === 'string' && typeof t.name === 'string' && typeof t.type === 'string')) {\n                         setSavedTemplates(parsedTemplates);\n                     } else {\n                         console.warn(\"Invalid template data found in localStorage, ignoring.\");\n                         localStorage.removeItem(SCHEDULE_TEMPLATES_KEY); // Clear invalid data\n                     }\n                 } catch (error) {\n                     console.error(\"Error parsing templates from localStorage:\", error);\n                     localStorage.removeItem(SCHEDULE_TEMPLATES_KEY); // Clear invalid data\n                 }\n             }\n        }\n    }, []);\n\n\n    const weekDates = getWeekDates(currentDate);\n    // const currentDayKey = format(targetDate, 'yyyy-MM-dd'); // Date key for current schedule (Removed as it's used less directly now)\n\n    // Helper to get schedule for a specific date, handling potential undefined\n    const getScheduleForDate = (date: Date): ScheduleData => {\n        const key = format(date, 'yyyy-MM-dd');\n        return scheduleData[key] || { date: date, assignments: {} };\n    }\n\n    // Derived state for filtering employees and departments by location\n    const filteredEmployees = useMemo(() => employees.filter(emp => emp.primaryLocationId === selectedLocationId), [employees, selectedLocationId]);\n    const filteredDepartments = useMemo(() => departments.filter(dep => dep.locationId === selectedLocationId), [departments, selectedLocationId]);\n    // Filter templates by location AND current view mode\n    const filteredTemplates = useMemo(() =>\n        savedTemplates.filter(temp =>\n            temp.locationId === selectedLocationId && temp.type === (viewMode === 'day' ? 'daily' : 'weekly')\n        ), [savedTemplates, selectedLocationId, viewMode]);\n\n\n    // Derived state for available employees (considering view mode and date)\n    const assignedEmployeeIdsForTargetDate = useMemo(() => {\n        const ids = new Set<string>();\n         // Determine the date to check based on context\n        const dateToCheck = shiftRequestContext?.date || targetDate; // Use context date if available, else targetDate\n        const dateKey = format(dateToCheck, 'yyyy-MM-dd');\n        const daySchedule = scheduleData[dateKey];\n        if (daySchedule) {\n            Object.values(daySchedule.assignments).forEach(deptAssignments => {\n                deptAssignments.forEach(assignment => ids.add(assignment.employee.id));\n            });\n        }\n        return ids;\n        // Re-calculate when schedule changes, or when the context/target date changes\n    }, [scheduleData, targetDate, shiftRequestContext]);\n\n\n    // Available employees calculation now considers view mode\n    const availableEmployees = useMemo(() => {\n        if (viewMode === 'week') {\n            // In week view, show all employees filtered by location, regardless of assignment on a specific day\n            return filteredEmployees;\n        } else {\n            // In day view, filter out employees already assigned on the targetDate\n            return filteredEmployees.filter(emp => !assignedEmployeeIdsForTargetDate.has(emp.id));\n        }\n    }, [filteredEmployees, assignedEmployeeIdsForTargetDate, viewMode]);\n\n\n    useEffect(() => {\n        // Ensure department locationId defaults to current selected location\n        setDepartmentFormData(prev => ({ ...prev, locationId: selectedLocationId }));\n        setEmployeeFormData(prev => ({ ...prev, primaryLocationId: selectedLocationId }));\n    }, [selectedLocationId]);\n\n    const handleLocationChange = (locationId: string) => {\n        setSelectedLocationId(locationId);\n    };\n\n    // Handler to open Employee Selection Modal when '+' is clicked\n    const handleOpenEmployeeSelectionModal = (departmentId: string, date: Date) => {\n         setEditingShift(null); // Ensure we are not in edit mode\n         setShiftRequestContext({ departmentId, date }); // Store the context\n         setIsEmployeeSelectionModalOpen(true); // Open the selection modal\n    };\n\n    // Handler when an employee is selected from the EmployeeSelectionModal\n    const handleEmployeeSelectedForShift = (employee: Employee) => {\n        if (!shiftRequestContext) return;\n        setSelectedEmployee(employee); // Set the selected employee\n        setIsEmployeeSelectionModalOpen(false); // Close selection modal\n        setIsShiftModalOpen(true); // Open the shift detail modal for ADDING\n    };\n\n    // Handler for Drag & Drop assignment\n    const handleOpenShiftModalForDrop = (employee: Employee, departmentId: string, date: Date) => {\n        setEditingShift(null); // Ensure not in edit mode\n        setSelectedEmployee(employee);\n        // Set context for consistency, even though we already have the employee\n        setShiftRequestContext({ departmentId, date });\n        setIsShiftModalOpen(true); // Open the shift detail modal for ADDING\n    };\n\n    // --- Handler for clicking an existing shift card ---\n    const handleShiftClick = (assignment: ShiftAssignment, date: Date, departmentId: string) => {\n        setEditingShift({ assignment, date, departmentId }); // Set the shift to be edited\n        setSelectedEmployee(assignment.employee); // Employee is already known\n        setShiftRequestContext({ departmentId, date }); // Set context\n        setIsShiftModalOpen(true); // Open the shift detail modal for EDITING\n    };\n\n\n    const handleAddOrUpdateShift = (details: any) => {\n        // Use editingShift context if available, otherwise use selectedEmployee and shiftRequestContext\n        const context = editingShift || shiftRequestContext;\n        const employeeForShift = editingShift?.assignment.employee || selectedEmployee;\n\n        if (!employeeForShift || !context) return;\n\n        const { departmentId, date } = context;\n        const dateKey = format(date, 'yyyy-MM-dd');\n\n        // Create or update the assignment\n        const assignmentPayload: ShiftAssignment = {\n            // If editing, use existing ID, otherwise generate new one\n            id: editingShift?.assignment.id || uuidv4(),\n            employee: employeeForShift,\n            startTime: details.startTime,\n            endTime: details.endTime,\n            includeBreak: details.includeBreak || false,\n            breakStartTime: details.includeBreak ? details.breakStartTime : undefined,\n            breakEndTime: details.includeBreak ? details.breakEndTime : undefined,\n        };\n\n        setScheduleData(prevData => {\n            const dayData = prevData[dateKey] || { date: date, assignments: {} };\n            const departmentAssignments = dayData.assignments[departmentId] || [];\n\n            let updatedAssignments;\n            if (editingShift) {\n                // Update existing assignment\n                updatedAssignments = departmentAssignments.map(a =>\n                    a.id === editingShift.assignment.id ? assignmentPayload : a\n                );\n            } else {\n                 // Check if employee is already assigned in ANY department on this date\n                 const isAlreadyAssigned = Object.values(dayData.assignments)\n                                                .flat()\n                                                .some(a => a.employee.id === employeeForShift.id);\n\n                 if (isAlreadyAssigned) {\n                     toast({\n                         title: 'Asignación Duplicada',\n                         description: `${employeeForShift.name} ya tiene un turno asignado para el ${format(date, 'PPP', { locale: es })}.`,\n                         variant: 'destructive',\n                     });\n                     return prevData; // Do not update schedule if duplicate\n                 }\n                // Add new assignment\n                updatedAssignments = [...departmentAssignments, assignmentPayload];\n            }\n\n            return {\n                ...prevData,\n                [dateKey]: {\n                    ...dayData,\n                    assignments: {\n                        ...dayData.assignments,\n                        [departmentId]: updatedAssignments,\n                    },\n                },\n            };\n        });\n        // Reset state after saving\n        setIsShiftModalOpen(false);\n        setSelectedEmployee(null);\n        setShiftRequestContext(null);\n        setEditingShift(null); // Clear editing state\n         toast({\n            title: editingShift ? 'Turno Actualizado' : 'Turno Agregado',\n            description: `Turno para ${employeeForShift.name} el ${format(date, 'PPP', { locale: es })} ${editingShift ? 'actualizado.' : 'agregado.'}`,\n        });\n    };\n\n    const handleRemoveShift = (dateKey: string, departmentId: string, assignmentId: string) => {\n        setScheduleData(prevData => {\n            const dayData = prevData[dateKey];\n            if (!dayData) return prevData;\n\n            const departmentAssignments = (dayData.assignments[departmentId] || []).filter(a => a.id !== assignmentId);\n\n            // Create a new assignments object to avoid direct mutation\n            const newAssignments = { ...dayData.assignments, [departmentId]: departmentAssignments };\n\n            // If the department assignment list is now empty, consider removing the department key\n            if (newAssignments[departmentId].length === 0) {\n                delete newAssignments[departmentId];\n            }\n\n            return {\n                ...prevData,\n                [dateKey]: {\n                    ...dayData,\n                    assignments: newAssignments,\n                },\n            };\n        });\n         toast({ title: 'Turno Eliminado', variant: 'destructive' });\n    };\n\n\n    const handleDragEnd = (event: DragEndEvent) => {\n        const { over, active } = event;\n\n        if (!over || !active || isMobile) return; // Ignore drag on mobile\n\n        const employeeId = active.id as string;\n        const targetData = over.data.current as { type: string; id: string; date?: string }; // Expecting { type: 'department', id: 'dept-id', date: 'yyyy-MM-dd' }\n\n        if (!targetData || targetData.type !== 'department' || !targetData.date) {\n            console.warn(\"Invalid drop target data:\", targetData);\n            return;\n        }\n\n        const departmentId = targetData.id;\n        const dropDate = parseISO(targetData.date); // Parse date string back to Date object\n\n        const employee = employees.find(emp => emp.id === employeeId);\n        if (!employee) return;\n\n        // --- Check if employee is already assigned ANYWHERE on this date ---\n        const dateKey = format(dropDate, 'yyyy-MM-dd');\n        const daySchedule = scheduleData[dateKey];\n        if (daySchedule) {\n             const isAlreadyAssigned = Object.values(daySchedule.assignments)\n                                            .flat() // Combine assignments from all departments for the day\n                                            .some(assignment => assignment.employee.id === employeeId);\n             if (isAlreadyAssigned) {\n                 toast({\n                     title: 'Asignación Duplicada',\n                     description: `${employee.name} ya tiene un turno asignado para el ${format(dropDate, 'PPP', { locale: es })}.`,\n                     variant: 'destructive',\n                 });\n                 return; // Stop the assignment\n             }\n        }\n        // --- End Check ---\n\n        // If not already assigned on this date, proceed to open modal\n        handleOpenShiftModalForDrop(employee, departmentId, dropDate);\n    };\n\n    // CRUD Handlers\n    const handleOpenLocationModal = (location: Location | null) => {\n        setEditingLocation(location);\n        setLocationFormData({ name: location?.name || '' });\n        setIsLocationModalOpen(true);\n    };\n\n    const handleSaveLocation = () => {\n        const name = locationFormData.name.trim();\n        if (!name) {\n            toast({ title: 'Nombre Inválido', description: 'El nombre de la sede no puede estar vacío.', variant: 'destructive' });\n            return;\n        }\n        if (editingLocation) {\n            // Update existing location\n            setLocations(locations.map(loc => loc.id === editingLocation.id ? { ...loc, name } : loc));\n             toast({ title: 'Sede Actualizada', description: `Sede \"${name}\" actualizada.` });\n        } else {\n            // Add new location\n            const newLocation = { id: uuidv4(), name };\n            setLocations([...locations, newLocation]);\n            toast({ title: 'Sede Agregada', description: `Sede \"${name}\" agregada.` });\n        }\n        setIsLocationModalOpen(false);\n        setEditingLocation(null); // Clear editing state\n    };\n\n    const handleOpenDepartmentModal = (department: Department | null) => {\n        setEditingDepartment(department);\n        setDepartmentFormData({ name: department?.name || '', locationId: department?.locationId || selectedLocationId });\n        setIsDepartmentModalOpen(true);\n    };\n\n    const handleSaveDepartment = () => {\n         const name = departmentFormData.name.trim();\n         const locationId = departmentFormData.locationId;\n        if (!name || !locationId) {\n            toast({ title: 'Datos Incompletos', description: 'El nombre y la sede del departamento son requeridos.', variant: 'destructive' });\n            return;\n        }\n        if (editingDepartment) {\n            setDepartments(departments.map(dep => dep.id === editingDepartment.id ? { ...dep, name, locationId } : dep));\n             toast({ title: 'Departamento Actualizado', description: `Departamento \"${name}\" actualizado.` });\n        } else {\n            const newDepartment = { id: uuidv4(), name, locationId, icon: Building }; // Assign default icon\n            setDepartments([...departments, newDepartment]);\n            toast({ title: 'Departamento Agregado', description: `Departamento \"${name}\" agregado.` });\n        }\n        setIsDepartmentModalOpen(false);\n        setEditingDepartment(null); // Clear editing state\n    };\n\n    const handleOpenEmployeeModal = (employee: Employee | null) => {\n        setEditingEmployee(employee);\n        setEmployeeFormData({ name: employee?.name || '', primaryLocationId: employee?.primaryLocationId || selectedLocationId });\n        setIsEmployeeModalOpen(true);\n    };\n\n    const handleSaveEmployee = () => {\n         const name = employeeFormData.name.trim();\n         const primaryLocationId = employeeFormData.primaryLocationId;\n         if (!name || !primaryLocationId) {\n            toast({ title: 'Datos Incompletos', description: 'El nombre y la sede principal del colaborador son requeridos.', variant: 'destructive' });\n            return;\n         }\n        if (editingEmployee) {\n            setEmployees(employees.map(emp => emp.id === editingEmployee.id ? { ...emp, name, primaryLocationId } : emp));\n             toast({ title: 'Colaborador Actualizado', description: `Colaborador \"${name}\" actualizado.` });\n        } else {\n            const newEmployee = { id: uuidv4(), name, primaryLocationId };\n            setEmployees([...employees, newEmployee]);\n             toast({ title: 'Colaborador Agregado', description: `Colaborador \"${name}\" agregado.` });\n        }\n        setIsEmployeeModalOpen(false);\n        setEditingEmployee(null); // Clear editing state\n    };\n\n     // Confirm before deleting\n     const confirmDeleteItem = (type: 'location' | 'department' | 'employee' | 'template', id: string, name: string) => {\n        setItemToDelete({ type, id, name });\n        // The AlertDialog will open via its trigger\n     };\n\n\n    const handleDeleteItem = () => {\n        if (!itemToDelete) return;\n\n        try {\n            let message = '';\n            switch (itemToDelete.type) {\n                case 'location':\n                    setLocations(locations.filter(loc => loc.id !== itemToDelete.id));\n                    setDepartments(departments.filter(dep => dep.locationId !== itemToDelete.id));\n                    setEmployees(emps => emps.map(emp => emp.primaryLocationId === itemToDelete.id ? {...emp, primaryLocationId: '' } : emp));\n                    // Remove templates associated with this location\n                    const remainingTemplatesLocation = savedTemplates.filter(t => t.locationId !== itemToDelete.id);\n                    setSavedTemplates(remainingTemplatesLocation);\n                    if (typeof window !== 'undefined') {\n                         localStorage.setItem(SCHEDULE_TEMPLATES_KEY, JSON.stringify(remainingTemplatesLocation));\n                    }\n                    if (selectedLocationId === itemToDelete.id) {\n                        setSelectedLocationId(locations.length > 1 ? locations.find(loc => loc.id !== itemToDelete.id)!.id : '');\n                    }\n                    message = `Sede \"${itemToDelete.name}\" y sus datos asociados eliminados.`;\n                    break;\n                case 'department':\n                    setDepartments(departments.filter(dep => dep.id !== itemToDelete.id));\n                     const updatedSchedule = { ...scheduleData };\n                     Object.keys(updatedSchedule).forEach(dateKey => {\n                         delete updatedSchedule[dateKey].assignments[itemToDelete.id];\n                     });\n                     setScheduleData(updatedSchedule);\n                      // Remove assignments from templates\n                     const updatedTemplatesDept = savedTemplates.map(t => {\n                         const newAssignments = { ...t.assignments };\n                         // Adjust deletion based on template type\n                         if (t.type === 'daily') {\n                             delete (newAssignments as { [deptId: string]: any })[itemToDelete.id];\n                         } else if (t.type === 'weekly') {\n                             Object.keys(newAssignments).forEach(dateKey => {\n                                 delete (newAssignments as { [dateKey: string]: { [deptId: string]: any } })[dateKey][itemToDelete.id];\n                             });\n                         }\n                         return { ...t, assignments: newAssignments };\n                     });\n                     setSavedTemplates(updatedTemplatesDept);\n                     if (typeof window !== 'undefined') {\n                         localStorage.setItem(SCHEDULE_TEMPLATES_KEY, JSON.stringify(updatedTemplatesDept));\n                     }\n                    message = `Departamento \"${itemToDelete.name}\" eliminado.`;\n                    break;\n                case 'employee':\n                    setEmployees(employees.filter(emp => emp.id !== itemToDelete.id));\n                     const updatedScheduleEmp = { ...scheduleData };\n                     Object.keys(updatedScheduleEmp).forEach(dateKey => {\n                          Object.keys(updatedScheduleEmp[dateKey].assignments).forEach(deptId => {\n                              updatedScheduleEmp[dateKey].assignments[deptId] = updatedScheduleEmp[dateKey].assignments[deptId].filter(a => a.employee.id !== itemToDelete.id);\n                          });\n                     });\n                     setScheduleData(updatedScheduleEmp);\n                     // Remove assignments from templates\n                      const updatedTemplatesEmp = savedTemplates.map(t => {\n                          let newAssignments = JSON.parse(JSON.stringify(t.assignments)); // Deep copy\n                          if (t.type === 'daily') {\n                              Object.keys(newAssignments).forEach(deptId => {\n                                  newAssignments[deptId] = newAssignments[deptId].filter((a: any) => (typeof a.employee === 'object' ? a.employee.id : a.employee) !== itemToDelete.id);\n                              });\n                          } else if (t.type === 'weekly') {\n                              Object.keys(newAssignments).forEach(dateKey => {\n                                  Object.keys(newAssignments[dateKey]).forEach(deptId => {\n                                      newAssignments[dateKey][deptId] = newAssignments[dateKey][deptId].filter((a: any) => (typeof a.employee === 'object' ? a.employee.id : a.employee) !== itemToDelete.id);\n                                  });\n                              });\n                          }\n                          return { ...t, assignments: newAssignments };\n                      });\n                     setSavedTemplates(updatedTemplatesEmp);\n                     if (typeof window !== 'undefined') {\n                         localStorage.setItem(SCHEDULE_TEMPLATES_KEY, JSON.stringify(updatedTemplatesEmp));\n                     }\n                    message = `Colaborador \"${itemToDelete.name}\" eliminado.`;\n                    break;\n                 case 'template':\n                     const updatedTemplates = savedTemplates.filter(t => t.id !== itemToDelete.id);\n                     setSavedTemplates(updatedTemplates);\n                     if (typeof window !== 'undefined') {\n                         localStorage.setItem(SCHEDULE_TEMPLATES_KEY, JSON.stringify(updatedTemplates));\n                     }\n                     message = `Template \"${itemToDelete.name}\" eliminado.`;\n                    break;\n            }\n            toast({ title: 'Elemento Eliminado', description: message, variant: 'destructive' });\n        } catch (error) {\n             console.error(`Error deleting item type ${itemToDelete.type}:`, error);\n             toast({ title: 'Error al Eliminar', description: 'No se pudo completar la eliminación.', variant: 'destructive' });\n        } finally {\n            setItemToDelete(null); // Close dialog\n        }\n    };\n\n     // Handlers for Week Navigation\n     const handlePreviousWeek = () => {\n        setCurrentDate(prevDate => subWeeks(prevDate, 1));\n     };\n\n     const handleNextWeek = () => {\n        setCurrentDate(prevDate => addWeeks(prevDate, 1));\n     };\n\n    // --- Advanced Action Handlers ---\n    const handleSaveSchedule = () => {\n        if (typeof window !== 'undefined') {\n            try {\n                localStorage.setItem(SCHEDULE_DATA_KEY, JSON.stringify(scheduleData));\n                toast({ title: 'Horario Guardado', description: 'El horario actual se ha guardado localmente.' });\n            } catch (error) {\n                console.error(\"Error saving schedule data to localStorage:\", error);\n                toast({ title: 'Error al Guardar', description: 'No se pudo guardar el horario.', variant: 'destructive' });\n            }\n        }\n    };\n\n     const handleDuplicateDay = (sourceDate: Date) => {\n         const sourceDayKey = format(sourceDate, 'yyyy-MM-dd');\n         const nextDayDate = addDays(sourceDate, 1);\n         const nextDayKey = format(nextDayDate, 'yyyy-MM-dd');\n         const sourceSchedule = scheduleData[sourceDayKey];\n\n         if (!sourceSchedule || Object.keys(sourceSchedule.assignments).length === 0) {\n             toast({ title: 'Nada que Duplicar', description: `No hay turnos asignados para el ${format(sourceDate, 'PPP', { locale: es })}.`, variant: 'destructive' });\n             return;\n         }\n\n         // Deep copy assignments to avoid reference issues\n         const duplicatedAssignments = JSON.parse(JSON.stringify(sourceSchedule.assignments));\n         // Regenerate unique IDs for duplicated assignments\n         Object.keys(duplicatedAssignments).forEach(deptId => {\n             duplicatedAssignments[deptId].forEach((assign: ShiftAssignment) => {\n                 assign.id = uuidv4();\n             });\n         });\n\n\n         setScheduleData(prevData => ({\n             ...prevData,\n             [nextDayKey]: {\n                 date: nextDayDate,\n                 assignments: duplicatedAssignments,\n             },\n         }));\n\n         // Optionally, navigate to the next day in day view\n         if (viewMode === 'day') {\n             setTargetDate(nextDayDate);\n             setCurrentDate(nextDayDate); // Ensure week navigator updates if view changes\n         }\n\n         toast({ title: 'Horario Duplicado', description: `El horario del ${format(sourceDate, 'dd/MM')} se duplicó al ${format(nextDayDate, 'dd/MM')}.` });\n     };\n\n      // --- Clear Day Handler ---\n     const handleConfirmClearDay = (dateToClear: Date) => {\n         setClearingDate(dateToClear);\n     };\n\n     const handleClearDay = () => {\n         if (!clearingDate) return;\n         const dateKey = format(clearingDate, 'yyyy-MM-dd');\n\n         setScheduleData(prevData => {\n             const updatedData = { ...prevData };\n             if (updatedData[dateKey]) {\n                 updatedData[dateKey] = {\n                     date: clearingDate,\n                     assignments: {} // Clear assignments for this day\n                 };\n             }\n             return updatedData;\n         });\n         setClearingDate(null); // Close dialog\n         toast({ title: 'Horario Limpiado', description: `Se eliminaron todos los turnos para el ${format(clearingDate, 'PPP', { locale: es })}.`, variant: 'destructive' });\n     };\n\n\n     const handleOpenTemplateModal = () => {\n         // Check if there are any assignments to save based on view mode\n         let hasAssignments = false;\n         if (viewMode === 'day') {\n             const currentDayKey = format(targetDate, 'yyyy-MM-dd');\n             const currentSchedule = scheduleData[currentDayKey];\n             hasAssignments = !!currentSchedule && Object.keys(currentSchedule.assignments).length > 0 && Object.values(currentSchedule.assignments).some(dept => dept.length > 0);\n         } else { // week view\n             hasAssignments = weekDates.some(date => {\n                 const dayKey = format(date, 'yyyy-MM-dd');\n                 const daySchedule = scheduleData[dayKey];\n                 return !!daySchedule && Object.keys(daySchedule.assignments).length > 0 && Object.values(daySchedule.assignments).some(dept => dept.length > 0);\n             });\n         }\n\n         if (!hasAssignments) {\n             const contextDescription = viewMode === 'day' ? `el ${format(targetDate, 'PPP', { locale: es })}` : 'la semana actual';\n             toast({ title: 'Template Vacío', description: `No hay turnos asignados en ${contextDescription} para guardar como template.`, variant: 'destructive' });\n             return;\n         }\n\n         setTemplateName(''); // Reset template name\n         setIsTemplateModalOpen(true);\n     };\n\n     const handleSaveTemplate = () => {\n         if (!templateName.trim()) {\n             toast({ title: 'Nombre Inválido', description: 'Por favor ingresa un nombre para el template.', variant: 'destructive' });\n             return;\n         }\n\n         let templateAssignments: ShiftTemplate['assignments'];\n         const templateType = viewMode === 'day' ? 'daily' : 'weekly';\n\n         if (templateType === 'daily') {\n             const sourceDate = targetDate;\n             const currentDayKey = format(sourceDate, 'yyyy-MM-dd');\n             const currentAssignmentsRaw = scheduleData[currentDayKey]?.assignments || {};\n             // Remove IDs when saving daily template\n             const cleanedAssignments: { [deptId: string]: Omit<ShiftAssignment, 'id'>[] } = {};\n             Object.keys(currentAssignmentsRaw).forEach(deptId => {\n                 cleanedAssignments[deptId] = currentAssignmentsRaw[deptId].map(({ id, ...rest }) => rest);\n             });\n             templateAssignments = cleanedAssignments;\n\n             if (Object.keys(templateAssignments).length === 0 || Object.values(templateAssignments).every(dept => dept.length === 0)) {\n                  toast({ title: 'Template Vacío', description: 'No hay turnos para guardar.', variant: 'destructive' });\n                  setIsTemplateModalOpen(false);\n                  return;\n             }\n         } else { // Weekly template\n             templateAssignments = {};\n             let weekHasAssignments = false;\n             weekDates.forEach(date => {\n                 const dateKey = format(date, 'yyyy-MM-dd');\n                 const dailyAssignmentsRaw = scheduleData[dateKey]?.assignments || {};\n                 const cleanedDailyAssignments: { [deptId: string]: Omit<ShiftAssignment, 'id'>[] } = {};\n                 Object.keys(dailyAssignmentsRaw).forEach(deptId => {\n                     if (dailyAssignmentsRaw[deptId].length > 0) {\n                         cleanedDailyAssignments[deptId] = dailyAssignmentsRaw[deptId].map(({ id, ...rest }) => rest);\n                         weekHasAssignments = true; // Mark if any assignment found\n                     }\n                 });\n                 // Only add day to template if it has assignments\n                 if (Object.keys(cleanedDailyAssignments).length > 0) {\n                      (templateAssignments as { [dateKey: string]: any })[dateKey] = cleanedDailyAssignments;\n                 }\n             });\n\n             if (!weekHasAssignments) {\n                 toast({ title: 'Template Vacío', description: 'No hay turnos en la semana para guardar.', variant: 'destructive' });\n                 setIsTemplateModalOpen(false);\n                 return;\n             }\n         }\n\n\n         const newTemplate: ShiftTemplate = {\n             id: uuidv4(),\n             name: templateName.trim(),\n             locationId: selectedLocationId,\n             type: templateType, // Save the type\n             assignments: templateAssignments,\n             createdAt: new Date().toISOString(),\n         };\n\n         if (typeof window !== 'undefined') {\n            try {\n                const updatedTemplates = [...savedTemplates, newTemplate];\n                setSavedTemplates(updatedTemplates); // Update state\n                localStorage.setItem(SCHEDULE_TEMPLATES_KEY, JSON.stringify(updatedTemplates));\n                toast({ title: 'Template Guardado', description: `El template \"${newTemplate.name}\" (${templateType === 'daily' ? 'Diario' : 'Semanal'}) se ha guardado.` });\n                setIsTemplateModalOpen(false);\n                setTemplateName('');\n            } catch (error) {\n                 console.error(\"Error saving template to localStorage:\", error);\n                 toast({ title: 'Error al Guardar', description: 'No se pudo guardar el template.', variant: 'destructive' });\n            }\n         }\n\n     };\n\n     // --- Load Template Handler ---\n     const handleLoadTemplate = (templateId: string) => {\n         if (typeof window !== 'undefined') {\n             const templateToLoad = savedTemplates.find((t: any) => t.id === templateId);\n\n             if (!templateToLoad) {\n                 toast({ title: 'Template no encontrado', variant: 'destructive' });\n                 return;\n             }\n             // Check if template matches current location\n             if (templateToLoad.locationId !== selectedLocationId) {\n                 toast({\n                     title: 'Sede Incorrecta',\n                     description: `El template \"${templateToLoad.name}\" pertenece a otra sede. Cambia de sede para cargarlo.`,\n                     variant: 'destructive',\n                 });\n                 return;\n             }\n              // Check if template type matches view mode\n             if (templateToLoad.type !== (viewMode === 'day' ? 'daily' : 'weekly')) {\n                 const requiredView = templateToLoad.type === 'daily' ? 'diaria' : 'semanal';\n                 toast({\n                     title: 'Vista Incorrecta',\n                     description: `El template \"${templateToLoad.name}\" es ${requiredView}. Cambia a la vista ${requiredView} para cargarlo.`,\n                     variant: 'destructive',\n                 });\n                 return;\n             }\n\n             let updatedScheduleData = { ...scheduleData };\n             let successMessage = '';\n\n             if (templateToLoad.type === 'daily') {\n                 const loadTargetDate = targetDate;\n                 const dateKey = format(loadTargetDate, 'yyyy-MM-dd');\n\n                 // Regenerate assignment IDs and find employee objects\n                 const loadedAssignments: { [deptId: string]: ShiftAssignment[] } = {};\n                 Object.keys(templateToLoad.assignments).forEach(deptId => {\n                     loadedAssignments[deptId] = (templateToLoad.assignments as DailyAssignments)[deptId]\n                         .map((assignTemplate: Omit<ShiftAssignment, 'id'>) => {\n                             const employee = employees.find(emp => emp.id === (typeof assignTemplate.employee === 'string' ? assignTemplate.employee : assignTemplate.employee.id));\n                             if (employee) {\n                                 return {\n                                     ...assignTemplate,\n                                     id: uuidv4(),\n                                     employee: employee, // Assign full employee object\n                                 };\n                             }\n                             console.warn(`Employee ID ${typeof assignTemplate.employee === 'string' ? assignTemplate.employee : assignTemplate.employee.id} not found while loading daily template. Skipping assignment.`);\n                             return null; // Mark for removal\n                         })\n                         .filter((a): a is ShiftAssignment => a !== null); // Filter out nulls and assert type\n                 });\n\n                 updatedScheduleData[dateKey] = {\n                     date: loadTargetDate,\n                     assignments: loadedAssignments,\n                 };\n                 successMessage = `Se cargó el template \"${templateToLoad.name}\" para ${format(loadTargetDate, 'PPP', { locale: es })}.`;\n\n             } else { // Weekly template\n                 weekDates.forEach(date => {\n                     const dateKey = format(date, 'yyyy-MM-dd');\n                     const dailyAssignmentsFromTemplate = (templateToLoad.assignments as WeeklyAssignments)[dateKey] || {};\n\n                     const loadedDailyAssignments: { [deptId: string]: ShiftAssignment[] } = {};\n                     Object.keys(dailyAssignmentsFromTemplate).forEach(deptId => {\n                         loadedDailyAssignments[deptId] = dailyAssignmentsFromTemplate[deptId]\n                             .map((assignTemplate: Omit<ShiftAssignment, 'id'>) => {\n                                 const employee = employees.find(emp => emp.id === (typeof assignTemplate.employee === 'string' ? assignTemplate.employee : assignTemplate.employee.id));\n                                 if (employee) {\n                                     return {\n                                         ...assignTemplate,\n                                         id: uuidv4(),\n                                         employee: employee,\n                                     };\n                                 }\n                                 console.warn(`Employee ID ${typeof assignTemplate.employee === 'string' ? assignTemplate.employee : assignTemplate.employee.id} not found while loading weekly template for ${dateKey}. Skipping assignment.`);\n                                 return null;\n                             })\n                             .filter((a): a is ShiftAssignment => a !== null);\n                     });\n\n                     updatedScheduleData[dateKey] = {\n                         date: date,\n                         assignments: loadedDailyAssignments,\n                     };\n                 });\n                 successMessage = `Se cargó el template semanal \"${templateToLoad.name}\" en la semana actual.`;\n             }\n\n             setScheduleData(updatedScheduleData);\n             toast({ title: 'Template Cargado', description: successMessage });\n             setIsConfigModalOpen(false); // Close config modal after loading\n         }\n     };\n\n    // --- Holiday Check Helper ---\n    const isHoliday = useCallback((date: Date | null | undefined): boolean => {\n        if (!date || !isValid(date)) return false;\n        const dateStr = format(date, 'yyyy-MM-dd');\n        return holidaySet.has(dateStr);\n    }, [holidaySet]);\n\n\n    // Wrapper component to conditionally provide DndContext\n    const DndWrapper: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n        // Only enable DND on non-mobile devices\n        if (isMobile) {\n            return <>{children}</>; // Render children directly without DndContext on mobile\n        } else {\n            return (\n                <DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\n                    {children}\n                </DndContext>\n            );\n        }\n    };\n\n    // --- CSV Export Handler ---\n    const handleExportCSV = () => {\n        const dataToExport: any[] = [];\n        const headers = [\n            'ID_Empleado',\n            'Nombre_Empleado',\n            'Fecha',\n            'Departamento',\n            'Hora_Inicio',\n            'Hora_Fin',\n            'Incluye_Descanso',\n            'Inicio_Descanso',\n            'Fin_Descanso',\n            'Horas_Trabajadas',\n        ];\n        dataToExport.push(headers);\n\n        // Collect data for the current week\n        weekDates.forEach(date => {\n            const dateKey = format(date, 'yyyy-MM-dd');\n            const daySchedule = scheduleData[dateKey];\n\n            if (daySchedule) {\n                Object.entries(daySchedule.assignments).forEach(([deptId, assignments]) => {\n                    const department = departments.find(d => d.id === deptId);\n                    assignments.forEach(assignment => {\n                        const durationHours = calculateShiftDuration(assignment, date); // Calculate duration\n                        dataToExport.push([\n                            assignment.employee.id,\n                            assignment.employee.name,\n                            dateKey,\n                            department?.name || deptId,\n                            formatTo12Hour(assignment.startTime), // Use 12-hour format\n                            formatTo12Hour(assignment.endTime), // Use 12-hour format\n                            assignment.includeBreak ? 'Sí' : 'No',\n                            assignment.includeBreak && assignment.breakStartTime ? formatTo12Hour(assignment.breakStartTime) : '', // Use 12-hour format\n                            assignment.includeBreak && assignment.breakEndTime ? formatTo12Hour(assignment.breakEndTime) : '', // Use 12-hour format\n                            durationHours.toFixed(2), // Format hours to 2 decimal places\n                        ]);\n                    });\n                });\n            }\n        });\n\n        if (dataToExport.length <= 1) {\n            toast({ title: 'Sin Datos', description: 'No hay turnos asignados en la semana actual para exportar.', variant: 'default' });\n            return;\n        }\n\n        // Format as CSV string\n        const csvContent = \"data:text/csv;charset=utf-8,\"\n            + dataToExport.map(e => e.join(\",\")).join(\"\\n\");\n\n        // Trigger download\n        const encodedUri = encodeURI(csvContent);\n        const link = document.createElement(\"a\");\n        link.setAttribute(\"href\", encodedUri);\n        const weekStartFormatted = format(weekDates[0], 'yyyyMMdd');\n        const weekEndFormatted = format(weekDates[6], 'yyyyMMdd');\n        link.setAttribute(\"download\", `Horario_${selectedLocationId}_${weekStartFormatted}-${weekEndFormatted}.csv`);\n        document.body.appendChild(link); // Required for FF\n        link.click();\n        document.body.removeChild(link);\n\n        toast({ title: 'Exportación CSV Exitosa', description: 'Se ha descargado el archivo de horas trabajadas.' });\n    };\n\n    // --- PDF Export Handler ---\n    const handleExportPDF = () => {\n        // Gather the necessary data for the current week\n        const locationName = locations.find(l => l.id === selectedLocationId)?.name || selectedLocationId;\n        const data = {\n            locationName,\n            weekDates,\n            departments: filteredDepartments, // Use filtered departments\n            employees: filteredEmployees, // Use filtered employees for rows\n            scheduleData,\n            getScheduleForDate,\n            calculateShiftDuration, // Pass the calculation function\n        };\n\n        try {\n            exportScheduleToPDF(data); // Call the PDF export function\n            toast({ title: 'Exportación PDF Exitosa', description: 'Se ha descargado el horario semanal.' });\n        } catch (error) {\n            console.error(\"Error exporting schedule to PDF:\", error);\n            toast({ title: 'Error al Exportar PDF', description: 'No se pudo generar el archivo PDF.', variant: 'destructive' });\n        }\n    };\n\n\n  return (\n        <main className=\"container mx-auto p-4 md:p-8 max-w-full\"> {/* Use max-w-full for wider layout */}\n             {/* Modern Title */}\n             <div className=\"text-center mb-8\">\n                 <h1 className=\"text-3xl md:text-4xl font-bold text-foreground tracking-tight\">\n                    Planificador de Horarios\n                 </h1>\n                 <p className=\"text-muted-foreground mt-2\">Gestiona turnos, sedes y colaboradores</p>\n             </div>\n\n             <div className=\"flex flex-wrap md:flex-nowrap justify-between items-center mb-6 gap-4\"> {/* flex-wrap for mobile, flex-nowrap for larger */}\n\n                {/* --- Central Controls (Week/Day View) - Centered --- */}\n                <div className=\"flex justify-center items-center gap-4 order-3 md:order-none w-full md:w-auto mt-4 md:mt-0\">\n                     {/* --- Day View Date Selector --- */}\n                     {viewMode === 'day' && (\n                         <div >\n                              <Popover>\n                                  <PopoverTrigger asChild>\n                                      <Button\n                                          variant={'outline'}\n                                          className={cn(\n                                              'w-[280px] justify-start text-left font-normal',\n                                              !targetDate && 'text-muted-foreground',\n                                               isHoliday(targetDate) && 'border-primary text-primary font-semibold' // Highlight if holiday (use primary color)\n                                          )}\n                                           disabled={isCheckingHoliday} // Disable while checking holiday\n                                      >\n                                          <CalendarModernIcon className=\"mr-2 h-4 w-4 text-primary\" /> {/* Modern Calendar Icon */}\n                                          {targetDate ? format(targetDate, 'PPPP', { locale: es }) : <span>Selecciona fecha</span>}\n                                          {isCheckingHoliday && <span className=\"ml-2 text-xs italic\">(Verificando...)</span>}\n                                          {isHoliday(targetDate) && !isCheckingHoliday && <span className=\"ml-2 text-xs font-semibold\">(Festivo)</span>}\n                                      </Button>\n                                  </PopoverTrigger>\n                                  <PopoverContent className=\"w-auto p-0\">\n                                      <Calendar\n                                          mode=\"single\"\n                                          selected={targetDate}\n                                          onSelect={(date) => { if (date) setTargetDate(date) }} // Update targetDate for day view\n                                          initialFocus\n                                          locale={es}\n                                          modifiers={{ holiday: (date) => isHoliday(date) }}\n                                          modifiersClassNames={{\n                                                holiday: 'border-primary text-primary font-semibold', // Apply primary text color and border for holiday\n                                          }}\n                                      />\n                                  </PopoverContent>\n                              </Popover>\n                         </div>\n                      )}\n                     {/* --- Week View Navigator --- */}\n                     {viewMode === 'week' && (\n                         <WeekNavigator\n                             currentDate={currentDate}\n                             onPreviousWeek={handlePreviousWeek}\n                             onNextWeek={handleNextWeek}\n                         />\n                     )}\n                 </div>\n\n                 {/* --- Right Controls (View Mode, Location, Settings) --- */}\n                 <div className=\"flex items-center gap-2 flex-shrink-0 order-2 md:order-last\">\n                     {/* Day/Week View Toggle */}\n                     <Select value={viewMode} onValueChange={(value) => setViewMode(value as 'day' | 'week')}>\n                         <SelectTrigger className=\"w-[120px]\">\n                             <SelectValue placeholder=\"Vista\" />\n                         </SelectTrigger>\n                         <SelectContent>\n                             <SelectItem value=\"day\">Día</SelectItem>\n                             <SelectItem value=\"week\">Semana</SelectItem>\n                         </SelectContent>\n                     </Select>\n                     {/* Location Selector */}\n                     <div className=\"space-y-1\">\n                         <LocationSelector\n                            locations={locations}\n                            selectedLocationId={selectedLocationId}\n                            onLocationChange={handleLocationChange}\n                         />\n                     </div>\n                     {/* Configuration Button - Now Triggers a Dialog */}\n                      <Dialog open={isConfigModalOpen} onOpenChange={setIsConfigModalOpen}>\n                          <DialogTrigger asChild>\n                              <Button variant=\"outline\" size=\"icon\"> {/* Icon button */}\n                                 <Settings className=\"h-4 w-4\"/>\n                                  <span className=\"sr-only\">Configuración</span>\n                              </Button>\n                          </DialogTrigger>\n                          <DialogContent className=\"max-w-5xl max-h-[85vh] overflow-y-auto\"> {/* Wide modal, scrollable */}\n                               <DialogHeader>\n                                   <DialogTitle>Configuración General</DialogTitle>\n                                   <DialogDescription>Gestiona sedes, departamentos, colaboradores y templates guardados.</DialogDescription>\n                               </DialogHeader>\n                               <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 py-4\">\n                                   {/* Locations Column */}\n                                   <div className=\"space-y-4 border-r pr-4 md:border-r-0 md:pb-0\">\n                                       <div className=\"flex justify-between items-center\">\n                                          <h4 className=\"font-semibold text-foreground flex items-center gap-1\"><Building className=\"h-4 w-4 text-muted-foreground\"/>Sedes ({locations.length})</h4>\n                                          <Button variant=\"outline\" size=\"sm\" onClick={() => handleOpenLocationModal(null)} title=\"Agregar Sede\">\n                                              <Plus className=\"h-4 w-4\" />\n                                          </Button>\n                                       </div>\n                                       <ul className=\"space-y-2 text-sm\">\n                                           {locations.map((loc) => (\n                                               <li key={loc.id} className=\"flex items-center justify-between group py-1 border-b\">\n                                                   <span className={`truncate ${loc.id === selectedLocationId ? 'font-semibold text-primary' : 'text-muted-foreground'}`}>{loc.name}</span>\n                                                   <div className=\"opacity-0 group-hover:opacity-100 transition-opacity flex items-center space-x-1\">\n                                                       <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-muted-foreground hover:text-foreground\" onClick={() => handleOpenLocationModal(loc)} title=\"Editar Sede\"><Edit className=\"h-4 w-4\" /></Button>\n                                                       <AlertDialog>\n                                                           <AlertDialogTrigger asChild>\n                                                                <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-destructive hover:bg-destructive/10\" onClick={() => confirmDeleteItem('location', loc.id, loc.name)} title=\"Eliminar Sede\"><Trash2 className=\"h-4 w-4\" /></Button>\n                                                           </AlertDialogTrigger>\n                                                           {/* AlertDialogContent for Delete Confirmation is defined below */}\n                                                       </AlertDialog>\n                                                   </div>\n                                               </li>\n                                           ))}\n                                       </ul>\n                                   </div>\n                                   {/* Departments Column */}\n                                   <div className=\"space-y-4 border-r pr-4 md:border-r-0 md:pb-0\">\n                                        <div className=\"flex justify-between items-center\">\n                                           <h4 className=\"font-semibold text-foreground flex items-center gap-1\"><Building2 className=\"h-4 w-4 text-muted-foreground\"/>Departamentos ({departments.length})</h4>\n                                           <Button variant=\"outline\" size=\"sm\" onClick={() => handleOpenDepartmentModal(null)} title=\"Agregar Departamento\">\n                                               <Plus className=\"h-4 w-4\" />\n                                           </Button>\n                                        </div>\n                                       <ul className=\"space-y-2 text-sm\">\n                                           {departments.map((dep) => (\n                                               <li key={dep.id} className=\"flex items-center justify-between group py-1 border-b\">\n                                                   <span className=\"truncate text-muted-foreground\">{dep.name} <span className=\"text-xs italic\">({locations.find(l => l.id === dep.locationId)?.name || 'Sede inválida'})</span></span>\n                                                   <div className=\"opacity-0 group-hover:opacity-100 transition-opacity flex items-center space-x-1\">\n                                                       <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-muted-foreground hover:text-foreground\" onClick={() => handleOpenDepartmentModal(dep)} title=\"Editar Departamento\"><Edit className=\"h-4 w-4\" /></Button>\n                                                        <AlertDialog>\n                                                           <AlertDialogTrigger asChild>\n                                                                <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-destructive hover:bg-destructive/10\" onClick={() => confirmDeleteItem('department', dep.id, dep.name)} title=\"Eliminar Departamento\"><Trash2 className=\"h-4 w-4\" /></Button>\n                                                           </AlertDialogTrigger>\n                                                           {/* AlertDialogContent for Delete Confirmation is defined below */}\n                                                        </AlertDialog>\n                                                   </div>\n                                               </li>\n                                           ))}\n                                       </ul>\n                                   </div>\n                                    {/* Employees Column */}\n                                   <div className=\"space-y-4 border-r pr-4 md:border-r-0 md:pb-0\">\n                                       <div className=\"flex justify-between items-center\">\n                                           <h4 className=\"font-semibold text-foreground flex items-center gap-1\"><Users className=\"h-4 w-4 text-muted-foreground\"/>Colaboradores ({employees.length})</h4>\n                                           <Button variant=\"outline\" size=\"sm\" onClick={() => handleOpenEmployeeModal(null)} title=\"Agregar Colaborador\">\n                                               <Plus className=\"h-4 w-4\" />\n                                           </Button>\n                                       </div>\n                                        <ul className=\"space-y-2 text-sm\">\n                                            {employees.map((emp) => (\n                                                <li key={emp.id} className=\"flex items-center justify-between group py-1 border-b\">\n                                                    <span className=\"truncate text-muted-foreground\">{emp.name} <span className=\"text-xs italic\">({locations.find(l => l.id === emp.primaryLocationId)?.name || 'Sede inválida'})</span></span>\n                                                    <div className=\"opacity-0 group-hover:opacity-100 transition-opacity flex items-center space-x-1\">\n                                                        <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-muted-foreground hover:text-foreground\" onClick={() => handleOpenEmployeeModal(emp)} title=\"Editar Colaborador\"><Edit className=\"h-4 w-4\" /></Button>\n                                                         <AlertDialog>\n                                                            <AlertDialogTrigger asChild>\n                                                                 <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-destructive hover:bg-destructive/10\" onClick={() => confirmDeleteItem('employee', emp.id, emp.name)} title=\"Eliminar Colaborador\"><Trash2 className=\"h-4 w-4\" /></Button>\n                                                            </AlertDialogTrigger>\n                                                            {/* AlertDialogContent for Delete Confirmation is defined below */}\n                                                         </AlertDialog>\n                                                    </div>\n                                                </li>\n                                            ))}\n                                        </ul>\n                                   </div>\n                                   {/* Saved Templates Column */}\n                                   <div className=\"space-y-4\">\n                                       <div className=\"flex justify-between items-center\">\n                                            <h4 className=\"font-semibold text-foreground flex items-center gap-1\">\n                                                <Library className=\"h-4 w-4 text-muted-foreground\"/>\n                                                Templates ({filteredTemplates.length} {viewMode === 'day' ? 'Diarios' : 'Semanales'})\n                                            </h4>\n                                           {/* Add Template button moved to Actions Row */}\n                                       </div>\n                                        <ul className=\"space-y-2 text-sm\">\n                                             {filteredTemplates.length > 0 ? filteredTemplates.map((template) => (\n                                                 <li key={template.id} className=\"flex items-center justify-between group py-1 border-b\">\n                                                     <span className=\"truncate text-muted-foreground\">{template.name}</span>\n                                                     <div className=\"opacity-0 group-hover:opacity-100 transition-opacity flex items-center space-x-1\">\n                                                         <Button\n                                                             variant=\"ghost\"\n                                                             size=\"icon\"\n                                                             className=\"h-6 w-6 text-muted-foreground hover:text-foreground\"\n                                                             onClick={() => handleLoadTemplate(template.id)}\n                                                             title={`Cargar Template (${template.type === 'daily' ? 'Diario' : 'Semanal'})`}\n                                                         >\n                                                             <Upload className=\"h-4 w-4\" />\n                                                         </Button>\n                                                         <AlertDialog>\n                                                             <AlertDialogTrigger asChild>\n                                                                 <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-destructive hover:bg-destructive/10\" onClick={() => confirmDeleteItem('template', template.id, template.name)} title=\"Eliminar Template\"><Trash2 className=\"h-4 w-4\" /></Button>\n                                                             </AlertDialogTrigger>\n                                                             {/* AlertDialogContent for Delete Confirmation is defined below */}\n                                                         </AlertDialog>\n                                                     </div>\n                                                 </li>\n                                             )) : (\n                                                 <p className=\"text-xs text-muted-foreground italic text-center pt-2\">\n                                                     No hay templates {viewMode === 'day' ? 'diarios' : 'semanales'} guardados para esta sede.\n                                                 </p>\n                                             )}\n                                        </ul>\n                                   </div>\n                               </div>\n                               <DialogFooter>\n                                   <DialogClose asChild>\n                                       <Button variant=\"secondary\">Cerrar</Button>\n                                   </DialogClose>\n                               </DialogFooter>\n                          </DialogContent>\n                      </Dialog>\n                 </div>\n             </div>\n\n\n              {/* Main content grid */}\n             <DndWrapper> {/* Conditionally wrap with DndContext */}\n                 {/* Adjusted grid layout: 2 columns for employees, 10 for schedule on large screens */}\n                 <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-6 items-start mb-6\"> {/* Add margin-bottom */}\n\n                     {/* --- Available Employees (Takes 2/12 width on lg) --- */}\n                      <div className=\"lg:col-span-2 space-y-6\">\n                          <EmployeeList employees={availableEmployees} />\n                     </div>\n\n\n                     {/* --- Schedule View (Takes remaining 10/12 width on lg) --- */}\n                     <div className=\"lg:col-span-10\">\n                        <ScheduleView\n                            departments={filteredDepartments}\n                            scheduleData={scheduleData}\n                            onRemoveShift={handleRemoveShift}\n                            viewMode={viewMode}\n                            weekDates={weekDates} // Pass week dates\n                            currentDate={targetDate} // Pass target date for single day view\n                            onAddShiftRequest={handleOpenEmployeeSelectionModal} // Pass the handler to open employee selection\n                            onShiftClick={handleShiftClick} // Pass the handler for clicking a shift card\n                            getScheduleForDate={getScheduleForDate} // Pass helper function\n                            onDuplicateDay={handleDuplicateDay} // Pass the duplicate handler\n                            onClearDay={handleConfirmClearDay} // Pass the clear handler trigger\n                            isHoliday={isHoliday} // Pass the holiday check function\n                        />\n                     </div>\n                 </div>\n             </DndWrapper>\n\n             {/* --- Actions Row - Moved below the main grid, aligned to the right --- */}\n            <div className=\"flex flex-wrap justify-end gap-2\">\n                 {/* PDF Export */}\n                 <Button onClick={handleExportPDF} variant=\"outline\" className=\"hover:bg-red-500 hover:text-white\">\n                     <FileDown className=\"mr-2 h-4 w-4\" /> PDF\n                 </Button>\n                 {/* CSV Export */}\n                 <Button onClick={handleExportCSV} variant=\"outline\" className=\"hover:bg-green-500 hover:text-white\">\n                     <FileSpreadsheet className=\"mr-2 h-4 w-4\" /> Exportar Horas (CSV)\n                 </Button>\n                 {/* Duplicate Day (Only in Day View) */}\n                 {viewMode === 'day' && (\n                    <Button onClick={() => handleDuplicateDay(targetDate)} variant=\"outline\" className=\"hover:bg-primary hover:text-primary-foreground\">\n                        <CopyPlus className=\"mr-2 h-4 w-4\" /> Duplicar al Día Siguiente\n                    </Button>\n                 )}\n                 {/* Save as Template */}\n                 <Dialog open={isTemplateModalOpen} onOpenChange={setIsTemplateModalOpen}>\n                    <DialogTrigger asChild>\n                        <Button variant=\"outline\" className=\"hover:bg-primary hover:text-primary-foreground\">\n                            <Download className=\"mr-2 h-4 w-4\" /> Guardar como Template\n                        </Button>\n                    </DialogTrigger>\n                     <DialogContent>\n                         <DialogHeader>\n                             <DialogTitle>Guardar Template {viewMode === 'day' ? 'Diario' : 'Semanal'}</DialogTitle>\n                             <DialogDescription>Ingresa un nombre para este template (basado en el horario {viewMode === 'day' ? `del ${format(targetDate, 'PPP', {locale: es})}` : 'de la semana actual'} para {locations.find(l => l.id === selectedLocationId)?.name}).</DialogDescription>\n                         </DialogHeader>\n                         <div className=\"py-4\">\n                             <Label htmlFor=\"template-name\">Nombre Template</Label>\n                             <Input\n                                id=\"template-name\"\n                                value={templateName}\n                                onChange={(e) => setTemplateName(e.target.value)}\n                                placeholder=\"Ej: Apertura Semana, Cierre FinDeSemana\"\n                             />\n                         </div>\n                         <DialogFooter>\n                            <DialogClose asChild>\n                              <Button variant=\"outline\">Cancelar</Button>\n                            </DialogClose>\n                             <Button onClick={handleSaveTemplate}>Guardar Template</Button>\n                         </DialogFooter>\n                     </DialogContent>\n                 </Dialog>\n                  {/* Save Schedule */}\n                 <Button onClick={handleSaveSchedule} variant=\"outline\" className=\"hover:bg-primary hover:text-primary-foreground\">\n                     <Save className=\"mr-2 h-4 w-4\" /> Guardar Horario\n                 </Button>\n             </div>\n\n\n             {/* --- Modals --- */}\n\n             {/* Location Modal */}\n             <Dialog open={isLocationModalOpen} onOpenChange={setIsLocationModalOpen}>\n                  <DialogContent>\n                      <DialogHeader>\n                          <DialogTitle>{editingLocation ? 'Editar Sede' : 'Agregar Sede'}</DialogTitle>\n                      </DialogHeader>\n                      <div className=\"space-y-4 py-4\">\n                          <Label htmlFor=\"location-name\">Nombre</Label>\n                          <Input id=\"location-name\" value={locationFormData.name} onChange={(e) => setLocationFormData({ name: e.target.value })} />\n                      </div>\n                      <DialogFooter>\n                         <DialogClose asChild>\n                           <Button variant=\"outline\">Cancelar</Button>\n                         </DialogClose>\n                          <Button onClick={handleSaveLocation}>Guardar</Button>\n                      </DialogFooter>\n                  </DialogContent>\n             </Dialog>\n\n             {/* Department Modal */}\n            <Dialog open={isDepartmentModalOpen} onOpenChange={setIsDepartmentModalOpen}>\n                 <DialogContent>\n                     <DialogHeader>\n                         <DialogTitle>{editingDepartment ? 'Editar Departamento' : 'Agregar Departamento'}</DialogTitle>\n                     </DialogHeader>\n                     <div className=\"space-y-4 py-4\">\n                          <div>\n                             <Label htmlFor=\"department-name\">Nombre</Label>\n                             <Input id=\"department-name\" value={departmentFormData.name} onChange={(e) => setDepartmentFormData(prev => ({ ...prev, name: e.target.value }))} />\n                          </div>\n                         <div>\n                              <Label htmlFor=\"department-location\">Sede</Label>\n                              <Select value={departmentFormData.locationId} onValueChange={(value) => setDepartmentFormData(prev => ({ ...prev, locationId: value }))}>\n                                  <SelectTrigger id=\"department-location\">\n                                      <SelectValue placeholder=\"Selecciona sede\" />\n                                  </SelectTrigger>\n                                  <SelectContent>\n                                      {locations.map(loc => (\n                                          <SelectItem key={loc.id} value={loc.id}>{loc.name}</SelectItem>\n                                      ))}\n                                  </SelectContent>\n                              </Select>\n                         </div>\n                     </div>\n                     <DialogFooter>\n                          <DialogClose asChild>\n                            <Button variant=\"outline\">Cancelar</Button>\n                          </DialogClose>\n                         <Button onClick={handleSaveDepartment}>Guardar</Button>\n                     </DialogFooter>\n                 </DialogContent>\n            </Dialog>\n\n\n             {/* Employee Modal */}\n            <Dialog open={isEmployeeModalOpen} onOpenChange={setIsEmployeeModalOpen}>\n                <DialogContent>\n                    <DialogHeader>\n                        <DialogTitle>{editingEmployee ? 'Editar Colaborador' : 'Agregar Colaborador'}</DialogTitle>\n                    </DialogHeader>\n                     <div className=\"space-y-4 py-4\">\n                          <div>\n                             <Label htmlFor=\"employee-name\">Nombre</Label>\n                             <Input id=\"employee-name\" value={employeeFormData.name} onChange={(e) => setEmployeeFormData(prev => ({ ...prev, name: e.target.value }))} />\n                          </div>\n                         <div>\n                              <Label htmlFor=\"employee-location\">Sede Principal</Label>\n                              <Select value={employeeFormData.primaryLocationId} onValueChange={(value) => setEmployeeFormData(prev => ({ ...prev, primaryLocationId: value }))}>\n                                  <SelectTrigger id=\"employee-location\">\n                                      <SelectValue placeholder=\"Selecciona sede\" />\n                                  </SelectTrigger>\n                                  <SelectContent>\n                                      {locations.map(loc => (\n                                          <SelectItem key={loc.id} value={loc.id}>{loc.name}</SelectItem>\n                                      ))}\n                                  </SelectContent>\n                              </Select>\n                         </div>\n                     </div>\n                    <DialogFooter>\n                         <DialogClose asChild>\n                            <Button variant=\"outline\">Cancelar</Button>\n                          </DialogClose>\n                        <Button onClick={handleSaveEmployee}>Guardar</Button>\n                    </DialogFooter>\n                </DialogContent>\n            </Dialog>\n\n             {/* Employee Selection Modal */}\n             <EmployeeSelectionModal\n                 isOpen={isEmployeeSelectionModalOpen}\n                 onClose={() => setIsEmployeeSelectionModalOpen(false)}\n                 employees={availableEmployees} // Pass only available employees for the specific date/dept context\n                 onSelectEmployee={handleEmployeeSelectedForShift}\n                 departmentName={departments.find(d => d.id === shiftRequestContext?.departmentId)?.name || ''}\n                 date={shiftRequestContext?.date || new Date()} // Pass the date from context\n             />\n\n             {/* Shift Detail Modal */}\n             <ShiftDetailModal\n                 isOpen={isShiftModalOpen}\n                 onClose={() => {\n                     setIsShiftModalOpen(false);\n                     setSelectedEmployee(null); // Clear selected employee when closing detail modal\n                     setShiftRequestContext(null); // Clear context\n                     setEditingShift(null); // Clear editing state\n                 }}\n                 onSave={handleAddOrUpdateShift}\n                 employeeName={selectedEmployee?.name || ''}\n                 departmentName={departments.find(d => d.id === shiftRequestContext?.departmentId)?.name || ''}\n                 initialDetails={editingShift?.assignment} // Pass the assignment for initial values\n                 isEditing={!!editingShift} // Pass flag indicating if it's an edit\n             />\n\n             {/* Universal Delete Confirmation */}\n            <AlertDialog open={!!itemToDelete} onOpenChange={(open) => !open && setItemToDelete(null)}>\n                 <AlertDialogContent>\n                     <AlertDialogHeader>\n                         <AlertDialogTitle>¿Estás seguro?</AlertDialogTitle>\n                         <AlertDialogDescription>\n                             ¿Eliminar {itemToDelete?.type === 'location' ? 'Sede' : itemToDelete?.type === 'department' ? 'Departamento' : itemToDelete?.type === 'employee' ? 'Colaborador' : 'Template'} \"{itemToDelete?.name}\"?\n                             {itemToDelete?.type === 'location' && \" Se eliminarán los departamentos, colaboradores y templates asociados.\"}\n                             {itemToDelete?.type === 'department' && \" Se eliminarán los turnos asociados en los horarios y templates.\"}\n                             {itemToDelete?.type === 'employee' && \" Se eliminarán los turnos asociados en los horarios y templates.\"}\n                             {itemToDelete?.type === 'template' && \" Se eliminará este template guardado.\"}\n                             <br/>Esta acción no se puede deshacer.\n                         </AlertDialogDescription>\n                     </AlertDialogHeader>\n                     <AlertDialogFooter>\n                         <AlertDialogCancel onClick={() => setItemToDelete(null)}>Cancelar</AlertDialogCancel>\n                         <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={handleDeleteItem}>Eliminar</AlertDialogAction>\n                     </AlertDialogFooter>\n                 </AlertDialogContent>\n            </AlertDialog>\n\n            {/* Clear Day Confirmation */}\n            <AlertDialog open={!!clearingDate} onOpenChange={(open) => !open && setClearingDate(null)}>\n                 <AlertDialogContent>\n                     <AlertDialogHeader>\n                         <AlertDialogTitle>¿Limpiar Turnos del Día?</AlertDialogTitle>\n                         <AlertDialogDescription>\n                            Esta acción eliminará todos los turnos asignados para el{' '}\n                            <strong>{clearingDate ? format(clearingDate, 'PPP', { locale: es }) : ''}</strong>. No se puede deshacer.\n                         </AlertDialogDescription>\n                     </AlertDialogHeader>\n                     <AlertDialogFooter>\n                         <AlertDialogCancel onClick={() => setClearingDate(null)}>Cancelar</AlertDialogCancel>\n                         <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={handleClearDay}>Limpiar Día</AlertDialogAction>\n                     </AlertDialogFooter>\n                 </AlertDialogContent>\n            </AlertDialog>\n\n\n        </main>\n    );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AASA;AACA,gVAAqR,sDAAsD;AAA3U;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,iOAA+C,eAAe;AAC9D;AAEA;AAYA;AACA,qOAAmF,iBAAiB;AACpG,uOAAqD,kBAAkB;AAEvE;AACA;AACA;AACA;AACA,6PAAqE,uBAAuB;AAC5F,uNAA8C,kBAAkB;AAChE,2NAAkD,qBAAqB;AACvE,+QAAuF,gCAAgC;AAGvH;AACA,qPAAwK,6DAA6D;AAArO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA,+OAAsE,yBAAyB;AAC/F,8OAAmE,8BAA8B;AACjG,qNAAmD,oCAAoC;AAlDvF,cAAc,mCAAmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDjD,gDAAgD;AAChD,MAAM,eAAe,CAAC;IACpB,MAAM,QAAQ,CAAA,GAAA,2IAAA,CAAA,cAAW,AAAD,EAAE,aAAa;QAAE,cAAc;IAAE,IAAI,kBAAkB;IAC/E,OAAO,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAE,GAAG,GAAG,CAAC,CAAC,GAAG,IAAM,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,OAAO;AAChE;AAEA,oBAAoB;AACpB,MAAM,oBAAoB;AAC1B,MAAM,yBAAyB;AAE/B,qBAAqB;AACrB,IAAI,gBAAiD,CAAC;AAEtD,eAAe,sBAAsB,IAAY;IAC7C,IAAI,aAAa,CAAC,KAAK,EAAE;QACrB,OAAO,aAAa,CAAC,KAAK;IAC9B;IACA,IAAI;QACA,MAAM,WAAW,MAAM,CAAA,GAAA,wIAAA,CAAA,uBAAoB,AAAD,EAAE;QAC5C,IAAI,CAAC,MAAM,OAAO,CAAC,WAAW;YAC1B,QAAQ,KAAK,CAAC,CAAC,4BAA4B,EAAE,KAAK,0BAA0B,CAAC;YAC7E,MAAM,IAAI,MAAM,CAAC,+CAA+C,EAAE,KAAK,CAAC,CAAC;QAC7E;QACA,2DAA2D;QAC3D,MAAM,aAAa,IAAI,IAAI,SAAS,GAAG,CAAC,CAAA;YACpC,IAAI,CAAC,KAAK,OAAO,EAAE,IAAI,KAAK,YAAY,OAAO,EAAE,KAAK,KAAK,YAAY,OAAO,EAAE,GAAG,KAAK,UAAU;gBAC9F,QAAQ,KAAK,CAAC,CAAC,iDAAiD,EAAE,KAAK,CAAC,CAAC,EAAE;gBAC3E,OAAO,IAAI,qBAAqB;YACpC;YACC,IAAI;gBACA,MAAM,eAAe,IAAI,KAAK,EAAE,IAAI,EAAE,EAAE,KAAK,GAAG,GAAG,EAAE,GAAG;gBACxD,IAAI,CAAC,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,iBAAiB,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,kBAAkB,EAAE,IAAI,EAAE;oBAC5D,QAAQ,KAAK,CAAC,CAAC,mDAAmD,EAAE,KAAK,CAAC,CAAC,EAAE;oBAC7E,OAAO,IAAI,oBAAoB;gBACnC;gBACA,OAAO,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,cAAc;YAChC,EAAE,OAAO,aAAa;gBAClB,QAAQ,KAAK,CAAC,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG;gBACpE,OAAO,IAAI,2BAA2B;YAC1C;QACL,GAAG,MAAM,CAAC,CAAA,UAAW,YAAY,MAAM,uCAAuC;QAE9E,aAAa,CAAC,KAAK,GAAG;QACtB,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC,EAAE;QACjE,OAAO,IAAI,OAAO,4BAA4B;IAClD;AACJ;AAEA,MAAM,mBAA+B;IACnC;QAAE,IAAI;QAAS,MAAM;IAAiB;IACtC;QAAE,IAAI;QAAS,MAAM;IAAa;IAClC;QAAE,IAAI;QAAS,MAAM;IAAiB;CACvC;AAED,MAAM,qBAAmC;IACvC;QAAE,IAAI;QAAS,MAAM;QAAU,YAAY;QAAS,MAAM,0MAAA,CAAA,WAAQ;IAAC;IACnE;QAAE,IAAI;QAAS,MAAM;QAAS,YAAY;QAAS,MAAM,oMAAA,CAAA,QAAK;IAAC;IAC/D;QAAE,IAAI;QAAS,MAAM;QAAgB,YAAY;QAAS,MAAM,2MAAA,CAAA,OAAI;IAAC;IACrE;QAAE,IAAI;QAAS,MAAM;QAAU,YAAY;QAAS,MAAM,gNAAA,CAAA,YAAS;IAAC;IACpE;QAAE,IAAI;QAAS,MAAM;QAAU,YAAY;QAAS,MAAM,0MAAA,CAAA,WAAQ;IAAC;IACnE;QAAE,IAAI;QAAS,MAAM;QAAS,YAAY;QAAS,MAAM,oMAAA,CAAA,QAAK;IAAC;CAChE;AAED,MAAM,mBAA+B;IACnC;QAAE,IAAI;QAAS,MAAM;QAAgB,mBAAmB;IAAQ;IAChE;QAAE,IAAI;QAAS,MAAM;QAAiB,mBAAmB;IAAQ;IACjE;QAAE,IAAI;QAAS,MAAM;QAAc,mBAAmB;IAAQ;IAC9D;QAAE,IAAI;QAAS,MAAM;QAAgB,mBAAmB;IAAQ;IAChE;QAAE,IAAI;QAAS,MAAM;QAAgB,mBAAmB;IAAQ;IAChE;QAAE,IAAI;QAAS,MAAM;QAAiB,mBAAmB;IAAQ;CAClE;AAED,iEAAiE;AACjE,MAAM,qBAAqB,CAAC;IAC1B,IAAI,CAAC,WAAW,CAAC,gBAAgB,IAAI,CAAC,UAAU,OAAO,GAAG,8BAA8B;IACxF,MAAM,CAAC,OAAO,QAAQ,GAAG,QAAQ,KAAK,CAAC,KAAK,GAAG,CAAC;IAChD,OAAO,QAAQ,KAAK;AACtB;AAEA,uDAAuD;AACvD,MAAM,yBAAyB,CAAC,YAA6B;IACzD,IAAI;QACA,MAAM,eAAe,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,WAAW;QACvC,MAAM,YAAY,CAAA,GAAA,qJAAA,CAAA,QAAoB,AAAD,EAAE,GAAG,aAAa,CAAC,EAAE,WAAW,SAAS,EAAE,EAAE,oBAAoB,IAAI;QAE1G,wDAAwD;QACxD,MAAM,mBAAmB,mBAAmB,WAAW,SAAS;QAChE,MAAM,iBAAiB,mBAAmB,WAAW,OAAO;QAC5D,IAAI,UAAU,CAAA,GAAA,qJAAA,CAAA,QAAoB,AAAD,EAAE,GAAG,aAAa,CAAC,EAAE,WAAW,OAAO,EAAE,EAAE,oBAAoB,IAAI;QACpG,IAAI,CAAC,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,YAAY,iBAAiB,kBAAkB;YACvD,IAAI,iBAAiB,kBAAkB;gBACpC,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qJAAA,CAAA,QAAoB,AAAD,EAAE,GAAG,aAAa,CAAC,EAAE,WAAW,OAAO,EAAE,EAAE,oBAAoB,IAAI,SAAS;YACpH,OAAO;gBACH,uEAAuE;gBACvE,QAAQ,IAAI,CAAC,8CAA8C;gBAC3D,OAAO;YACX;QACL;QAGA,IAAI,CAAC,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,cAAc,CAAC,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,UAAU;YAC1C,QAAQ,IAAI,CAAC,uDAAuD;YACpE,OAAO;QACX;QAEA,IAAI,oBAAoB,CAAA,GAAA,mJAAA,CAAA,sBAAmB,AAAD,EAAE,SAAS;QAErD,wCAAwC;QACxC,IAAI,eAAe;QACnB,IAAI,WAAW,YAAY,IAAI,WAAW,cAAc,IAAI,WAAW,YAAY,EAAE;YACjF,MAAM,oBAAoB,mBAAmB,WAAW,cAAc;YACtE,MAAM,kBAAkB,mBAAmB,WAAW,YAAY;YAClE,IAAI,kBAAkB,mBAAmB;gBACpC,kFAAkF;gBAClF,iGAAiG;gBACjG,eAAe,kBAAkB;YACtC;QACJ;QAEA,MAAM,aAAa,oBAAoB;QACvC,OAAO,KAAK,GAAG,CAAC,GAAG,cAAc,IAAI,oCAAoC;IAC7E,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qCAAqC,OAAO;QAC1D,OAAO;IACX;AACJ;AAGe,SAAS;IACpB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB;IAC7D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAc;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,SAAS,kDAAkD;IAC9G,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAuC,CAAC,IAAI,uCAAuC;IAClI,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,SAAS,uBAAuB;IACzF,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,gBAAgB,CAAC,EAAE,CAAC,EAAE;IAC3F,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,sBAAsB;IACvF,8CAA8C;IAC9C,MAAM,CAAC,8BAA8B,gCAAgC,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjF,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA+C;IAC5G,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB,OAAO,qDAAqD;IACtI,4CAA4C;IAC5C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA4E;IAC3H,6FAA6F;IAC7F,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAQ,IAAI;IAEvD,oEAAoE;IACpE,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/D,MAAM,CAAC,uBAAuB,yBAAyB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnE,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/D,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB;IACxE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,MAAM;IAAG;IAEpE,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqB;IAC9E,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,MAAM;QAAI,YAAY;IAAmB;IAExG,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB;IACxE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,MAAM;QAAI,mBAAmB;IAAmB;IAE3G,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkG,OAAO,wBAAwB;IAEhL,mCAAmC;IACnC,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB,EAAE,GAAG,4BAA4B;IAEvG,mCAAmC;IACnC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAE9D,qBAAqB;IACrB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe,IAAI;IAC9D,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAEpE,MAAM,WAAW,CAAA,GAAA,8HAAA,CAAA,cAAW,AAAD,KAAK,oCAAoC;IACpE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD,KAAK,qBAAqB;IAEnD,+DAA+D;IAC/D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,YAAY,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,2IAAA,CAAA,cAAW,AAAD,EAAE,aAAa;YAAE,cAAc;QAAE;QACrE,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,yIAAA,CAAA,YAAS,AAAD,EAAE,aAAa;YAAE,cAAc;QAAE;QACjE,MAAM,eAAe,IAAI,IAAI;YAAC;YAAW;SAAQ;QAEjD,qBAAqB;QACrB,QAAQ,GAAG,CAAC,MAAM,IAAI,CAAC,cAAc,GAAG,CAAC,CAAA,OAAQ,sBAAsB,QAClE,IAAI,CAAC,CAAA;YACF,kDAAkD;YAClD,MAAM,cAAc,IAAI;YACxB,QAAQ,OAAO,CAAC,CAAA,MAAO,IAAI,OAAO,CAAC,CAAA,OAAQ,YAAY,GAAG,CAAC;YAC3D,cAAc;QAClB,GACC,KAAK,CAAC,CAAA;YACH,QAAQ,KAAK,CAAC,0CAA0C;YACxD,cAAc,IAAI,QAAQ,iBAAiB;QAC/C,GACC,OAAO,CAAC;YACL,qBAAqB;QACzB;IACR,GAAG;QAAC;KAAY,GAAG,yCAAyC;IAE5D,8DAA8D;IAC9D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,uCAAmC;;QAkCnC;IACJ,GAAG,EAAE;IAGL,MAAM,YAAY,aAAa;IAC/B,oIAAoI;IAEpI,2EAA2E;IAC3E,MAAM,qBAAqB,CAAC;QACxB,MAAM,MAAM,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;QACzB,OAAO,YAAY,CAAC,IAAI,IAAI;YAAE,MAAM;YAAM,aAAa,CAAC;QAAE;IAC9D;IAEA,oEAAoE;IACpE,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE,IAAM,UAAU,MAAM,CAAC,CAAA,MAAO,IAAI,iBAAiB,KAAK,qBAAqB;QAAC;QAAW;KAAmB;IAC9I,MAAM,sBAAsB,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE,IAAM,YAAY,MAAM,CAAC,CAAA,MAAO,IAAI,UAAU,KAAK,qBAAqB;QAAC;QAAa;KAAmB;IAC7I,qDAAqD;IACrD,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE,IAC9B,eAAe,MAAM,CAAC,CAAA,OAClB,KAAK,UAAU,KAAK,sBAAsB,KAAK,IAAI,KAAK,CAAC,aAAa,QAAQ,UAAU,QAAQ,IACjG;QAAC;QAAgB;QAAoB;KAAS;IAGrD,yEAAyE;IACzE,MAAM,mCAAmC,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QAC7C,MAAM,MAAM,IAAI;QACf,+CAA+C;QAChD,MAAM,cAAc,qBAAqB,QAAQ,YAAY,iDAAiD;QAC9G,MAAM,UAAU,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,aAAa;QACpC,MAAM,cAAc,YAAY,CAAC,QAAQ;QACzC,IAAI,aAAa;YACb,OAAO,MAAM,CAAC,YAAY,WAAW,EAAE,OAAO,CAAC,CAAA;gBAC3C,gBAAgB,OAAO,CAAC,CAAA,aAAc,IAAI,GAAG,CAAC,WAAW,QAAQ,CAAC,EAAE;YACxE;QACJ;QACA,OAAO;IACP,8EAA8E;IAClF,GAAG;QAAC;QAAc;QAAY;KAAoB;IAGlD,0DAA0D;IAC1D,MAAM,qBAAqB,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QAC/B,IAAI,aAAa,QAAQ;YACrB,oGAAoG;YACpG,OAAO;QACX,OAAO;YACH,uEAAuE;YACvE,OAAO,kBAAkB,MAAM,CAAC,CAAA,MAAO,CAAC,iCAAiC,GAAG,CAAC,IAAI,EAAE;QACvF;IACJ,GAAG;QAAC;QAAmB;QAAkC;KAAS;IAGlE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,qEAAqE;QACrE,sBAAsB,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,YAAY;YAAmB,CAAC;QAC1E,oBAAoB,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,mBAAmB;YAAmB,CAAC;IACnF,GAAG;QAAC;KAAmB;IAEvB,MAAM,uBAAuB,CAAC;QAC1B,sBAAsB;IAC1B;IAEA,+DAA+D;IAC/D,MAAM,mCAAmC,CAAC,cAAsB;QAC3D,gBAAgB,OAAO,iCAAiC;QACxD,uBAAuB;YAAE;YAAc;QAAK,IAAI,oBAAoB;QACpE,gCAAgC,OAAO,2BAA2B;IACvE;IAEA,uEAAuE;IACvE,MAAM,iCAAiC,CAAC;QACpC,IAAI,CAAC,qBAAqB;QAC1B,oBAAoB,WAAW,4BAA4B;QAC3D,gCAAgC,QAAQ,wBAAwB;QAChE,oBAAoB,OAAO,yCAAyC;IACxE;IAEA,qCAAqC;IACrC,MAAM,8BAA8B,CAAC,UAAoB,cAAsB;QAC3E,gBAAgB,OAAO,0BAA0B;QACjD,oBAAoB;QACpB,wEAAwE;QACxE,uBAAuB;YAAE;YAAc;QAAK;QAC5C,oBAAoB,OAAO,yCAAyC;IACxE;IAEA,sDAAsD;IACtD,MAAM,mBAAmB,CAAC,YAA6B,MAAY;QAC/D,gBAAgB;YAAE;YAAY;YAAM;QAAa,IAAI,6BAA6B;QAClF,oBAAoB,WAAW,QAAQ,GAAG,4BAA4B;QACtE,uBAAuB;YAAE;YAAc;QAAK,IAAI,cAAc;QAC9D,oBAAoB,OAAO,0CAA0C;IACzE;IAGA,MAAM,yBAAyB,CAAC;QAC5B,gGAAgG;QAChG,MAAM,UAAU,gBAAgB;QAChC,MAAM,mBAAmB,cAAc,WAAW,YAAY;QAE9D,IAAI,CAAC,oBAAoB,CAAC,SAAS;QAEnC,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,GAAG;QAC/B,MAAM,UAAU,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;QAE7B,kCAAkC;QAClC,MAAM,oBAAqC;YACvC,0DAA0D;YAC1D,IAAI,cAAc,WAAW,MAAM,CAAA,GAAA,kLAAA,CAAA,KAAM,AAAD;YACxC,UAAU;YACV,WAAW,QAAQ,SAAS;YAC5B,SAAS,QAAQ,OAAO;YACxB,cAAc,QAAQ,YAAY,IAAI;YACtC,gBAAgB,QAAQ,YAAY,GAAG,QAAQ,cAAc,GAAG;YAChE,cAAc,QAAQ,YAAY,GAAG,QAAQ,YAAY,GAAG;QAChE;QAEA,gBAAgB,CAAA;YACZ,MAAM,UAAU,QAAQ,CAAC,QAAQ,IAAI;gBAAE,MAAM;gBAAM,aAAa,CAAC;YAAE;YACnE,MAAM,wBAAwB,QAAQ,WAAW,CAAC,aAAa,IAAI,EAAE;YAErE,IAAI;YACJ,IAAI,cAAc;gBACd,6BAA6B;gBAC7B,qBAAqB,sBAAsB,GAAG,CAAC,CAAA,IAC3C,EAAE,EAAE,KAAK,aAAa,UAAU,CAAC,EAAE,GAAG,oBAAoB;YAElE,OAAO;gBACF,uEAAuE;gBACvE,MAAM,oBAAoB,OAAO,MAAM,CAAC,QAAQ,WAAW,EAC3B,IAAI,GACJ,IAAI,CAAC,CAAA,IAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,iBAAiB,EAAE;gBAE/E,IAAI,mBAAmB;oBACnB,MAAM;wBACF,OAAO;wBACP,aAAa,GAAG,iBAAiB,IAAI,CAAC,oCAAoC,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM,OAAO;4BAAE,QAAQ,4IAAA,CAAA,KAAE;wBAAC,GAAG,CAAC,CAAC;wBAClH,SAAS;oBACb;oBACA,OAAO,UAAU,sCAAsC;gBAC3D;gBACD,qBAAqB;gBACrB,qBAAqB;uBAAI;oBAAuB;iBAAkB;YACtE;YAEA,OAAO;gBACH,GAAG,QAAQ;gBACX,CAAC,QAAQ,EAAE;oBACP,GAAG,OAAO;oBACV,aAAa;wBACT,GAAG,QAAQ,WAAW;wBACtB,CAAC,aAAa,EAAE;oBACpB;gBACJ;YACJ;QACJ;QACA,2BAA2B;QAC3B,oBAAoB;QACpB,oBAAoB;QACpB,uBAAuB;QACvB,gBAAgB,OAAO,sBAAsB;QAC5C,MAAM;YACH,OAAO,eAAe,sBAAsB;YAC5C,aAAa,CAAC,WAAW,EAAE,iBAAiB,IAAI,CAAC,IAAI,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM,OAAO;gBAAE,QAAQ,4IAAA,CAAA,KAAE;YAAC,GAAG,CAAC,EAAE,eAAe,iBAAiB,aAAa;QAC/I;IACJ;IAEA,MAAM,oBAAoB,CAAC,SAAiB,cAAsB;QAC9D,gBAAgB,CAAA;YACZ,MAAM,UAAU,QAAQ,CAAC,QAAQ;YACjC,IAAI,CAAC,SAAS,OAAO;YAErB,MAAM,wBAAwB,CAAC,QAAQ,WAAW,CAAC,aAAa,IAAI,EAAE,EAAE,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;YAE7F,2DAA2D;YAC3D,MAAM,iBAAiB;gBAAE,GAAG,QAAQ,WAAW;gBAAE,CAAC,aAAa,EAAE;YAAsB;YAEvF,uFAAuF;YACvF,IAAI,cAAc,CAAC,aAAa,CAAC,MAAM,KAAK,GAAG;gBAC3C,OAAO,cAAc,CAAC,aAAa;YACvC;YAEA,OAAO;gBACH,GAAG,QAAQ;gBACX,CAAC,QAAQ,EAAE;oBACP,GAAG,OAAO;oBACV,aAAa;gBACjB;YACJ;QACJ;QACC,MAAM;YAAE,OAAO;YAAmB,SAAS;QAAc;IAC9D;IAGA,MAAM,gBAAgB,CAAC;QACnB,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG;QAEzB,IAAI,CAAC,QAAQ,CAAC,UAAU,UAAU,QAAQ,wBAAwB;QAElE,MAAM,aAAa,OAAO,EAAE;QAC5B,MAAM,aAAa,KAAK,IAAI,CAAC,OAAO,EAAiD,sEAAsE;QAE3J,IAAI,CAAC,cAAc,WAAW,IAAI,KAAK,gBAAgB,CAAC,WAAW,IAAI,EAAE;YACrE,QAAQ,IAAI,CAAC,6BAA6B;YAC1C;QACJ;QAEA,MAAM,eAAe,WAAW,EAAE;QAClC,MAAM,WAAW,CAAA,GAAA,wIAAA,CAAA,WAAQ,AAAD,EAAE,WAAW,IAAI,GAAG,wCAAwC;QAEpF,MAAM,WAAW,UAAU,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;QAClD,IAAI,CAAC,UAAU;QAEf,sEAAsE;QACtE,MAAM,UAAU,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,UAAU;QACjC,MAAM,cAAc,YAAY,CAAC,QAAQ;QACzC,IAAI,aAAa;YACZ,MAAM,oBAAoB,OAAO,MAAM,CAAC,YAAY,WAAW,EAC/B,IAAI,GAAG,uDAAuD;aAC9D,IAAI,CAAC,CAAA,aAAc,WAAW,QAAQ,CAAC,EAAE,KAAK;YAC9E,IAAI,mBAAmB;gBACnB,MAAM;oBACF,OAAO;oBACP,aAAa,GAAG,SAAS,IAAI,CAAC,oCAAoC,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,UAAU,OAAO;wBAAE,QAAQ,4IAAA,CAAA,KAAE;oBAAC,GAAG,CAAC,CAAC;oBAC9G,SAAS;gBACb;gBACA,QAAQ,sBAAsB;YAClC;QACL;QACA,oBAAoB;QAEpB,8DAA8D;QAC9D,4BAA4B,UAAU,cAAc;IACxD;IAEA,gBAAgB;IAChB,MAAM,0BAA0B,CAAC;QAC7B,mBAAmB;QACnB,oBAAoB;YAAE,MAAM,UAAU,QAAQ;QAAG;QACjD,uBAAuB;IAC3B;IAEA,MAAM,qBAAqB;QACvB,MAAM,OAAO,iBAAiB,IAAI,CAAC,IAAI;QACvC,IAAI,CAAC,MAAM;YACP,MAAM;gBAAE,OAAO;gBAAmB,aAAa;gBAA8C,SAAS;YAAc;YACpH;QACJ;QACA,IAAI,iBAAiB;YACjB,2BAA2B;YAC3B,aAAa,UAAU,GAAG,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,gBAAgB,EAAE,GAAG;oBAAE,GAAG,GAAG;oBAAE;gBAAK,IAAI;YACpF,MAAM;gBAAE,OAAO;gBAAoB,aAAa,CAAC,MAAM,EAAE,KAAK,cAAc,CAAC;YAAC;QACnF,OAAO;YACH,mBAAmB;YACnB,MAAM,cAAc;gBAAE,IAAI,CAAA,GAAA,kLAAA,CAAA,KAAM,AAAD;gBAAK;YAAK;YACzC,aAAa;mBAAI;gBAAW;aAAY;YACxC,MAAM;gBAAE,OAAO;gBAAiB,aAAa,CAAC,MAAM,EAAE,KAAK,WAAW,CAAC;YAAC;QAC5E;QACA,uBAAuB;QACvB,mBAAmB,OAAO,sBAAsB;IACpD;IAEA,MAAM,4BAA4B,CAAC;QAC/B,qBAAqB;QACrB,sBAAsB;YAAE,MAAM,YAAY,QAAQ;YAAI,YAAY,YAAY,cAAc;QAAmB;QAC/G,yBAAyB;IAC7B;IAEA,MAAM,uBAAuB;QACxB,MAAM,OAAO,mBAAmB,IAAI,CAAC,IAAI;QACzC,MAAM,aAAa,mBAAmB,UAAU;QACjD,IAAI,CAAC,QAAQ,CAAC,YAAY;YACtB,MAAM;gBAAE,OAAO;gBAAqB,aAAa;gBAAwD,SAAS;YAAc;YAChI;QACJ;QACA,IAAI,mBAAmB;YACnB,eAAe,YAAY,GAAG,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,kBAAkB,EAAE,GAAG;oBAAE,GAAG,GAAG;oBAAE;oBAAM;gBAAW,IAAI;YACtG,MAAM;gBAAE,OAAO;gBAA4B,aAAa,CAAC,cAAc,EAAE,KAAK,cAAc,CAAC;YAAC;QACnG,OAAO;YACH,MAAM,gBAAgB;gBAAE,IAAI,CAAA,GAAA,kLAAA,CAAA,KAAM,AAAD;gBAAK;gBAAM;gBAAY,MAAM,0MAAA,CAAA,WAAQ;YAAC,GAAG,sBAAsB;YAChG,eAAe;mBAAI;gBAAa;aAAc;YAC9C,MAAM;gBAAE,OAAO;gBAAyB,aAAa,CAAC,cAAc,EAAE,KAAK,WAAW,CAAC;YAAC;QAC5F;QACA,yBAAyB;QACzB,qBAAqB,OAAO,sBAAsB;IACtD;IAEA,MAAM,0BAA0B,CAAC;QAC7B,mBAAmB;QACnB,oBAAoB;YAAE,MAAM,UAAU,QAAQ;YAAI,mBAAmB,UAAU,qBAAqB;QAAmB;QACvH,uBAAuB;IAC3B;IAEA,MAAM,qBAAqB;QACtB,MAAM,OAAO,iBAAiB,IAAI,CAAC,IAAI;QACvC,MAAM,oBAAoB,iBAAiB,iBAAiB;QAC5D,IAAI,CAAC,QAAQ,CAAC,mBAAmB;YAC9B,MAAM;gBAAE,OAAO;gBAAqB,aAAa;gBAAiE,SAAS;YAAc;YACzI;QACH;QACD,IAAI,iBAAiB;YACjB,aAAa,UAAU,GAAG,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,gBAAgB,EAAE,GAAG;oBAAE,GAAG,GAAG;oBAAE;oBAAM;gBAAkB,IAAI;YACvG,MAAM;gBAAE,OAAO;gBAA2B,aAAa,CAAC,aAAa,EAAE,KAAK,cAAc,CAAC;YAAC;QACjG,OAAO;YACH,MAAM,cAAc;gBAAE,IAAI,CAAA,GAAA,kLAAA,CAAA,KAAM,AAAD;gBAAK;gBAAM;YAAkB;YAC5D,aAAa;mBAAI;gBAAW;aAAY;YACvC,MAAM;gBAAE,OAAO;gBAAwB,aAAa,CAAC,aAAa,EAAE,KAAK,WAAW,CAAC;YAAC;QAC3F;QACA,uBAAuB;QACvB,mBAAmB,OAAO,sBAAsB;IACpD;IAEC,0BAA0B;IAC1B,MAAM,oBAAoB,CAAC,MAA2D,IAAY;QAC/F,gBAAgB;YAAE;YAAM;YAAI;QAAK;IACjC,4CAA4C;IAC/C;IAGD,MAAM,mBAAmB;QACrB,IAAI,CAAC,cAAc;QAEnB,IAAI;YACA,IAAI,UAAU;YACd,OAAQ,aAAa,IAAI;gBACrB,KAAK;oBACD,aAAa,UAAU,MAAM,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,aAAa,EAAE;oBAC/D,eAAe,YAAY,MAAM,CAAC,CAAA,MAAO,IAAI,UAAU,KAAK,aAAa,EAAE;oBAC3E,aAAa,CAAA,OAAQ,KAAK,GAAG,CAAC,CAAA,MAAO,IAAI,iBAAiB,KAAK,aAAa,EAAE,GAAG;gCAAC,GAAG,GAAG;gCAAE,mBAAmB;4BAAG,IAAI;oBACpH,iDAAiD;oBACjD,MAAM,6BAA6B,eAAe,MAAM,CAAC,CAAA,IAAK,EAAE,UAAU,KAAK,aAAa,EAAE;oBAC9F,kBAAkB;oBAClB,uCAAmC;;oBAEnC;oBACA,IAAI,uBAAuB,aAAa,EAAE,EAAE;wBACxC,sBAAsB,UAAU,MAAM,GAAG,IAAI,UAAU,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,aAAa,EAAE,EAAG,EAAE,GAAG;oBACzG;oBACA,UAAU,CAAC,MAAM,EAAE,aAAa,IAAI,CAAC,mCAAmC,CAAC;oBACzE;gBACJ,KAAK;oBACD,eAAe,YAAY,MAAM,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,aAAa,EAAE;oBAClE,MAAM,kBAAkB;wBAAE,GAAG,YAAY;oBAAC;oBAC1C,OAAO,IAAI,CAAC,iBAAiB,OAAO,CAAC,CAAA;wBACjC,OAAO,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;oBAChE;oBACA,gBAAgB;oBACf,oCAAoC;oBACrC,MAAM,uBAAuB,eAAe,GAAG,CAAC,CAAA;wBAC5C,MAAM,iBAAiB;4BAAE,GAAG,EAAE,WAAW;wBAAC;wBAC1C,yCAAyC;wBACzC,IAAI,EAAE,IAAI,KAAK,SAAS;4BACpB,OAAO,AAAC,cAA4C,CAAC,aAAa,EAAE,CAAC;wBACzE,OAAO,IAAI,EAAE,IAAI,KAAK,UAAU;4BAC5B,OAAO,IAAI,CAAC,gBAAgB,OAAO,CAAC,CAAA;gCAChC,OAAO,AAAC,cAAmE,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;4BACzG;wBACJ;wBACA,OAAO;4BAAE,GAAG,CAAC;4BAAE,aAAa;wBAAe;oBAC/C;oBACA,kBAAkB;oBAClB,uCAAmC;;oBAEnC;oBACD,UAAU,CAAC,cAAc,EAAE,aAAa,IAAI,CAAC,YAAY,CAAC;oBAC1D;gBACJ,KAAK;oBACD,aAAa,UAAU,MAAM,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,aAAa,EAAE;oBAC9D,MAAM,qBAAqB;wBAAE,GAAG,YAAY;oBAAC;oBAC7C,OAAO,IAAI,CAAC,oBAAoB,OAAO,CAAC,CAAA;wBACnC,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,EAAE,OAAO,CAAC,CAAA;4BACzD,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,GAAG,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,QAAQ,CAAC,EAAE,KAAK,aAAa,EAAE;wBACnJ;oBACL;oBACA,gBAAgB;oBAChB,oCAAoC;oBACnC,MAAM,sBAAsB,eAAe,GAAG,CAAC,CAAA;wBAC3C,IAAI,iBAAiB,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,EAAE,WAAW,IAAI,YAAY;wBAC5E,IAAI,EAAE,IAAI,KAAK,SAAS;4BACpB,OAAO,IAAI,CAAC,gBAAgB,OAAO,CAAC,CAAA;gCAChC,cAAc,CAAC,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAW,CAAC,OAAO,EAAE,QAAQ,KAAK,WAAW,EAAE,QAAQ,CAAC,EAAE,GAAG,EAAE,QAAQ,MAAM,aAAa,EAAE;4BACxJ;wBACJ,OAAO,IAAI,EAAE,IAAI,KAAK,UAAU;4BAC5B,OAAO,IAAI,CAAC,gBAAgB,OAAO,CAAC,CAAA;gCAChC,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;oCACzC,cAAc,CAAC,QAAQ,CAAC,OAAO,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAW,CAAC,OAAO,EAAE,QAAQ,KAAK,WAAW,EAAE,QAAQ,CAAC,EAAE,GAAG,EAAE,QAAQ,MAAM,aAAa,EAAE;gCAC1K;4BACJ;wBACJ;wBACA,OAAO;4BAAE,GAAG,CAAC;4BAAE,aAAa;wBAAe;oBAC/C;oBACD,kBAAkB;oBAClB,uCAAmC;;oBAEnC;oBACD,UAAU,CAAC,aAAa,EAAE,aAAa,IAAI,CAAC,YAAY,CAAC;oBACzD;gBACH,KAAK;oBACD,MAAM,mBAAmB,eAAe,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,aAAa,EAAE;oBAC5E,kBAAkB;oBAClB,uCAAmC;;oBAEnC;oBACA,UAAU,CAAC,UAAU,EAAE,aAAa,IAAI,CAAC,YAAY,CAAC;oBACvD;YACR;YACA,MAAM;gBAAE,OAAO;gBAAsB,aAAa;gBAAS,SAAS;YAAc;QACtF,EAAE,OAAO,OAAO;YACX,QAAQ,KAAK,CAAC,CAAC,yBAAyB,EAAE,aAAa,IAAI,CAAC,CAAC,CAAC,EAAE;YAChE,MAAM;gBAAE,OAAO;gBAAqB,aAAa;gBAAwC,SAAS;YAAc;QACrH,SAAU;YACN,gBAAgB,OAAO,eAAe;QAC1C;IACJ;IAEC,+BAA+B;IAC/B,MAAM,qBAAqB;QACxB,eAAe,CAAA,WAAY,CAAA,GAAA,wIAAA,CAAA,WAAQ,AAAD,EAAE,UAAU;IACjD;IAEA,MAAM,iBAAiB;QACpB,eAAe,CAAA,WAAY,CAAA,GAAA,wIAAA,CAAA,WAAQ,AAAD,EAAE,UAAU;IACjD;IAED,mCAAmC;IACnC,MAAM,qBAAqB;QACvB,uCAAmC;;QAQnC;IACJ;IAEC,MAAM,qBAAqB,CAAC;QACxB,MAAM,eAAe,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,YAAY;QACxC,MAAM,cAAc,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,YAAY;QACxC,MAAM,aAAa,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,aAAa;QACvC,MAAM,iBAAiB,YAAY,CAAC,aAAa;QAEjD,IAAI,CAAC,kBAAkB,OAAO,IAAI,CAAC,eAAe,WAAW,EAAE,MAAM,KAAK,GAAG;YACzE,MAAM;gBAAE,OAAO;gBAAqB,aAAa,CAAC,gCAAgC,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,YAAY,OAAO;oBAAE,QAAQ,4IAAA,CAAA,KAAE;gBAAC,GAAG,CAAC,CAAC;gBAAE,SAAS;YAAc;YACzJ;QACJ;QAEA,kDAAkD;QAClD,MAAM,wBAAwB,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,eAAe,WAAW;QAClF,mDAAmD;QACnD,OAAO,IAAI,CAAC,uBAAuB,OAAO,CAAC,CAAA;YACvC,qBAAqB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACnC,OAAO,EAAE,GAAG,CAAA,GAAA,kLAAA,CAAA,KAAM,AAAD;YACrB;QACJ;QAGA,gBAAgB,CAAA,WAAY,CAAC;gBACzB,GAAG,QAAQ;gBACX,CAAC,WAAW,EAAE;oBACV,MAAM;oBACN,aAAa;gBACjB;YACJ,CAAC;QAED,mDAAmD;QACnD,IAAI,aAAa,OAAO;YACpB,cAAc;YACd,eAAe,cAAc,gDAAgD;QACjF;QAEA,MAAM;YAAE,OAAO;YAAqB,aAAa,CAAC,eAAe,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,YAAY,SAAS,eAAe,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,aAAa,SAAS,CAAC,CAAC;QAAC;IACpJ;IAEC,4BAA4B;IAC7B,MAAM,wBAAwB,CAAC;QAC3B,gBAAgB;IACpB;IAEA,MAAM,iBAAiB;QACnB,IAAI,CAAC,cAAc;QACnB,MAAM,UAAU,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,cAAc;QAErC,gBAAgB,CAAA;YACZ,MAAM,cAAc;gBAAE,GAAG,QAAQ;YAAC;YAClC,IAAI,WAAW,CAAC,QAAQ,EAAE;gBACtB,WAAW,CAAC,QAAQ,GAAG;oBACnB,MAAM;oBACN,aAAa,CAAC,EAAE,iCAAiC;gBACrD;YACJ;YACA,OAAO;QACX;QACA,gBAAgB,OAAO,eAAe;QACtC,MAAM;YAAE,OAAO;YAAoB,aAAa,CAAC,uCAAuC,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,cAAc,OAAO;gBAAE,QAAQ,4IAAA,CAAA,KAAE;YAAC,GAAG,CAAC,CAAC;YAAE,SAAS;QAAc;IACrK;IAGA,MAAM,0BAA0B;QAC5B,gEAAgE;QAChE,IAAI,iBAAiB;QACrB,IAAI,aAAa,OAAO;YACpB,MAAM,gBAAgB,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,YAAY;YACzC,MAAM,kBAAkB,YAAY,CAAC,cAAc;YACnD,iBAAiB,CAAC,CAAC,mBAAmB,OAAO,IAAI,CAAC,gBAAgB,WAAW,EAAE,MAAM,GAAG,KAAK,OAAO,MAAM,CAAC,gBAAgB,WAAW,EAAE,IAAI,CAAC,CAAA,OAAQ,KAAK,MAAM,GAAG;QACvK,OAAO;YACH,iBAAiB,UAAU,IAAI,CAAC,CAAA;gBAC5B,MAAM,SAAS,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;gBAC5B,MAAM,cAAc,YAAY,CAAC,OAAO;gBACxC,OAAO,CAAC,CAAC,eAAe,OAAO,IAAI,CAAC,YAAY,WAAW,EAAE,MAAM,GAAG,KAAK,OAAO,MAAM,CAAC,YAAY,WAAW,EAAE,IAAI,CAAC,CAAA,OAAQ,KAAK,MAAM,GAAG;YACjJ;QACJ;QAEA,IAAI,CAAC,gBAAgB;YACjB,MAAM,qBAAqB,aAAa,QAAQ,CAAC,GAAG,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,YAAY,OAAO;gBAAE,QAAQ,4IAAA,CAAA,KAAE;YAAC,IAAI,GAAG;YACpG,MAAM;gBAAE,OAAO;gBAAkB,aAAa,CAAC,2BAA2B,EAAE,mBAAmB,4BAA4B,CAAC;gBAAE,SAAS;YAAc;YACrJ;QACJ;QAEA,gBAAgB,KAAK,sBAAsB;QAC3C,uBAAuB;IAC3B;IAEA,MAAM,qBAAqB;QACvB,IAAI,CAAC,aAAa,IAAI,IAAI;YACtB,MAAM;gBAAE,OAAO;gBAAmB,aAAa;gBAAiD,SAAS;YAAc;YACvH;QACJ;QAEA,IAAI;QACJ,MAAM,eAAe,aAAa,QAAQ,UAAU;QAEpD,IAAI,iBAAiB,SAAS;YAC1B,MAAM,aAAa;YACnB,MAAM,gBAAgB,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,YAAY;YACzC,MAAM,wBAAwB,YAAY,CAAC,cAAc,EAAE,eAAe,CAAC;YAC3E,wCAAwC;YACxC,MAAM,qBAA0E,CAAC;YACjF,OAAO,IAAI,CAAC,uBAAuB,OAAO,CAAC,CAAA;gBACvC,kBAAkB,CAAC,OAAO,GAAG,qBAAqB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,MAAM,GAAK;YACxF;YACA,sBAAsB;YAEtB,IAAI,OAAO,IAAI,CAAC,qBAAqB,MAAM,KAAK,KAAK,OAAO,MAAM,CAAC,qBAAqB,KAAK,CAAC,CAAA,OAAQ,KAAK,MAAM,KAAK,IAAI;gBACrH,MAAM;oBAAE,OAAO;oBAAkB,aAAa;oBAA+B,SAAS;gBAAc;gBACpG,uBAAuB;gBACvB;YACL;QACJ,OAAO;YACH,sBAAsB,CAAC;YACvB,IAAI,qBAAqB;YACzB,UAAU,OAAO,CAAC,CAAA;gBACd,MAAM,UAAU,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;gBAC7B,MAAM,sBAAsB,YAAY,CAAC,QAAQ,EAAE,eAAe,CAAC;gBACnE,MAAM,0BAA+E,CAAC;gBACtF,OAAO,IAAI,CAAC,qBAAqB,OAAO,CAAC,CAAA;oBACrC,IAAI,mBAAmB,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG;wBACxC,uBAAuB,CAAC,OAAO,GAAG,mBAAmB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,MAAM,GAAK;wBACvF,qBAAqB,MAAM,+BAA+B;oBAC9D;gBACJ;gBACA,iDAAiD;gBACjD,IAAI,OAAO,IAAI,CAAC,yBAAyB,MAAM,GAAG,GAAG;oBAC/C,mBAAkD,CAAC,QAAQ,GAAG;gBACpE;YACJ;YAEA,IAAI,CAAC,oBAAoB;gBACrB,MAAM;oBAAE,OAAO;oBAAkB,aAAa;oBAA4C,SAAS;gBAAc;gBACjH,uBAAuB;gBACvB;YACJ;QACJ;QAGA,MAAM,cAA6B;YAC/B,IAAI,CAAA,GAAA,kLAAA,CAAA,KAAM,AAAD;YACT,MAAM,aAAa,IAAI;YACvB,YAAY;YACZ,MAAM;YACN,aAAa;YACb,WAAW,IAAI,OAAO,WAAW;QACrC;QAEA,uCAAmC;;QAYnC;IAEJ;IAEA,gCAAgC;IAChC,MAAM,qBAAqB,CAAC;QACxB,uCAAmC;;QA6FnC;IACJ;IAED,+BAA+B;IAC/B,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,OAAO,OAAO;QACpC,MAAM,UAAU,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;QAC7B,OAAO,WAAW,GAAG,CAAC;IAC1B,GAAG;QAAC;KAAW;IAGf,wDAAwD;IACxD,MAAM,aAAsD,CAAC,EAAE,QAAQ,EAAE;QACrE,wCAAwC;QACxC,IAAI,UAAU;YACV,qBAAO;0BAAG;+BAAc,wDAAwD;QACpF,OAAO;YACH,qBACI,8OAAC,2JAAA,CAAA,aAAU;gBAAC,oBAAoB,2JAAA,CAAA,gBAAa;gBAAE,WAAW;0BACrD;;;;;;QAGb;IACJ;IAEA,6BAA6B;IAC7B,MAAM,kBAAkB;QACpB,MAAM,eAAsB,EAAE;QAC9B,MAAM,UAAU;YACZ;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SACH;QACD,aAAa,IAAI,CAAC;QAElB,oCAAoC;QACpC,UAAU,OAAO,CAAC,CAAA;YACd,MAAM,UAAU,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;YAC7B,MAAM,cAAc,YAAY,CAAC,QAAQ;YAEzC,IAAI,aAAa;gBACb,OAAO,OAAO,CAAC,YAAY,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,QAAQ,YAAY;oBAClE,MAAM,aAAa,YAAY,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;oBAClD,YAAY,OAAO,CAAC,CAAA;wBAChB,MAAM,gBAAgB,uBAAuB,YAAY,OAAO,qBAAqB;wBACrF,aAAa,IAAI,CAAC;4BACd,WAAW,QAAQ,CAAC,EAAE;4BACtB,WAAW,QAAQ,CAAC,IAAI;4BACxB;4BACA,YAAY,QAAQ;4BACpB,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,SAAS;4BACnC,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,OAAO;4BACjC,WAAW,YAAY,GAAG,OAAO;4BACjC,WAAW,YAAY,IAAI,WAAW,cAAc,GAAG,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,cAAc,IAAI;4BACnG,WAAW,YAAY,IAAI,WAAW,YAAY,GAAG,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,YAAY,IAAI;4BAC/F,cAAc,OAAO,CAAC;yBACzB;oBACL;gBACJ;YACJ;QACJ;QAEA,IAAI,aAAa,MAAM,IAAI,GAAG;YAC1B,MAAM;gBAAE,OAAO;gBAAa,aAAa;gBAA8D,SAAS;YAAU;YAC1H;QACJ;QAEA,uBAAuB;QACvB,MAAM,aAAa,iCACb,aAAa,GAAG,CAAC,CAAA,IAAK,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC;QAE9C,mBAAmB;QACnB,MAAM,aAAa,UAAU;QAC7B,MAAM,OAAO,SAAS,aAAa,CAAC;QACpC,KAAK,YAAY,CAAC,QAAQ;QAC1B,MAAM,qBAAqB,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,SAAS,CAAC,EAAE,EAAE;QAChD,MAAM,mBAAmB,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,SAAS,CAAC,EAAE,EAAE;QAC9C,KAAK,YAAY,CAAC,YAAY,CAAC,QAAQ,EAAE,mBAAmB,CAAC,EAAE,mBAAmB,CAAC,EAAE,iBAAiB,IAAI,CAAC;QAC3G,SAAS,IAAI,CAAC,WAAW,CAAC,OAAO,kBAAkB;QACnD,KAAK,KAAK;QACV,SAAS,IAAI,CAAC,WAAW,CAAC;QAE1B,MAAM;YAAE,OAAO;YAA2B,aAAa;QAAmD;IAC9G;IAEA,6BAA6B;IAC7B,MAAM,kBAAkB;QACpB,iDAAiD;QACjD,MAAM,eAAe,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,qBAAqB,QAAQ;QAC/E,MAAM,OAAO;YACT;YACA;YACA,aAAa;YACb,WAAW;YACX;YACA;YACA;QACJ;QAEA,IAAI;YACA,CAAA,GAAA,yIAAA,CAAA,sBAAmB,AAAD,EAAE,OAAO,+BAA+B;YAC1D,MAAM;gBAAE,OAAO;gBAA2B,aAAa;YAAuC;QAClG,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,oCAAoC;YAClD,MAAM;gBAAE,OAAO;gBAAyB,aAAa;gBAAsC,SAAS;YAAc;QACtH;IACJ;IAGF,qBACM,8OAAC;QAAK,WAAU;;YAA0C;0BAErD,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAG,WAAU;kCAAgE;;;;;;kCAG9E,8OAAC;wBAAE,WAAU;kCAA6B;;;;;;;;;;;;0BAG9C,8OAAC;gBAAI,WAAU;;oBAAwE;kCAGpF,8OAAC;wBAAI,WAAU;;4BAET,aAAa,uBACV,8OAAC;0CACI,cAAA,8OAAC,mIAAA,CAAA,UAAO;;sDACJ,8OAAC,mIAAA,CAAA,iBAAc;4CAAC,OAAO;sDACnB,cAAA,8OAAC,kIAAA,CAAA,SAAM;gDACH,SAAS;gDACT,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,iDACA,CAAC,cAAc,yBACd,UAAU,eAAe,4CAA4C,2CAA2C;;gDAEpH,UAAU;;kEAEX,8OAAC,0MAAA,CAAA,WAAkB;wDAAC,WAAU;;;;;;oDAA8B;oDAC3D,aAAa,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,YAAY,QAAQ;wDAAE,QAAQ,4IAAA,CAAA,KAAE;oDAAC,mBAAK,8OAAC;kEAAK;;;;;;oDAChE,mCAAqB,8OAAC;wDAAK,WAAU;kEAAsB;;;;;;oDAC3D,UAAU,eAAe,CAAC,mCAAqB,8OAAC;wDAAK,WAAU;kEAA6B;;;;;;;;;;;;;;;;;sDAGrG,8OAAC,mIAAA,CAAA,iBAAc;4CAAC,WAAU;sDACtB,cAAA,8OAAC,oIAAA,CAAA,WAAQ;gDACL,MAAK;gDACL,UAAU;gDACV,UAAU,CAAC;oDAAW,IAAI,MAAM,cAAc;gDAAM;gDACpD,YAAY;gDACZ,QAAQ,4IAAA,CAAA,KAAE;gDACV,WAAW;oDAAE,SAAS,CAAC,OAAS,UAAU;gDAAM;gDAChD,qBAAqB;oDACf,SAAS;gDACf;;;;;;;;;;;;;;;;;;;;;;4BAOpB,aAAa,wBACV,8OAAC,+IAAA,CAAA,gBAAa;gCACV,aAAa;gCACb,gBAAgB;gCAChB,YAAY;;;;;;;;;;;;kCAMxB,8OAAC;wBAAI,WAAU;;0CAEX,8OAAC,kIAAA,CAAA,SAAM;gCAAC,OAAO;gCAAU,eAAe,CAAC,QAAU,YAAY;;kDAC3D,8OAAC,kIAAA,CAAA,gBAAa;wCAAC,WAAU;kDACrB,cAAA,8OAAC,kIAAA,CAAA,cAAW;4CAAC,aAAY;;;;;;;;;;;kDAE7B,8OAAC,kIAAA,CAAA,gBAAa;;0DACV,8OAAC,kIAAA,CAAA,aAAU;gDAAC,OAAM;0DAAM;;;;;;0DACxB,8OAAC,kIAAA,CAAA,aAAU;gDAAC,OAAM;0DAAO;;;;;;;;;;;;;;;;;;0CAIjC,8OAAC;gCAAI,WAAU;0CACX,cAAA,8OAAC,kJAAA,CAAA,mBAAgB;oCACd,WAAW;oCACX,oBAAoB;oCACpB,kBAAkB;;;;;;;;;;;0CAIxB,8OAAC,kIAAA,CAAA,SAAM;gCAAC,MAAM;gCAAmB,cAAc;;kDAC3C,8OAAC,kIAAA,CAAA,gBAAa;wCAAC,OAAO;kDAClB,cAAA,8OAAC,kIAAA,CAAA,SAAM;4CAAC,SAAQ;4CAAU,MAAK;;gDAAO;8DACnC,8OAAC,0MAAA,CAAA,WAAQ;oDAAC,WAAU;;;;;;8DACnB,8OAAC;oDAAK,WAAU;8DAAU;;;;;;;;;;;;;;;;;kDAGlC,8OAAC,kIAAA,CAAA,gBAAa;wCAAC,WAAU;;4CAAyC;0DAC7D,8OAAC,kIAAA,CAAA,eAAY;;kEACT,8OAAC,kIAAA,CAAA,cAAW;kEAAC;;;;;;kEACb,8OAAC,kIAAA,CAAA,oBAAiB;kEAAC;;;;;;;;;;;;0DAEvB,8OAAC;gDAAI,WAAU;;kEAEX,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEAAI,WAAU;;kFACZ,8OAAC;wEAAG,WAAU;;0FAAwD,8OAAC,0MAAA,CAAA,WAAQ;gFAAC,WAAU;;;;;;4EAAiC;4EAAQ,UAAU,MAAM;4EAAC;;;;;;;kFACpJ,8OAAC,kIAAA,CAAA,SAAM;wEAAC,SAAQ;wEAAU,MAAK;wEAAK,SAAS,IAAM,wBAAwB;wEAAO,OAAM;kFACpF,cAAA,8OAAC,kMAAA,CAAA,OAAI;4EAAC,WAAU;;;;;;;;;;;;;;;;;0EAGvB,8OAAC;gEAAG,WAAU;0EACT,UAAU,GAAG,CAAC,CAAC,oBACZ,8OAAC;wEAAgB,WAAU;;0FACvB,8OAAC;gFAAK,WAAW,CAAC,SAAS,EAAE,IAAI,EAAE,KAAK,qBAAqB,+BAA+B,yBAAyB;0FAAG,IAAI,IAAI;;;;;;0FAChI,8OAAC;gFAAI,WAAU;;kGACX,8OAAC,kIAAA,CAAA,SAAM;wFAAC,SAAQ;wFAAQ,MAAK;wFAAO,WAAU;wFAAsD,SAAS,IAAM,wBAAwB;wFAAM,OAAM;kGAAc,cAAA,8OAAC,2MAAA,CAAA,OAAI;4FAAC,WAAU;;;;;;;;;;;kGACrL,8OAAC,2IAAA,CAAA,cAAW;kGACR,cAAA,8OAAC,2IAAA,CAAA,qBAAkB;4FAAC,OAAO;sGACtB,cAAA,8OAAC,kIAAA,CAAA,SAAM;gGAAC,SAAQ;gGAAQ,MAAK;gGAAO,WAAU;gGAAmD,SAAS,IAAM,kBAAkB,YAAY,IAAI,EAAE,EAAE,IAAI,IAAI;gGAAG,OAAM;0GAAgB,cAAA,8OAAC,0MAAA,CAAA,SAAM;oGAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;uEANjN,IAAI,EAAE;;;;;;;;;;;;;;;;kEAgB3B,8OAAC;wDAAI,WAAU;;0EACV,8OAAC;gEAAI,WAAU;;kFACZ,8OAAC;wEAAG,WAAU;;0FAAwD,8OAAC,gNAAA,CAAA,YAAS;gFAAC,WAAU;;;;;;4EAAiC;4EAAgB,YAAY,MAAM;4EAAC;;;;;;;kFAC/J,8OAAC,kIAAA,CAAA,SAAM;wEAAC,SAAQ;wEAAU,MAAK;wEAAK,SAAS,IAAM,0BAA0B;wEAAO,OAAM;kFACtF,cAAA,8OAAC,kMAAA,CAAA,OAAI;4EAAC,WAAU;;;;;;;;;;;;;;;;;0EAGxB,8OAAC;gEAAG,WAAU;0EACT,YAAY,GAAG,CAAC,CAAC,oBACd,8OAAC;wEAAgB,WAAU;;0FACvB,8OAAC;gFAAK,WAAU;;oFAAkC,IAAI,IAAI;oFAAC;kGAAC,8OAAC;wFAAK,WAAU;;4FAAiB;4FAAE,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,IAAI,UAAU,GAAG,QAAQ;4FAAgB;;;;;;;;;;;;;0FACrK,8OAAC;gFAAI,WAAU;;kGACX,8OAAC,kIAAA,CAAA,SAAM;wFAAC,SAAQ;wFAAQ,MAAK;wFAAO,WAAU;wFAAsD,SAAS,IAAM,0BAA0B;wFAAM,OAAM;kGAAsB,cAAA,8OAAC,2MAAA,CAAA,OAAI;4FAAC,WAAU;;;;;;;;;;;kGAC9L,8OAAC,2IAAA,CAAA,cAAW;kGACT,cAAA,8OAAC,2IAAA,CAAA,qBAAkB;4FAAC,OAAO;sGACtB,cAAA,8OAAC,kIAAA,CAAA,SAAM;gGAAC,SAAQ;gGAAQ,MAAK;gGAAO,WAAU;gGAAmD,SAAS,IAAM,kBAAkB,cAAc,IAAI,EAAE,EAAE,IAAI,IAAI;gGAAG,OAAM;0GAAwB,cAAA,8OAAC,0MAAA,CAAA,SAAM;oGAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;uEAN3N,IAAI,EAAE;;;;;;;;;;;;;;;;kEAgB3B,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEAAI,WAAU;;kFACX,8OAAC;wEAAG,WAAU;;0FAAwD,8OAAC,oMAAA,CAAA,QAAK;gFAAC,WAAU;;;;;;4EAAiC;4EAAgB,UAAU,MAAM;4EAAC;;;;;;;kFACzJ,8OAAC,kIAAA,CAAA,SAAM;wEAAC,SAAQ;wEAAU,MAAK;wEAAK,SAAS,IAAM,wBAAwB;wEAAO,OAAM;kFACpF,cAAA,8OAAC,kMAAA,CAAA,OAAI;4EAAC,WAAU;;;;;;;;;;;;;;;;;0EAGvB,8OAAC;gEAAG,WAAU;0EACT,UAAU,GAAG,CAAC,CAAC,oBACZ,8OAAC;wEAAgB,WAAU;;0FACvB,8OAAC;gFAAK,WAAU;;oFAAkC,IAAI,IAAI;oFAAC;kGAAC,8OAAC;wFAAK,WAAU;;4FAAiB;4FAAE,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,IAAI,iBAAiB,GAAG,QAAQ;4FAAgB;;;;;;;;;;;;;0FAC5K,8OAAC;gFAAI,WAAU;;kGACX,8OAAC,kIAAA,CAAA,SAAM;wFAAC,SAAQ;wFAAQ,MAAK;wFAAO,WAAU;wFAAsD,SAAS,IAAM,wBAAwB;wFAAM,OAAM;kGAAqB,cAAA,8OAAC,2MAAA,CAAA,OAAI;4FAAC,WAAU;;;;;;;;;;;kGAC3L,8OAAC,2IAAA,CAAA,cAAW;kGACT,cAAA,8OAAC,2IAAA,CAAA,qBAAkB;4FAAC,OAAO;sGACtB,cAAA,8OAAC,kIAAA,CAAA,SAAM;gGAAC,SAAQ;gGAAQ,MAAK;gGAAO,WAAU;gGAAmD,SAAS,IAAM,kBAAkB,YAAY,IAAI,EAAE,EAAE,IAAI,IAAI;gGAAG,OAAM;0GAAuB,cAAA,8OAAC,0MAAA,CAAA,SAAM;oGAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;uEANxN,IAAI,EAAE;;;;;;;;;;;;;;;;kEAgB5B,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEAAI,WAAU;0EACV,cAAA,8OAAC;oEAAG,WAAU;;sFACV,8OAAC,wMAAA,CAAA,UAAO;4EAAC,WAAU;;;;;;wEAAiC;wEACxC,kBAAkB,MAAM;wEAAC;wEAAE,aAAa,QAAQ,YAAY;wEAAY;;;;;;;;;;;;0EAI5F,8OAAC;gEAAG,WAAU;0EACR,kBAAkB,MAAM,GAAG,IAAI,kBAAkB,GAAG,CAAC,CAAC,yBACnD,8OAAC;wEAAqB,WAAU;;0FAC5B,8OAAC;gFAAK,WAAU;0FAAkC,SAAS,IAAI;;;;;;0FAC/D,8OAAC;gFAAI,WAAU;;kGACX,8OAAC,kIAAA,CAAA,SAAM;wFACH,SAAQ;wFACR,MAAK;wFACL,WAAU;wFACV,SAAS,IAAM,mBAAmB,SAAS,EAAE;wFAC7C,OAAO,CAAC,iBAAiB,EAAE,SAAS,IAAI,KAAK,UAAU,WAAW,UAAU,CAAC,CAAC;kGAE9E,cAAA,8OAAC,sMAAA,CAAA,SAAM;4FAAC,WAAU;;;;;;;;;;;kGAEtB,8OAAC,2IAAA,CAAA,cAAW;kGACR,cAAA,8OAAC,2IAAA,CAAA,qBAAkB;4FAAC,OAAO;sGACvB,cAAA,8OAAC,kIAAA,CAAA,SAAM;gGAAC,SAAQ;gGAAQ,MAAK;gGAAO,WAAU;gGAAmD,SAAS,IAAM,kBAAkB,YAAY,SAAS,EAAE,EAAE,SAAS,IAAI;gGAAG,OAAM;0GAAoB,cAAA,8OAAC,0MAAA,CAAA,SAAM;oGAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;uEAd9N,SAAS,EAAE;;;;8FAqBpB,8OAAC;oEAAE,WAAU;;wEAAwD;wEAC/C,aAAa,QAAQ,YAAY;wEAAY;;;;;;;;;;;;;;;;;;;;;;;;0DAMrF,8OAAC,kIAAA,CAAA,eAAY;0DACT,cAAA,8OAAC,kIAAA,CAAA,cAAW;oDAAC,OAAO;8DAChB,cAAA,8OAAC,kIAAA,CAAA,SAAM;wDAAC,SAAQ;kEAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAUtD,8OAAC;;oBAAW;kCAER,8OAAC;wBAAI,WAAU;;4BAA0D;0CAGpE,8OAAC;gCAAI,WAAU;0CACX,cAAA,8OAAC,8IAAA,CAAA,eAAY;oCAAC,WAAW;;;;;;;;;;;0CAK9B,8OAAC;gCAAI,WAAU;0CACZ,cAAA,8OAAC,8IAAA,CAAA,eAAY;oCACT,aAAa;oCACb,cAAc;oCACd,eAAe;oCACf,UAAU;oCACV,WAAW;oCACX,aAAa;oCACb,mBAAmB;oCACnB,cAAc;oCACd,oBAAoB;oCACpB,gBAAgB;oCAChB,YAAY;oCACZ,WAAW;;;;;;;;;;;;;;;;;;;;;;;0BAO3B,8OAAC;gBAAI,WAAU;;kCAEV,8OAAC,kIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAiB,SAAQ;wBAAU,WAAU;;0CAC1D,8OAAC,8MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAGzC,8OAAC,kIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAiB,SAAQ;wBAAU,WAAU;;0CAC1D,8OAAC,4NAAA,CAAA,kBAAe;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;oBAG/C,aAAa,uBACX,8OAAC,kIAAA,CAAA,SAAM;wBAAC,SAAS,IAAM,mBAAmB;wBAAa,SAAQ;wBAAU,WAAU;;0CAC/E,8OAAC,8MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAI5C,8OAAC,kIAAA,CAAA,SAAM;wBAAC,MAAM;wBAAqB,cAAc;;0CAC9C,8OAAC,kIAAA,CAAA,gBAAa;gCAAC,OAAO;0CAClB,cAAA,8OAAC,kIAAA,CAAA,SAAM;oCAAC,SAAQ;oCAAU,WAAU;;sDAChC,8OAAC,0MAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;wCAAiB;;;;;;;;;;;;0CAG5C,8OAAC,kIAAA,CAAA,gBAAa;;kDACV,8OAAC,kIAAA,CAAA,eAAY;;0DACT,8OAAC,kIAAA,CAAA,cAAW;;oDAAC;oDAAkB,aAAa,QAAQ,WAAW;;;;;;;0DAC/D,8OAAC,kIAAA,CAAA,oBAAiB;;oDAAC;oDAA4D,aAAa,QAAQ,CAAC,IAAI,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,YAAY,OAAO;wDAAC,QAAQ,4IAAA,CAAA,KAAE;oDAAA,IAAI,GAAG;oDAAsB;oDAAO,UAAU,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,qBAAqB;oDAAK;;;;;;;;;;;;;kDAE/O,8OAAC;wCAAI,WAAU;;0DACX,8OAAC,iIAAA,CAAA,QAAK;gDAAC,SAAQ;0DAAgB;;;;;;0DAC/B,8OAAC,iIAAA,CAAA,QAAK;gDACH,IAAG;gDACH,OAAO;gDACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;gDAC/C,aAAY;;;;;;;;;;;;kDAGnB,8OAAC,kIAAA,CAAA,eAAY;;0DACV,8OAAC,kIAAA,CAAA,cAAW;gDAAC,OAAO;0DAClB,cAAA,8OAAC,kIAAA,CAAA,SAAM;oDAAC,SAAQ;8DAAU;;;;;;;;;;;0DAE3B,8OAAC,kIAAA,CAAA,SAAM;gDAAC,SAAS;0DAAoB;;;;;;;;;;;;;;;;;;;;;;;;kCAKjD,8OAAC,kIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAoB,SAAQ;wBAAU,WAAU;;0CAC7D,8OAAC,kMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;0BAQzC,8OAAC,kIAAA,CAAA,SAAM;gBAAC,MAAM;gBAAqB,cAAc;0BAC5C,cAAA,8OAAC,kIAAA,CAAA,gBAAa;;sCACV,8OAAC,kIAAA,CAAA,eAAY;sCACT,cAAA,8OAAC,kIAAA,CAAA,cAAW;0CAAE,kBAAkB,gBAAgB;;;;;;;;;;;sCAEpD,8OAAC;4BAAI,WAAU;;8CACX,8OAAC,iIAAA,CAAA,QAAK;oCAAC,SAAQ;8CAAgB;;;;;;8CAC/B,8OAAC,iIAAA,CAAA,QAAK;oCAAC,IAAG;oCAAgB,OAAO,iBAAiB,IAAI;oCAAE,UAAU,CAAC,IAAM,oBAAoB;4CAAE,MAAM,EAAE,MAAM,CAAC,KAAK;wCAAC;;;;;;;;;;;;sCAExH,8OAAC,kIAAA,CAAA,eAAY;;8CACV,8OAAC,kIAAA,CAAA,cAAW;oCAAC,OAAO;8CAClB,cAAA,8OAAC,kIAAA,CAAA,SAAM;wCAAC,SAAQ;kDAAU;;;;;;;;;;;8CAE3B,8OAAC,kIAAA,CAAA,SAAM;oCAAC,SAAS;8CAAoB;;;;;;;;;;;;;;;;;;;;;;;0BAMnD,8OAAC,kIAAA,CAAA,SAAM;gBAAC,MAAM;gBAAuB,cAAc;0BAC9C,cAAA,8OAAC,kIAAA,CAAA,gBAAa;;sCACV,8OAAC,kIAAA,CAAA,eAAY;sCACT,cAAA,8OAAC,kIAAA,CAAA,cAAW;0CAAE,oBAAoB,wBAAwB;;;;;;;;;;;sCAE9D,8OAAC;4BAAI,WAAU;;8CACV,8OAAC;;sDACE,8OAAC,iIAAA,CAAA,QAAK;4CAAC,SAAQ;sDAAkB;;;;;;sDACjC,8OAAC,iIAAA,CAAA,QAAK;4CAAC,IAAG;4CAAkB,OAAO,mBAAmB,IAAI;4CAAE,UAAU,CAAC,IAAM,sBAAsB,CAAA,OAAQ,CAAC;wDAAE,GAAG,IAAI;wDAAE,MAAM,EAAE,MAAM,CAAC,KAAK;oDAAC,CAAC;;;;;;;;;;;;8CAEjJ,8OAAC;;sDACI,8OAAC,iIAAA,CAAA,QAAK;4CAAC,SAAQ;sDAAsB;;;;;;sDACrC,8OAAC,kIAAA,CAAA,SAAM;4CAAC,OAAO,mBAAmB,UAAU;4CAAE,eAAe,CAAC,QAAU,sBAAsB,CAAA,OAAQ,CAAC;wDAAE,GAAG,IAAI;wDAAE,YAAY;oDAAM,CAAC;;8DACjI,8OAAC,kIAAA,CAAA,gBAAa;oDAAC,IAAG;8DACd,cAAA,8OAAC,kIAAA,CAAA,cAAW;wDAAC,aAAY;;;;;;;;;;;8DAE7B,8OAAC,kIAAA,CAAA,gBAAa;8DACT,UAAU,GAAG,CAAC,CAAA,oBACX,8OAAC,kIAAA,CAAA,aAAU;4DAAc,OAAO,IAAI,EAAE;sEAAG,IAAI,IAAI;2DAAhC,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAM5C,8OAAC,kIAAA,CAAA,eAAY;;8CACR,8OAAC,kIAAA,CAAA,cAAW;oCAAC,OAAO;8CAClB,cAAA,8OAAC,kIAAA,CAAA,SAAM;wCAAC,SAAQ;kDAAU;;;;;;;;;;;8CAE7B,8OAAC,kIAAA,CAAA,SAAM;oCAAC,SAAS;8CAAsB;;;;;;;;;;;;;;;;;;;;;;;0BAOpD,8OAAC,kIAAA,CAAA,SAAM;gBAAC,MAAM;gBAAqB,cAAc;0BAC7C,cAAA,8OAAC,kIAAA,CAAA,gBAAa;;sCACV,8OAAC,kIAAA,CAAA,eAAY;sCACT,cAAA,8OAAC,kIAAA,CAAA,cAAW;0CAAE,kBAAkB,uBAAuB;;;;;;;;;;;sCAE1D,8OAAC;4BAAI,WAAU;;8CACV,8OAAC;;sDACE,8OAAC,iIAAA,CAAA,QAAK;4CAAC,SAAQ;sDAAgB;;;;;;sDAC/B,8OAAC,iIAAA,CAAA,QAAK;4CAAC,IAAG;4CAAgB,OAAO,iBAAiB,IAAI;4CAAE,UAAU,CAAC,IAAM,oBAAoB,CAAA,OAAQ,CAAC;wDAAE,GAAG,IAAI;wDAAE,MAAM,EAAE,MAAM,CAAC,KAAK;oDAAC,CAAC;;;;;;;;;;;;8CAE3I,8OAAC;;sDACI,8OAAC,iIAAA,CAAA,QAAK;4CAAC,SAAQ;sDAAoB;;;;;;sDACnC,8OAAC,kIAAA,CAAA,SAAM;4CAAC,OAAO,iBAAiB,iBAAiB;4CAAE,eAAe,CAAC,QAAU,oBAAoB,CAAA,OAAQ,CAAC;wDAAE,GAAG,IAAI;wDAAE,mBAAmB;oDAAM,CAAC;;8DAC3I,8OAAC,kIAAA,CAAA,gBAAa;oDAAC,IAAG;8DACd,cAAA,8OAAC,kIAAA,CAAA,cAAW;wDAAC,aAAY;;;;;;;;;;;8DAE7B,8OAAC,kIAAA,CAAA,gBAAa;8DACT,UAAU,GAAG,CAAC,CAAA,oBACX,8OAAC,kIAAA,CAAA,aAAU;4DAAc,OAAO,IAAI,EAAE;sEAAG,IAAI,IAAI;2DAAhC,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAM7C,8OAAC,kIAAA,CAAA,eAAY;;8CACR,8OAAC,kIAAA,CAAA,cAAW;oCAAC,OAAO;8CACjB,cAAA,8OAAC,kIAAA,CAAA,SAAM;wCAAC,SAAQ;kDAAU;;;;;;;;;;;8CAE9B,8OAAC,kIAAA,CAAA,SAAM;oCAAC,SAAS;8CAAoB;;;;;;;;;;;;;;;;;;;;;;;0BAMhD,8OAAC,wJAAA,CAAA,yBAAsB;gBACnB,QAAQ;gBACR,SAAS,IAAM,gCAAgC;gBAC/C,WAAW;gBACX,kBAAkB;gBAClB,gBAAgB,YAAY,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,qBAAqB,eAAe,QAAQ;gBAC3F,MAAM,qBAAqB,QAAQ,IAAI;;;;;;0BAI3C,8OAAC,kJAAA,CAAA,mBAAgB;gBACb,QAAQ;gBACR,SAAS;oBACL,oBAAoB;oBACpB,oBAAoB,OAAO,oDAAoD;oBAC/E,uBAAuB,OAAO,gBAAgB;oBAC9C,gBAAgB,OAAO,sBAAsB;gBACjD;gBACA,QAAQ;gBACR,cAAc,kBAAkB,QAAQ;gBACxC,gBAAgB,YAAY,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,qBAAqB,eAAe,QAAQ;gBAC3F,gBAAgB,cAAc;gBAC9B,WAAW,CAAC,CAAC;;;;;;0BAIlB,8OAAC,2IAAA,CAAA,cAAW;gBAAC,MAAM,CAAC,CAAC;gBAAc,cAAc,CAAC,OAAS,CAAC,QAAQ,gBAAgB;0BAC/E,cAAA,8OAAC,2IAAA,CAAA,qBAAkB;;sCACf,8OAAC,2IAAA,CAAA,oBAAiB;;8CACd,8OAAC,2IAAA,CAAA,mBAAgB;8CAAC;;;;;;8CAClB,8OAAC,2IAAA,CAAA,yBAAsB;;wCAAC;wCACT,cAAc,SAAS,aAAa,SAAS,cAAc,SAAS,eAAe,iBAAiB,cAAc,SAAS,aAAa,gBAAgB;wCAAW;wCAAG,cAAc;wCAAK;wCACnM,cAAc,SAAS,cAAc;wCACrC,cAAc,SAAS,gBAAgB;wCACvC,cAAc,SAAS,cAAc;wCACrC,cAAc,SAAS,cAAc;sDACtC,8OAAC;;;;;wCAAI;;;;;;;;;;;;;sCAGb,8OAAC,2IAAA,CAAA,oBAAiB;;8CACd,8OAAC,2IAAA,CAAA,oBAAiB;oCAAC,SAAS,IAAM,gBAAgB;8CAAO;;;;;;8CACzD,8OAAC,2IAAA,CAAA,oBAAiB;oCAAC,WAAU;oCAAyC,SAAS;8CAAkB;;;;;;;;;;;;;;;;;;;;;;;0BAM9G,8OAAC,2IAAA,CAAA,cAAW;gBAAC,MAAM,CAAC,CAAC;gBAAc,cAAc,CAAC,OAAS,CAAC,QAAQ,gBAAgB;0BAC/E,cAAA,8OAAC,2IAAA,CAAA,qBAAkB;;sCACf,8OAAC,2IAAA,CAAA,oBAAiB;;8CACd,8OAAC,2IAAA,CAAA,mBAAgB;8CAAC;;;;;;8CAClB,8OAAC,2IAAA,CAAA,yBAAsB;;wCAAC;wCACoC;sDACzD,8OAAC;sDAAQ,eAAe,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,cAAc,OAAO;gDAAE,QAAQ,4IAAA,CAAA,KAAE;4CAAC,KAAK;;;;;;wCAAY;;;;;;;;;;;;;sCAGzF,8OAAC,2IAAA,CAAA,oBAAiB;;8CACd,8OAAC,2IAAA,CAAA,oBAAiB;oCAAC,SAAS,IAAM,gBAAgB;8CAAO;;;;;;8CACzD,8OAAC,2IAAA,CAAA,oBAAiB;oCAAC,WAAU;oCAAyC,SAAS;8CAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQxH","debugId":null}}]
}