{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/register/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState } from 'react';\nimport Link from 'next/link';\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Loader2 } from 'lucide-react';\n\nexport default function RegisterPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError('Las contraseñas no coinciden.');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    setSuccessMessage(null);\n\n    // --- Placeholder for your Registration Logic ---\n    // Replace this with your actual Firebase or backend registration call\n    // Remember to include email verification sending logic here\n    console.log('Attempting registration with:', { email, password });\n    await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate API call\n    // Example: Handle existing user error\n    // setError('Este correo electrónico ya está en uso.');\n    // Example: Set success message\n    setSuccessMessage('¡Registro exitoso! Revisa tu correo electrónico para verificar tu cuenta.');\n    // Clear form on success (optional)\n    // setEmail('');\n    // setPassword('');\n    // setConfirmPassword('');\n    // --- End Placeholder ---\n\n    setIsLoading(false);\n  };\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center bg-gradient-to-br from-primary/10 via-background to-background px-4 py-12\">\n      <Card className=\"w-full max-w-md shadow-xl\">\n        <CardHeader className=\"text-center\">\n          <CardTitle className=\"text-2xl font-bold tracking-tight text-foreground\">\n            Crear Cuenta\n          </CardTitle>\n          <CardDescription>\n            Completa el formulario para registrarte.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {error && (\n            <p className=\"text-sm font-medium text-destructive bg-destructive/10 p-3 rounded-md\">\n              {error}\n            </p>\n          )}\n          {successMessage && (\n            <p className=\"text-sm font-medium text-green-600 bg-green-100 p-3 rounded-md\">\n              {successMessage}\n            </p>\n          )}\n          {!successMessage && ( // Hide form after success\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\">Correo Electrónico</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"tu@ejemplo.com\"\n                  required\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  disabled={isLoading}\n                  className=\"text-base\"\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"password\">Contraseña</Label>\n                <Input\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"••••••••\"\n                  required\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  disabled={isLoading}\n                  className=\"text-base\"\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"confirmPassword\">Confirmar Contraseña</Label>\n                <Input\n                  id=\"confirmPassword\"\n                  type=\"password\"\n                  placeholder=\"••••••••\"\n                  required\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  disabled={isLoading}\n                  className=\"text-base\"\n                />\n              </div>\n              <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                {isLoading ? (\n                  <Loader2 className=\"animate-spin\" />\n                ) : (\n                  'Registrarse'\n                )}\n              </Button>\n            </form>\n          )}\n        </CardContent>\n        <CardFooter className=\"flex justify-center text-sm\">\n          <p className=\"text-muted-foreground\">\n            ¿Ya tienes una cuenta?{' '}\n            <Link href=\"/login\" className=\"font-medium text-primary hover:underline\">\n              Inicia sesión aquí\n            </Link>\n          </p>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}