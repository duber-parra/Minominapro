{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement, // Changed to HTMLParagraphElement for semantic correctness if it's a heading paragraph\n  React.HTMLAttributes<HTMLHeadingElement> // Kept HTMLHeadingElement for attribute compatibility, adjust if needed\n>(({ className, ...props }, ref) => (\n  <h3 // Changed from div to h3 for semantic meaning, adjust level (h2, h4, etc.) as appropriate\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight text-foreground\", // Changed from text-xl to text-lg and explicitly set text-foreground\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p // Changed from div to p for semantic correctness\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,KAAG,0FAA0F;;QAC5F,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qEACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,IAAE,iDAAiD;;QAClD,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        xs: \"h-7 rounded-md px-2 text-xs\", // Added extra small size\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\", // Changed text-base md:text-sm to just text-sm\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qXACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx <module evaluation>\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,6DACA","debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yCACA","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AlertDialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialog() from the server but AlertDialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialog\",\n);\nexport const AlertDialogAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogAction() from the server but AlertDialogAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogAction\",\n);\nexport const AlertDialogCancel = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogCancel() from the server but AlertDialogCancel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogCancel\",\n);\nexport const AlertDialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogContent() from the server but AlertDialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogContent\",\n);\nexport const AlertDialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogDescription() from the server but AlertDialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogDescription\",\n);\nexport const AlertDialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogFooter() from the server but AlertDialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogFooter\",\n);\nexport const AlertDialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogHeader() from the server but AlertDialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogHeader\",\n);\nexport const AlertDialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogOverlay() from the server but AlertDialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogOverlay\",\n);\nexport const AlertDialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogPortal() from the server but AlertDialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogPortal\",\n);\nexport const AlertDialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogTitle() from the server but AlertDialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogTitle\",\n);\nexport const AlertDialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogTrigger() from the server but AlertDialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,oEACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,oEACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,oEACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,oEACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,oEACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,oEACA","debugId":null}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AlertDialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialog() from the server but AlertDialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialog\",\n);\nexport const AlertDialogAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogAction() from the server but AlertDialogAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogAction\",\n);\nexport const AlertDialogCancel = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogCancel() from the server but AlertDialogCancel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogCancel\",\n);\nexport const AlertDialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogContent() from the server but AlertDialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogContent\",\n);\nexport const AlertDialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogDescription() from the server but AlertDialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogDescription\",\n);\nexport const AlertDialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogFooter() from the server but AlertDialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogFooter\",\n);\nexport const AlertDialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogHeader() from the server but AlertDialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogHeader\",\n);\nexport const AlertDialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogOverlay() from the server but AlertDialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogOverlay\",\n);\nexport const AlertDialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogPortal() from the server but AlertDialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogPortal\",\n);\nexport const AlertDialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogTitle() from the server but AlertDialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogTitle\",\n);\nexport const AlertDialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogTrigger() from the server but AlertDialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,gDACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,gDACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,gDACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,gDACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,gDACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,gDACA","debugId":null}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Dialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call Dialog() from the server but Dialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"Dialog\",\n);\nexport const DialogClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogClose() from the server but DialogClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogClose\",\n);\nexport const DialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogContent() from the server but DialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogContent\",\n);\nexport const DialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogDescription() from the server but DialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogDescription\",\n);\nexport const DialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogFooter() from the server but DialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogFooter\",\n);\nexport const DialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogHeader() from the server but DialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogHeader\",\n);\nexport const DialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogOverlay() from the server but DialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogOverlay\",\n);\nexport const DialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogPortal() from the server but DialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogPortal\",\n);\nexport const DialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTitle() from the server but DialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogTitle\",\n);\nexport const DialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTrigger() from the server but DialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx <module evaluation>\",\n    \"DialogTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,8DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Dialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call Dialog() from the server but Dialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"Dialog\",\n);\nexport const DialogClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogClose() from the server but DialogClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogClose\",\n);\nexport const DialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogContent() from the server but DialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogContent\",\n);\nexport const DialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogDescription() from the server but DialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogDescription\",\n);\nexport const DialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogFooter() from the server but DialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogFooter\",\n);\nexport const DialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogHeader() from the server but DialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogHeader\",\n);\nexport const DialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogOverlay() from the server but DialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogOverlay\",\n);\nexport const DialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogPortal() from the server but DialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogPortal\",\n);\nexport const DialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTitle() from the server but DialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogTitle\",\n);\nexport const DialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTrigger() from the server but DialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/dialog.tsx\",\n    \"DialogTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,0CACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA","debugId":null}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Select = registerClientReference(\n    function() { throw new Error(\"Attempted to call Select() from the server but Select is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"Select\",\n);\nexport const SelectContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectContent() from the server but SelectContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectContent\",\n);\nexport const SelectGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectGroup() from the server but SelectGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectGroup\",\n);\nexport const SelectItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectItem() from the server but SelectItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectItem\",\n);\nexport const SelectLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectLabel() from the server but SelectLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectLabel\",\n);\nexport const SelectScrollDownButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollDownButton() from the server but SelectScrollDownButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectScrollDownButton\",\n);\nexport const SelectScrollUpButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollUpButton() from the server but SelectScrollUpButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectScrollUpButton\",\n);\nexport const SelectSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectSeparator() from the server but SelectSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectSeparator\",\n);\nexport const SelectTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectTrigger() from the server but SelectTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectTrigger\",\n);\nexport const SelectValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectValue() from the server but SelectValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx <module evaluation>\",\n    \"SelectValue\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,8DACA;AAEG,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,8DACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,8DACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA","debugId":null}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Select = registerClientReference(\n    function() { throw new Error(\"Attempted to call Select() from the server but Select is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"Select\",\n);\nexport const SelectContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectContent() from the server but SelectContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectContent\",\n);\nexport const SelectGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectGroup() from the server but SelectGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectGroup\",\n);\nexport const SelectItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectItem() from the server but SelectItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectItem\",\n);\nexport const SelectLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectLabel() from the server but SelectLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectLabel\",\n);\nexport const SelectScrollDownButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollDownButton() from the server but SelectScrollDownButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectScrollDownButton\",\n);\nexport const SelectScrollUpButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectScrollUpButton() from the server but SelectScrollUpButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectScrollUpButton\",\n);\nexport const SelectSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectSeparator() from the server but SelectSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectSeparator\",\n);\nexport const SelectTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectTrigger() from the server but SelectTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectTrigger\",\n);\nexport const SelectValue = registerClientReference(\n    function() { throw new Error(\"Attempted to call SelectValue() from the server but SelectValue is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/select.tsx\",\n    \"SelectValue\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,0CACA;AAEG,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,0CACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,0CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA","debugId":null}},
    {"offset": {"line": 579, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 589, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/LocationSelector.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport type { Location } from '@/types/schedule'; // Assuming type exists\n\ninterface LocationSelectorProps {\n  locations: Location[];\n  selectedLocationId?: string;\n  onLocationChange: (locationId: string) => void;\n}\n\nexport const LocationSelector: React.FC<LocationSelectorProps> = ({\n  locations,\n  selectedLocationId,\n  onLocationChange,\n}) => {\n  return (\n    <Select value={selectedLocationId} onValueChange={onLocationChange}>\n      <SelectTrigger id=\"location-select\">\n        <SelectValue placeholder=\"Selecciona una sede\" />\n      </SelectTrigger>\n      <SelectContent>\n        {locations.map((location) => (\n          <SelectItem key={location.id} value={location.id}>\n            {location.name}\n          </SelectItem>\n        ))}\n      </SelectContent>\n    </Select>\n  );\n};\n\n    "],"names":[],"mappings":";;;;AAEA;;;AASO,MAAM,mBAAoD,CAAC,EAChE,SAAS,EACT,kBAAkB,EAClB,gBAAgB,EACjB;IACC,qBACE,8OAAC,kIAAA,CAAA,SAAM;QAAC,OAAO;QAAoB,eAAe;;0BAChD,8OAAC,kIAAA,CAAA,gBAAa;gBAAC,IAAG;0BAChB,cAAA,8OAAC,kIAAA,CAAA,cAAW;oBAAC,aAAY;;;;;;;;;;;0BAE3B,8OAAC,kIAAA,CAAA,gBAAa;0BACX,UAAU,GAAG,CAAC,CAAC,yBACd,8OAAC,kIAAA,CAAA,aAAU;wBAAmB,OAAO,SAAS,EAAE;kCAC7C,SAAS,IAAI;uBADC,SAAS,EAAE;;;;;;;;;;;;;;;;AAOtC","debugId":null}},
    {"offset": {"line": 642, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/DraggableEmployee.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { useDraggable } from '@dnd-kit/core';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Button } from '@/components/ui/button';\nimport { GripVertical } from 'lucide-react';\nimport type { Employee } from '@/types/schedule'; // Assuming type exists\n\ninterface DraggableEmployeeProps {\n  employee: Employee;\n}\n\nexport const DraggableEmployee: React.FC<DraggableEmployeeProps> = ({ employee }) => {\n  const { attributes, listeners, setNodeRef, transform, isDragging } = useDraggable({\n    id: employee.id, // Use employee ID as the draggable ID\n    data: { type: 'employee', employee }, // Pass employee data\n  });\n\n  const style = {\n    transform: CSS.Translate.toString(transform),\n    opacity: isDragging ? 0.5 : 1,\n    zIndex: isDragging ? 100 : 'auto', // Ensure dragged item is on top\n    cursor: isDragging ? 'grabbing' : 'grab',\n  };\n\n  return (\n    <Button\n      ref={setNodeRef}\n      style={style}\n      variant=\"outline\"\n      className=\"w-full flex items-center justify-between p-2 bg-card hover:bg-muted/50\"\n      {...listeners}\n      {...attributes}\n    >\n      <span>{employee.name}</span>\n      <GripVertical className=\"h-4 w-4 text-muted-foreground\" />\n    </Button>\n  );\n};\n\n    "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;;;;AAOO,MAAM,oBAAsD,CAAC,EAAE,QAAQ,EAAE;IAC9E,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,eAAY,AAAD,EAAE;QAChF,IAAI,SAAS,EAAE;QACf,MAAM;YAAE,MAAM;YAAY;QAAS;IACrC;IAEA,MAAM,QAAQ;QACZ,WAAW,qKAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClC,SAAS,aAAa,MAAM;QAC5B,QAAQ,aAAa,MAAM;QAC3B,QAAQ,aAAa,aAAa;IACpC;IAEA,qBACE,8OAAC,kIAAA,CAAA,SAAM;QACL,KAAK;QACL,OAAO;QACP,SAAQ;QACR,WAAU;QACT,GAAG,SAAS;QACZ,GAAG,UAAU;;0BAEd,8OAAC;0BAAM,SAAS,IAAI;;;;;;0BACpB,8OAAC,sNAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;;;;;;;AAG9B","debugId":null}},
    {"offset": {"line": 704, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/EmployeeList.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { DraggableEmployee } from './DraggableEmployee'; // Assuming DraggableEmployee component exists\nimport type { Employee } from '@/types/schedule'; // Assuming type exists\nimport { Users } from 'lucide-react';\n\ninterface EmployeeListProps {\n  employees: Employee[];\n}\n\nexport const EmployeeList: React.FC<EmployeeListProps> = ({ employees }) => {\n  return (\n    <Card className=\"h-full\"> {/* Allow card to take full height */}\n      <CardHeader>\n         <CardTitle className=\"text-lg font-medium flex items-center gap-2\">\n             <Users className=\"h-5 w-5 text-muted-foreground\" />\n             Colaboradores Disponibles ({employees.length})\n         </CardTitle>\n      </CardHeader>\n       <CardContent className=\"space-y-3 overflow-y-auto max-h-[calc(100vh-200px)]\"> {/* Make content scrollable */}\n        {employees.length > 0 ? (\n          employees.map((employee) => (\n            <DraggableEmployee key={employee.id} employee={employee} />\n          ))\n        ) : (\n          <p className=\"text-sm text-muted-foreground text-center pt-4 italic\">\n            No hay colaboradores para esta sede.\n          </p>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\n    "],"names":[],"mappings":";;;;AAEA;AACA,qQAAyD,8CAA8C;AAEvG;;;;;AAMO,MAAM,eAA4C,CAAC,EAAE,SAAS,EAAE;IACrE,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;YAAS;0BACvB,8OAAC,gIAAA,CAAA,aAAU;0BACR,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;;sCACjB,8OAAC,oMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;wBAAkC;wBACvB,UAAU,MAAM;wBAAC;;;;;;;;;;;;0BAGnD,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;oBAAsD;oBAC3E,UAAU,MAAM,GAAG,IAClB,UAAU,GAAG,CAAC,CAAC,yBACb,8OAAC,mJAAA,CAAA,oBAAiB;4BAAmB,UAAU;2BAAvB,SAAS,EAAE;;;;kDAGrC,8OAAC;wBAAE,WAAU;kCAAwD;;;;;;;;;;;;;;;;;;AAO/E","debugId":null}},
    {"offset": {"line": 782, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ShiftCard.tsx"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Trash2, Clock } from 'lucide-react';\nimport type { ShiftAssignment } from '@/types/schedule'; // Assuming type exists\n\ninterface ShiftCardProps {\n  assignment: ShiftAssignment;\n  onRemove: () => void;\n}\n\nexport const ShiftCard: React.FC<ShiftCardProps> = ({ assignment, onRemove }) => {\n  // Add useSortable hook here if making items within a column sortable\n  // const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ id: assignment.id });\n  // const style = { transform: CSS.Transform.toString(transform), transition };\n\n  return (\n     <Card\n        // ref={setNodeRef} // For sortable\n        // style={style} // For sortable\n        className=\"bg-background border shadow-sm\"\n        // {...attributes} // For sortable\n        // {...listeners} // For sortable\n     >\n       <CardContent className=\"p-3 flex items-center justify-between\">\n         <div className=\"flex-grow min-w-0\">\n             <p className=\"text-sm font-medium truncate\">{assignment.employee.name}</p>\n             <p className=\"text-xs text-muted-foreground flex items-center gap-1\">\n                 <Clock className=\"h-3 w-3\" />\n                 {assignment.startTime} - {assignment.endTime}\n                 {assignment.includeBreak && assignment.breakStartTime && assignment.breakEndTime && (\n                    <span className=\"ml-1\">(D: {assignment.breakStartTime}-{assignment.breakEndTime})</span>\n                 )}\n             </p>\n         </div>\n         <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7 text-destructive ml-2\" onClick={onRemove}>\n           <Trash2 className=\"h-4 w-4\" />\n         </Button>\n       </CardContent>\n     </Card>\n  );\n};"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAAA;;;;;AAQO,MAAM,YAAsC,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE;IAC1E,qEAAqE;IACrE,2GAA2G;IAC3G,8EAA8E;IAE9E,qBACG,8OAAC,gIAAA,CAAA,OAAI;QACF,mCAAmC;QACnC,gCAAgC;QAChC,WAAU;kBAIX,cAAA,8OAAC,gIAAA,CAAA,cAAW;YAAC,WAAU;;8BACrB,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAE,WAAU;sCAAgC,WAAW,QAAQ,CAAC,IAAI;;;;;;sCACrE,8OAAC;4BAAE,WAAU;;8CACT,8OAAC,oMAAA,CAAA,QAAK;oCAAC,WAAU;;;;;;gCAChB,WAAW,SAAS;gCAAC;gCAAI,WAAW,OAAO;gCAC3C,WAAW,YAAY,IAAI,WAAW,cAAc,IAAI,WAAW,YAAY,kBAC7E,8OAAC;oCAAK,WAAU;;wCAAO;wCAAK,WAAW,cAAc;wCAAC;wCAAE,WAAW,YAAY;wCAAC;;;;;;;;;;;;;;;;;;;8BAI3F,8OAAC,kIAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAQ,MAAK;oBAAO,WAAU;oBAAgC,SAAS;8BACrF,cAAA,8OAAC,0MAAA,CAAA,SAAM;wBAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;AAK7B","debugId":null}},
    {"offset": {"line": 890, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/DepartmentColumn.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { useDroppable } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Plus, Trash2 } from 'lucide-react';\nimport type { Department, ShiftAssignment } from '@/types/schedule'; // Assuming types exist\nimport { ShiftCard } from './ShiftCard'; // Assuming ShiftCard component exists\n\ninterface DepartmentColumnProps {\n  department: Department;\n  assignments: ShiftAssignment[];\n  onRemoveShift: (departmentId: string, assignmentId: string) => void;\n  // onAddShift: (departmentId: string) => void; // Might be needed for '+' button logic\n}\n\nexport const DepartmentColumn: React.FC<DepartmentColumnProps> = ({\n  department,\n  assignments,\n  onRemoveShift,\n  // onAddShift,\n}) => {\n  const { setNodeRef, isOver } = useDroppable({\n    id: department.id, // Use department ID as the droppable ID\n  });\n\n  const style = {\n    // Highlight when dragging over\n    backgroundColor: isOver ? 'hsl(var(--accent)/0.1)' : undefined,\n    borderColor: isOver ? 'hsl(var(--accent))' : undefined,\n    borderWidth: isOver ? '2px' : '1px',\n    borderStyle: isOver ? 'dashed' : 'solid',\n    minHeight: '200px', // Ensure columns have a minimum height\n    transition: 'background-color 0.2s ease, border-color 0.2s ease', // Smooth transition\n  };\n\n  return (\n    <Card ref={setNodeRef} style={style} className=\"flex flex-col h-full\">\n      <CardHeader className=\"flex flex-row items-center justify-between pb-2 pt-4 px-4\">\n         <CardTitle className=\"text-lg font-medium flex items-center gap-2\">\n             {department.icon && <department.icon className=\"h-4 w-4 text-muted-foreground\" />}\n             {department.name} ({assignments.length})\n         </CardTitle>\n        {/* Add shift button - Logic needed */}\n        {/* <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={() => onAddShift(department.id)}>\n          <Plus className=\"h-4 w-4\" />\n        </Button> */}\n      </CardHeader>\n      <CardContent className=\"flex-grow p-4 space-y-3 overflow-y-auto\">\n        {/* Use SortableContext if items within the column need to be sortable */}\n        {/* <SortableContext items={assignments.map(a => a.id)} strategy={verticalListSortingStrategy}> */}\n        {assignments.length > 0 ? (\n          assignments.map((assignment) => (\n             <ShiftCard\n                 key={assignment.id}\n                 assignment={assignment}\n                 onRemove={() => onRemoveShift(department.id, assignment.id)}\n             />\n          ))\n        ) : (\n          <p className=\"text-sm text-muted-foreground text-center pt-4 italic\">\n            Arrastra un colaborador aquí o usa '+'\n          </p>\n        )}\n        {/* </SortableContext> */}\n      </CardContent>\n    </Card>\n  );\n};\n\n    "],"names":[],"mappings":";;;;AAEA;AAEA;AAIA,qPAAyC,sCAAsC;;;;;AASxE,MAAM,mBAAoD,CAAC,EAChE,UAAU,EACV,WAAW,EACX,aAAa,EAEd;IACC,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,eAAY,AAAD,EAAE;QAC1C,IAAI,WAAW,EAAE;IACnB;IAEA,MAAM,QAAQ;QACZ,+BAA+B;QAC/B,iBAAiB,SAAS,2BAA2B;QACrD,aAAa,SAAS,uBAAuB;QAC7C,aAAa,SAAS,QAAQ;QAC9B,aAAa,SAAS,WAAW;QACjC,WAAW;QACX,YAAY;IACd;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,KAAK;QAAY,OAAO;QAAO,WAAU;;0BAC7C,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;0BACnB,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;;wBAChB,WAAW,IAAI,kBAAI,8OAAC,WAAW,IAAI;4BAAC,WAAU;;;;;;wBAC9C,WAAW,IAAI;wBAAC;wBAAG,YAAY,MAAM;wBAAC;;;;;;;;;;;;0BAO9C,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;0BAGpB,YAAY,MAAM,GAAG,IACpB,YAAY,GAAG,CAAC,CAAC,2BACd,8OAAC,2IAAA,CAAA,YAAS;wBAEN,YAAY;wBACZ,UAAU,IAAM,cAAc,WAAW,EAAE,EAAE,WAAW,EAAE;uBAFrD,WAAW,EAAE;;;;8CAMzB,8OAAC;oBAAE,WAAU;8BAAwD;;;;;;;;;;;;;;;;;AAQ/E","debugId":null}},
    {"offset": {"line": 981, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ScheduleView.tsx"],"sourcesContent":["\nimport React from 'react';\nimport type { Department, ScheduleData } from '@/types/schedule'; // Assuming types exist\nimport { DepartmentColumn } from './DepartmentColumn'; // Assuming DepartmentColumn component exists\n\ninterface ScheduleViewProps {\n  departments: Department[];\n  scheduleData: ScheduleData; // Contains assignments: { [deptId]: ShiftAssignment[] }\n  onRemoveShift: (departmentId: string, assignmentId: string) => void;\n}\n\nexport const ScheduleView: React.FC<ScheduleViewProps> = ({ departments, scheduleData, onRemoveShift }) => {\n  // Calculate the number of columns needed based on departments\n  const gridColsClass = `grid-cols-${departments.length <= 4 ? departments.length : 4}`; // Max 4 cols for simplicity, adjust as needed\n  const dynamicGridClass = `grid gap-4 lg:grid-cols-${Math.min(departments.length, 4)} xl:grid-cols-${Math.min(departments.length, 5)}`; // More responsive approach\n\n  return (\n    <div className={`grid grid-cols-1 sm:grid-cols-2 ${dynamicGridClass} gap-4`}>\n      {departments.map((department) => (\n        <DepartmentColumn\n          key={department.id}\n          department={department}\n          assignments={scheduleData.assignments[department.id] || []}\n          onRemoveShift={onRemoveShift} // Pass down the handler\n          // onAddShift={() => {}} // Placeholder for '+' button logic if needed\n        />\n      ))}\n    </div>\n  );\n};\n\n    "],"names":[],"mappings":";;;;AAGA,mQAAuD,6CAA6C;;;AAQ7F,MAAM,eAA4C,CAAC,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE;IACpG,8DAA8D;IAC9D,MAAM,gBAAgB,CAAC,UAAU,EAAE,YAAY,MAAM,IAAI,IAAI,YAAY,MAAM,GAAG,GAAG,EAAE,8CAA8C;IACrI,MAAM,mBAAmB,CAAC,wBAAwB,EAAE,KAAK,GAAG,CAAC,YAAY,MAAM,EAAE,GAAG,cAAc,EAAE,KAAK,GAAG,CAAC,YAAY,MAAM,EAAE,IAAI,EAAE,2BAA2B;IAElK,qBACE,8OAAC;QAAI,WAAW,CAAC,gCAAgC,EAAE,iBAAiB,MAAM,CAAC;kBACxE,YAAY,GAAG,CAAC,CAAC,2BAChB,8OAAC,kJAAA,CAAA,mBAAgB;gBAEf,YAAY;gBACZ,aAAa,aAAa,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE;gBAC1D,eAAe;eAHV,WAAW,EAAE;;;;;;;;;;AAS5B","debugId":null}},
    {"offset": {"line": 1015, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ShiftDetailModal.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ShiftDetailModal = registerClientReference(\n    function() { throw new Error(\"Attempted to call ShiftDetailModal() from the server but ShiftDetailModal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/schedule/ShiftDetailModal.tsx <module evaluation>\",\n    \"ShiftDetailModal\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,8EACA","debugId":null}},
    {"offset": {"line": 1029, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ShiftDetailModal.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ShiftDetailModal = registerClientReference(\n    function() { throw new Error(\"Attempted to call ShiftDetailModal() from the server but ShiftDetailModal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/schedule/ShiftDetailModal.tsx\",\n    \"ShiftDetailModal\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,0DACA","debugId":null}},
    {"offset": {"line": 1043, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1061, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/schedule/page.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { DndContext, DragEndEvent, closestCenter } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Plus, Trash2, Edit } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\n\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter, DialogDescription, DialogTrigger as DialogPrimitive, DialogClose } from \"@/components/ui/dialog\";\n\nimport { LocationSelector } from '@/components/schedule/LocationSelector';\nimport { EmployeeList } from '@/components/schedule/EmployeeList';\nimport { ScheduleView } from '@/components/schedule/ScheduleView';\nimport { ShiftDetailModal } from '@/components/schedule/ShiftDetailModal';\n\nimport type { Location, Department, Employee, ShiftAssignment, ScheduleData } from '@/types/schedule'; // Assuming types exist\nimport { v4 as uuidv4 } from 'uuid';\n\nconst initialLocations: Location[] = [\n  { id: 'loc-1', name: 'Sede Principal' },\n  { id: 'loc-2', name: 'Sede Norte' },\n  { id: 'loc-3', name: 'Sede Occidente' },\n];\n\nconst initialDepartments: Department[] = [\n  { id: 'dep-1', name: 'Cocina', locationId: 'loc-1', icon: Plus },\n  { id: 'dep-2', name: 'Salón', locationId: 'loc-1', icon: Trash2 },\n  { id: 'dep-3', name: 'Caja & Barra', locationId: 'loc-2', icon: Edit },\n  { id: 'dep-4', name: 'Bodega', locationId: 'loc-2', icon: Plus },\n  { id: 'dep-5', name: 'Cocina', locationId: 'loc-3', icon: Trash2 },\n  { id: 'dep-6', name: 'Salón', locationId: 'loc-3', icon: Edit },\n];\n\nconst initialEmployees: Employee[] = [\n  { id: 'emp-1', name: 'Carlos Pérez', primaryLocationId: 'loc-1' },\n  { id: 'emp-2', name: 'Ana Rodriguez', primaryLocationId: 'loc-1' },\n  { id: 'emp-3', name: 'Luis Gómez', primaryLocationId: 'loc-2' },\n  { id: 'emp-4', name: 'Sofía Vargas', primaryLocationId: 'loc-2' },\n  { id: 'emp-5', name: 'Diego Torres', primaryLocationId: 'loc-3' },\n  { id: 'emp-6', name: 'Isabel Castro', primaryLocationId: 'loc-3' },\n];\n\nexport default function SchedulePage() {\n  const [locations, setLocations] = useState<Location[]>(initialLocations);\n  const [departments, setDepartments] = useState<Department[]>(initialDepartments);\n  const [employees, setEmployees] = useState<Employee[]>(initialEmployees);\n  const [scheduleData, setScheduleData] = useState<ScheduleData>({\n    date: new Date(),\n    assignments: {},\n  });\n\n  const [selectedLocationId, setSelectedLocationId] = useState<string>(initialLocations[0].id);\n  const [isShiftModalOpen, setIsShiftModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState<Employee | null>(null);\n  const [selectedDepartmentId, setSelectedDepartmentId] = useState<string | null>(null);\n  const [editingShiftDetails, setEditingShiftDetails] = useState<{ assignmentId: string; details: any } | null>(null); // For edit workflow\n\n  // State for managing Location, Department, and Employee CRUD modals\n  const [isLocationModalOpen, setIsLocationModalOpen] = useState(false);\n  const [isDepartmentModalOpen, setIsDepartmentModalOpen] = useState(false);\n  const [isEmployeeModalOpen, setIsEmployeeModalOpen] = useState(false);\n  const [selectedLocation, setSelectedLocation] = useState<Location | null>(null); // State for editing location\n    const [selectedDepartment, setSelectedDepartment] = useState<Department | null>(null); // State for editing departments\n    const [selectedEmployeeItem, setSelectedEmployeeItem] = useState<Employee | null>(null); // State for editing departments\n\n  const handleLocationChange = (locationId: string) => {\n    setSelectedLocationId(locationId);\n  };\n\n  const filteredEmployees = employees.filter(emp => emp.primaryLocationId === selectedLocationId);\n\n  const filteredDepartments = departments.filter(dep => dep.locationId === selectedLocationId);\n\n  const handleOpenShiftModal = (employee: Employee, departmentId: string) => {\n    setSelectedEmployee(employee);\n    setSelectedDepartmentId(departmentId);\n    setIsShiftModalOpen(true);\n  };\n\n  const handleAddShift = (details: any) => {\n    if (!selectedEmployee || !selectedDepartmentId) return;\n\n    const newAssignment: ShiftAssignment = {\n      id: uuidv4(),\n      employee: selectedEmployee,\n      startTime: details.startTime,\n      endTime: details.endTime,\n      includeBreak: details.includeBreak || false,\n      breakStartTime: details.breakStartTime || undefined,\n      breakEndTime: details.breakEndTime || undefined,\n    };\n\n    setScheduleData(prevData => {\n      const departmentAssignments = prevData.assignments[selectedDepartmentId] || [];\n      return {\n        ...prevData,\n        assignments: {\n          ...prevData.assignments,\n          [selectedDepartmentId]: [...departmentAssignments, newAssignment],\n        },\n      };\n    });\n    setIsShiftModalOpen(false);\n  };\n\n    const handleRemoveShift = (departmentId: string, assignmentId: string) => {\n        setScheduleData(prevData => {\n            const departmentAssignments = (prevData.assignments[departmentId] || []).filter(a => a.id !== assignmentId);\n            return {\n                ...prevData,\n                assignments: {\n                    ...prevData.assignments,\n                    [departmentId]: departmentAssignments,\n                },\n            };\n        });\n    };\n\n  const handleDragEnd = (event: DragEndEvent) => {\n    const { over, draggable } = event;\n    if (!over) return;\n\n    const employeeId = draggable as string;\n    const departmentId = over.id as string;\n\n    const employee = employees.find(emp => emp.id === employeeId);\n    if (!employee) return;\n\n    handleOpenShiftModal(employee, departmentId);\n  };\n\n  const handleOpenLocationModal = (location: Location | null) => {\n        setSelectedLocation(location); // Set location to be edited or null for new\n        setIsLocationModalOpen(true);\n    };\n\n    const handleOpenDepartmentModal = (department: Department | null) => {\n        setSelectedDepartment(department); // Set department to be edited or null for new\n        setIsDepartmentModalOpen(true);\n    };\n\n    const handleOpenEmployeeModal = (employee: Employee | null) => {\n        setSelectedEmployeeItem(employee); // Set employee to be edited or null for new\n        setIsEmployeeModalOpen(true);\n    };\n\n\n  return (\n    <main className=\"container mx-auto p-4 md:p-8 max-w-7xl\">\n      <h1 className=\"text-3xl font-bold text-center mb-8 text-foreground\">Planificador de Horarios</h1>\n\n      {/* Main content area with 7 columns on large screens */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-start\">\n\n                {/* Column 1: Configuration */}\n                 <div className=\"lg:col-span-1\">\n                     <Card>\n                         <CardHeader>\n                             <CardTitle>Configuración</CardTitle>\n                             <CardDescription>Administrar sedes, departamentos y colaboradores.</CardDescription>\n                         </CardHeader>\n                         <CardContent className=\"space-y-3\">\n                             <div className=\"space-y-1\">\n                                 <Label htmlFor=\"location-select\" className=\"text-xs font-medium text-muted-foreground\">Sede</Label>\n                                 <LocationSelector\n                                     locations={locations}\n                                     selectedLocationId={selectedLocationId}\n                                     onLocationChange={handleLocationChange}\n                                 />\n                             </div>\n                             <div className=\"flex flex-col space-y-2\">\n                                 <h4 className=\"text-sm font-semibold\">Sedes</h4>\n                                 {locations.map((loc) => (\n                                     <div key={loc.id} className=\"flex items-center justify-between\">\n                                         {loc.name}\n                                         <div className=\"space-x-1\">\n                                             <Button variant=\"ghost\" size=\"icon\" className=\"h-5 w-5\" onClick={() => handleOpenLocationModal(loc)}><Edit className=\"h-3 w-3\" /></Button> {/* Reduced size */}\n                                             <AlertDialog>\n                                                 <AlertDialogTrigger asChild>\n                                                     <Button variant=\"ghost\" size=\"icon\" className=\"h-5 w-5 text-destructive\" onClick={() => {}}><Trash2 className=\"h-3 w-3\" /></Button> {/* Reduced size */}\n                                                 </AlertDialogTrigger>\n                                                  {/* Delete Confirmation Dialog */}\n                                                 <AlertDialogContent>\n                                                     <AlertDialogHeader>\n                                                         <AlertDialogTitle>¿Eliminar Sede?</AlertDialogTitle>\n                                                         <AlertDialogDescription>¿Estás seguro de eliminar esta sede? Esta acción es irreversible.</AlertDialogDescription>\n                                                     </AlertDialogHeader>\n                                                     <AlertDialogFooter>\n                                                         <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                                                         <AlertDialogAction className=\"bg-red-500 text-white\">Eliminar</AlertDialogAction>\n                                                     </AlertDialogFooter>\n                                                 </AlertDialogContent>\n                                             </AlertDialog>\n                                         </div>\n                                     </div>\n                                 ))}\n                                 <Button variant=\"outline\" size=\"sm\" onClick={() => handleOpenLocationModal(null)}>Agregar Sede</Button>\n                             </div>\n                             <div className=\"flex flex-col space-y-2\">\n                                 <h4 className=\"text-sm font-semibold\">Departamentos</h4>\n                                 {filteredDepartments.map((dep) => (\n                                     <div key={dep.id} className=\"flex items-center justify-between\">\n                                         {dep.name}\n                                         <div className=\"space-x-1\">\n                                             <Button variant=\"ghost\" size=\"icon\" className=\"h-5 w-5\" onClick={() => handleOpenDepartmentModal(dep)}><Edit className=\"h-3 w-3\" /></Button> {/* Reduced size */}\n                                             <AlertDialog>\n                                                 <AlertDialogTrigger asChild>\n                                                     <Button variant=\"ghost\" size=\"icon\" className=\"h-5 w-5 text-destructive\" onClick={() => {}}><Trash2 className=\"h-3 w-3\" /></Button> {/* Reduced size */}\n                                                 </AlertDialogTrigger>\n                                                  {/* Delete Confirmation Dialog */}\n                                                 <AlertDialogContent>\n                                                     <AlertDialogHeader>\n                                                         <AlertDialogTitle>¿Eliminar Departamento?</AlertDialogTitle>\n                                                         <AlertDialogDescription>¿Estás seguro de eliminar este departamento? Esta acción es irreversible.</AlertDialogDescription>\n                                                     </AlertDialogHeader>\n                                                     <AlertDialogFooter>\n                                                         <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                                                         <AlertDialogAction className=\"bg-red-500 text-white\">Eliminar</AlertDialogAction>\n                                                     </AlertDialogFooter>\n                                                 </AlertDialogContent>\n                                             </AlertDialog>\n                                         </div>\n                                     </div>\n                                 ))}\n                                 <Button variant=\"outline\" size=\"sm\" onClick={() => handleOpenDepartmentModal(null)}>Agregar Departamento</Button>\n                             </div>\n                             <div className=\"flex flex-col space-y-2\">\n                                 <h4 className=\"text-sm font-semibold\">Colaboradores</h4>\n                                 {filteredEmployees.map((employee) => (\n                                     <div key={employee.id} className=\"flex items-center justify-between\">\n                                         {employee.name}\n                                         <div className=\"space-x-1\">\n                                             <Button variant=\"ghost\" size=\"icon\" className=\"h-5 w-5\" onClick={() => handleOpenEmployeeModal(employee)}><Edit className=\"h-3 w-3\" /></Button> {/* Reduced size */}\n                                             <AlertDialog>\n                                                 <AlertDialogTrigger asChild>\n                                                     <Button variant=\"ghost\" size=\"icon\" className=\"h-5 w-5 text-destructive\" onClick={() => {}}><Trash2 className=\"h-3 w-3\" /></Button> {/* Reduced size */}\n                                                 </AlertDialogTrigger>\n                                                  {/* Delete Confirmation Dialog */}\n                                                 <AlertDialogContent>\n                                                     <AlertDialogHeader>\n                                                         <AlertDialogTitle>¿Eliminar Colaborador?</AlertDialogTitle>\n                                                         <AlertDialogDescription>¿Estás seguro de eliminar este colaborador? Esta acción es irreversible.</AlertDialogDescription>\n                                                     </AlertDialogHeader>\n                                                     <AlertDialogFooter>\n                                                         <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                                                         <AlertDialogAction className=\"bg-red-500 text-white\">Eliminar</AlertDialogAction>\n                                                     </AlertDialogFooter>\n                                                 </AlertDialogContent>\n                                             </AlertDialog>\n                                         </div>\n                                     </div>\n                                 ))}\n                                 <Button variant=\"outline\" size=\"sm\" onClick={() => handleOpenEmployeeModal(null)}>Agregar Colaborador</Button>\n                             </div>\n                         </CardContent>\n                     </Card>\n                 </div>\n\n        {/* Column 2: Employee List */}\n        <div className=\"lg:col-span-1\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Colaboradores</CardTitle>\n              <CardDescription>Arrastra colaboradores a los departamentos para asignar turnos.</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <EmployeeList employees={filteredEmployees} />\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Column 3: Schedule View */}\n        <div className=\"lg:col-span-1\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Vista de Horario</CardTitle>\n              <CardDescription>Arrastra colaboradores a los departamentos para asignar turnos.</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\n                <ScheduleView\n                  departments={filteredDepartments}\n                  scheduleData={scheduleData}\n                  onRemoveShift={handleRemoveShift}\n                />\n              </DndContext>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      {/* Shift Detail Modal */}\n      <ShiftDetailModal\n        isOpen={isShiftModalOpen}\n        onClose={() => setIsShiftModalOpen(false)}\n        onSave={handleAddShift}\n        employee={selectedEmployee}\n        departmentId={selectedDepartmentId}\n        editingShiftDetails={editingShiftDetails}\n      />\n\n            {/* Location Modal */}\n            <Dialog open={isLocationModalOpen} onOpenChange={setIsLocationModalOpen}>\n                <DialogPrimitive.DialogTrigger asChild>\n                   {/* Intentionally left blank */}\n                </DialogPrimitive.DialogTrigger>\n                <DialogContent className=\"sm:max-w-[425px]\">\n                    <DialogHeader>\n                        <DialogTitle>{selectedLocation ? 'Editar Sede' : 'Agregar Sede'}</DialogTitle>\n                        <DialogDescription>\n                            {selectedLocation ? 'Editar los detalles de la sede.' : 'Agregar una nueva sede.'}\n                        </DialogDescription>\n                    </DialogHeader>\n                    <div className=\"grid gap-4 py-4\">\n                        <div className=\"grid grid-cols-4 items-center gap-4\">\n                            <Label htmlFor=\"name\" className=\"text-right\">\n                                Nombre\n                            </Label>\n                            <Input id=\"name\" value={selectedLocation?.name || ''} className=\"col-span-3\" />\n                        </div>\n                    </div>\n                    <DialogFooter>\n                        <Button type=\"submit\">Guardar</Button>\n                    </DialogFooter>\n                </DialogContent>\n            </Dialog>\n\n            {/* Department Modal */}\n            <Dialog open={isDepartmentModalOpen} onOpenChange={setIsDepartmentModalOpen}>\n                <DialogPrimitive.DialogTrigger asChild>\n                  {/* Intentionally left blank */}\n                </DialogPrimitive.DialogTrigger>\n                <DialogContent className=\"sm:max-w-[425px]\">\n                    <DialogHeader>\n                        <DialogTitle>{selectedDepartment ? 'Editar Departamento' : 'Agregar Departamento'}</DialogTitle>\n                        <DialogDescription>\n                            {selectedDepartment ? 'Editar los detalles del departamento.' : 'Agregar un nuevo departamento.'}\n                        </DialogDescription>\n                    </DialogHeader>\n                    <div className=\"grid gap-4 py-4\">\n                        <div className=\"grid grid-cols-4 items-center gap-4\">\n                            <Label htmlFor=\"name\" className=\"text-right\">\n                                Nombre\n                            </Label>\n                            <Input id=\"name\" value={selectedDepartment?.name || ''} className=\"col-span-3\" />\n                        </div>\n                    </div>\n                    <DialogFooter>\n                        <Button type=\"submit\">Guardar</Button>\n                    </DialogFooter>\n                </DialogContent>\n            </Dialog>\n\n            {/* Employee Modal */}\n            <Dialog open={isEmployeeModalOpen} onOpenChange={setIsEmployeeModalOpen}>\n                <DialogPrimitive.DialogTrigger asChild>\n                    {/* Intentionally left blank */}\n                </DialogPrimitive.DialogTrigger>\n                <DialogContent className=\"sm:max-w-[425px]\">\n                    <DialogHeader>\n                        <DialogTitle>{selectedEmployeeItem ? 'Editar Colaborador' : 'Agregar Colaborador'}</DialogTitle>\n                        <DialogDescription>\n                            {selectedEmployeeItem ? 'Editar los detalles del colaborador.' : 'Agregar un nuevo colaborador.'}\n                        </DialogDescription>\n                    </DialogHeader>\n                    <div className=\"grid gap-4 py-4\">\n                        <div className=\"grid grid-cols-4 items-center gap-4\">\n                            <Label htmlFor=\"name\" className=\"text-right\">\n                                Nombre\n                            </Label>\n                            <Input id=\"name\" value={selectedEmployeeItem?.name || ''} className=\"col-span-3\" />\n                        </div>\n                    </div>\n                    <DialogFooter>\n                        <Button type=\"submit\">Guardar</Button>\n                    </DialogFooter>\n                </DialogContent>\n            </Dialog>\n    </main>\n  );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}}]
}