{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 326, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger // Export DialogTrigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close // Export DialogClose\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      {/* Removed the explicit close button with X icon */}\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose, // Export DialogClose (still needed for programmatic closing)\n  DialogTrigger, // Export DialogTrigger\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAGA;AANA;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,mKAAwB,uBAAuB;AAA/C,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,mKAAsB,qBAAqB;AAA3C,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;0BAER;;;;;;;;;;;;AAKP,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker, type DateFormatter, type DayModifiers, type Matcher } from \"react-day-picker\" // Added DayModifiers, Matcher\nimport type { Locale } from 'date-fns'; // Import Locale type\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\n// --- Added modifier props ---\nexport type CalendarProps = React.ComponentProps<typeof DayPicker> & {\n    locale?: Locale; // Add locale prop\n    modifiers?: DayModifiers; // Allow passing custom modifiers\n    modifiersClassNames?: Record<string, string>; // Allow passing class names for modifiers\n}\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  locale, // Destructure locale\n  modifiers, // Destructure modifiers\n  modifiersClassNames, // Destructure modifier class names\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      locale={locale} // Pass locale to DayPicker\n      modifiers={modifiers} // Pass modifiers\n      modifiersClassNames={{\n          // Adjusted holiday style: use primary text color, medium font weight, and primary border\n          holiday: 'text-primary font-medium border border-primary',\n          ...modifiersClassNames // Merge with any passed modifier classes\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAIA;AAAA;AACA,kRAAkG,8BAA8B;AAGhI;AACA;AARA;;;;;;AAiBA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,MAAM,EACN,SAAS,EACT,mBAAmB,EACnB,GAAG,OACW;IACd,qBACE,8OAAC,8JAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,8OAAC,sNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACA,QAAQ;QACR,WAAW;QACX,qBAAqB;YACjB,yFAAyF;YACzF,SAAS;YACT,GAAG,oBAAoB,yCAAyC;QACpE;QACC,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50', // Removed text-base and md:text-sm for consistency\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 588, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 786, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/LocationSelector.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport type { Location } from '@/types/schedule'; // Assuming type exists\n\ninterface LocationSelectorProps {\n  locations: Location[];\n  selectedLocationId?: string;\n  onLocationChange: (locationId: string) => void;\n}\n\nexport const LocationSelector: React.FC<LocationSelectorProps> = ({\n  locations,\n  selectedLocationId,\n  onLocationChange,\n}) => {\n  return (\n    <Select value={selectedLocationId} onValueChange={onLocationChange}>\n      <SelectTrigger id=\"location-select\">\n        <SelectValue placeholder=\"Selecciona una sede\" />\n      </SelectTrigger>\n      <SelectContent>\n        {locations.map((location) => (\n          <SelectItem key={location.id} value={location.id}>\n            {location.name}\n          </SelectItem>\n        ))}\n      </SelectContent>\n    </Select>\n  );\n};\n\n    "],"names":[],"mappings":";;;;AAEA;;;AASO,MAAM,mBAAoD,CAAC,EAChE,SAAS,EACT,kBAAkB,EAClB,gBAAgB,EACjB;IACC,qBACE,8OAAC,kIAAA,CAAA,SAAM;QAAC,OAAO;QAAoB,eAAe;;0BAChD,8OAAC,kIAAA,CAAA,gBAAa;gBAAC,IAAG;0BAChB,cAAA,8OAAC,kIAAA,CAAA,cAAW;oBAAC,aAAY;;;;;;;;;;;0BAE3B,8OAAC,kIAAA,CAAA,gBAAa;0BACX,UAAU,GAAG,CAAC,CAAC,yBACd,8OAAC,kIAAA,CAAA,aAAU;wBAAmB,OAAO,SAAS,EAAE;kCAC7C,SAAS,IAAI;uBADC,SAAS,EAAE;;;;;;;;;;;;;;;;AAOtC","debugId":null}},
    {"offset": {"line": 839, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/DraggableEmployee.tsx"],"sourcesContent":["\n'use client'; // Add this directive\n\nimport React, { useState, useEffect } from 'react'; // Import useState and useEffect\nimport { useDraggable } from '@dnd-kit/core';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Button } from '@/components/ui/button';\nimport { GripVertical } from 'lucide-react';\nimport type { Employee } from '@/types/schedule'; // Assuming type exists\nimport { cn } from '@/lib/utils'; // Import cn\nimport { Skeleton } from '@/components/ui/skeleton'; // Import Skeleton\n\ninterface DraggableEmployeeProps {\n  employee: Employee;\n}\n\nexport const DraggableEmployee: React.FC<DraggableEmployeeProps> = ({ employee }) => {\n  const [isClient, setIsClient] = useState(false); // State to track client-side rendering\n\n  useEffect(() => {\n    setIsClient(true); // Set to true only on the client after initial render\n  }, []);\n\n  const { attributes, listeners, setNodeRef, transform, isDragging } = useDraggable({\n    id: employee.id, // Use employee ID as the draggable ID\n    data: { type: 'employee', employee }, // Pass employee data\n    disabled: !isClient, // Disable dragging until client-side hydration is complete\n  });\n\n  const style = {\n    transform: CSS.Translate.toString(transform),\n    opacity: isDragging ? 0.5 : 1,\n    zIndex: isDragging ? 100 : 'auto', // Ensure dragged item is on top\n    cursor: isDragging ? 'grabbing' : (isClient ? 'grab' : 'default'), // Set cursor only on client\n  };\n\n  // Render a placeholder during SSR and initial hydration\n  if (!isClient) {\n    return (\n      <div className=\"flex items-center justify-between p-2 border rounded-md bg-muted h-10\">\n           <Skeleton className=\"h-4 w-3/4\" />\n           <Skeleton className=\"h-4 w-4\" />\n       </div>\n    );\n  }\n\n  // Render the actual draggable button only on the client\n  return (\n    <Button\n      ref={setNodeRef}\n      style={style}\n      variant=\"outline\"\n      className=\"w-full flex items-center justify-between p-2 bg-card hover:bg-muted/50\"\n      {...listeners}\n      {...attributes}\n    >\n      <span className=\"truncate\">{employee.name}</span> {/* Add truncate here */}\n      <GripVertical className=\"h-4 w-4 text-muted-foreground\" />\n    </Button>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA,oVAAoD,gCAAgC;AACpF;AACA;AACA;AACA;AAGA,uOAAqD,kBAAkB;AATvE,cAAc,qBAAqB;;;;;;;;AAe5B,MAAM,oBAAsD,CAAC,EAAE,QAAQ,EAAE;IAC9E,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,uCAAuC;IAExF,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,YAAY,OAAO,sDAAsD;IAC3E,GAAG,EAAE;IAEL,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,eAAY,AAAD,EAAE;QAChF,IAAI,SAAS,EAAE;QACf,MAAM;YAAE,MAAM;YAAY;QAAS;QACnC,UAAU,CAAC;IACb;IAEA,MAAM,QAAQ;QACZ,WAAW,qKAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClC,SAAS,aAAa,MAAM;QAC5B,QAAQ,aAAa,MAAM;QAC3B,QAAQ,aAAa,aAAc,WAAW,SAAS;IACzD;IAEA,wDAAwD;IACxD,IAAI,CAAC,UAAU;QACb,qBACE,8OAAC;YAAI,WAAU;;8BACV,8OAAC,oIAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;8BACpB,8OAAC,oIAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;;;;;;;IAG7B;IAEA,wDAAwD;IACxD,qBACE,8OAAC,kIAAA,CAAA,SAAM;QACL,KAAK;QACL,OAAO;QACP,SAAQ;QACR,WAAU;QACT,GAAG,SAAS;QACZ,GAAG,UAAU;;0BAEd,8OAAC;gBAAK,WAAU;0BAAY,SAAS,IAAI;;;;;;YAAQ;0BACjD,8OAAC,sNAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;;;;;;;AAG9B","debugId":null}},
    {"offset": {"line": 940, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-mobile.tsx"],"sourcesContent":["import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,oBAAoB;AAEnB,SAAS;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAuB;IAEpE,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,MAAM,MAAM,OAAO,UAAU,CAAC,CAAC,YAAY,EAAE,oBAAoB,EAAE,GAAG,CAAC;QACvE,MAAM,WAAW;YACf,YAAY,OAAO,UAAU,GAAG;QAClC;QACA,IAAI,gBAAgB,CAAC,UAAU;QAC/B,YAAY,OAAO,UAAU,GAAG;QAChC,OAAO,IAAM,IAAI,mBAAmB,CAAC,UAAU;IACjD,GAAG,EAAE;IAEL,OAAO,CAAC,CAAC;AACX","debugId":null}},
    {"offset": {"line": 965, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/EmployeeList.tsx"],"sourcesContent":["\n'use client'; // Add this directive\n\nimport React, { useState, useEffect } from 'react'; // Import useState and useEffect\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { DraggableEmployee } from './DraggableEmployee';\nimport type { Employee } from '@/types/schedule';\nimport { Users } from 'lucide-react';\nimport { useIsMobile } from '@/hooks/use-mobile'; // Import the hook\nimport { Skeleton } from '@/components/ui/skeleton'; // Import Skeleton\n\ninterface EmployeeListProps {\n  employees: Employee[];\n}\n\nexport const EmployeeList: React.FC<EmployeeListProps> = ({ employees }) => {\n  const [isClient, setIsClient] = useState(false);\n  const isMobile = useIsMobile(); // Use the hook\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  // Calculate count only on client\n  const employeeCount = employees.length; // Calculate length directly\n\n  // Do not render this component on mobile\n  if (isMobile) {\n    return null;\n  }\n\n  return (\n    <Card className=\"h-full\"> {/* Allow card to take full height */}\n      <CardHeader>\n         <CardTitle className=\"text-lg font-medium flex items-center gap-2 truncate\"> {/* Add truncate here */}\n             <Users className=\"h-5 w-5 text-muted-foreground flex-shrink-0\" /> {/* Prevent icon shrink */}\n             {/* Show count only on client to avoid hydration mismatch */}\n             Colaboradores Disponibles ({isClient ? employeeCount : '...'})\n         </CardTitle>\n      </CardHeader>\n       <CardContent className=\"space-y-3 overflow-y-auto max-h-[calc(100vh-200px)]\"> {/* Make content scrollable */}\n        {isClient ? ( // Only render the list content on the client\n          employees.length > 0 ? (\n            employees.map((employee) => (\n              <DraggableEmployee key={employee.id} employee={employee} />\n            ))\n          ) : (\n            <p className=\"text-sm text-muted-foreground text-center pt-4 italic\">\n              No hay colaboradores disponibles.\n            </p>\n          )\n        ) : (\n          // Show skeleton placeholders during SSR/initial hydration\n          <div className=\"space-y-3\">\n            {[...Array(3)].map((_, i) => (\n                <div key={i} className=\"flex items-center justify-between p-2 border rounded-md bg-muted h-10\">\n                     <Skeleton className=\"h-4 w-3/4\" />\n                     <Skeleton className=\"h-4 w-4\" />\n                 </div>\n             ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n"],"names":[],"mappings":";;;;AAGA,oVAAoD,gCAAgC;AACpF;AACA;AAEA;AACA,2NAAkD,kBAAkB;AACpE,uOAAqD,kBAAkB;AARvE,cAAc,qBAAqB;;;;;;;;AAc5B,MAAM,eAA4C,CAAC,EAAE,SAAS,EAAE;IACrE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,WAAW,CAAA,GAAA,8HAAA,CAAA,cAAW,AAAD,KAAK,eAAe;IAE/C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,YAAY;IACd,GAAG,EAAE;IAEL,iCAAiC;IACjC,MAAM,gBAAgB,UAAU,MAAM,EAAE,4BAA4B;IAEpE,yCAAyC;IACzC,IAAI,UAAU;QACZ,OAAO;IACT;IAEA,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;YAAS;0BACvB,8OAAC,gIAAA,CAAA,aAAU;0BACR,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;;wBAAuD;sCACxE,8OAAC,oMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;wBAAgD;wBACJ;wBACjC,WAAW,gBAAgB;wBAAM;;;;;;;;;;;;0BAGnE,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;oBAAsD;oBAC3E,WACC,UAAU,MAAM,GAAG,IACjB,UAAU,GAAG,CAAC,CAAC,yBACb,8OAAC,mJAAA,CAAA,oBAAiB;4BAAmB,UAAU;2BAAvB,SAAS,EAAE;;;;kDAGrC,8OAAC;wBAAE,WAAU;kCAAwD;;;;;+BAKvE,0DAA0D;kCAC1D,8OAAC;wBAAI,WAAU;kCACZ;+BAAI,MAAM;yBAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACnB,8OAAC;gCAAY,WAAU;;kDAClB,8OAAC,oIAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;kDACpB,8OAAC,oIAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;;+BAFf;;;;;;;;;;;;;;;;;;;;;;AAU1B","debugId":null}},
    {"offset": {"line": 1095, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/time-utils.ts"],"sourcesContent":["// src/lib/time-utils.ts\n\nimport { format as formatFns, parse as parseFns } from 'date-fns';\nimport { es } from 'date-fns/locale'; // Import Spanish locale if needed for 'am/pm'\n\n/**\n * Formats a time string (HH:mm) into 12-hour format (h:mm a).\n * Handles invalid input gracefully.\n *\n * @param timeString - The time string in \"HH:mm\" format.\n * @returns The formatted time string (e.g., \"8:00 AM\") or the original string if invalid.\n */\nexport function formatTo12Hour(timeString: string | undefined): string {\n  if (!timeString || !/^\\d{2}:\\d{2}$/.test(timeString)) {\n    return timeString || ''; // Return original or empty string if invalid/undefined\n  }\n\n  try {\n    // Create a dummy date object with the time to use date-fns formatting\n    const dummyDate = parseFns(timeString, 'HH:mm', new Date());\n    // Format using 'h:mm a' for 12-hour format with AM/PM\n    // Use locale 'es' if you want 'a. m.'/'p. m.' instead of AM/PM\n    return formatFns(dummyDate, 'h:mm a', { locale: es });\n  } catch (error) {\n    console.error(`Error formatting time string \"${timeString}\":`, error);\n    return timeString; // Return original string on error\n  }\n}\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;AAExB;AAAA;AACA,oPAAsC,8CAA8C;;;AAS7E,SAAS,eAAe,UAA8B;IAC3D,IAAI,CAAC,cAAc,CAAC,gBAAgB,IAAI,CAAC,aAAa;QACpD,OAAO,cAAc,IAAI,uDAAuD;IAClF;IAEA,IAAI;QACF,sEAAsE;QACtE,MAAM,YAAY,CAAA,GAAA,qJAAA,CAAA,QAAQ,AAAD,EAAE,YAAY,SAAS,IAAI;QACpD,sDAAsD;QACtD,+DAA+D;QAC/D,OAAO,CAAA,GAAA,sJAAA,CAAA,SAAS,AAAD,EAAE,WAAW,UAAU;YAAE,QAAQ,4IAAA,CAAA,KAAE;QAAC;IACrD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,8BAA8B,EAAE,WAAW,EAAE,CAAC,EAAE;QAC/D,OAAO,YAAY,kCAAkC;IACvD;AACF","debugId":null}},
    {"offset": {"line": 1127, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ShiftCard.tsx"],"sourcesContent":["import React from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Trash2, Clock, Coffee } from 'lucide-react'; // Added Coffee icon for break\nimport type { ShiftAssignment } from '@/types/schedule'; // Assuming type exists\nimport { cn } from '@/lib/utils'; // Import cn\nimport { formatTo12Hour } from '@/lib/time-utils'; // Import the formatting helper\n\ninterface ShiftCardProps {\n  assignment: ShiftAssignment;\n  onRemove: (event: React.MouseEvent<HTMLButtonElement>) => void; // Pass event to stop propagation\n  isCompact?: boolean; // Optional flag for compact view\n  onClick?: () => void; // Optional click handler for the card\n}\n\nexport const ShiftCard: React.FC<ShiftCardProps> = ({ assignment, onRemove, isCompact = false, onClick }) => {\n  // Add useSortable hook here if making items within a column sortable\n  // const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ id: assignment.id });\n  // const style = { transform: CSS.Transform.toString(transform), transition };\n\n  const handleRemoveClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.stopPropagation(); // Prevent triggering the card's onClick\n    onRemove(event);\n  };\n\n\n  return (\n     <Card\n        // ref={setNodeRef} // For sortable\n        // style={style} // For sortable\n        className={cn(\n            \"group bg-background border shadow-sm transition-colors duration-150 relative\", // Add 'group' class, transition, and relative positioning\n            isCompact ? \"border-none shadow-none bg-transparent p-0 hover:bg-accent/50 cursor-pointer\" : \"hover:border-primary\", // Remove borders/padding if compact, add hover background and cursor\n            onClick && \"cursor-pointer\" // Add cursor pointer if onClick is provided\n        )}\n        // {...attributes} // For sortable\n        // {...listeners} // For sortable - Be careful with listeners vs onClick\n        onClick={onClick} // Add onClick handler to the card\n     >\n       <CardContent className={cn(\n           \"flex items-start justify-between\", // Changed items-center to items-start\n           isCompact ? \"p-0.5\" : \"p-3\" // Smaller padding if compact\n       )}>\n         {/* Content Wrapper */}\n         <div className=\"flex-grow min-w-0 overflow-hidden mr-1 pr-4\"> {/* Add padding-right to prevent overlap with absolute button */}\n             <p className={cn(\n                 \"font-medium truncate\",\n                 isCompact ? \"text-xs\" : \"text-sm\" // Increased compact font size back to xs\n             )} title={assignment.employee.name}>{assignment.employee.name}</p>\n             <div className={cn( // Wrap times in a div for better spacing control\n                 \"text-muted-foreground flex flex-wrap items-center\", // Use flex-wrap and items-center\n                 isCompact ? \"text-[11px] gap-x-1 gap-y-0\" : \"text-xs gap-x-1.5 gap-y-0.5\" // Increased compact font size from 10px, allow wrapping\n             )}>\n                 {/* Shift Time */}\n                 <span className=\"flex items-center gap-0.5\">\n                     <Clock className={cn(\"flex-shrink-0\", isCompact ? \"h-2.5 w-2.5\" : \"h-3 w-3\")} /> {/* Slightly larger icon, prevent shrink */}\n                     {/* Format times using the helper */}\n                     <span className=\"whitespace-nowrap\">{formatTo12Hour(assignment.startTime)}-{formatTo12Hour(assignment.endTime)}</span> {/* Prevent time wrap */}\n                 </span>\n                 {/* Break Time - Show icon and text if included */}\n                 {assignment.includeBreak && assignment.breakStartTime && assignment.breakEndTime && (\n                    <span className={cn(\n                        \"flex items-center gap-0.5\",\n                        isCompact && \"text-blue-600 dark:text-blue-400\" // Optional: different color for break icon in compact\n                        )} title={`Descanso: ${formatTo12Hour(assignment.breakStartTime)}-${formatTo12Hour(assignment.breakEndTime)}`}>\n                        <Coffee className={cn(\"flex-shrink-0\", isCompact ? \"h-2.5 w-2.5\" : \"h-3 w-3\")} /> {/* Break icon */}\n                        {/* Show break times in compact view as well */}\n                        {/* Format break times using the helper */}\n                        <span className=\"whitespace-nowrap\">D: {formatTo12Hour(assignment.breakStartTime)}-{formatTo12Hour(assignment.breakEndTime)}</span>\n                    </span>\n                 )}\n             </div>\n         </div>\n          {/* Delete Button - Positioned absolute top-right */}\n         <Button\n             variant=\"ghost\"\n             size=\"icon\"\n             className={cn(\n                 \"absolute top-1 right-1\", // Position top-right\n                 \"text-destructive flex-shrink-0 opacity-0 group-hover:opacity-100 transition-opacity hover:bg-destructive/10\", // Hide by default, show on group hover, add transition, add red hover\n                 isCompact ? \"h-4 w-4\" : \"h-7 w-7\", // Smaller button if compact\n                 // Keep the button hidden on mobile/tablet for compact view unless hovering\n                 isCompact && \"group-hover:opacity-100 md:opacity-0\"\n             )}\n             onClick={handleRemoveClick} // Use the new handler\n             title=\"Eliminar turno\" // Add title for accessibility\n          >\n           <Trash2 className={cn(isCompact ? \"h-2.5 w-2.5\" : \"h-4 w-4\")} /> {/* Smaller icon if compact */}\n         </Button>\n       </CardContent>\n     </Card>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;AACA,6VAAsD,8BAA8B;AAApF;AAAA;AAEA,wMAAkC,YAAY;AAC9C,qNAAmD,+BAA+B;;;;;;;AAS3E,MAAM,YAAsC,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,KAAK,EAAE,OAAO,EAAE;IACtG,qEAAqE;IACrE,2GAA2G;IAC3G,8EAA8E;IAE9E,MAAM,oBAAoB,CAAC;QACzB,MAAM,eAAe,IAAI,wCAAwC;QACjE,SAAS;IACX;IAGA,qBACG,8OAAC,gIAAA,CAAA,OAAI;QACF,mCAAmC;QACnC,gCAAgC;QAChC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,gFACA,YAAY,iFAAiF,wBAC7F,WAAW,iBAAiB,4CAA4C;;QAE5E,kCAAkC;QAClC,wEAAwE;QACxE,SAAS;kBAEV,cAAA,8OAAC,gIAAA,CAAA,cAAW;YAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACrB,oCACA,YAAY,UAAU,MAAM,6BAA6B;;;8BAG3D,8OAAC;oBAAI,WAAU;;wBAA8C;sCACzD,8OAAC;4BAAE,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACX,wBACA,YAAY,YAAY,UAAU,yCAAyC;;4BAC5E,OAAO,WAAW,QAAQ,CAAC,IAAI;sCAAG,WAAW,QAAQ,CAAC,IAAI;;;;;;sCAC7D,8OAAC;4BAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACb,qDACA,YAAY,gCAAgC,8BAA8B,wDAAwD;;;8CAGlI,8OAAC;oCAAK,WAAU;;sDACZ,8OAAC,oMAAA,CAAA,QAAK;4CAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB,YAAY,gBAAgB;;;;;;wCAAc;sDAEhF,8OAAC;4CAAK,WAAU;;gDAAqB,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,SAAS;gDAAE;gDAAE,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,OAAO;;;;;;;wCAAS;;;;;;;gCAGzH,WAAW,YAAY,IAAI,WAAW,cAAc,IAAI,WAAW,YAAY,kBAC7E,8OAAC;oCAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACd,6BACA,aAAa,mCAAmC,sDAAsD;;oCACnG,OAAO,CAAC,UAAU,EAAE,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,cAAc,EAAE,CAAC,EAAE,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,YAAY,GAAG;;sDAC7G,8OAAC,sMAAA,CAAA,SAAM;4CAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB,YAAY,gBAAgB;;;;;;wCAAc;sDAGjF,8OAAC;4CAAK,WAAU;;gDAAoB;gDAAI,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,cAAc;gDAAE;gDAAE,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE,WAAW,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;8BAMzI,8OAAC,kIAAA,CAAA,SAAM;oBACH,SAAQ;oBACR,MAAK;oBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,0BACA,+GACA,YAAY,YAAY,WACxB,2EAA2E;oBAC3E,aAAa;oBAEjB,SAAS;oBACT,OAAM,iBAAiB,8BAA8B;;;sCAEvD,8OAAC,0MAAA,CAAA,SAAM;4BAAC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY,gBAAgB;;;;;;wBAAc;;;;;;;;;;;;;;;;;;AAK3E","debugId":null}},
    {"offset": {"line": 1297, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/DepartmentColumn.tsx"],"sourcesContent":["\n// src/components/schedule/DepartmentColumn.tsx\n'use client'; // Ensure client component\n\nimport React, { useState, useEffect } from 'react'; // Import useState and useEffect\nimport { useDroppable } from '@dnd-kit/core';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Plus, Trash2 } from 'lucide-react';\nimport type { Department, ShiftAssignment, Employee } from '@/types/schedule'; // Assuming types exist\nimport { ShiftCard } from './ShiftCard'; // Assuming ShiftCard component exists\nimport { format } from 'date-fns';\nimport { cn } from '@/lib/utils'; // Added cn\nimport { Skeleton } from '@/components/ui/skeleton'; // Import Skeleton for placeholder\n\ninterface DepartmentColumnProps {\n  department: Department;\n  assignments: ShiftAssignment[];\n  onRemoveShift: (departmentId: string, assignmentId: string) => void;\n  date: Date; // Date for this column\n  onAddShiftRequest: (departmentId: string, date: Date) => void; // New handler for '+' button click\n  onShiftClick: (assignment: ShiftAssignment, date: Date, departmentId: string) => void; // Handler for clicking a shift card\n  isWeekView?: boolean; // Flag for potentially different rendering in week view\n  isMobile: boolean; // Flag to detect mobile view\n}\n\nexport const DepartmentColumn: React.FC<DepartmentColumnProps> = ({\n  department,\n  assignments,\n  onRemoveShift,\n  date,\n  onAddShiftRequest, // Destructure new handler\n  onShiftClick, // Destructure shift click handler\n  isWeekView = false,\n  isMobile, // Destructure mobile flag\n}) => {\n  const [isClient, setIsClient] = useState(false); // State for client-side rendering\n\n  useEffect(() => {\n    setIsClient(true); // Set true after initial mount\n  }, []);\n\n  const dateKey = format(date, 'yyyy-MM-dd');\n  const { setNodeRef, isOver } = useDroppable({\n    id: `${department.id}_${dateKey}`, // Make ID unique per department and date\n    data: {\n        type: 'department',\n        id: department.id,\n        date: dateKey, // Pass date string in data\n    },\n    disabled: isMobile || !isClient, // Disable dropping on mobile or until client-side hydration\n  });\n\n  const style = {\n    backgroundColor: isOver ? 'hsl(var(--accent)/0.1)' : undefined,\n    borderColor: isOver ? 'hsl(var(--accent))' : (isWeekView ? 'hsl(var(--border) / 0.3)' : undefined), // Lighter border in week view normal state\n    borderWidth: '1px',\n    borderStyle: isOver ? 'dashed' : 'solid',\n    minHeight: isWeekView ? '60px' : '200px',\n    transition: 'background-color 0.2s ease, border-color 0.2s ease',\n    borderRadius: isWeekView ? '0.375rem' : undefined,\n  };\n\n  // Render placeholder on server and initial client render\n  const renderPlaceholder = () => {\n    if (isWeekView) {\n      return <Skeleton className=\"h-6 w-full\" />; // Simple skeleton for week view\n    }\n    return (\n      <div className=\"p-3 space-y-2\">\n        <Skeleton className=\"h-8 w-full\" />\n        <Skeleton className=\"h-5 w-3/4\" />\n      </div>\n    );\n  };\n\n  // Actual content rendering logic\n  const renderContent = () => {\n     const assignmentCount = assignments.length; // Calculate length here\n\n    if (isWeekView) {\n      return (\n        <>\n          {assignmentCount > 0 ? (\n            assignments.map((assignment) => (\n              <ShiftCard\n                key={assignment.id}\n                assignment={assignment}\n                onRemove={(e) => { e.stopPropagation(); onRemoveShift(department.id, assignment.id); }}\n                isCompact\n                onClick={() => onShiftClick(assignment, date, department.id)}\n              />\n            ))\n          ) : (\n            // Minimal placeholder for empty week view cells on desktop\n             !isMobile && <div className=\"h-4\"></div> // Small spacer\n          )}\n          {/* Single '+' button at the bottom for week view on mobile */}\n          {/* Removed the mobile '+' button, handled in ScheduleView now */}\n        </>\n      );\n    } else {\n      // Full rendering for day view\n      return (\n        <>\n          {assignmentCount > 0 ? (\n            assignments.map((assignment) => (\n              <ShiftCard\n                key={assignment.id}\n                assignment={assignment}\n                onRemove={(e) => { e.stopPropagation(); onRemoveShift(department.id, assignment.id); }}\n                onClick={() => onShiftClick(assignment, date, department.id)}\n              />\n            ))\n          ) : (\n            <p className=\"text-xs text-muted-foreground text-center pt-4 italic\">\n              {!isMobile ? 'Arrastra o usa +' : 'Usa + para añadir'} {/* Adjusted text based on mobile */}\n            </p>\n          )}\n        </>\n      );\n    }\n  };\n\n  // Main return logic\n  if (isWeekView) {\n     // Simplified structure for week view, '+' button logic handled inside ScheduleView\n    return (\n      <div ref={setNodeRef} style={style} className=\"p-1 space-y-0.5\">\n        {isClient ? renderContent() : renderPlaceholder()}\n      </div>\n    );\n  } else {\n    // Day view with Card structure and a single '+' button in the header\n    return (\n      <Card ref={setNodeRef} style={style} className=\"flex flex-col h-full shadow-sm\">\n        <CardHeader className=\"flex flex-row items-center justify-between pb-2 pt-4 px-4 border-b\">\n           <CardTitle className=\"text-base font-medium flex items-center gap-2 text-foreground\">\n               {department.icon && <department.icon className=\"h-3.5 w-3.5 text-muted-foreground\" />}\n                {/* Show count only on client */}\n               {department.name} ({isClient ? assignments.length : '...'})\n           </CardTitle>\n           {/* Single '+' button in the header for Day View */}\n          <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"h-7 w-7 text-primary hover:bg-primary/10\" // Styled button\n              onClick={() => onAddShiftRequest(department.id, date)}\n              title=\"Añadir Colaborador\"\n          >\n            <Plus className=\"h-4 w-4\" />\n          </Button>\n        </CardHeader>\n        <CardContent className=\"flex-grow p-3 space-y-2 overflow-y-auto\">\n          {isClient ? renderContent() : renderPlaceholder()}\n        </CardContent>\n      </Card>\n    );\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1523, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,mKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,8OAAC,mKAAA,CAAA,UAAwB;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sYACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1559, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ScheduleView.tsx"],"sourcesContent":["// src/components/schedule/ScheduleView.tsx\nimport React, { useState, useEffect } from 'react';\nimport type { Department, ScheduleData, ShiftAssignment, ScheduleNote, Employee } from '@/types/schedule';\nimport { DepartmentColumn } from './DepartmentColumn';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { format, parse as parseDateFns, isValid as isValidDate } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { Button } from '../ui/button';\nimport { Plus, Copy, Eraser, NotebookPen } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport {\n  AlertDialog,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogCancel,\n  AlertDialogAction,\n} from '@/components/ui/alert-dialog';\nimport { Skeleton } from '@/components/ui/skeleton';\n\ninterface ScheduleViewProps {\n  departments: Department[];\n  scheduleData: { [dateKey: string]: ScheduleData };\n  onRemoveShift: (dateKey: string, departmentId: string, assignmentId: string) => void;\n  viewMode: 'day' | 'week';\n  weekDates: Date[];\n  currentDate: Date;\n  onAddShiftRequest: (departmentId: string, date: Date) => void;\n  onShiftClick: (assignment: ShiftAssignment, date: Date, departmentId: string) => void;\n  getScheduleForDate: (date: Date) => ScheduleData;\n  onDuplicateDay: (sourceDate: Date) => void;\n  onClearDay: (dateToClear: Date) => void;\n  isHoliday: (date: Date | null | undefined) => boolean;\n  isMobile: boolean;\n  getNotesForDate: (date: Date) => ScheduleNote[];\n  onOpenNotesModal: (date: Date) => void;\n  employees: Employee[];\n  setNoteToDeleteId?: (id: string | null) => void;\n}\n\nexport const ScheduleView: React.FC<ScheduleViewProps> = ({\n    departments,\n    scheduleData,\n    onRemoveShift,\n    viewMode,\n    weekDates,\n    currentDate,\n    onAddShiftRequest,\n    onShiftClick,\n    getScheduleForDate,\n    onDuplicateDay,\n    onClearDay,\n    isHoliday,\n    isMobile,\n    getNotesForDate,\n    onOpenNotesModal,\n    employees,\n    setNoteToDeleteId,\n}) => {\n  const [isClient, setIsClient] = useState(false);\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  // Helper function to render notes tooltip content\n  const renderNotesTooltip = (notes: ScheduleNote[]) => {\n    if (!notes || notes.length === 0) return null;\n    return (\n        <div className=\"text-xs space-y-1 max-w-xs p-2 bg-popover text-popover-foreground rounded-md shadow-md border\">\n            <p className=\"font-medium mb-1\">Anotaciones:</p>\n            {notes.map(note => {\n                const employeeName = note.employeeId ? employees.find(e => e.id === note.employeeId)?.name : null;\n                // Format date for tooltip: Abbreviated day, numeric day, abbreviated month\n                const noteDate = parseDateFns(note.date, 'yyyy-MM-dd', new Date());\n                const formattedDate = isValidDate(noteDate) ? format(noteDate, 'EEE d MMM', { locale: es }) : note.date;\n                return (\n                     <p key={note.id}>\n                         • {note.note} {employeeName ? <span className=\"italic text-muted-foreground\">({employeeName})</span> : ''}\n                     </p>\n                );\n            })}\n        </div>\n    );\n  };\n\n  if (viewMode === 'day') {\n    // --- Day View ---\n    const daySchedule = getScheduleForDate(currentDate);\n    const dynamicGridClass = `grid-cols-1 sm:grid-cols-2 lg:grid-cols-${Math.min(departments.length, 4)} xl:grid-cols-${Math.min(departments.length, 5)}`;\n    const isCurrentHoliday = isHoliday(currentDate);\n    const notesForDay = getNotesForDate(currentDate);\n    const totalAssignmentsForDay = isClient\n        ? Object.values(daySchedule.assignments || {}).reduce((sum, deptAssignments) => sum + (deptAssignments?.length || 0), 0)\n        : 0;\n\n    return (\n        <Card className={cn(\n            \"shadow-md bg-card border\",\n            isCurrentHoliday ? \"border-primary border-2\" : \"border-border\"\n        )}>\n            <CardHeader className={cn(\n                \"border-b relative\",\n                isCurrentHoliday ? \"border-primary\" : \"border-border\"\n            )}>\n                <CardTitle className={cn(\n                    \"text-lg font-medium flex items-center gap-2 pr-8\",\n                    isCurrentHoliday ? \"text-primary font-semibold\" : \"text-foreground\"\n                )}>\n                    <span>\n                        Horario para el {format(currentDate, 'PPPP', { locale: es })}\n                        {isCurrentHoliday && <span className=\"text-xs font-normal ml-2\">(Festivo)</span>}\n                    </span>\n                     {notesForDay.length > 0 && (\n                         <TooltipProvider delayDuration={100}>\n                             <Tooltip>\n                                 <TooltipTrigger asChild>\n                                      <AlertDialog>\n                                         <AlertDialogTrigger asChild>\n                                              <Button\n                                                 variant=\"ghost\"\n                                                 size=\"icon\"\n                                                 className=\"h-5 w-5 p-0 text-yellow-500 hover:text-yellow-600 cursor-pointer\"\n                                                 aria-label=\"Ver/Eliminar anotaciones\"\n                                                 onClick={(e) => {\n                                                      e.stopPropagation(); // Prevent card click if any\n                                                      if (setNoteToDeleteId && notesForDay.length > 0) {\n                                                        // Action for click (delete) is handled by AlertDialog\n                                                      }\n                                                 }}\n                                              >\n                                                  <NotebookPen className=\"h-4 w-4\" />\n                                              </Button>\n                                         </AlertDialogTrigger>\n                                         <AlertDialogContent onClick={(e) => e.stopPropagation()}>\n                                              <AlertDialogHeader>\n                                                 <AlertDialogTitle>Eliminar Anotación?</AlertDialogTitle>\n                                                 <AlertDialogDescription>\n                                                    ¿Estás seguro de que quieres eliminar esta anotación? No se puede deshacer.\n                                                    <br/>\n                                                    <span className='italic'>{notesForDay[0]?.note}</span>\n                                                 </AlertDialogDescription>\n                                              </AlertDialogHeader>\n                                              <AlertDialogFooter>\n                                                  <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                                                   <AlertDialogAction\n                                                     className=\"bg-destructive hover:bg-destructive/90\"\n                                                     onClick={() => {\n                                                         if (setNoteToDeleteId && notesForDay.length > 0) {\n                                                             setNoteToDeleteId(notesForDay[0].id);\n                                                         }\n                                                     }}\n                                                   >\n                                                       Eliminar Anotación\n                                                    </AlertDialogAction>\n                                              </AlertDialogFooter>\n                                         </AlertDialogContent>\n                                      </AlertDialog>\n                                  </TooltipTrigger>\n                                 <TooltipContent side=\"bottom\">\n                                     {renderNotesTooltip(notesForDay)}\n                                 </TooltipContent>\n                             </Tooltip>\n                         </TooltipProvider>\n                     )}\n                </CardTitle>\n                <div className=\"absolute top-2 right-2 flex items-center gap-1\">\n                    <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        className=\"h-6 w-6 text-muted-foreground hover:text-foreground\"\n                        onClick={() => onDuplicateDay(currentDate)}\n                        title=\"Duplicar horario al día siguiente\"\n                    >\n                        <Copy className=\"h-4 w-4\" />\n                    </Button>\n                    <AlertDialog>\n                        <AlertDialogTrigger asChild>\n                            <Button\n                                variant=\"ghost\"\n                                size=\"icon\"\n                                className=\"h-6 w-6 text-destructive hover:text-destructive/80\"\n                                title=\"Limpiar turnos del día\"\n                                disabled={!isClient || (totalAssignmentsForDay === 0 && notesForDay.length === 0)}\n                            >\n                                <Eraser className=\"h-4 w-4\" />\n                            </Button>\n                        </AlertDialogTrigger>\n                        <AlertDialogContent>\n                             <AlertDialogHeader>\n                                 <AlertDialogTitle>¿Limpiar Día?</AlertDialogTitle>\n                                 <AlertDialogDescription>\n                                    Esta acción eliminará todos los turnos y anotaciones para el{' '}\n                                    <strong>{format(currentDate, 'PPP', { locale: es })}</strong>. No se puede deshacer.\n                                 </AlertDialogDescription>\n                             </AlertDialogHeader>\n                             <AlertDialogFooter>\n                                 <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                                 <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={() => onClearDay(currentDate)}>\n                                     Limpiar Día\n                                 </AlertDialogAction>\n                             </AlertDialogFooter>\n                        </AlertDialogContent>\n                    </AlertDialog>\n                </div>\n            </CardHeader>\n            <CardContent className=\"p-4\">\n                {departments.length > 0 ? (\n                    <div className={`grid ${dynamicGridClass} gap-4`}>\n                        {departments.map((department) => (\n                            <DepartmentColumn\n                                key={department.id}\n                                department={department}\n                                assignments={daySchedule.assignments[department.id] || []}\n                                onRemoveShift={(deptId, assignId) => onRemoveShift(format(currentDate, 'yyyy-MM-dd'), deptId, assignId)}\n                                date={currentDate}\n                                onAddShiftRequest={onAddShiftRequest}\n                                onShiftClick={onShiftClick}\n                                isMobile={isMobile}\n                            />\n                        ))}\n                    </div>\n                ) : (\n                     <p className=\"text-center text-muted-foreground italic py-4\">\n                         No hay departamentos definidos para esta sede. Agrega departamentos en la sección de configuración.\n                     </p>\n                )}\n            </CardContent>\n        </Card>\n    );\n  } else {\n    // --- Week View ---\n    const weekViewContent = (\n        <div className=\"grid grid-cols-7 gap-1 min-w-[900px] overflow-x-auto\"> {/* Allow horizontal scroll */}\n            {weekDates.map((date, index) => {\n               const daySchedule = getScheduleForDate(date);\n               const dateKey = format(date, 'yyyy-MM-dd');\n               const notesForDay = getNotesForDate(date);\n               const totalAssignmentsForDay = isClient\n                   ? Object.values(daySchedule.assignments || {}).reduce((sum, deptAssignments) => sum + (deptAssignments?.length || 0), 0)\n                   : 0;\n               const isLastDayOfWeek = index === weekDates.length - 1;\n               const isCurrentHoliday = isHoliday(date);\n\n               return (\n                   <div key={dateKey} className=\"flex flex-col h-full\">\n                       <Card className={cn(\n                           \"shadow-sm bg-card border flex flex-col flex-grow\",\n                           isCurrentHoliday ? \"border-primary border-2\" : \"border-border/50\"\n                       )}>\n                           <CardHeader className={cn(\n                               \"pb-2 pt-3 px-2 border-b relative\",\n                               isCurrentHoliday ? \"border-primary\" : \"border-border/50\"\n                           )}>\n                               <CardTitle className={cn(\n                                   \"text-xs font-semibold text-center whitespace-nowrap flex items-center justify-center gap-1\",\n                                   isCurrentHoliday ? \"text-primary\" : \"text-foreground\"\n                               )}>\n                                   <span>{format(date, 'EEE d', { locale: es })}</span>\n                                   {notesForDay.length > 0 && (\n                                       <TooltipProvider delayDuration={100}>\n                                            <Tooltip>\n                                                <TooltipTrigger asChild>\n                                                     <AlertDialog>\n                                                        <AlertDialogTrigger asChild>\n                                                            <Button\n                                                                variant=\"ghost\"\n                                                                size=\"icon\"\n                                                                className=\"h-4 w-4 p-0 text-yellow-500 hover:text-yellow-600 cursor-pointer\"\n                                                                aria-label=\"Ver/Eliminar anotaciones\"\n                                                                 onClick={(e) => e.stopPropagation()}\n                                                            >\n                                                                <NotebookPen className=\"h-3 w-3\" />\n                                                            </Button>\n                                                        </AlertDialogTrigger>\n                                                         <AlertDialogContent onClick={(e) => e.stopPropagation()}>\n                                                             <AlertDialogHeader>\n                                                                <AlertDialogTitle>Eliminar Anotación?</AlertDialogTitle>\n                                                                <AlertDialogDescription>\n                                                                    ¿Estás seguro de que quieres eliminar esta anotación? No se puede deshacer.\n                                                                    <br/>\n                                                                    <span className='italic'>{notesForDay[0]?.note}</span>\n                                                                </AlertDialogDescription>\n                                                             </AlertDialogHeader>\n                                                             <AlertDialogFooter>\n                                                                <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                                                                <AlertDialogAction\n                                                                    className=\"bg-destructive hover:bg-destructive/90\"\n                                                                    onClick={() => {\n                                                                        if (setNoteToDeleteId && notesForDay.length > 0) {\n                                                                            setNoteToDeleteId(notesForDay[0].id);\n                                                                        }\n                                                                    }}\n                                                                >\n                                                                    Eliminar Anotación\n                                                                </AlertDialogAction>\n                                                             </AlertDialogFooter>\n                                                         </AlertDialogContent>\n                                                     </AlertDialog>\n                                                 </TooltipTrigger>\n                                                <TooltipContent side=\"top\">\n                                                    {renderNotesTooltip(notesForDay)}\n                                                </TooltipContent>\n                                            </Tooltip>\n                                       </TooltipProvider>\n                                   )}\n                               </CardTitle>\n                               <CardDescription className=\"text-[10px] text-muted-foreground text-center\">\n                                   {format(date, 'MMM', { locale: es })} ({isClient ? totalAssignmentsForDay : '...'})\n                                   {isCurrentHoliday && <span className=\"text-primary block font-medium\">Festivo</span>}\n                               </CardDescription>\n                               <div className=\"absolute top-0.5 right-0.5 flex flex-col gap-0\">\n                                   {!isLastDayOfWeek && (\n                                       <Button\n                                           variant=\"ghost\"\n                                           size=\"icon\"\n                                           className=\"h-4 w-4 p-0 text-muted-foreground hover:text-foreground opacity-50 hover:opacity-100\"\n                                           onClick={() => onDuplicateDay(date)}\n                                           title=\"Duplicar al día siguiente\"\n                                       >\n                                           <Copy className=\"h-2.5 w-2.5\" />\n                                       </Button>\n                                   )}\n                                  <AlertDialog>\n                                     <AlertDialogTrigger asChild>\n                                         <Button\n                                             variant=\"ghost\"\n                                             size=\"icon\"\n                                             className=\"h-4 w-4 p-0 text-destructive hover:text-destructive opacity-50 hover:opacity-100\"\n                                             title=\"Limpiar turnos del día\"\n                                             disabled={!isClient || (totalAssignmentsForDay === 0 && notesForDay.length === 0)}\n                                         >\n                                             <Eraser className=\"h-2.5 w-2.5\" />\n                                         </Button>\n                                     </AlertDialogTrigger>\n                                     <AlertDialogContent>\n                                          <AlertDialogHeader>\n                                              <AlertDialogTitle>¿Limpiar Día?</AlertDialogTitle>\n                                              <AlertDialogDescription>\n                                                 Esta acción eliminará todos los turnos y anotaciones para el{' '}\n                                                 <strong>{format(date, 'PPP', { locale: es })}</strong>. No se puede deshacer.\n                                              </AlertDialogDescription>\n                                          </AlertDialogHeader>\n                                          <AlertDialogFooter>\n                                              <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                                              <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={() => onClearDay(date)}>\n                                                  Limpiar Día\n                                              </AlertDialogAction>\n                                          </AlertDialogFooter>\n                                     </AlertDialogContent>\n                                  </AlertDialog>\n                               </div>\n                           </CardHeader>\n                           <CardContent className=\"p-1 space-y-1 flex-grow overflow-y-auto\">\n                               {departments.length > 0 ? (\n                                   departments.map((department) => (\n                                       <div key={department.id} className=\"border rounded-sm p-1 bg-muted/10 relative\">\n                                           <div className=\"flex justify-between items-center mb-0.5\">\n                                               <h4 className=\"text-[10px] font-semibold text-foreground flex items-center gap-0.5 whitespace-nowrap overflow-hidden text-ellipsis pr-4\">\n                                                    {department.icon && <department.icon className=\"h-2.5 w-2.5 text-muted-foreground\" />}\n                                                    <span className=\"overflow-hidden text-ellipsis\">{department.name}</span>\n                                               </h4>\n                                                <Button\n                                                     variant=\"ghost\"\n                                                     size=\"icon\"\n                                                     className=\"absolute top-0 right-0 h-4 w-4 p-0 text-primary hover:bg-primary/10\"\n                                                     onClick={() => onAddShiftRequest(department.id, date)}\n                                                     title=\"Añadir Colaborador\"\n                                                >\n                                                    <Plus className=\"h-3 w-3\" />\n                                                </Button>\n                                           </div>\n                                           <DepartmentColumn\n                                               department={department}\n                                               assignments={daySchedule.assignments[department.id] || []}\n                                               onRemoveShift={(deptId, assignId) => onRemoveShift(dateKey, deptId, assignId)}\n                                               isWeekView\n                                               date={date}\n                                               onAddShiftRequest={onAddShiftRequest}\n                                               onShiftClick={onShiftClick}\n                                               isMobile={isMobile}\n                                           />\n                                       </div>\n                                   ))\n                                ) : (\n                                     <p className=\"text-center text-[10px] text-muted-foreground italic pt-1\">\n                                         No hay deptos.\n                                     </p>\n                                )}\n                           </CardContent>\n                       </Card>\n                   </div>\n               );\n           })}\n        </div>\n       );\n\n    return weekViewContent;\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2451, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ShiftDetailModal.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch'; // Import Switch\nimport { Save, X, PencilLine } from 'lucide-react'; // Added PencilLine\nimport type { ShiftDetails } from '@/types/schedule'; // Assuming type exists\nimport { useToast } from '@/hooks/use-toast';\nimport { cn } from '@/lib/utils'; // Import cn\nimport { formatTo12Hour } from '@/lib/time-utils'; // Import the time formatting helper\n\ninterface ShiftDetailModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (details: ShiftDetails) => void;\n  employeeName: string;\n  departmentName: string;\n  initialDetails?: Partial<ShiftDetails>; // For editing existing shifts\n  isEditing?: boolean; // Flag to indicate if editing\n}\n\n// Basic time validation (HH:MM format)\nconst timeRegex = /^([01]\\d|2[0-3]):([0-5]\\d)$/;\nconst timeErrorMessage = 'Formato HH:MM inválido.';\n\nexport const ShiftDetailModal: React.FC<ShiftDetailModalProps> = ({\n  isOpen,\n  onClose,\n  onSave,\n  employeeName,\n  departmentName,\n  initialDetails,\n  isEditing = false, // Default to false (adding)\n}) => {\n  const { toast } = useToast();\n  const [startTime, setStartTime] = useState(initialDetails?.startTime || '12:00'); // Default to 12:00 PM\n  const [endTime, setEndTime] = useState(initialDetails?.endTime || '22:00'); // Default to 10:00 PM\n  const [includeBreak, setIncludeBreak] = useState(initialDetails?.includeBreak || false); // Default to false\n  const [breakStartTime, setBreakStartTime] = useState(initialDetails?.breakStartTime || '15:00'); // Default 3 PM\n  const [breakEndTime, setBreakEndTime] = useState(initialDetails?.breakEndTime || '18:00'); // Default 6 PM\n\n  const [startTimeError, setStartTimeError] = useState<string | null>(null);\n  const [endTimeError, setEndTimeError] = useState<string | null>(null);\n  const [breakStartTimeError, setBreakStartTimeError] = useState<string | null>(null);\n  const [breakEndTimeError, setBreakEndTimeError] = useState<string | null>(null);\n\n  // Reset state when modal opens or initial details change\n  useEffect(() => {\n    if (isOpen) {\n        const defaultStartTime = '12:00'; // Updated default start time\n        const defaultEndTime = '22:00';   // Updated default end time\n        const defaultBreakStartTime = '15:00';\n        const defaultBreakEndTime = '18:00';\n\n        setStartTime(initialDetails?.startTime || defaultStartTime);\n        setEndTime(initialDetails?.endTime || defaultEndTime);\n        setIncludeBreak(initialDetails?.includeBreak || false);\n        setBreakStartTime(initialDetails?.breakStartTime || defaultBreakStartTime);\n        setBreakEndTime(initialDetails?.breakEndTime || defaultBreakEndTime);\n        setStartTimeError(null);\n        setEndTimeError(null);\n        setBreakStartTimeError(null);\n        setBreakEndTimeError(null);\n    }\n   // Dependency includes initialDetails to reset when editing a different shift\n   // isEditing is included to ensure reset happens correctly when switching between add/edit modes\n  }, [isOpen, initialDetails, isEditing]);\n\n\n  const handleSaveClick = () => {\n    let isValid = true;\n    setStartTimeError(null);\n    setEndTimeError(null);\n    setBreakStartTimeError(null);\n    setBreakEndTimeError(null);\n\n    if (!timeRegex.test(startTime)) {\n      setStartTimeError(timeErrorMessage);\n      isValid = false;\n    }\n    if (!timeRegex.test(endTime)) {\n      setEndTimeError(timeErrorMessage);\n      isValid = false;\n    }\n\n    // Validate break times only if break is included\n    if (includeBreak) {\n        if (!breakStartTime || !timeRegex.test(breakStartTime)) {\n            setBreakStartTimeError(timeErrorMessage);\n            isValid = false;\n        }\n        if (!breakEndTime || !timeRegex.test(breakEndTime)) {\n            setBreakEndTimeError(timeErrorMessage);\n            isValid = false;\n        }\n\n        // Check break end time is after break start time\n        if (isValid && breakStartTime && breakEndTime && breakStartTime >= breakEndTime) {\n             setBreakEndTimeError('Hora fin descanso debe ser posterior a hora inicio.');\n             isValid = false;\n             // Note: Simple comparison works for HH:MM within the same day.\n             // More complex logic needed if breaks can cross midnight (unlikely scenario).\n        }\n    }\n\n\n    // Basic check: end time should be after start time (doesn't handle overnight yet)\n    if (isValid && startTime >= endTime) {\n        // Allow overnight shifts for simplicity, maybe add a warning or flag later\n        // setEndTimeError('Hora de fin debe ser posterior a la hora de inicio.');\n        // isValid = false;\n    }\n\n\n    if (isValid) {\n      onSave({\n        startTime,\n        endTime,\n        includeBreak,\n        breakStartTime: includeBreak ? breakStartTime : undefined, // Only save if included\n        breakEndTime: includeBreak ? breakEndTime : undefined,     // Only save if included\n      });\n    } else {\n        toast({\n            title: \"Error de Validación\",\n            description: \"Por favor corrige los campos marcados.\",\n            variant: \"destructive\",\n        });\n    }\n  };\n\n  const title = isEditing ? 'Editar Detalles del Turno' : 'Detalles del Turno';\n  const saveButtonText = isEditing ? 'Guardar Cambios' : 'Guardar Turno';\n  const SaveIcon = isEditing ? PencilLine : Save; // Use different icon for editing\n\n  // Helper function to handle input changes and keep 24-hour format internally\n  const handleTimeChange = (setter: React.Dispatch<React.SetStateAction<string>>, value: string) => {\n    if (timeRegex.test(value)) {\n      setter(value);\n    } else {\n      // Handle potential partial input or conversion if needed\n      // For now, just update if valid 24-hour format\n      setter(value); // Allow intermediate typing\n    }\n  };\n\n\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>{title}</DialogTitle>\n          <DialogDescription>\n            {isEditing ? 'Modificando' : 'Asignando'} a <strong>{employeeName}</strong> en <strong>{departmentName}</strong>.\n            Ingresa las horas y el descanso.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"grid gap-4 py-4\">\n          {/* Start Time */}\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"start-time\" className=\"text-right\">\n              Inicio Turno\n            </Label>\n             <Input\n                id=\"start-time\"\n                type=\"time\" // Use type=\"time\" for the native picker\n                value={startTime} // Bind directly to the 24-hour state\n                onChange={(e) => handleTimeChange(setStartTime, e.target.value)}\n                className={cn(\"col-span-3\", startTimeError && 'border-destructive ring-destructive')}\n            />\n             {startTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{startTimeError}</p>}\n          </div>\n          {/* End Time */}\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"end-time\" className=\"text-right\">\n              Fin Turno\n            </Label>\n             <Input\n                id=\"end-time\"\n                type=\"time\"\n                value={endTime}\n                onChange={(e) => handleTimeChange(setEndTime, e.target.value)}\n                className={cn(\"col-span-3\", endTimeError && 'border-destructive ring-destructive')}\n             />\n             {endTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{endTimeError}</p>}\n          </div>\n\n          {/* Include Break Switch */}\n          <div className=\"flex items-center justify-between space-x-2 pt-2 border-t mt-2\">\n             <Label htmlFor=\"include-break\" className=\"font-medium\">\n                Incluir Descanso\n             </Label>\n             <Switch\n                id=\"include-break\"\n                checked={includeBreak}\n                onCheckedChange={setIncludeBreak}\n             />\n          </div>\n\n\n          {/* Conditional Break Time Inputs */}\n          {includeBreak && (\n            <>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"break-start-time\" className=\"text-right\">\n                  Inicio Descanso\n                </Label>\n                <Input\n                  id=\"break-start-time\"\n                  type=\"time\"\n                  value={breakStartTime}\n                  onChange={(e) => handleTimeChange(setBreakStartTime, e.target.value)}\n                  className={cn(\"col-span-3\", breakStartTimeError && 'border-destructive ring-destructive')}\n                />\n                 {breakStartTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{breakStartTimeError}</p>}\n              </div>\n              <div className=\"grid grid-cols-4 items-center gap-4\">\n                <Label htmlFor=\"break-end-time\" className=\"text-right\">\n                  Fin Descanso\n                </Label>\n                <Input\n                  id=\"break-end-time\"\n                  type=\"time\"\n                  value={breakEndTime}\n                  onChange={(e) => handleTimeChange(setBreakEndTime, e.target.value)}\n                  className={cn(\"col-span-3\", breakEndTimeError && 'border-destructive ring-destructive')}\n                />\n                 {breakEndTimeError && <p className=\"col-span-4 text-xs text-destructive text-right\">{breakEndTimeError}</p>}\n              </div>\n            </>\n          )}\n\n        </div>\n        <DialogFooter>\n          <DialogClose asChild>\n            <Button type=\"button\" variant=\"outline\">\n                {/* Icon removed */} Cancelar\n            </Button>\n          </DialogClose>\n          <Button type=\"button\" onClick={handleSaveClick} variant=\"default\">\n            <SaveIcon className=\"mr-2 h-4 w-4\" /> {saveButtonText}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2879, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/WeekNavigator.tsx"],"sourcesContent":["// src/components/schedule/WeekNavigator.tsx\n'use client';\n\nimport React from 'react';\nimport { Button } from '@/components/ui/button';\nimport { ChevronsLeft, ChevronsRight } from 'lucide-react';\nimport { format, startOfWeek, endOfWeek } from 'date-fns';\nimport { es } from 'date-fns/locale'; // Import Spanish locale\nimport { Card } from '@/components/ui/card'; // Import Card for background\n\ninterface WeekNavigatorProps {\n  currentDate: Date;\n  onPreviousWeek: () => void;\n  onNextWeek: () => void;\n}\n\nexport const WeekNavigator: React.FC<WeekNavigatorProps> = ({\n  currentDate,\n  onPreviousWeek,\n  onNextWeek,\n}) => {\n  const weekStart = startOfWeek(currentDate, { weekStartsOn: 1 }); // Start on Monday\n  const weekEnd = endOfWeek(currentDate, { weekStartsOn: 1 });\n\n  // Format the week range string, handling year change within the week\n  const startYear = format(weekStart, 'yyyy');\n  const endYear = format(weekEnd, 'yyyy');\n  const weekRange = `Semana del ${format(weekStart, 'd MMM', { locale: es })}${startYear !== endYear ? ' ' + startYear : ''} al ${format(weekEnd, 'd MMM yyyy', { locale: es })}`;\n\n  return (\n    <Card className=\"flex items-center justify-center gap-2 px-3 py-2 bg-card shadow-sm border border-border rounded-lg\"> {/* Wrap in Card, add padding */}\n      <Button variant=\"ghost\" size=\"icon\" onClick={onPreviousWeek} className=\"h-9 w-9 text-muted-foreground hover:text-primary\"> {/* Larger button, ghost variant */}\n        <ChevronsLeft className=\"h-5 w-5\" /> {/* Larger icon */}\n        <span className=\"sr-only\">Semana Anterior</span>\n      </Button>\n      <span className=\"text-base font-semibold text-foreground text-center min-w-[220px]\"> {/* Larger, bolder text */}\n        {weekRange}\n      </span>\n      <Button variant=\"ghost\" size=\"icon\" onClick={onNextWeek} className=\"h-9 w-9 text-muted-foreground hover:text-primary\"> {/* Larger button, ghost variant */}\n        <ChevronsRight className=\"h-5 w-5\" /> {/* Larger icon */}\n        <span className=\"sr-only\">Semana Siguiente</span>\n      </Button>\n    </Card>\n  );\n};\n"],"names":[],"mappings":"AAAA,4CAA4C;;;;;AAI5C;AACA;AAAA;AACA;AAAA;AAAA;AACA,oPAAsC,wBAAwB;AAC9D,+NAA6C,6BAA6B;AAP1E;;;;;;;AAeO,MAAM,gBAA8C,CAAC,EAC1D,WAAW,EACX,cAAc,EACd,UAAU,EACX;IACC,MAAM,YAAY,CAAA,GAAA,2IAAA,CAAA,cAAW,AAAD,EAAE,aAAa;QAAE,cAAc;IAAE,IAAI,kBAAkB;IACnF,MAAM,UAAU,CAAA,GAAA,yIAAA,CAAA,YAAS,AAAD,EAAE,aAAa;QAAE,cAAc;IAAE;IAEzD,qEAAqE;IACrE,MAAM,YAAY,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,WAAW;IACpC,MAAM,UAAU,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,SAAS;IAChC,MAAM,YAAY,CAAC,WAAW,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,WAAW,SAAS;QAAE,QAAQ,4IAAA,CAAA,KAAE;IAAC,KAAK,cAAc,UAAU,MAAM,YAAY,GAAG,IAAI,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,SAAS,cAAc;QAAE,QAAQ,4IAAA,CAAA,KAAE;IAAC,IAAI;IAE/K,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;YAAqG;0BACnH,8OAAC,kIAAA,CAAA,SAAM;gBAAC,SAAQ;gBAAQ,MAAK;gBAAO,SAAS;gBAAgB,WAAU;;oBAAmD;kCACxH,8OAAC,sNAAA,CAAA,eAAY;wBAAC,WAAU;;;;;;oBAAY;kCACpC,8OAAC;wBAAK,WAAU;kCAAU;;;;;;;;;;;;0BAE5B,8OAAC;gBAAK,WAAU;;oBAAoE;oBACjF;;;;;;;0BAEH,8OAAC,kIAAA,CAAA,SAAM;gBAAC,SAAQ;gBAAQ,MAAK;gBAAO,SAAS;gBAAY,WAAU;;oBAAmD;kCACpH,8OAAC,wNAAA,CAAA,gBAAa;wBAAC,WAAU;;;;;;oBAAY;kCACrC,8OAAC;wBAAK,WAAU;kCAAU;;;;;;;;;;;;;;;;;;AAIlC","debugId":null}},
    {"offset": {"line": 3000, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3068, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ScheduleNotesModal.tsx"],"sourcesContent":["\n// src/components/schedule/ScheduleNotesModal.tsx\n'use client';\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { format, parse as parseDateFns, isValid as isValidDate, isWithinInterval } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport { Calendar } from '@/components/ui/calendar';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Trash2, CalendarIcon, NotebookPen, PlusCircle, X } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport type { ScheduleNote, Employee } from '@/types/schedule';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface ScheduleNotesModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  notes: ScheduleNote[];\n  employees: Employee[]; // To populate the dropdown\n  onAddNote: (newNoteData: Omit<ScheduleNote, 'id'>) => void;\n  onDeleteNote: (noteId: string) => void; // Renamed prop\n  initialDate?: Date; // Optional initial date when opened from a specific day\n  // New props for filtering based on context\n  viewMode: 'day' | 'week';\n  currentDate: Date; // The date currently focused in the planner (day view target or week start)\n  weekDates?: Date[]; // Array of dates in the current week view\n}\n\nexport const ScheduleNotesModal: React.FC<ScheduleNotesModalProps> = ({\n  isOpen,\n  onClose,\n  notes: allNotes, // Rename prop to avoid conflict\n  employees,\n  onAddNote,\n  onDeleteNote, // Use the renamed prop\n  initialDate, // Receive initial date\n  viewMode,\n  currentDate,\n  weekDates,\n}) => {\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(initialDate || currentDate);\n  const [noteText, setNoteText] = useState('');\n  const [selectedEmployeeId, setSelectedEmployeeId] = useState<string | undefined>(undefined);\n  const [error, setError] = useState<string | null>(null);\n  const [noteToDeleteId, setNoteToDeleteId] = useState<string | null>(null); // State for delete confirmation\n  const { toast } = useToast();\n\n  // Filter notes based on context (initialDate or current view)\n  const displayedNotes = useMemo(() => {\n      if (initialDate) {\n          // If modal opened for a specific day, show only notes for that day\n          const dateKey = format(initialDate, 'yyyy-MM-dd');\n          return allNotes.filter(note => note.date === dateKey);\n      } else if (viewMode === 'week' && weekDates && weekDates.length === 7) {\n          // If opened generally in week view, show notes for the current week\n          const weekInterval = { start: weekDates[0], end: weekDates[6] };\n          return allNotes.filter(note => {\n              const noteDate = parseDateFns(note.date, 'yyyy-MM-dd', new Date());\n              return isValidDate(noteDate) && isWithinInterval(noteDate, weekInterval);\n          }).sort((a, b) => a.date.localeCompare(b.date)); // Sort notes by date within the week\n      } else {\n          // If opened generally in day view, show notes for the selectedDate in the form\n          if (selectedDate) {\n             const dateKey = format(selectedDate, 'yyyy-MM-dd');\n             return allNotes.filter(note => note.date === dateKey);\n          }\n          return []; // Or show all future notes? For now, show for selected day\n      }\n  }, [allNotes, initialDate, viewMode, weekDates, selectedDate]);\n\n  // Reset form when modal opens or initialDate changes\n  useEffect(() => {\n    if (isOpen) {\n      setSelectedDate(initialDate || currentDate); // Use initialDate or the planner's current date\n      setNoteText('');\n      setSelectedEmployeeId(undefined);\n      setError(null);\n      setNoteToDeleteId(null); // Reset delete confirmation on open\n    }\n  }, [isOpen, initialDate, currentDate]);\n\n  const handleAddClick = () => {\n    setError(null);\n    if (!selectedDate) {\n      setError('Por favor selecciona una fecha.');\n      return;\n    }\n    if (!noteText.trim()) {\n      setError('Por favor ingresa una nota.');\n      return;\n    }\n\n    const newNoteData: Omit<ScheduleNote, 'id'> = {\n      date: format(selectedDate, 'yyyy-MM-dd'),\n      note: noteText.trim(),\n      employeeId: selectedEmployeeId || undefined, // Ensure empty string becomes undefined\n    };\n\n    onAddNote(newNoteData);\n\n    // Reset form fields after adding\n    setNoteText('');\n    setSelectedEmployeeId(undefined);\n    // Optionally keep the date or advance it? Keep for now.\n  };\n\n  // Function to actually delete the note after confirmation\n   const confirmDeleteNote = () => {\n       if (noteToDeleteId) {\n           onDeleteNote(noteToDeleteId);\n           setNoteToDeleteId(null); // Close the confirmation dialog\n       }\n   };\n\n  const getModalTitle = () => {\n      if (initialDate) return `Anotaciones para ${format(initialDate, 'PPP', { locale: es })}`;\n      if (viewMode === 'week') return 'Anotaciones de la Semana';\n      if (selectedDate) return `Anotaciones para ${format(selectedDate, 'PPP', { locale: es })}`;\n      return 'Anotaciones Futuras / Eventos';\n  };\n\n   const getModalDescription = () => {\n       if (initialDate) return 'Haz clic en una nota para eliminarla.';\n       if (viewMode === 'week') return 'Notas guardadas para la semana actual. Haz clic en una nota para eliminarla.';\n       if (selectedDate) return `Agrega o elimina notas para el día seleccionado (${format(selectedDate, 'PPP', { locale: es })}).`;\n       return 'Agrega o elimina notas para fechas específicas.';\n   };\n\n\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"sm:max-w-lg max-h-[90vh] flex flex-col\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <NotebookPen className=\"h-5 w-5\" />\n            {getModalTitle()}\n          </DialogTitle>\n          <DialogDescription>\n             {getModalDescription()}\n          </DialogDescription>\n        </DialogHeader>\n\n        {/* --- Formulario para añadir nota (only if not viewing specific date) --- */}\n        {!initialDate && (\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 py-2 border-b pb-4\"> {/* Reduced py and pb */}\n            {/* Date Picker */}\n            <div className=\"space-y-2 sm:col-span-1\">\n                <Label htmlFor=\"note-date\">Fecha</Label>\n                <Popover>\n                <PopoverTrigger asChild>\n                    <Button\n                    id=\"note-date\"\n                    variant={'outline'}\n                    className={cn(\n                        'w-full justify-start text-left font-normal overflow-hidden whitespace-nowrap', // Added overflow styles\n                        !selectedDate && 'text-muted-foreground'\n                    )}\n                    >\n                    <CalendarIcon className=\"mr-2 h-4 w-4 flex-shrink-0\" /> {/* Prevent icon shrinking */}\n                     {/* Use shorter date format and ensure it doesn't overflow */}\n                    <span className=\"truncate\"> {/* Added truncate */}\n                        {selectedDate ? format(selectedDate, 'dd MMM yyyy', { locale: es }) : <span>Selecciona fecha</span>}\n                    </span>\n                    </Button>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\">\n                    <Calendar\n                    mode=\"single\"\n                    selected={selectedDate}\n                    onSelect={setSelectedDate}\n                    initialFocus\n                    locale={es}\n                    />\n                </PopoverContent>\n                </Popover>\n            </div>\n\n            {/* Note Text */}\n            <div className=\"space-y-2 sm:col-span-2\">\n                <Label htmlFor=\"note-text\">Nota / Descripción</Label>\n                <Textarea\n                    id=\"note-text\"\n                    value={noteText}\n                    onChange={(e) => setNoteText(e.target.value)}\n                    placeholder=\"Ej: Cumpleaños Carlos P., Solo hasta mediodía...\"\n                    rows={3}\n                />\n            </div>\n\n            {/* Optional Employee Link */}\n            <div className=\"space-y-2 sm:col-span-3\">\n                <Label htmlFor=\"note-employee\">Colaborador (Opcional)</Label>\n                <Select value={selectedEmployeeId} onValueChange={(value) => setSelectedEmployeeId(value === 'ninguno' ? undefined : value)}>\n                <SelectTrigger id=\"note-employee\">\n                    <SelectValue placeholder=\"Vincular a colaborador...\" />\n                </SelectTrigger>\n                <SelectContent>\n                    <SelectItem value=\"ninguno\">Ninguno</SelectItem>\n                    {employees.map(emp => (\n                    <SelectItem key={emp.id} value={emp.id}>{emp.name}</SelectItem>\n                    ))}\n                </SelectContent>\n                </Select>\n            </div>\n\n            {/* Error Message */}\n            {error && <p className=\"text-sm text-destructive sm:col-span-3\">{error}</p>}\n\n            {/* Add Button */}\n            <div className=\"sm:col-span-3 flex justify-end\">\n                <Button onClick={handleAddClick}>\n                    <PlusCircle className=\"mr-2 h-4 w-4\" /> Añadir Anotación\n                </Button>\n            </div>\n            </div>\n        )}\n\n\n        {/* --- Lista de notas existentes --- */}\n        <div className=\"flex-grow overflow-hidden py-2\"> {/* Reduced py */}\n          <h4 className=\"mb-3 font-medium text-sm text-foreground\">\n             Anotaciones Guardadas ({displayedNotes.length})\n          </h4>\n          {displayedNotes.length > 0 ? (\n            <ScrollArea className=\"h-[40vh] pr-4\"> {/* Increased height */}\n              <ul className=\"space-y-2\">\n                {displayedNotes.map((note) => {\n                   const employeeName = note.employeeId ? employees.find(e => e.id === note.employeeId)?.name : null;\n                   const noteDate = parseDateFns(note.date, 'yyyy-MM-dd', new Date());\n                   // Format date for display: Abbreviated day, numeric day, abbreviated month\n                   const formattedDate = isValidDate(noteDate) ? format(noteDate, 'EEE d MMM', { locale: es }) : note.date;\n                  return (\n                     <li key={note.id} className=\"flex items-start justify-between p-2 border rounded-md bg-background text-sm\">\n                       <div className=\"flex-grow mr-2 overflow-hidden\"> {/* Added overflow-hidden */}\n                         <p className=\"font-medium text-foreground block truncate\">{note.note}</p> {/* Added truncate */}\n                         <span className=\"block text-xs text-muted-foreground truncate\"> {/* Added truncate */}\n                            {formattedDate}\n                            {employeeName ? ` - ${employeeName}` : ''}\n                         </span>\n                       </div>\n                        {/* Delete Button Trigger */}\n                        <AlertDialog>\n                           <AlertDialogTrigger asChild>\n                              <Button\n                                 variant=\"ghost\"\n                                 size=\"icon\"\n                                 className=\"h-6 w-6 text-destructive hover:text-destructive/80 flex-shrink-0\"\n                                 title=\"Eliminar anotación\"\n                                 // onClick={() => setNoteToDeleteId(note.id)} // Set ID to delete on click - MOVED TO AlertDialogTrigger\n                              >\n                                 <Trash2 className=\"h-4 w-4\" />\n                              </Button>\n                            </AlertDialogTrigger>\n                           <AlertDialogContent>\n                             <AlertDialogHeader>\n                               <AlertDialogTitle>¿Eliminar esta anotación?</AlertDialogTitle>\n                               <AlertDialogDescription>\n                                  \"{note.note}\"\n                                  <br />\n                                  Esta acción no se puede deshacer.\n                               </AlertDialogDescription>\n                             </AlertDialogHeader>\n                             <AlertDialogFooter>\n                               <AlertDialogCancel onClick={() => setNoteToDeleteId(null)}>Cancelar</AlertDialogCancel>\n                               <AlertDialogAction\n                                  onClick={() => confirmDeleteNote()} // Call the delete function on confirm\n                                  className=\"bg-destructive hover:bg-destructive/90\">\n                                  Eliminar Anotación\n                               </AlertDialogAction>\n                             </AlertDialogFooter>\n                           </AlertDialogContent>\n                        </AlertDialog>\n                     </li>\n                  );\n                 })}\n              </ul>\n            </ScrollArea>\n          ) : (\n            <p className=\"text-sm text-muted-foreground italic text-center py-4\">\n                 No hay anotaciones guardadas para {initialDate ? 'esta fecha' : (viewMode === 'week' ? 'esta semana' : 'este día')}.\n            </p>\n          )}\n        </div>\n\n        <DialogFooter>\n          <DialogClose asChild>\n            <Button variant=\"secondary\">\n                {/* Icon removed */} Cerrar\n            </Button>\n          </DialogClose>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3704, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/sheet.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close // Export SheetClose\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      {/* Removed the explicit close button with X icon */}\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose, // Ensure SheetClose is exported (still needed for programmatic closing)\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AACA;AAGA;AAPA;;;;;;AASA,MAAM,QAAQ,kKAAA,CAAA,OAAmB;AAEjC,MAAM,eAAe,kKAAA,CAAA,UAAsB;AAE3C,MAAM,aAAa,mKAAqB,oBAAoB;AAAzC,CAAA,QAAoB;AAEvC,MAAM,cAAc,kKAAA,CAAA,SAAqB;AAEzC,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAsB;QACrB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;AAGT,aAAa,WAAW,GAAG,kKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,oMACA;IACE,UAAU;QACR,MAAM;YACJ,KAAK;YACL,QACE;YACF,MAAM;YACN,OACE;QACJ;IACF;IACA,iBAAiB;QACf,MAAM;IACR;AACF;AAOF,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,OAAO,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAsB;gBACrB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;oBAAE;gBAAK,IAAI;gBACtC,GAAG,KAAK;0BAER;;;;;;;;;;;;AAKP,aAAa,WAAW,GAAG,kKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yCAAyC;QACtD,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG,kKAAA,CAAA,QAAoB,CAAC,WAAW;AAEzD,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA0B;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,kKAAA,CAAA,cAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3826, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/SummaryDashboard.tsx"],"sourcesContent":["\n// src/components/schedule/SummaryDashboard.tsx\n'use client';\n\nimport React from 'react';\nimport {\n    Sheet,\n    SheetContent,\n    SheetDescription,\n    SheetHeader,\n    SheetTitle,\n    SheetTrigger,\n    SheetClose,\n} from \"@/components/ui/sheet\";\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { BarChartHorizontal, X } from \"lucide-react\";\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { formatHours } from '@/components/results-display'; // Import formatHours\n\ninterface EmployeeHoursSummary {\n  id: string;\n  name: string;\n  totalHours: number;\n}\n\ninterface SummaryDashboardProps {\n  isOpen: boolean;\n  onOpenChange: (open: boolean) => void;\n  viewMode: 'day' | 'week';\n  targetDate: Date | null;\n  weekDates: Date[];\n  summaryData: EmployeeHoursSummary[];\n}\n\nexport const SummaryDashboard: React.FC<SummaryDashboardProps> = ({\n  isOpen,\n  onOpenChange,\n  viewMode,\n  targetDate,\n  weekDates,\n  summaryData,\n}) => {\n    const getTitle = () => {\n        if (viewMode === 'day' && targetDate) {\n            return `Resumen Horas - ${format(targetDate, 'PPP', { locale: es })}`;\n        } else if (viewMode === 'week' && weekDates.length > 0) {\n            const start = weekDates[0];\n            const end = weekDates[weekDates.length - 1];\n            return `Resumen Horas - Semana ${format(start, 'dd MMM', { locale: es })} a ${format(end, 'dd MMM yyyy', { locale: es })}`;\n        }\n        return 'Resumen de Horas Programadas';\n    };\n\n    const getTotalHours = () => {\n        return summaryData.reduce((total, emp) => total + emp.totalHours, 0);\n    }\n\n  return (\n    <Sheet open={isOpen} onOpenChange={onOpenChange}>\n      <SheetTrigger asChild>\n        <Button variant=\"outline\" className=\"hover:bg-primary hover:text-primary-foreground\">\n          <BarChartHorizontal className=\"mr-2 h-4 w-4\" /> Resumen Horas\n        </Button>\n      </SheetTrigger>\n      <SheetContent side=\"right\" className=\"w-[350px] sm:w-[400px] flex flex-col\"> {/* Increased width */}\n        <SheetHeader className=\"border-b pb-4\">\n          <SheetTitle>{getTitle()}</SheetTitle>\n          <SheetDescription>\n            Total de horas programadas por colaborador en el período visible.\n          </SheetDescription>\n        </SheetHeader>\n        <div className=\"flex-grow overflow-hidden py-4\"> {/* Allow content to grow and scroll */}\n            {summaryData.length > 0 ? (\n                 <ScrollArea className=\"h-full pr-4\">\n                    <ul className=\"space-y-2\">\n                        {summaryData.map((emp) => (\n                            <li key={emp.id} className=\"flex justify-between items-center p-2 border rounded-md bg-background\">\n                                <span className=\"font-medium text-sm text-foreground truncate\">{emp.name}</span>\n                                <span className=\"font-semibold text-sm text-primary\">{formatHours(emp.totalHours)} hrs</span>\n                            </li>\n                        ))}\n                    </ul>\n                 </ScrollArea>\n            ) : (\n                 <p className=\"text-center text-muted-foreground italic py-6\">\n                     No hay turnos asignados en el período visible.\n                 </p>\n            )}\n        </div>\n         <div className=\"border-t pt-4 mt-auto\"> {/* Footer section */}\n             <div className=\"flex justify-between items-center font-bold text-lg text-foreground\">\n                 <span>Total General:</span>\n                 <span>{formatHours(getTotalHours())} hrs</span>\n             </div>\n         </div>\n         {/* Removed explicit close button\n         <SheetClose className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n             <X className=\"h-4 w-4\" />\n             <span className=\"sr-only\">Cerrar</span>\n         </SheetClose>\n         */}\n      </SheetContent>\n    </Sheet>\n  );\n};\n"],"names":[],"mappings":"AACA,+CAA+C;;;;;AAI/C;AASA;AACA;AACA;AACA;AACA;AACA,+OAA4D,qBAAqB;AAjBjF;;;;;;;;;AAkCO,MAAM,mBAAoD,CAAC,EAChE,MAAM,EACN,YAAY,EACZ,QAAQ,EACR,UAAU,EACV,SAAS,EACT,WAAW,EACZ;IACG,MAAM,WAAW;QACb,IAAI,aAAa,SAAS,YAAY;YAClC,OAAO,CAAC,gBAAgB,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,YAAY,OAAO;gBAAE,QAAQ,4IAAA,CAAA,KAAE;YAAC,IAAI;QACzE,OAAO,IAAI,aAAa,UAAU,UAAU,MAAM,GAAG,GAAG;YACpD,MAAM,QAAQ,SAAS,CAAC,EAAE;YAC1B,MAAM,MAAM,SAAS,CAAC,UAAU,MAAM,GAAG,EAAE;YAC3C,OAAO,CAAC,uBAAuB,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,OAAO,UAAU;gBAAE,QAAQ,4IAAA,CAAA,KAAE;YAAC,GAAG,GAAG,EAAE,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,KAAK,eAAe;gBAAE,QAAQ,4IAAA,CAAA,KAAE;YAAC,IAAI;QAC9H;QACA,OAAO;IACX;IAEA,MAAM,gBAAgB;QAClB,OAAO,YAAY,MAAM,CAAC,CAAC,OAAO,MAAQ,QAAQ,IAAI,UAAU,EAAE;IACtE;IAEF,qBACE,8OAAC,iIAAA,CAAA,QAAK;QAAC,MAAM;QAAQ,cAAc;;0BACjC,8OAAC,iIAAA,CAAA,eAAY;gBAAC,OAAO;0BACnB,cAAA,8OAAC,kIAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAU,WAAU;;sCAClC,8OAAC,wNAAA,CAAA,qBAAkB;4BAAC,WAAU;;;;;;wBAAiB;;;;;;;;;;;;0BAGnD,8OAAC,iIAAA,CAAA,eAAY;gBAAC,MAAK;gBAAQ,WAAU;;oBAAuC;kCAC1E,8OAAC,iIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,8OAAC,iIAAA,CAAA,aAAU;0CAAE;;;;;;0CACb,8OAAC,iIAAA,CAAA,mBAAgB;0CAAC;;;;;;;;;;;;kCAIpB,8OAAC;wBAAI,WAAU;;4BAAiC;4BAC3C,YAAY,MAAM,GAAG,kBACjB,8OAAC,0IAAA,CAAA,aAAU;gCAAC,WAAU;0CACnB,cAAA,8OAAC;oCAAG,WAAU;8CACT,YAAY,GAAG,CAAC,CAAC,oBACd,8OAAC;4CAAgB,WAAU;;8DACvB,8OAAC;oDAAK,WAAU;8DAAgD,IAAI,IAAI;;;;;;8DACxE,8OAAC;oDAAK,WAAU;;wDAAsC,CAAA,GAAA,wIAAA,CAAA,cAAW,AAAD,EAAE,IAAI,UAAU;wDAAE;;;;;;;;2CAF7E,IAAI,EAAE;;;;;;;;;;;;;;qDAQ1B,8OAAC;gCAAE,WAAU;0CAAgD;;;;;;;;;;;;kCAKrE,8OAAC;wBAAI,WAAU;;4BAAwB;0CACnC,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;kDAAK;;;;;;kDACN,8OAAC;;4CAAM,CAAA,GAAA,wIAAA,CAAA,cAAW,AAAD,EAAE;4CAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYrD","debugId":null}},
    {"offset": {"line": 4038, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 4091, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/ConfigTabs.tsx"],"sourcesContent":["// src/components/schedule/ConfigTabs.tsx\n'use client';\n\nimport React from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from \"@/components/ui/card\"; // Added CardFooter\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport { PlusCircle, Edit, Trash2, Copy, Upload, Download, UploadCloud, Library } from 'lucide-react'; // Added Library icon\nimport type { Location, Department, Employee, ScheduleTemplate } from '@/types/schedule';\nimport { cn } from '@/lib/utils';\nimport { format, parseISO } from 'date-fns'; // Import format and parseISO\nimport { es } from 'date-fns/locale'; // Import Spanish locale\n\n// Interface for props passed to ConfigTabs\ninterface ConfigTabsProps {\n  locations: Location[];\n  departments: Department[];\n  employees: Employee[];\n  templates: ScheduleTemplate[];\n  selectedLocationId: string;\n  iconMap: { [key: string]: React.ElementType };\n  openConfigForm: (type: 'location' | 'department' | 'employee' | 'template', item?: any) => void;\n  selectedConfigItem: any | null;\n  confirmDeleteItem: (type: 'location' | 'department' | 'employee' | 'template', id: string, name: string) => void;\n  handleCopyEmployeeId: (id: string) => void;\n  handleLoadTemplate: (id: string) => void;\n  configFormType: 'location' | 'department' | 'employee' | 'template' | null;\n  locationFormData: { name: string };\n  setLocationFormData: React.Dispatch<React.SetStateAction<{ name: string }>>;\n  departmentFormData: { name: string; locationId: string; iconName?: string };\n  setDepartmentFormData: React.Dispatch<React.SetStateAction<{ name: string; locationId: string; iconName?: string }>>;\n  employeeFormData: { id: string; name: string; locationIds: string[]; departmentIds: string[] };\n  setEmployeeFormData: React.Dispatch<React.SetStateAction<{ id: string; name: string; locationIds: string[]; departmentIds: string[] }>>;\n  handleSaveLocation: () => void;\n  handleSaveDepartment: () => void;\n  handleSaveEmployee: () => void;\n  setConfigFormType: React.Dispatch<React.SetStateAction<'location' | 'department' | 'employee' | 'template' | null>>;\n  setSelectedConfigItem: React.Dispatch<React.SetStateAction<any | null>>;\n  handleToggleEmployeeLocation: (locationId: string) => void;\n  handleToggleEmployeeDepartment: (departmentId: string) => void; // Added this prop\n  availableDepartmentsForEmployee: Department[];\n  activeTab: string;\n  setActiveTab: (tab: string) => void;\n  locationSearch: string;\n  setLocationSearch: (search: string) => void;\n  departmentSearch: string;\n  setDepartmentSearch: (search: string) => void;\n  employeeSearch: string;\n  setEmployeeSearch: (search: string) => void;\n  templateSearch: string;\n  setTemplateSearch: (search: string) => void;\n  filteredLocationsData: Location[];\n  filteredDepartmentsData: Department[];\n  filteredEmployeesData: Employee[];\n  filteredTemplatesData: ScheduleTemplate[];\n  handleExportConfig: () => void; // Add export handler prop\n  handleImportConfig: (event: React.ChangeEvent<HTMLInputElement>) => void; // Add import handler prop\n  fileInputRef: React.RefObject<HTMLInputElement>; // Add ref prop\n}\n\nexport function ConfigTabs({\n    locations,\n    departments,\n    employees,\n    templates,\n    selectedLocationId,\n    iconMap,\n    openConfigForm,\n    selectedConfigItem,\n    confirmDeleteItem,\n    handleCopyEmployeeId,\n    handleLoadTemplate,\n    configFormType,\n    locationFormData,\n    setLocationFormData,\n    departmentFormData,\n    setDepartmentFormData,\n    employeeFormData,\n    setEmployeeFormData,\n    handleSaveLocation,\n    handleSaveDepartment,\n    handleSaveEmployee,\n    setConfigFormType,\n    setSelectedConfigItem,\n    handleToggleEmployeeLocation,\n    handleToggleEmployeeDepartment, // Destructure the passed prop\n    availableDepartmentsForEmployee,\n    activeTab,\n    setActiveTab, // Use the changed prop name\n    locationSearch,\n    setLocationSearch,\n    departmentSearch,\n    setDepartmentSearch,\n    employeeSearch,\n    setEmployeeSearch,\n    templateSearch,\n    setTemplateSearch,\n    filteredLocationsData,\n    filteredDepartmentsData,\n    filteredEmployeesData,\n    filteredTemplatesData,\n    handleExportConfig, // Destructure export handler\n    handleImportConfig, // Destructure import handler\n    fileInputRef,      // Destructure ref\n}: ConfigTabsProps) {\n\n    const renderConfigListContent = (items: any[], type: 'location' | 'department' | 'employee' | 'template') => (\n         <ScrollArea className=\"h-full border rounded-md p-2\"> {/* Added scroll for list */}\n            {items.map(item => (\n                <div\n                    key={item.id}\n                    onClick={() => openConfigForm(type, item)}\n                    className={cn(\n                        `relative p-2 mb-1 rounded cursor-pointer hover:bg-accent flex items-center justify-between group`, // Added relative\n                        selectedConfigItem?.id === item.id ? 'bg-accent font-semibold' : ''\n                    )}\n                >\n                    <span className=\"truncate flex items-center gap-1 flex-grow min-w-0 mr-10\"> {/* Increased mr */}\n                        {type === 'department' && item.icon && React.createElement(item.icon, { className: 'h-3 w-3 mr-1 flex-shrink-0' })}\n                        {item.name}\n                        {type === 'department' && <span className=\"text-xs italic ml-1\">({locations.find(l => l.id === item.locationId)?.name || 'Sede?'})</span>}\n                        {type === 'employee' && <span className=\"text-xs italic ml-1\">(ID: {item.id})</span>}\n                          {type === 'template' && (\n                             <span className=\"text-xs italic ml-1\">({item.type === 'week' ? 'Semanal' : 'Diario'}, {locations.find(l => l.id === item.locationId)?.name || 'Sede?'})</span>\n                          )}\n                    </span>\n                     <div className=\"absolute top-1/2 right-1 transform -translate-y-1/2 opacity-0 group-hover:opacity-100 transition-opacity flex items-center space-x-0 flex-shrink-0\"> {/* Positioned right */}\n                          <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-muted-foreground hover:text-foreground\" onClick={(e) => { e.stopPropagation(); openConfigForm(type, item); }} title={`Editar ${type}`}>\n                              <Edit className=\"h-4 w-4\" />\n                          </Button>\n                         {type === 'employee' && (\n                             <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-muted-foreground hover:text-foreground\" onClick={(e) => { e.stopPropagation(); handleCopyEmployeeId(item.id); }} title=\"Copiar ID\">\n                                 <Copy className=\"h-4 w-4\" />\n                             </Button>\n                         )}\n                           {type === 'template' && (\n                              <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-muted-foreground hover:text-foreground\" onClick={(e) => { e.stopPropagation(); handleLoadTemplate(item.id); }} title=\"Cargar Template\">\n                                <Upload className=\"h-4 w-4\" />\n                              </Button>\n                           )}\n                          {/* Delete Button Trigger - uses confirmDeleteItem */}\n                          <Button\n                              variant=\"ghost\"\n                              size=\"icon\"\n                              className=\"h-6 w-6 text-destructive hover:bg-destructive/10\"\n                              onClick={(e) => {\n                                  e.stopPropagation(); // Prevent item selection when clicking delete\n                                  confirmDeleteItem(type, item.id, item.name);\n                              }}\n                              title={`Eliminar ${type}`}\n                          >\n                              <Trash2 className=\"h-4 w-4\" />\n                          </Button>\n                     </div>\n                </div>\n            ))}\n            {items.length === 0 && <div className=\"text-center text-muted-foreground p-4\">No hay elementos.</div>}\n        </ScrollArea>\n    );\n\n    const renderConfigDetailForm = () => {\n        if (!configFormType) {\n            return <div className=\"p-4 text-center text-muted-foreground h-full flex items-center justify-center\">Selecciona un elemento de la lista para ver/editar detalles o presiona '+' para crear uno nuevo.</div>;\n        }\n\n        switch (configFormType) {\n            case 'location':\n                return (\n                    <Card className=\"h-full flex flex-col\">\n                        <CardHeader>\n                            <CardTitle>{selectedConfigItem ? 'Editar' : 'Agregar'} Sede</CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"flex-grow space-y-3 overflow-y-auto max-h-[calc(100%_-_150px)]\">\n                            <div>\n                                <Label htmlFor=\"location-name\">Nombre</Label>\n                                <Input id=\"location-name\" value={locationFormData.name} onChange={(e) => setLocationFormData({ name: e.target.value })} placeholder=\"Nombre de la Sede\" />\n                            </div>\n                        </CardContent>\n                         <CardFooter className=\"flex justify-end gap-2 border-t pt-4\">\n                            <Button variant=\"ghost\" onClick={() => { setConfigFormType(null); setSelectedConfigItem(null); }}>Cancelar</Button>\n                            <Button onClick={handleSaveLocation}>Guardar Sede</Button>\n                        </CardFooter>\n                    </Card>\n                );\n            case 'department':\n                return (\n                    <Card className=\"h-full flex flex-col\">\n                        <CardHeader>\n                            <CardTitle>{selectedConfigItem ? 'Editar' : 'Agregar'} Departamento</CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"flex-grow space-y-3 overflow-y-auto max-h-[calc(100%_-_150px)]\"> {/* Added scroll */}\n                            <div>\n                                <Label htmlFor=\"department-name\">Nombre</Label>\n                                <Input id=\"department-name\" value={departmentFormData.name} onChange={(e) => setDepartmentFormData(prev => ({ ...prev, name: e.target.value }))} placeholder=\"Nombre del Departamento\" />\n                            </div>\n                            <div>\n                                <Label htmlFor=\"department-location\">Sede</Label>\n                                <Select value={departmentFormData.locationId} onValueChange={(value) => setDepartmentFormData(prev => ({ ...prev, locationId: value }))}>\n                                    <SelectTrigger id=\"department-location\"><SelectValue placeholder=\"Selecciona una sede\" /></SelectTrigger>\n                                    <SelectContent> {locations.map(loc => <SelectItem key={loc.id} value={loc.id}>{loc.name}</SelectItem>)} </SelectContent>\n                                </Select>\n                            </div>\n                            <div>\n                                <Label htmlFor=\"department-icon\">Icono (Opcional)</Label>\n                                <Select value={departmentFormData.iconName} onValueChange={(value) => setDepartmentFormData(prev => ({ ...prev, iconName: value === 'ninguno' ? undefined : value }))}>\n                                    <SelectTrigger id=\"department-icon\"><SelectValue placeholder=\"Selecciona icono\" /></SelectTrigger>\n                                    <SelectContent>\n                                        <SelectItem value=\"ninguno\">Ninguno</SelectItem>\n                                         {Object.keys(iconMap).map(iconName => <SelectItem key={iconName} value={iconName}><span className='flex items-center gap-2'>{React.createElement(iconMap[iconName], { className: 'h-4 w-4' })} {/* Removed label */}</span></SelectItem>)}\n                                    </SelectContent>\n                                </Select>\n                            </div>\n                        </CardContent>\n                         <CardFooter className=\"flex justify-end gap-2 border-t pt-4\">\n                            <Button variant=\"ghost\" onClick={() => { setConfigFormType(null); setSelectedConfigItem(null); }}>Cancelar</Button>\n                            <Button onClick={handleSaveDepartment}>Guardar Departamento</Button>\n                        </CardFooter>\n                    </Card>\n                );\n            case 'employee':\n                return (\n                     <Card className=\"h-full flex flex-col\">\n                        <CardHeader>\n                            <CardTitle>{selectedConfigItem ? 'Editar' : 'Agregar'} Colaborador</CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"flex-grow space-y-3 overflow-y-auto max-h-[calc(100%_-_150px)]\"> {/* Make content scrollable */}\n                            <div>\n                                <Label htmlFor=\"employee-id\">ID Colaborador</Label>\n                                <Input id=\"employee-id\" value={employeeFormData.id} onChange={(e) => setEmployeeFormData(prev => ({ ...prev, id: e.target.value }))} placeholder=\"ID (Ej: Cédula)\" disabled={!!selectedConfigItem} />\n                            </div>\n                            <div>\n                                <Label htmlFor=\"employee-name\">Nombre Completo</Label>\n                                <Input id=\"employee-name\" value={employeeFormData.name} onChange={(e) => setEmployeeFormData(prev => ({ ...prev, name: e.target.value }))} placeholder=\"Nombre y Apellido\" />\n                            </div>\n                            <div>\n                                <Label>Sedes</Label>\n                                <DropdownMenu>\n                                    <DropdownMenuTrigger asChild>\n                                        <Button variant=\"outline\" className=\"w-full justify-start\">\n                                            {employeeFormData.locationIds.length > 0\n                                                ? employeeFormData.locationIds\n                                                    .map(id => locations.find(l => l.id === id)?.name)\n                                                    .filter(Boolean)\n                                                    .join(', ')\n                                                : \"Seleccionar Sedes\"}\n                                        </Button>\n                                    </DropdownMenuTrigger>\n                                    <DropdownMenuContent className=\"w-56\">\n                                        <DropdownMenuLabel>Sedes Disponibles</DropdownMenuLabel>\n                                        <DropdownMenuSeparator />\n                                        {locations.map((location) => (\n                                            <DropdownMenuCheckboxItem\n                                                key={location.id}\n                                                checked={employeeFormData.locationIds.includes(location.id)}\n                                                onCheckedChange={() => handleToggleEmployeeLocation(location.id)}\n                                            >\n                                                {location.name}\n                                            </DropdownMenuCheckboxItem>\n                                        ))}\n                                    </DropdownMenuContent>\n                                </DropdownMenu>\n                            </div>\n                            <div>\n                                <Label>Departamentos (Opcional)</Label>\n                                <DropdownMenu>\n                                    <DropdownMenuTrigger asChild>\n                                        <Button variant=\"outline\" className=\"w-full justify-start\" disabled={availableDepartmentsForEmployee.length === 0}>\n                                            {employeeFormData.departmentIds.length > 0\n                                                ? employeeFormData.departmentIds\n                                                    .map(id => departments.find(d => d.id === id)?.name)\n                                                    .filter(Boolean)\n                                                    .join(', ')\n                                                : (availableDepartmentsForEmployee.length === 0 ? \"Primero selecciona sede\" : \"Seleccionar Deptos\")}\n                                        </Button>\n                                    </DropdownMenuTrigger>\n                                    <DropdownMenuContent className=\"w-56\">\n                                        <DropdownMenuLabel>Departamentos Disponibles</DropdownMenuLabel>\n                                        <DropdownMenuSeparator />\n                                        {availableDepartmentsForEmployee.map((dept) => (\n                                            <DropdownMenuCheckboxItem\n                                                key={dept.id}\n                                                checked={employeeFormData.departmentIds.includes(dept.id)}\n                                                onCheckedChange={() => handleToggleEmployeeDepartment(dept.id)}\n                                            >\n                                                {dept.name} <span className=\"text-xs text-muted-foreground ml-1\">({locations.find(l => l.id === dept.locationId)?.name})</span>\n                                            </DropdownMenuCheckboxItem>\n                                        ))}\n                                        {availableDepartmentsForEmployee.length === 0 && <DropdownMenuItem disabled>No hay departamentos para las sedes seleccionadas.</DropdownMenuItem>}\n                                    </DropdownMenuContent>\n                                </DropdownMenu>\n                            </div>\n                        </CardContent>\n                         <CardFooter className=\"flex justify-between gap-2 border-t pt-4\"> {/* Changed justify-end to justify-between */}\n                            {selectedConfigItem && ( // Show delete button only when editing\n                                <Button\n                                     variant=\"destructive\"\n                                     onClick={() => confirmDeleteItem('employee', selectedConfigItem.id, selectedConfigItem.name)} // Trigger confirmation\n                                >\n                                     <Trash2 className=\"mr-2 h-4 w-4\" /> Eliminar Colaborador\n                                </Button>\n                            )}\n                            <div className=\"flex gap-2 ml-auto\"> {/* Group Cancel and Save */}\n                                <Button variant=\"ghost\" onClick={() => { setConfigFormType(null); setSelectedConfigItem(null); }}>Cancelar</Button>\n                                <Button onClick={handleSaveEmployee}>Guardar Colaborador</Button>\n                            </div>\n                         </CardFooter>\n                    </Card>\n                );\n             case 'template':\n                 return (\n                     <Card className=\"h-full flex flex-col\">\n                         <CardHeader>\n                             <CardTitle>{selectedConfigItem ? 'Detalles Template' : 'Agregar Template (Manual no implementado)'}</CardTitle>\n                         </CardHeader>\n                         <CardContent className=\"flex-grow space-y-3 overflow-y-auto max-h-[calc(100%_-_150px)]\">\n                             {selectedConfigItem ? (\n                                 <>\n                                     <div><Label>Nombre:</Label> <p>{selectedConfigItem.name}</p></div>\n                                     <div><Label>Tipo:</Label> <p>{selectedConfigItem.type === 'week' ? 'Semanal' : 'Diario'}</p></div>\n                                     <div><Label>Sede:</Label> <p>{locations.find(l => l.id === selectedConfigItem.locationId)?.name || 'N/A'}</p></div>\n                                     <div><Label>Creado:</Label> <p>{selectedConfigItem.createdAt instanceof Date ? format(selectedConfigItem.createdAt, 'dd MMM yyyy, HH:mm', { locale: es }) : (typeof selectedConfigItem.createdAt === 'string' ? format(parseISO(selectedConfigItem.createdAt), 'dd MMM yyyy, HH:mm', { locale: es }) : 'N/A')}</p></div>\n                                      <Textarea readOnly value={JSON.stringify(selectedConfigItem.assignments, null, 2)} rows={10} />\n                                 </>\n                             ) : (\n                                 <p className=\"text-muted-foreground\">La creación manual de templates no está implementada. Guarda templates desde el planificador.</p>\n                             )}\n                         </CardContent>\n                         <CardFooter className=\"flex justify-between gap-2 border-t pt-4\">\n                             {selectedConfigItem && ( // Show delete button only when viewing details\n                                <Button\n                                    variant=\"destructive\"\n                                    onClick={() => confirmDeleteItem('template', selectedConfigItem.id, selectedConfigItem.name)} // Trigger confirmation\n                                >\n                                     <Trash2 className=\"mr-2 h-4 w-4\" /> Eliminar Template\n                                </Button>\n                             )}\n                              <div className=\"flex gap-2 ml-auto\">\n                                <Button variant=\"ghost\" onClick={() => { setConfigFormType(null); setSelectedConfigItem(null); }}>Cerrar</Button>\n                                {selectedConfigItem && ( // Show Load button only when viewing details\n                                     <Button onClick={() => handleLoadTemplate(selectedConfigItem.id)}>\n                                        <Upload className=\"mr-2 h-4 w-4\" /> Cargar Template\n                                     </Button>\n                                )}\n                             </div>\n                         </CardFooter>\n                     </Card>\n                 );\n        }\n    };\n\n  return (\n     <Tabs defaultValue=\"sedes\" className=\"w-full h-full flex flex-col\" value={activeTab} onValueChange={ tabValue => { setActiveTab(tabValue); setConfigFormType(null); setSelectedConfigItem(null); } }>\n       <TabsList className=\"grid w-full grid-cols-4 mb-4 flex-shrink-0\"> {/* Ensure TabsList doesn't shrink */}\n         <TabsTrigger value=\"sedes\">Sedes</TabsTrigger>\n         <TabsTrigger value=\"departamentos\">Departamentos</TabsTrigger>\n         <TabsTrigger value=\"colaboradores\">Colaboradores</TabsTrigger>\n         <TabsTrigger value=\"templates\">Templates</TabsTrigger>\n       </TabsList>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 flex-grow overflow-hidden\"> {/* Layout Lista + Detalle */}\n             <div className=\"md:col-span-1 flex flex-col gap-4 h-full overflow-hidden\">\n                 <div className=\"flex items-center gap-2 flex-shrink-0\">\n                     <Input\n                         placeholder={`Buscar en ${activeTab}...`}\n                         className=\"flex-grow\"\n                         value={\n                             activeTab === 'sedes' ? locationSearch :\n                             activeTab === 'departamentos' ? departmentSearch :\n                             activeTab === 'colaboradores' ? employeeSearch :\n                             templateSearch\n                         }\n                         onChange={(e) => {\n                             const value = e.target.value;\n                             if (activeTab === 'sedes') setLocationSearch(value);\n                             else if (activeTab === 'departamentos') setDepartmentSearch(value);\n                             else if (activeTab === 'colaboradores') setEmployeeSearch(value);\n                             else if (activeTab === 'templates') setTemplateSearch(value);\n                         }}\n                     />\n                    <Button\n                        variant=\"outline\"\n                        size=\"icon\"\n                        onClick={() => {\n                            const typeMap: Record<string, 'location' | 'department' | 'employee' | 'template'> = {\n                                sedes: 'location',\n                                departamentos: 'department',\n                                colaboradores: 'employee',\n                                templates: 'template',\n                            };\n                            const formType = typeMap[activeTab];\n                            // Reset form data for the active tab type when adding new\n                            setSelectedConfigItem(null); // Ensure no item is selected\n                            if (formType === 'location') setLocationFormData({ name: '' });\n                            else if (formType === 'department') setDepartmentFormData({ name: '', locationId: selectedLocationId || (locations.length > 0 ? locations[0].id : ''), iconName: undefined });\n                            else if (formType === 'employee') setEmployeeFormData({ id: '', name: '', locationIds: selectedLocationId ? [selectedLocationId] : [], departmentIds: [] });\n                            // No need to reset form for template as adding manually is disabled\n\n                            if (formType && formType !== 'template') { // Only open form if not template\n                                openConfigForm(formType, null);\n                            } else if (formType === 'template') {\n                                 toast({ title: \"Info\", description: \"La creación manual de templates no está habilitada. Guarda desde el planificador.\", variant: \"default\" });\n                            }\n                        }}\n                        title={`Agregar ${activeTab}`}\n                        disabled={activeTab === 'templates'} // Disable adding templates manually\n                    >\n                        <PlusCircle className=\"h-4 w-4\" />\n                    </Button>\n\n                 </div>\n\n                 <div className=\"flex-grow overflow-hidden\"> {/* Make list area scrollable */}\n                     <TabsContent value=\"sedes\" className=\"mt-0 h-full\"> {renderConfigListContent(filteredLocationsData, 'location')} </TabsContent>\n                     <TabsContent value=\"departamentos\" className=\"mt-0 h-full\"> {renderConfigListContent(filteredDepartmentsData, 'department')} </TabsContent>\n                     <TabsContent value=\"colaboradores\" className=\"mt-0 h-full\"> {renderConfigListContent(filteredEmployeesData, 'employee')} </TabsContent>\n                     <TabsContent value=\"templates\" className=\"mt-0 h-full\"> {renderConfigListContent(filteredTemplatesData, 'template')} </TabsContent>\n                 </div>\n             </div>\n\n             <div className=\"md:col-span-2 h-full overflow-hidden\"> {/* Ensure form area uses available height */}\n                 {renderConfigDetailForm()}\n             </div>\n         </div>\n     </Tabs>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5406, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/schedule/EmployeeSelectionModal.tsx"],"sourcesContent":["\n// src/components/schedule/EmployeeSelectionModal.tsx\n'use client';\n\nimport React from 'react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogClose,\n  DialogFooter,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { ScrollArea } from '@/components/ui/scroll-area'; // Use ScrollArea for potentially long lists\nimport type { Employee } from '@/types/schedule';\nimport { format } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { X, UserPlus } from 'lucide-react';\n\ninterface EmployeeSelectionModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  employees: Employee[];\n  onSelectEmployee: (employee: Employee) => void;\n  departmentName: string;\n  date: Date;\n}\n\nexport const EmployeeSelectionModal: React.FC<EmployeeSelectionModalProps> = ({\n  isOpen,\n  onClose,\n  employees,\n  onSelectEmployee,\n  departmentName,\n  date,\n}) => {\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>Seleccionar Colaborador</DialogTitle>\n          <DialogDescription>\n            Elige un colaborador disponible para asignar a <strong>{departmentName}</strong> el{' '}\n            <strong>{format(date, 'PPP', { locale: es })}</strong>.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"py-4\">\n           {employees.length > 0 ? (\n             <ScrollArea className=\"h-[300px] pr-4\"> {/* Add max height and scrolling */}\n                <div className=\"space-y-2\">\n                  {employees.map((employee) => (\n                    <Button\n                      key={employee.id}\n                      variant=\"outline\"\n                      className=\"w-full justify-start\"\n                      onClick={() => onSelectEmployee(employee)}\n                    >\n                       <UserPlus className=\"mr-2 h-4 w-4\" /> {employee.name}\n                    </Button>\n                  ))}\n                </div>\n             </ScrollArea>\n           ) : (\n             <p className=\"text-center text-muted-foreground italic\">\n               No hay colaboradores disponibles para asignar en esta fecha/departamento.\n             </p>\n           )}\n        </div>\n         <DialogFooter>\n             <DialogClose asChild>\n                 <Button type=\"button\" variant=\"outline\">\n                     {/* Icon removed */} Cancelar\n                 </Button>\n             </DialogClose>\n         </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n"],"names":[],"mappings":"AACA,qDAAqD;;;;;AAIrD;AASA;AACA,gPAA0D,4CAA4C;AAEtG;AACA;AACA;AAjBA;;;;;;;;AA4BO,MAAM,yBAAgE,CAAC,EAC5E,MAAM,EACN,OAAO,EACP,SAAS,EACT,gBAAgB,EAChB,cAAc,EACd,IAAI,EACL;IACC,qBACE,8OAAC,kIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc,CAAC,OAAS,CAAC,QAAQ;kBACrD,cAAA,8OAAC,kIAAA,CAAA,gBAAa;YAAC,WAAU;;8BACvB,8OAAC,kIAAA,CAAA,eAAY;;sCACX,8OAAC,kIAAA,CAAA,cAAW;sCAAC;;;;;;sCACb,8OAAC,kIAAA,CAAA,oBAAiB;;gCAAC;8CAC8B,8OAAC;8CAAQ;;;;;;gCAAwB;gCAAI;8CACpF,8OAAC;8CAAQ,CAAA,GAAA,sJAAA,CAAA,SAAM,AAAD,EAAE,MAAM,OAAO;wCAAE,QAAQ,4IAAA,CAAA,KAAE;oCAAC;;;;;;gCAAY;;;;;;;;;;;;;8BAG1D,8OAAC;oBAAI,WAAU;8BACX,UAAU,MAAM,GAAG,kBAClB,8OAAC,0IAAA,CAAA,aAAU;wBAAC,WAAU;;4BAAiB;0CACpC,8OAAC;gCAAI,WAAU;0CACZ,UAAU,GAAG,CAAC,CAAC,yBACd,8OAAC,kIAAA,CAAA,SAAM;wCAEL,SAAQ;wCACR,WAAU;wCACV,SAAS,IAAM,iBAAiB;;0DAE/B,8OAAC,8MAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;4CAAiB;4CAAE,SAAS,IAAI;;uCALhD,SAAS,EAAE;;;;;;;;;;;;;;;6CAWzB,8OAAC;wBAAE,WAAU;kCAA2C;;;;;;;;;;;8BAK5D,8OAAC,kIAAA,CAAA,eAAY;8BACT,cAAA,8OAAC,kIAAA,CAAA,cAAW;wBAAC,OAAO;kCAChB,cAAA,8OAAC,kIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,SAAQ;sCACN;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOzC","debugId":null}},
    {"offset": {"line": 5566, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/services/colombian-holidays.ts"],"sourcesContent":["/**\n * Representa una fecha.\n */\nexport interface Date {\n  year: number;\n  month: number; // 1-12\n  day: number;\n}\n\n/**\n * Obtiene de forma asíncrona una lista de festivos colombianos para un año dado.\n *\n * @param year El año para el cual obtener los festivos.\n * @returns Una promesa que resuelve a un array de objetos Date representando los festivos.\n */\nexport async function getColombianHolidays(year: number): Promise<Date[]> {\n  // TODO: Implementar esto llamando a una API externa o usando una biblioteca confiable.\n  // Ejemplo de estructura placeholder:\n  // const response = await fetch(`https://api.example.com/holidays/co/${year}`);\n  // if (!response.ok) {\n  //   throw new Error('Fallo al obtener los festivos');\n  // }\n  // const holidays = await response.json();\n  // return holidays.map(holiday => ({ year: year, month: ..., day: ... }));\n\n   console.warn(`Obteniendo festivos para ${year} - Usando datos de ejemplo. Implementar llamada API.`);\n\n   // Datos de ejemplo SOLO para desarrollo/pruebas\n   if (year === 2024) {\n        return [\n            { year: 2024, month: 1, day: 1 }, { year: 2024, month: 1, day: 8 }, // Año Nuevo, Reyes Magos\n            { year: 2024, month: 3, day: 25 }, { year: 2024, month: 3, day: 28 }, // San José, Jueves Santo\n            { year: 2024, month: 3, day: 29 }, { year: 2024, month: 5, day: 1 }, // Viernes Santo, Día del Trabajo\n            { year: 2024, month: 5, day: 13 }, { year: 2024, month: 6, day: 3 }, // Ascensión del Señor, Corpus Christi\n            { year: 2024, month: 6, day: 10 }, { year: 2024, month: 7, day: 1 }, // Sagrado Corazón, San Pedro y San Pablo\n            { year: 2024, month: 7, day: 20 }, { year: 2024, month: 8, day: 7 }, // Independencia, Batalla de Boyacá\n            { year: 2024, month: 8, day: 19 }, { year: 2024, month: 10, day: 14 }, // Asunción de la Virgen, Día de la Raza\n            { year: 2024, month: 11, day: 4 }, { year: 2024, month: 11, day: 11 }, // Todos los Santos, Independencia de Cartagena\n            { year: 2024, month: 12, day: 8 }, { year: 2024, month: 12, day: 25 } // Inmaculada Concepción, Navidad\n        ];\n   }\n   if (year === 2025) {\n     return [\n       { year: 2025, month: 1, day: 1 }, { year: 2025, month: 1, day: 6 }, // Año Nuevo, Reyes Magos\n       { year: 2025, month: 3, day: 24 }, { year: 2025, month: 4, day: 17 }, // San José, Jueves Santo\n       { year: 2025, month: 4, day: 18 }, { year: 2025, month: 5, day: 1 }, // Viernes Santo, Día del Trabajo\n       { year: 2025, month: 6, day: 2 }, { year: 2025, month: 6, day: 23 }, // Ascensión del Señor, Corpus Christi\n       { year: 2025, month: 6, day: 30 }, { year: 2025, month: 7, day: 20 }, // Sagrado Corazón, San Pedro y San Pablo (Nota: 20 Julio cae Domingo, no se traslada)\n       { year: 2025, month: 8, day: 7 }, { year: 2025, month: 8, day: 18 }, // Batalla de Boyacá, Asunción de la Virgen\n       { year: 2025, month: 10, day: 13 }, { year: 2025, month: 11, day: 3 }, // Día de la Raza, Todos los Santos\n       { year: 2025, month: 11, day: 17 }, { year: 2025, month: 12, day: 8 }, // Independencia de Cartagena, Inmaculada Concepción\n       { year: 2025, month: 12, day: 25 } // Navidad\n     ];\n   }\n    if (year === 2023) {\n        return [\n            { year: 2023, month: 1, day: 1 }, { year: 2023, month: 1, day: 9 },\n            { year: 2023, month: 3, day: 20 }, { year: 2023, month: 4, day: 6 },\n            { year: 2023, month: 4, day: 7 }, { year: 2023, month: 5, day: 1 },\n            { year: 2023, month: 5, day: 22 }, { year: 2023, month: 6, day: 12 },\n            { year: 2023, month: 6, day: 19 }, { year: 2023, month: 7, day: 3 },\n            { year: 2023, month: 7, day: 20 }, { year: 2023, month: 8, day: 7 },\n            { year: 2023, month: 8, day: 21 }, { year: 2023, month: 10, day: 16 },\n            { year: 2023, month: 11, day: 6 }, { year: 2023, month: 11, day: 13 },\n            { year: 2023, month: 12, day: 8 }, { year: 2023, month: 12, day: 25 }\n        ];\n    }\n\n\n  // Retorna array vacío si no hay datos de ejemplo o la API falla en el futuro\n  return [];\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5876, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/schedule-pdf-exporter.ts"],"sourcesContent":["\n// src/lib/schedule-pdf-exporter.ts\nimport jsPDF from 'jspdf';\nimport autoTable from 'jspdf-autotable';\nimport { format, parse, startOfWeek, endOfWeek, getDay } from 'date-fns'; // Added startOfWeek, endOfWeek, getDay\nimport { es } from 'date-fns/locale';\nimport type { ScheduleData, Department, Employee, ShiftAssignment } from '@/types/schedule';\nimport { formatTo12Hour } from './time-utils'; // Import the helper\n\n// Extend jsPDF interface for autoTable\ndeclare module 'jspdf' {\n  interface jsPDF {\n    autoTable: (options: any) => jsPDF;\n  }\n}\n\n// Interface for single location data\nexport interface ScheduleExportData {\n    locationName: string;\n    weekDates: Date[];\n    departments: Department[];\n    employees: Employee[]; // List of all employees for the selected location\n    scheduleData: { [dateKey: string]: ScheduleData };\n    getScheduleForDate: (date: Date) => ScheduleData;\n    calculateShiftDuration: (assignment: ShiftAssignment, shiftDate: Date) => number;\n}\n\n// Helper to add the watermark header and company logo/name\nfunction addHeaderAndWatermark(doc: jsPDF, initialY: number = 10): number {\n    const pageHeight = doc.internal.pageSize.height;\n    const pageWidth = doc.internal.pageSize.width;\n    const watermarkText = \"Desarrollado por Duber Parra, Dpana company © 2025 Calculadora de Turnos y Recargos\";\n    const leftMargin = 40; // Consistent with table margin\n    let currentYPos = initialY;\n\n    // --- Company Logo and Name (if available) ---\n    if (typeof window !== 'undefined') {\n        const companyLogoDataUrl = localStorage.getItem('companyLogo');\n        const companyName = localStorage.getItem('companyName');\n\n        if (companyLogoDataUrl) {\n            try {\n                const logoSize = 15; // Adjust size as needed\n                doc.addImage(companyLogoDataUrl, 'PNG', leftMargin, currentYPos, logoSize, logoSize);\n                if (companyName) {\n                    doc.setFontSize(10);\n                    doc.setFont('helvetica', 'bold');\n                    doc.text(companyName, leftMargin + logoSize + 3, currentYPos + logoSize / 2 + 3);\n                }\n                currentYPos += logoSize + 5; // Space after logo/name\n            } catch (e) {\n                console.error(\"Error adding company logo to PDF:\", e);\n            }\n        } else if (companyName) {\n            doc.setFontSize(10);\n            doc.setFont('helvetica', 'bold');\n            doc.text(companyName, leftMargin, currentYPos + 5);\n            currentYPos += 10; // Space after name\n        }\n    }\n\n    // --- Watermark ---\n    doc.setFontSize(8);\n    doc.setFont('helvetica', 'italic');\n    doc.setTextColor(150);\n    doc.text(watermarkText, pageWidth / 2, currentYPos, { align: 'center' });\n    doc.setTextColor(0);\n    doc.setFont('helvetica', 'normal');\n    return currentYPos + 5; // Return the Y position below the watermark\n}\n\n\n// --- Single Location PDF Export ---\nexport function exportScheduleToPDF(data: ScheduleExportData): void {\n    const doc = new jsPDF({\n        orientation: 'landscape', // Landscape for week view\n        unit: 'pt', // Use points for better precision\n        format: 'a4' // Standard A4 size\n    });\n\n    const pageHeight = doc.internal.pageSize.height;\n    const pageWidth = doc.internal.pageSize.width;\n    let currentY = 10;\n    const leftMargin = 40;\n    const rightMargin = 40;\n    const tableWidth = pageWidth - leftMargin - rightMargin;\n\n     // --- Header with Watermark, Logo, Name ---\n     currentY = addHeaderAndWatermark(doc, 10);\n\n    // --- Header ---\n    doc.setFontSize(16);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Horario Semanal de Trabajo', pageWidth / 2, currentY, { align: 'center' });\n    currentY += 20;\n\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n    const weekStartFormatted = format(data.weekDates[0], 'dd MMMM', { locale: es });\n    const weekEndFormatted = format(data.weekDates[6], 'dd MMMM yyyy', { locale: es });\n    doc.text(`Sede: ${data.locationName}`, leftMargin, currentY);\n    doc.text(`Semana: ${weekStartFormatted} - ${weekEndFormatted}`, pageWidth - rightMargin, currentY, { align: 'right' });\n    currentY += 30;\n\n    // --- Table Setup ---\n    const head: any[] = [\n        [{ content: 'EMPLEADO / DÍA', styles: { halign: 'left', valign: 'middle' } }] // First header cell for employee names\n    ];\n    // Add days of the week to header\n    data.weekDates.forEach(date => {\n        head[0].push({\n            content: `${format(date, 'EEE', { locale: es }).toUpperCase()}\\n${format(date, 'dd MMM', { locale: es })}`,\n            styles: { halign: 'center', valign: 'middle' }\n        });\n    });\n\n    const body: any[] = [];\n\n    // Iterate through employees associated with this location\n    data.employees.forEach(emp => {\n        const employeeRow: any[] = [{ content: emp.name, styles: { valign: 'middle' } }]; // First cell is employee name\n        let hasShiftThisWeek = false;\n\n        data.weekDates.forEach(date => {\n            const daySchedule = data.getScheduleForDate(date);\n            let assignmentFound = false;\n            let cellContent = ' '; // Default to empty space\n\n            // Check all departments for an assignment for this employee on this date\n            data.departments.forEach(dept => {\n                const assignment = (daySchedule.assignments[dept.id] || []).find(a => a.employee.id === emp.id);\n                if (assignment) {\n                    assignmentFound = true;\n                    hasShiftThisWeek = true;\n                    cellContent = `${formatTo12Hour(assignment.startTime)} - ${formatTo12Hour(assignment.endTime)}`;\n                    if (assignment.includeBreak && assignment.breakStartTime && assignment.breakEndTime) {\n                        cellContent += `\\nD: ${formatTo12Hour(assignment.breakStartTime)}-${formatTo12Hour(assignment.breakEndTime)}`;\n                    }\n                     // Optionally add department info if needed, e.g., `\\n(${dept.name})`\n                }\n            });\n\n             if (assignmentFound) {\n                  employeeRow.push({ content: cellContent, styles: { halign: 'center', valign: 'middle', fontSize: 8 } });\n             } else {\n                  employeeRow.push({ content: ' ', styles: { halign: 'center', valign: 'middle', textColor: [150, 150, 150], fontSize: 8 } }); // Empty space for no shift\n             }\n        });\n\n         // Only add the employee row if they had at least one shift in the week for this location\n         if (hasShiftThisWeek) {\n            body.push(employeeRow);\n         }\n    });\n\n\n    // --- Draw Table ---\n    autoTable(doc, {\n        head: head,\n        body: body,\n        startY: currentY,\n        theme: 'grid',\n        headStyles: {\n            fillColor: [76, 67, 223], // Primary color #4C43DF\n            textColor: [255, 255, 255], // White text\n            fontSize: 9,\n            lineWidth: 0.5,\n            lineColor: [200, 200, 200]\n        },\n        columnStyles: {\n            0: { cellWidth: 100, fontStyle: 'bold' }, // Employee name column wider and bold\n             // Dynamically apply styles to day columns\n             ...Array.from({ length: data.weekDates.length }).reduce((styles, _, index) => {\n                styles[index + 1] = { cellWidth: 'auto', halign: 'center', fontSize: 8 }; // Smaller font size for shifts\n                return styles;\n            }, {} as any)\n        },\n        styles: {\n            cellPadding: 4,\n            fontSize: 9,\n            overflow: 'linebreak', // Break long text\n            lineWidth: 0.5,\n            lineColor: [200, 200, 200]\n        },\n        didDrawPage: (hookData) => {\n             currentY = hookData.cursor?.y ?? currentY;\n             const pageNum = doc.internal.getNumberOfPages();\n             addHeaderAndWatermark(doc, 10); // Add watermark near top\n             doc.setFontSize(8);\n             doc.setTextColor(150); // Keep footer text gray\n             doc.text(`Página ${pageNum}`, pageWidth - rightMargin, pageHeight - 10, { align: 'right' });\n             doc.setTextColor(0); // Reset text color\n         }\n    });\n\n    // --- Save the PDF ---\n    const timestamp = format(new Date(), 'yyyyMMdd_HHmmss');\n    const filename = `Horario_Semanal_${data.locationName}_${timestamp}.pdf`;\n    doc.save(filename);\n}\n\n\n// --- Consolidated PDF Export (All Locations) ---\nexport function exportConsolidatedScheduleToPDF(allLocationData: ScheduleExportData[]): void {\n    const doc = new jsPDF({\n        orientation: 'landscape',\n        unit: 'pt',\n        format: 'a4'\n    });\n\n    const pageHeight = doc.internal.pageSize.height;\n    const pageWidth = doc.internal.pageSize.width;\n    let currentY = 10;\n    const leftMargin = 40;\n    const rightMargin = 40;\n\n    // --- Header with Watermark, Logo, Name ---\n    currentY = addHeaderAndWatermark(doc, 10);\n\n    // --- Main Header ---\n    doc.setFontSize(16);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Horario Semanal Consolidado', pageWidth / 2, currentY, { align: 'center' });\n    currentY += 20;\n\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'normal');\n     // Add Company Name if available\n     if (typeof window !== 'undefined') {\n        const companyName = localStorage.getItem('companyName');\n        if (companyName) {\n            doc.text(companyName, pageWidth / 2, currentY, { align: 'center' });\n            currentY += 15; // Add space after company name\n        }\n    }\n    const weekStartFormatted = format(allLocationData[0].weekDates[0], 'dd MMMM', { locale: es });\n    const weekEndFormatted = format(allLocationData[0].weekDates[6], 'dd MMMM yyyy', { locale: es });\n    doc.text(`Semana: ${weekStartFormatted} - ${weekEndFormatted}`, pageWidth / 2, currentY, { align: 'center' });\n    currentY += 30;\n\n\n    // --- Table Setup ---\n    const head: any[] = [\n        [{ content: 'EMPLEADO / SEDE / DÍA', styles: { halign: 'left', valign: 'middle' } }]\n    ];\n    allLocationData[0].weekDates.forEach(date => {\n        head[0].push({\n            content: `${format(date, 'EEE', { locale: es }).toUpperCase()}\\n${format(date, 'dd MMM', { locale: es })}`,\n            styles: { halign: 'center', valign: 'middle' }\n        });\n    });\n\n    const body: any[] = [];\n     let totalHoursGrandTotal = 0;\n\n    // Group all unique employees across all locations first\n     const allEmployeesMap = new Map<string, Employee>();\n     allLocationData.forEach(locData => {\n         locData.employees.forEach(emp => {\n             if (!allEmployeesMap.has(emp.id)) {\n                 allEmployeesMap.set(emp.id, emp);\n             }\n         });\n     });\n     const sortedEmployees = Array.from(allEmployeesMap.values()).sort((a, b) => a.name.localeCompare(b.name));\n\n\n    // Iterate through sorted unique employees\n     sortedEmployees.forEach(emp => {\n        const employeeRow: any[] = [{ content: emp.name, styles: { valign: 'middle' } }];\n        let totalHoursWeek = 0;\n        let hasShiftThisWeek = false;\n\n        allLocationData[0].weekDates.forEach(date => {\n            let cellContent = ' '; // Default to empty space\n            let assignmentFound = false;\n\n             // Check assignments for this employee on this date ACROSS ALL locations\n             for (const locData of allLocationData) {\n                const daySchedule = locData.getScheduleForDate(date);\n                for (const deptId in daySchedule.assignments) {\n                    const assignment = daySchedule.assignments[deptId].find(a => a.employee.id === emp.id);\n                     if (assignment) {\n                         assignmentFound = true;\n                         hasShiftThisWeek = true;\n                         const duration = locData.calculateShiftDuration(assignment, date);\n                         totalHoursWeek += duration;\n                         cellContent = `${formatTo12Hour(assignment.startTime)} - ${formatTo12Hour(assignment.endTime)}`;\n                         // Add location name abbreviation or indicator\n                         cellContent += `\\n(${locData.locationName.substring(0, 3).toUpperCase()})`; // e.g., (PRI) or (NOR)\n                         if (assignment.includeBreak && assignment.breakStartTime && assignment.breakEndTime) {\n                              cellContent += `\\nD:${formatTo12Hour(assignment.breakStartTime)}-${formatTo12Hour(assignment.breakEndTime)}`;\n                         }\n                         break; // Found assignment for this employee on this day, move to next day\n                     }\n                 }\n                 if (assignmentFound) break; // Exit location loop if assignment found\n             }\n\n             if (assignmentFound) {\n                 employeeRow.push({ content: cellContent, styles: { halign: 'center', valign: 'middle', fontSize: 8 } });\n             } else {\n                 // Check if it's a weekend (Saturday=6, Sunday=0) for \"DESCANSO\"\n                 const dayOfWeek = getDay(date);\n                  if (dayOfWeek === 6 || dayOfWeek === 0) {\n                     employeeRow.push({ content: 'DESCANSO', styles: { halign: 'center', valign: 'middle', fontSize: 7, fontStyle: 'italic', textColor: [255, 0, 0]} }); // Smaller italic red\n                  } else {\n                     employeeRow.push({ content: ' ', styles: { halign: 'center', valign: 'middle' } }); // Empty space for no shift on weekdays\n                  }\n             }\n         });\n\n         // Add total hours for the week if the employee worked\n         if (hasShiftThisWeek) {\n             employeeRow.push({ content: totalHoursWeek.toFixed(1), styles: { halign: 'right', valign: 'middle', fontStyle: 'bold', fontSize: 8 } });\n             totalHoursGrandTotal += totalHoursWeek; // Add to grand total\n         } else {\n            // Optionally add placeholder or leave empty if no shifts\n             // Check if weekends are marked as descanso\n             const descansoWeekend = allLocationData[0].weekDates.every(date => {\n                const dayOfWeek = getDay(date);\n                return dayOfWeek === 6 || dayOfWeek === 0; // If only weekends visible? unlikely\n             });\n             if(descansoWeekend) {\n                employeeRow.push({ content: 'DESC', styles: { halign: 'right', valign: 'middle', fontSize: 7, fontStyle: 'italic' } });\n             } else {\n                employeeRow.push({ content: '0.0', styles: { halign: 'right', valign: 'middle', fontSize: 8 } }); // Show 0.0 if no shifts\n             }\n         }\n\n         body.push(employeeRow);\n     });\n\n     // Add HR TOTAL column to header\n     head[0].push({ content: 'HR TOTAL', styles: { halign: 'center', valign: 'middle' } });\n\n     // Add Grand Total Row\n      const grandTotalRow: any[] = [\n         { content: 'TOTAL HORAS SEMANA:', colSpan: allLocationData[0].weekDates.length + 1, styles: { halign: 'right', fontStyle: 'bold', fontSize: 10 } },\n         { content: totalHoursGrandTotal.toFixed(1), styles: { halign: 'right', fontStyle: 'bold', fontSize: 10 } }\n      ];\n      body.push(grandTotalRow);\n\n\n    // --- Draw Table ---\n    autoTable(doc, {\n        head: head,\n        body: body,\n        startY: currentY,\n        theme: 'grid',\n        headStyles: {\n            fillColor: [76, 67, 223], // Primary color\n            textColor: [255, 255, 255],\n            fontSize: 9,\n            lineWidth: 0.5,\n            lineColor: [200, 200, 200]\n        },\n        columnStyles: {\n             0: { cellWidth: 100, fontStyle: 'bold' }, // Employee name column\n              // Styles for day columns + HR TOTAL column\n             ...Array.from({ length: allLocationData[0].weekDates.length + 1 }).reduce((styles, _, index) => {\n                 if (index < allLocationData[0].weekDates.length) { // Day columns\n                     styles[index + 1] = { cellWidth: 'auto', halign: 'center', fontSize: 8 };\n                 } else { // HR TOTAL column\n                     styles[index + 1] = { cellWidth: 40, halign: 'right', fontStyle: 'bold', fontSize: 8 };\n                 }\n                 return styles;\n             }, {} as any)\n        },\n        styles: {\n            cellPadding: 3, // Reduced padding\n            fontSize: 8,\n            overflow: 'linebreak',\n            lineWidth: 0.5,\n            lineColor: [200, 200, 200]\n        },\n        didDrawPage: (hookData) => {\n            currentY = hookData.cursor?.y ?? currentY;\n             const pageNum = doc.internal.getNumberOfPages();\n             addHeaderAndWatermark(doc, 10); // Add watermark near top\n             doc.setFontSize(8);\n             doc.setTextColor(150);\n             doc.text(`Página ${pageNum}`, pageWidth - rightMargin, pageHeight - 10, { align: 'right' });\n             doc.setTextColor(0); // Reset text color\n        }\n    });\n\n    // --- Save the PDF ---\n    const timestamp = format(new Date(), 'yyyyMMdd_HHmmss');\n    const filename = `Horario_Consolidado_${timestamp}.pdf`;\n    doc.save(filename);\n}\n\n// Helper to parse HH:MM to minutes (consider moving to utils)\nconst parseTimeToMinutes = (timeStr: string): number => {\n    if (!timeStr || !/^\\d{2}:\\d{2}$/.test(timeStr)) return 0;\n    const [hours, minutes] = timeStr.split(':').map(Number);\n    return hours * 60 + minutes;\n};\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6412, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/schedule/page.tsx"],"sourcesContent":["// src/app/schedule/page.tsx\n'use client'; // Ensure this directive is present\n\n// Correct import order and usage\nimport React, { useState, useEffect, useCallback, useMemo, useRef, ChangeEvent, DragEvent } from 'react';\nimport { DndContext, DragEndEvent, closestCenter } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport Image from 'next/image'; // Import next/image\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardFooter,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Plus, Trash2, Edit, ChevronsLeft, ChevronsRight, Calendar as CalendarModernIcon, Users, Building, Building2, MinusCircle, ChevronsUpDown, Settings, Save, CopyPlus, Eraser, FileDown, PencilLine, Share2, Loader2, Check, Copy, Upload, FolderUp, List, UploadCloud, FileText, NotebookPen, CalendarX, FolderSync, BarChartHorizontal, Library, X, Notebook, User, ImportIcon, ListCollapse, PlusCircle, ChefHat, Utensils, Wine, Archive, Download, FileJson, NotebookText, LibraryBig } from 'lucide-react'; // Added NotebookText, LibraryBig icons\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label'; // Import Label\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Separator } from '@/components/ui/separator'; // Import Separator\nimport { ScrollArea } from '@/components/ui/scroll-area'; // Import ScrollArea\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogFooter, DialogDescription, DialogClose, DialogTrigger } from \"@/components/ui/dialog\"; // Import Dialog components\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Textarea } from '@/components/ui/textarea';\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuPortal,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"; // Import DropdownMenu components\nimport {\n    Sheet,\n    SheetContent,\n    SheetDescription,\n    SheetHeader,\n    SheetTitle,\n    SheetTrigger,\n    SheetClose,\n} from \"@/components/ui/sheet\"; // Import Sheet components\nimport {\n    Tabs,\n    TabsContent,\n    TabsList,\n    TabsTrigger,\n} from \"@/components/ui/tabs\"; // Import Tabs components\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\"\n\n\nimport { LocationSelector } from '@/components/schedule/LocationSelector';\nimport { EmployeeList } from '@/components/schedule/EmployeeList';\nimport { ScheduleView } from '@/components/schedule/ScheduleView';\nimport { ShiftDetailModal } from '@/components/schedule/ShiftDetailModal';\nimport { WeekNavigator } from '@/components/schedule/WeekNavigator'; // Import WeekNavigator\nimport { ScheduleNotesModal } from '@/components/schedule/ScheduleNotesModal'; // Import Notes modal\nimport { SummaryDashboard } from '@/components/schedule/SummaryDashboard'; // Import the dashboard\nimport { ConfigTabs } from '@/components/schedule/ConfigTabs'; // Import ConfigTabs\n// import { ScheduleTemplateList } from '@/components/schedule/ScheduleTemplateList'; // Re-added ScheduleTemplateList import\n\nimport { useToast } from '@/hooks/use-toast';\nimport { useIsMobile } from '@/hooks/use-mobile';\nimport { EmployeeSelectionModal } from '@/components/schedule/EmployeeSelectionModal';\nimport type { Location, Department, Employee, ShiftAssignment, ScheduleData, DailyAssignments, WeeklyAssignments, ScheduleTemplate, ScheduleNote, ShiftDetails } from '@/types/schedule'; // Added ScheduleTemplate and ScheduleNote, ShiftDetails\nimport { startOfWeek, endOfWeek, addDays, format, addWeeks, subWeeks, parseISO, getYear, isValid, differenceInMinutes, parse as parseDateFns, isSameDay, isWithinInterval, getDay } from 'date-fns'; // Added endOfWeek, parseDateFns, isSameDay\nimport { es } from 'date-fns/locale';\nimport { cn } from '@/lib/utils';\nimport { getColombianHolidays } from '@/services/colombian-holidays';\nimport { exportScheduleToPDF, exportConsolidatedScheduleToPDF, ScheduleExportData } from '@/lib/schedule-pdf-exporter'; // Import BOTH PDF export functions\nimport { formatTo12Hour } from '@/lib/time-utils';\n// Removed direct import of parse from date-fns as it conflicts\n\n\n// Helper to generate dates for the current week\nconst getWeekDates = (currentDate: Date): Date[] => {\n  const start = startOfWeek(currentDate, { weekStartsOn: 1 }); // Start on Monday\n  return Array.from({ length: 7 }).map((_, i) => addDays(start, i));\n};\n\n// LocalStorage Keys\nconst SCHEDULE_DATA_KEY = 'schedulePlannerData';\nconst SCHEDULE_NOTES_KEY = 'schedulePlannerNotes'; // Key for general notes\nconst SCHEDULE_EVENTS_KEY = 'scheduleCalendarEvents'; // Key for specific date notes/events\nconst LOCATIONS_KEY = 'schedulePlannerLocations';\nconst DEPARTMENTS_KEY = 'schedulePlannerDepartments';\nconst EMPLOYEES_KEY = 'schedulePlannerEmployees';\nconst SCHEDULE_TEMPLATES_KEY = 'schedulePlannerTemplates'; // Key for templates\n\n// Cache for holidays\nlet holidaysCache: { [year: number]: Set<string> } = {};\n\nasync function fetchAndCacheHolidays(year: number): Promise<Set<string>> {\n    if (holidaysCache[year]) {\n        return holidaysCache[year];\n    }\n    try {\n        const holidays = await getColombianHolidays(year);\n        if (!Array.isArray(holidays)) {\n            console.error(`Error: getColombianHolidays(${year}) did not return an array.`);\n            throw new Error(`Formato de respuesta inválido para festivos de ${year}.`);\n        }\n        const holidaySet = new Set(holidays.map(h => {\n            if (!h || typeof h.year !== 'number' || typeof h.month !== 'number' || typeof h.day !== 'number') {\n                console.error(`Error: Invalid holiday object structure for year ${year}:`, h);\n                return '';\n            }\n             try {\n                 const dateToFormat = new Date(h.year, h.month - 1, h.day);\n                 if (!isValid(dateToFormat) || getYear(dateToFormat) !== h.year) {\n                     console.error(`Error: Invalid date components for holiday in year ${year}:`, h);\n                     return '';\n                 }\n                 return format(dateToFormat, 'yyyy-MM-dd');\n             } catch (formatError) {\n                 console.error(`Error formatting holiday date for year ${year}:`, h, formatError);\n                 return '';\n             }\n        }).filter(dateStr => dateStr !== ''));\n\n        holidaysCache[year] = holidaySet;\n        return holidaySet;\n    } catch (error) {\n        console.error(`Error fetching or caching holidays for ${year}:`, error);\n        return new Set();\n    }\n}\n\nconst initialLocations: Location[] = [\n  { id: 'loc-1', name: 'Sede Principal' },\n  { id: 'loc-2', name: 'Sede Norte' },\n];\n\n// Define initial departments with icon components\nconst iconMap: { [key: string]: React.ElementType } = {\n    ChefHat: ChefHat,   // Nuevo: Icono de Chef\n    Utensils: Utensils, // Nuevo: Icono de Utensilios (para Salón/Meseros)\n    Wine: Wine,         // Nuevo: Icono de Copa (para Barra)\n    Archive: Archive,   // Nuevo: Icono de Caja (para Bodega)\n    Building: Building,\n    Users: Users,\n    Edit: Edit,\n    Building2: Building2,\n};\nconst initialDepartments: Department[] = [\n  { id: 'dep-1', name: 'Cocina', locationId: 'loc-1', icon: ChefHat }, // Usa ChefHat\n  { id: 'dep-2', name: 'Salón', locationId: 'loc-1', icon: Utensils }, // Usa Utensils\n  { id: 'dep-3', name: 'Caja & Barra', locationId: 'loc-2', icon: Wine }, // Usa Wine\n].map(dep => ({ ...dep, iconName: Object.keys(iconMap).find(key => iconMap[key] === dep.icon) })); // Add iconName initially\n\n\nconst initialEmployees: Employee[] = [\n  { id: '101', name: 'Carlos Pérez', locationIds: ['loc-1'], departmentIds: ['dep-1'] }, // Added departmentIds\n  { id: '102', name: 'Ana Rodriguez', locationIds: ['loc-1'], departmentIds: ['dep-2'] }, // Added departmentIds\n  { id: '201', name: 'Luis Gómez', locationIds: ['loc-2'], departmentIds: ['dep-3'] }, // Added departmentIds\n  { id: '202', name: 'Maria García', locationIds: ['loc-1', 'loc-2'], departmentIds: ['dep-1', 'dep-3'] }, // Example multi-location/dept employee\n];\n\nconst defaultNotesText = `Lun a Jue: Parrillazo y Gauchos 12am. - Gaucho 11pm. | Vie a Sab: Parrillazo y Gauchos 1am. - Gaucho 12am. | Dom: Todos 11 pm`;\n\nconst parseTimeToMinutes = (timeStr: string): number => {\n  if (!timeStr || !/^\\d{2}:\\d{2}$/.test(timeStr)) return 0;\n  const [hours, minutes] = timeStr.split(':').map(Number);\n  return hours * 60 + minutes;\n};\n\nconst calculateShiftDuration = (assignment: ShiftAssignment, shiftDate: Date): number => {\n    try {\n        const startDateStr = format(shiftDate, 'yyyy-MM-dd');\n        const startTime = parseDateFns(`${startDateStr} ${assignment.startTime}`, 'yyyy-MM-dd HH:mm', new Date());\n\n        const startTimeMinutes = parseTimeToMinutes(assignment.startTime);\n        const endTimeMinutes = parseTimeToMinutes(assignment.endTime);\n        let endTime = parseDateFns(`${startDateStr} ${assignment.endTime}`, 'yyyy-MM-dd HH:mm', new Date());\n        if (!isValid(endTime) || endTimeMinutes < startTimeMinutes) {\n             if (endTimeMinutes < startTimeMinutes) {\n                endTime = addDays(parseDateFns(`${startDateStr} ${assignment.endTime}`, 'yyyy-MM-dd HH:mm', new Date()), 1);\n             } else {\n                 console.warn('Invalid end time for duration calculation:', assignment);\n                 return 0;\n             }\n        }\n\n        if (!isValid(startTime) || !isValid(endTime)) {\n            console.warn('Invalid start or end time for duration calculation:', assignment);\n            return 0;\n        }\n\n        let totalShiftMinutes = differenceInMinutes(endTime, startTime);\n\n        let breakMinutes = 0;\n        if (assignment.includeBreak && assignment.breakStartTime && assignment.breakEndTime) {\n            const breakStartMinutes = parseTimeToMinutes(assignment.breakStartTime);\n            const breakEndMinutes = parseTimeToMinutes(assignment.breakEndTime);\n            if (breakEndMinutes > breakStartMinutes) {\n                 breakMinutes = breakEndMinutes - breakStartMinutes;\n            }\n        }\n\n        const netMinutes = totalShiftMinutes - breakMinutes;\n        return Math.max(0, netMinutes) / 60;\n    } catch (error) {\n        console.error(\"Error calculating shift duration:\", error, assignment);\n        return 0;\n    }\n};\n\n// Helper function to load data from localStorage safely\nconst loadFromLocalStorage = <T,>(key: string, defaultValue: T, isJson: boolean = true): T => {\n    if (typeof window === 'undefined') {\n        return defaultValue; // Return default during SSR\n    }\n    try {\n        const savedData = localStorage.getItem(key);\n        if (!savedData) return defaultValue;\n\n        if (!isJson) {\n            return savedData as unknown as T; // Return raw string if not JSON\n        }\n\n        const parsed = JSON.parse(savedData);\n\n        // Basic check for array types\n        if ([LOCATIONS_KEY, EMPLOYEES_KEY, DEPARTMENTS_KEY, SCHEDULE_TEMPLATES_KEY, SCHEDULE_EVENTS_KEY].includes(key)) {\n            if (Array.isArray(parsed)) {\n                  // Ensure employees have locationIds array and optional departmentIds\n                  if (key === EMPLOYEES_KEY) {\n                      return parsed.map((emp: any) => ({\n                          ...emp,\n                          locationIds: Array.isArray(emp.locationIds) ? emp.locationIds : [],\n                          departmentIds: Array.isArray(emp.departmentIds) ? emp.departmentIds : [] // Ensure departmentIds is an array or empty array\n                      })) as T;\n                  }\n                  // For ScheduleNotes, dates are already strings 'yyyy-MM-dd'\n                  if (key === SCHEDULE_EVENTS_KEY) {\n                      return parsed.filter(note => // Basic validation\n                          note && typeof note === 'object' && note.id && note.date && note.note\n                      ) as T;\n                  }\n                   // Handle Templates: Revive dates if needed\n                   if (key === SCHEDULE_TEMPLATES_KEY) {\n                       console.log(\"[loadFromLocalStorage] Processing templates:\", parsed);\n                       try {\n                           return parsed.map((tpl: any) => {\n                               console.log(\"[loadFromLocalStorage] Raw template:\", tpl);\n                               if (!tpl || typeof tpl !== 'object' || !tpl.id || !tpl.name) {\n                                   console.warn(\"[loadFromLocalStorage] Skipping invalid template object:\", tpl);\n                                   return null; // Skip invalid templates\n                               }\n                               // Ensure assignments is an object (can be empty)\n                               const assignments = (tpl.assignments && typeof tpl.assignments === 'object' && !Array.isArray(tpl.assignments)) ? tpl.assignments : {};\n                               // Revive createdAt date\n                                let createdAtDate: Date | undefined = undefined;\n                                if (tpl.createdAt) {\n                                    if (typeof tpl.createdAt === 'string') {\n                                        createdAtDate = parseISO(tpl.createdAt);\n                                    } else if (tpl.createdAt instanceof Date) {\n                                        createdAtDate = tpl.createdAt;\n                                    }\n                                    if (createdAtDate && !isValid(createdAtDate)) {\n                                        console.warn(`[loadFromLocalStorage] Invalid createdAt date for template ${tpl.id}: ${tpl.createdAt}. Setting to undefined.`);\n                                        createdAtDate = undefined; // Set to undefined if parsing failed\n                                    }\n                                }\n\n                               const revived = {\n                                   ...tpl,\n                                   assignments: assignments, // Use validated/defaulted assignments\n                                   createdAt: createdAtDate, // Assign the revived date\n                               };\n                               console.log(\"[loadFromLocalStorage] Revived template:\", revived);\n                               return revived;\n                           }).filter(tpl => tpl !== null) as T; // Filter out null (invalid) templates\n                       } catch (templateError) {\n                           console.error(\"[loadFromLocalStorage] Error processing templates array:\", templateError, \"Raw data:\", parsed);\n                           return defaultValue; // Return default if processing fails\n                       }\n                   }\n                 return parsed as T;\n            } else {\n                console.warn(`[loadFromLocalStorage] Expected array for key ${key}, but found:`, typeof parsed, \". Returning default.\");\n                // If data exists but is not an array, remove it (except for notes and schedule data)\n                if(key !== SCHEDULE_NOTES_KEY && key !== SCHEDULE_DATA_KEY && key !== SCHEDULE_TEMPLATES_KEY ) {\n                    try {\n                        localStorage.removeItem(key);\n                        console.warn(`Removed invalid non-array item from localStorage for key: ${key}`);\n                    } catch (removeError) {\n                        console.error(`Error removing invalid item from localStorage for key ${key}:`, removeError);\n                    }\n                }\n                return defaultValue; // Return default if type mismatch\n            }\n        } else if (key === SCHEDULE_DATA_KEY) {\n            // More complex types might need more checks, but for now assume it's okay if it parses\n            return parsed as T;\n        } else if (key === SCHEDULE_NOTES_KEY) {\n             // Schedule notes are stored as a string, no parsing needed\n             // Ensure we handle the default value correctly if savedData is null\n             return (savedData !== null ? savedData : defaultValue) as T;\n        } else {\n            // For unknown keys, just return the parsed data if it's not null/undefined\n            return parsed as T;\n        }\n    } catch (error) {\n        // Handle JSON parsing errors or other potential issues\n         if (error instanceof SyntaxError && key === SCHEDULE_NOTES_KEY) {\n            // If parsing fails for notes, return the raw string (could be initial default)\n            console.warn(`[loadFromLocalStorage] Failed to parse JSON for key ${key} (expected for notes string). Returning raw data.`);\n            // Return the raw data or default if getItem fails\n            const rawData = localStorage.getItem(key);\n            return (rawData !== null ? rawData : defaultValue) as T;\n         } else if (error instanceof SyntaxError) {\n             console.error(`Error parsing JSON from localStorage for key ${key}:`, error.message, \"Saved data:\", localStorage.getItem(key));\n              // Remove corrupted data for keys other than SCHEDULE_NOTES_KEY and SCHEDULE_TEMPLATES_KEY\n             if (key !== SCHEDULE_NOTES_KEY && key !== SCHEDULE_TEMPLATES_KEY ) {\n                 try {\n                     localStorage.removeItem(key);\n                     console.warn(`Removed invalid item from localStorage for key: ${key}`);\n                 } catch (removeError) {\n                     console.error(`Error removing invalid item from localStorage for key ${key}:`, removeError);\n                 }\n             }\n         } else { // Log other errors normally\n             console.error(`Error loading ${key} from localStorage:`, error);\n         }\n    }\n    return defaultValue; // Return default if nothing saved or error occurred\n};\n\n\n// Helper specifically for loading departments and restoring icons\nconst loadDepartmentsFromLocalStorage = (defaultValue: Department[]): Department[] => {\n    const savedDepartments = loadFromLocalStorage<{id: string, name: string, locationId: string, iconName?: string}[]>(DEPARTMENTS_KEY, []);\n    if (savedDepartments.length > 0) {\n         return savedDepartments.map(dep => ({\n            ...dep,\n            icon: dep.iconName ? iconMap[dep.iconName] : Building, // Use map or default\n         }));\n    }\n     // If nothing loaded, map initial data to include iconName\n     return defaultValue.map(dep => ({\n         ...dep,\n         iconName: Object.keys(iconMap).find(key => iconMap[key] === dep.icon)\n     }));\n};\n\n// Helper for loading schedule data and parsing dates/employees\nconst loadScheduleDataFromLocalStorage = (employees: Employee[], defaultValue: { [dateKey: string]: ScheduleData }): { [dateKey: string]: ScheduleData } => {\n    const savedSchedule = loadFromLocalStorage<{ [dateKey: string]: any }>(SCHEDULE_DATA_KEY, defaultValue);\n     try {\n         const hydratedSchedule: { [dateKey: string]: ScheduleData } = {};\n         Object.keys(savedSchedule).forEach(key => {\n             const dayData = savedSchedule[key];\n             if (!dayData || !dayData.date) return; // Skip invalid entries\n\n             const date = typeof dayData.date === 'string' ? parseISO(dayData.date) : dayData.date;\n             if (!isValid(date)) return; // Skip if date is invalid\n\n             const hydratedAssignments: { [departmentId: string]: ShiftAssignment[] } = {};\n             if (dayData.assignments) {\n                 Object.keys(dayData.assignments).forEach(deptId => {\n                     const assignments = dayData.assignments[deptId];\n                     if (Array.isArray(assignments)) {\n                         hydratedAssignments[deptId] = assignments.map((assign: any) => {\n                             // Ensure employee object is fully populated\n                             if (assign.employee && typeof assign.employee === 'object') {\n                                 const fullEmployee = employees.find(emp => emp.id === assign.employee.id);\n                                 if (fullEmployee) {\n                                     return { ...assign, employee: fullEmployee };\n                                 } else {\n                                     console.warn(`Employee ID ${assign.employee.id} not found while loading schedule for assignment ${assign.id}`);\n                                     return { ...assign, employee: { id: assign.employee.id, name: `(ID: ${assign.employee.id})`, locationIds: [], departmentIds: [] } }; // Placeholder if employee not found\n                                 }\n                             }\n                             return assign; // Should not happen if saved correctly\n                         }).filter(Boolean); // Filter out any null entries if employee wasn't found\n                     }\n                 });\n             }\n             hydratedSchedule[key] = { date, assignments: hydratedAssignments };\n         });\n         return hydratedSchedule;\n     } catch (error) {\n         console.error(\"Error parsing schedule data from localStorage:\", error);\n         return defaultValue;\n     }\n};\n\n\n// --- Helper function to load Schedule Templates ---\n// Ensure this function correctly parses templates including the 'assignments' structure\nconst loadScheduleTemplates = (): ScheduleTemplate[] => {\n    if (typeof window === 'undefined') return []; // Only on client\n\n    const loadedTemplates = loadFromLocalStorage<ScheduleTemplate[]>(SCHEDULE_TEMPLATES_KEY, []);\n    console.log(`[loadScheduleTemplates] Loaded ${loadedTemplates.length} templates from main key.`);\n\n    // Log the structure of loaded templates for debugging\n    loadedTemplates.forEach((tpl, index) => {\n        console.log(`[loadScheduleTemplates] Template ${index}:`, tpl);\n        // Ensure assignments is an object, not potentially undefined or other type\n        if (tpl.assignments === null || typeof tpl.assignments !== 'object' || Array.isArray(tpl.assignments)) {\n            console.warn(`[loadScheduleTemplates] Template ${tpl.id} has invalid assignments structure. Resetting.`);\n            tpl.assignments = {}; // Reset to empty object if invalid\n        }\n         // Ensure createdAt is a Date object if it exists\n         if (tpl.createdAt && typeof tpl.createdAt === 'string') {\n             const parsedDate = parseISO(tpl.createdAt);\n             if (isValid(parsedDate)) {\n                 tpl.createdAt = parsedDate;\n             } else {\n                 console.warn(`[loadScheduleTemplates] Invalid createdAt string for template ${tpl.id}. Removing.`);\n                 delete tpl.createdAt;\n             }\n         } else if (tpl.createdAt && !(tpl.createdAt instanceof Date)) {\n             console.warn(`[loadScheduleTemplates] Unexpected createdAt type for template ${tpl.id}. Removing.`);\n             delete tpl.createdAt;\n         }\n    });\n\n    // Sort alphabetically by name\n    return loadedTemplates.sort((a, b) => a.name.localeCompare(b.name));\n};\n\n\n\n// New interface for the summary data\ninterface EmployeeHoursSummary {\n  id: string;\n  name: string;\n  totalHours: number;\n}\n\n\nexport default function SchedulePage() {\n    // --- State Initialization ---\n    const [currentDate, setCurrentDate] = useState<Date>(() => new Date()); // Initialize immediately\n    const [viewMode, setViewMode] = useState<'day' | 'week'>('week');\n    const [locations, setLocations] = useState<Location[]>([]); // Initialized empty, load in useEffect\n    const [departments, setDepartments] = useState<Department[]>([]); // Initialized empty, load in useEffect\n    const [employees, setEmployees] = useState<Employee[]>([]); // Initialized empty, load in useEffect\n    const [scheduleData, setScheduleData] = useState<{ [dateKey: string]: ScheduleData }>({}); // Initialized empty, load in useEffect\n    const [scheduleNotes, setScheduleNotes] = useState<ScheduleNote[]>([]); // Initialized empty, load in useEffect\n    const [isNotesModalOpen, setIsNotesModalOpen] = useState(false); // State for the notes modal\n    const [savedTemplates, setSavedTemplates] = useState<ScheduleTemplate[]>([]); // Initialize empty, load in useEffect\n    const [isSavingTemplate, setIsSavingTemplate] = useState<boolean>(false); // State for template saving modal\n    // const [isTemplateListModalOpen, setIsTemplateListModalOpen] = useState(false); // State for template list modal\n\n    const [templateToDeleteId, setTemplateToDeleteId] = useState<string | null>(null); // State for confirming template deletion\n    const [noteToDeleteId, setNoteToDeleteId] = useState<string | null>(null); // State for confirming note deletion\n    const [notesModalForDate, setNotesModalForDate] = useState<Date | null>(null); // State to open notes modal for a specific date\n    const [departmentMismatchWarning, setDepartmentMismatchWarning] = useState<{\n        employee: Employee;\n        targetDepartment: Department;\n        date: Date;\n    } | null>(null); // State for department mismatch warning\n\n    // New state for the Summary Sheet\n    const [isSummarySheetOpen, setIsSummarySheetOpen] = useState(false);\n    const [employeeHoursSummary, setEmployeeHoursSummary] = useState<EmployeeHoursSummary[]>([]);\n\n\n    const [notes, setNotes] = useState<string>(() => loadFromLocalStorage(SCHEDULE_NOTES_KEY, defaultNotesText, false)); // Initialize notes string state\n    const [selectedLocationId, setSelectedLocationId] = useState<string>(''); // Initialized empty\n\n    const [isShiftModalOpen, setIsShiftModalOpen] = useState(false);\n    const [isEmployeeSelectionModalOpen, setIsEmployeeSelectionModalOpen] = useState(false);\n    const [shiftRequestContext, setShiftRequestContext] = useState<{ departmentId: string; date: Date } | null>(null);\n    const [selectedEmployee, setSelectedEmployee] = useState<Employee | null>(null);\n    const [editingShift, setEditingShift] = useState<{ assignment: ShiftAssignment; date: Date; departmentId: string } | null>(null);\n    const [targetDate, setTargetDate] = useState<Date>(() => new Date()); // Used for day view and template application context\n\n    // --- Config Modal State ---\n    const [isConfigModalOpen, setIsConfigModalOpen] = useState(false);\n    const [configFormType, setConfigFormType] = useState<'location' | 'department' | 'employee' | 'template' | null>(null); // Re-added 'template'\n    const [selectedConfigItem, setSelectedConfigItem] = useState<any | null>(null); // State for the item selected in the new config modal list\n    const [activeConfigTab, setActiveConfigTab] = useState<string>(\"sedes\"); // Define setActiveTab using useState\n    const setActiveTabFn = (tab: string) => setActiveConfigTab(tab); // Renamed for clarity\n\n    const [locationFormData, setLocationFormData] = useState({ name: '' });\n\n    const [departmentFormData, setDepartmentFormData] = useState<{ name: string, locationId: string, iconName?: string }>({ name: '', locationId: selectedLocationId, iconName: undefined });\n\n    const [employeeFormData, setEmployeeFormData] = useState<{ id: string, name: string, locationIds: string[], departmentIds: string[] }>({ id: '', name: '', locationIds: [selectedLocationId], departmentIds: [] });\n\n    const [itemToDelete, setItemToDelete] = useState<{ type: 'location' | 'department' | 'employee' | 'template'; id: string; name: string } | null>(null); // Re-added 'template' type\n\n    const [clearingDate, setClearingDate] = useState<Date | null>(null);\n    const [clearingWeek, setClearingWeek] = useState<boolean>(false); // State for clearing week confirmation\n\n    const [holidaySet, setHolidaySet] = useState<Set<string>>(new Set());\n    const [isCheckingHoliday, setIsCheckingHoliday] = useState<boolean>(false);\n\n    const [isClient, setIsClient] = useState(false);\n\n    // --- Search States ---\n    const [locationSearch, setLocationSearch] = useState('');\n    const [departmentSearch, setDepartmentSearch] = useState('');\n    const [employeeSearch, setEmployeeSearch] = useState('');\n    const [templateSearch, setTemplateSearch] = useState(''); // State for template search\n\n    // Loading state for page transitions\n    const [isLoadingPage, setIsLoadingPage] = useState(false); // Added state\n\n    const fileInputRef = useRef<HTMLInputElement>(null); // Ref for config file import\n\n\n    const isMobile = useIsMobile();\n    const { toast } = useToast();\n\n\n    // --- Load Data from localStorage on Mount (Client-side only) ---\n    useEffect(() => {\n        setIsClient(true); // Mark as client-side after mount\n        setIsLoadingPage(true); // Start loading indicator\n\n        // Ensure local storage access happens only after mount\n        const loadedLocations = loadFromLocalStorage<Location[]>(LOCATIONS_KEY, initialLocations);\n        const loadedDepartments = loadDepartmentsFromLocalStorage(initialDepartments);\n        const loadedEmployees = loadFromLocalStorage<Employee[]>(EMPLOYEES_KEY, initialEmployees);\n        const loadedNotes = loadFromLocalStorage<string>(SCHEDULE_NOTES_KEY, defaultNotesText, false);\n        const loadedEvents = loadFromLocalStorage<ScheduleNote[]>(SCHEDULE_EVENTS_KEY, []);\n        const loadedTemplates = loadScheduleTemplates(); // Use dedicated loader\n        const loadedSchedule = loadScheduleDataFromLocalStorage(loadedEmployees, {}); // Load schedule AFTER employees\n\n        const initialLocId = loadedLocations.length > 0 ? loadedLocations[0].id : '';\n\n        setLocations(loadedLocations);\n        setDepartments(loadedDepartments);\n        setEmployees(loadedEmployees);\n        setScheduleData(loadedSchedule);\n        setScheduleNotes(loadedEvents);\n        setNotes(loadedNotes);\n        setSavedTemplates(loadedTemplates); // Set templates state\n\n        setSelectedLocationId(initialLocId);\n        // Update form defaults based on initial selectedLocationId\n        setDepartmentFormData(prev => ({ ...prev, locationId: initialLocId }));\n        setEmployeeFormData(prev => ({ ...prev, id: '', name: '', locationIds: initialLocId ? [initialLocId] : [], departmentIds: [] }));\n\n        // Set initial targetDate and currentDate (can be the same initially)\n        const now = new Date();\n        setCurrentDate(now);\n        setTargetDate(now);\n\n        setIsLoadingPage(false); // Stop loading indicator\n    }, []); // Empty dependency array ensures this runs only once on mount\n\n      // Memoize weekDates to prevent unnecessary recalculations\n     const weekDates = useMemo(() => currentDate ? getWeekDates(currentDate) : [], [currentDate]);\n\n     // --- Effect to Fetch Holidays ---\n    useEffect(() => {\n        if (!isClient || !currentDate) return; // Only run on client and if currentDate is valid\n\n        const datesInView = viewMode === 'day' ? [currentDate] : weekDates;\n        if (datesInView.length === 0 || !isValid(datesInView[0])) return; // Ensure we have valid dates\n\n        const startYear = getYear(datesInView[0]);\n        const endYear = getYear(datesInView[datesInView.length - 1]);\n        const yearsToFetch = new Set([startYear, endYear]);\n\n        setIsCheckingHoliday(true);\n        Promise.all(Array.from(yearsToFetch).map(year => fetchAndCacheHolidays(year)))\n            .then(results => {\n                const combinedSet = new Set<string>();\n                results.forEach(set => set.forEach(date => combinedSet.add(date)));\n                setHolidaySet(combinedSet);\n            })\n            .catch(error => {\n                console.error(\"Error fetching holidays for view:\", error);\n                setHolidaySet(new Set());\n            })\n            .finally(() => {\n                setIsCheckingHoliday(false);\n            });\n    }, [currentDate, viewMode, weekDates, isClient]); // Added weekDates and isClient\n\n\n     // --- Save Data to localStorage on Change ---\n     useEffect(() => {\n         if (isClient) {\n             try {\n                 localStorage.setItem(LOCATIONS_KEY, JSON.stringify(locations));\n             } catch (e) { console.error(\"Error saving locations:\", e); }\n         }\n     }, [locations, isClient]);\n\n     useEffect(() => {\n         if (isClient) {\n             try {\n                 const departmentsToSave = departments.map(({ icon, ...rest }) => ({\n                    ...rest,\n                    iconName: Object.keys(iconMap).find(key => iconMap[key] === icon)\n                 }));\n                 localStorage.setItem(DEPARTMENTS_KEY, JSON.stringify(departmentsToSave));\n             } catch (e) { console.error(\"Error saving departments:\", e); }\n         }\n     }, [departments, isClient]);\n\n     useEffect(() => {\n         if (isClient) {\n             try {\n                 localStorage.setItem(EMPLOYEES_KEY, JSON.stringify(employees));\n             } catch (e) { console.error(\"Error saving employees:\", e); }\n         }\n     }, [employees, isClient]);\n\n     useEffect(() => {\n        if (isClient) {\n            try {\n                const dataToSave = JSON.parse(JSON.stringify(scheduleData));\n                 Object.keys(dataToSave).forEach(key => {\n                     if (dataToSave[key] && dataToSave[key].date instanceof Date) {\n                         dataToSave[key].date = dataToSave[key].date.toISOString();\n                     }\n                     if (dataToSave[key] && dataToSave[key].assignments) {\n                         Object.keys(dataToSave[key].assignments).forEach(deptId => {\n                             (dataToSave[key].assignments[deptId] || []).forEach((assign: any) => {\n                                 if (assign.employee && typeof assign.employee === 'object') {\n                                     assign.employee = { id: assign.employee.id };\n                                 }\n                             });\n                         });\n                     }\n                 });\n                localStorage.setItem(SCHEDULE_DATA_KEY, JSON.stringify(dataToSave));\n            } catch (error) {\n                console.error(\"Error saving schedule data to localStorage:\", error);\n                 toast({\n                     title: \"Error al Guardar Horario\",\n                     description: \"No se pudo guardar el horario en el almacenamiento local.\",\n                     variant: \"destructive\",\n                 });\n            }\n        }\n    }, [scheduleData, isClient, toast]);\n\n    useEffect(() => {\n        if (isClient) {\n            try {\n                localStorage.setItem(SCHEDULE_NOTES_KEY, notes);\n            } catch (error) {\n                console.error(\"Error saving notes to localStorage:\", error);\n            }\n        }\n    }, [notes, isClient]);\n\n     // --- Effect to save ScheduleNotes to localStorage ---\n     useEffect(() => {\n        if (isClient) {\n            try {\n                localStorage.setItem(SCHEDULE_EVENTS_KEY, JSON.stringify(scheduleNotes));\n            } catch (error) {\n                console.error(\"Error saving schedule notes to localStorage:\", error);\n                toast({\n                    title: 'Error al Guardar Notas de Calendario',\n                    description: 'No se pudieron guardar las notas específicas.',\n                    variant: 'destructive',\n                });\n            }\n        }\n    }, [scheduleNotes, isClient, toast]);\n\n      // --- Effect to save Schedule Templates ---\n      useEffect(() => {\n        if (isClient) {\n            try {\n                 // Ensure dates are stringified correctly and assignments is valid\n                 const templatesToSave = savedTemplates.map(tpl => ({\n                    ...tpl,\n                    // Ensure assignments is always an object before stringifying\n                    assignments: (tpl.assignments && typeof tpl.assignments === 'object' && !Array.isArray(tpl.assignments)) ? tpl.assignments : {},\n                    createdAt: tpl.createdAt instanceof Date ? tpl.createdAt.toISOString() : (typeof tpl.createdAt === 'string' ? tpl.createdAt : undefined), // Handle string or Date\n                 }));\n                 console.log(\"[Save Effect] Saving templates to localStorage:\", templatesToSave); // Log before saving\n                 localStorage.setItem(SCHEDULE_TEMPLATES_KEY, JSON.stringify(templatesToSave));\n                 console.log(\"[Save Effect] Templates saved successfully.\"); // Log if saving succeeds\n            } catch (error) {\n                 console.error(\"Error saving templates to localStorage:\", error);\n                 toast({\n                     title: 'Error al Guardar Templates',\n                     description: 'No se pudieron guardar los templates localmente.',\n                     variant: 'destructive',\n                 });\n            }\n        }\n      }, [savedTemplates, isClient, toast]);\n\n\n    // ---- End LocalStorage Effects ---\n\n    // --- Functions to Manage Schedule Notes ---\n    const addScheduleNote = useCallback((newNoteData: Omit<ScheduleNote, 'id'>) => {\n        const newNote: ScheduleNote = {\n            ...newNoteData,\n            id: `note-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`,\n        };\n        setScheduleNotes(prevNotes => [...prevNotes, newNote].sort((a, b) => a.date.localeCompare(b.date)));\n        toast({ title: \"Anotación Guardada\", description: `Nota para ${format(parseDateFns(newNoteData.date, 'yyyy-MM-dd', new Date()), 'PPP', { locale: es })} agregada.` });\n    }, [toast]);\n\n    const deleteScheduleNote = useCallback((noteId: string) => {\n        setScheduleNotes(prevNotes => prevNotes.filter(note => note.id !== noteId));\n        toast({ title: \"Anotación Eliminada\", variant: 'destructive' });\n        setNoteToDeleteId(null); // Close the confirmation dialog after deletion\n    }, [toast]);\n\n    // Function to get notes for a specific date\n     const getNotesForDate = useCallback((date: Date): ScheduleNote[] => {\n         if (!date || !isValid(date)) return [];\n         const dateKey = format(date, 'yyyy-MM-dd');\n         return scheduleNotes.filter(note => note.date === dateKey);\n     }, [scheduleNotes]);\n\n    // Function to open the notes modal specifically for a date, filtering the notes\n    const handleOpenNotesModalForDate = (date: Date) => {\n        setNotesModalForDate(date); // Set the date context\n        setIsNotesModalOpen(true);\n    };\n\n\n\n    const getScheduleForDate = useCallback((date: Date): ScheduleData => {\n        const key = format(date, 'yyyy-MM-dd');\n        const dayData = scheduleData[key];\n        const hydratedAssignments: { [departmentId: string]: ShiftAssignment[] } = {};\n\n        if (dayData && dayData.assignments) {\n             Object.keys(dayData.assignments).forEach(deptId => {\n                 hydratedAssignments[deptId] = (dayData.assignments[deptId] || []).map(assign => {\n                    const fullEmployee = employees.find(emp => emp.id === assign.employee?.id);\n                    if (fullEmployee) {\n                        return { ...assign, employee: fullEmployee };\n                    } else {\n                        console.warn(`Employee with ID ${assign.employee?.id || 'undefined'} not found for assignment ${assign.id}`);\n                         return { ...assign, employee: { id: assign.employee?.id || 'unknown', name: `(ID: ${assign.employee?.id || '??'})`, locationIds: [], departmentIds: [] } };\n                    }\n                 }).filter(assign => assign !== null);\n             });\n        }\n        return {\n            date: date,\n            assignments: hydratedAssignments\n        };\n    }, [scheduleData, employees]);\n\n\n     // Filter departments by selected location\n     const filteredDepartments = useMemo(() => {\n         return departments.filter(dept => dept.locationId === selectedLocationId);\n     }, [departments, selectedLocationId]);\n\n\n    // Filter employees by selected location\n    const filteredEmployees = useMemo(() => {\n        return employees.filter(emp =>\n            Array.isArray(emp.locationIds) && emp.locationIds.includes(selectedLocationId)\n        );\n    }, [employees, selectedLocationId]);\n\n\n     // Filter templates by selected location and current view mode\n     const filteredTemplates = useMemo(() => {\n        console.log(\"[Filter Memo] All templates in state:\", savedTemplates); // Log all templates\n        // Ensure savedTemplates is always an array before filtering\n        const templatesArray = Array.isArray(savedTemplates) ? savedTemplates : [];\n        const filtered = templatesArray.filter(temp => {\n            // Check if temp.locationId matches selectedLocationId\n            const locationMatch = temp.locationId === selectedLocationId;\n             // Check if temp.type matches viewMode ('day' or 'week')\n            const typeMatch = temp.type === viewMode;\n             // Log details for debugging\n             console.log(`[Filter Memo] Template ${temp.id} (${temp.name}): Type Match=${typeMatch} (template type: ${temp.type}, view mode: ${viewMode}), Loc Match=${locationMatch} (template loc: ${temp.locationId}, selected loc: ${selectedLocationId})`);\n            return typeMatch && locationMatch;\n        });\n        console.log(`[Filter Memo] Filtered templates for loc ${selectedLocationId}, view ${viewMode}:`, filtered); // Log filtered templates\n        return filtered;\n    }, [savedTemplates, selectedLocationId, viewMode]);\n\n\n    // Memoized list of available employees, considering current view and assigned employees\n    const availableEmployees = useMemo(() => {\n        // Determine the date or dates for filtering based on viewMode and context\n        const datesForFiltering = viewMode === 'day' ? [targetDate] : (weekDates || []);\n\n        // Get IDs of employees already assigned on the target date(s)\n        const assignedIdsOnDates = new Set<string>();\n        datesForFiltering.forEach(date => {\n            if (!date || !isValid(date)) return;\n            const dateKey = format(date, 'yyyy-MM-dd');\n            const daySchedule = scheduleData[dateKey];\n            if (daySchedule && daySchedule.assignments) {\n                Object.values(daySchedule.assignments).flat().forEach(assignment => {\n                    if (assignment.employee && assignment.employee.id) { // Check if employee and id exist\n                        assignedIdsOnDates.add(assignment.employee.id);\n                    }\n                });\n            }\n        });\n\n        // Start with all employees for the location\n        let potentiallyAvailable = filteredEmployees;\n\n        // Determine the department to filter by (only for EmployeeSelectionModal)\n        const deptForFiltering = shiftRequestContext?.departmentId;\n\n        // Filter employees based on whether they are already assigned on the target date(s)\n        // In WEEK VIEW, an employee should still be available if assigned on SOME days but not ALL\n        // In DAY VIEW (or EmployeeSelectionModal), filter if assigned on THAT specific day\n        if (viewMode === 'day' || isEmployeeSelectionModalOpen) { // Stricter filter for day view and modal\n             // Use shiftRequestContext.date if available (from + button), otherwise targetDate (from general day view)\n             const dateToFilterBy = shiftRequestContext?.date || targetDate;\n             if (dateToFilterBy && isValid(dateToFilterBy)) { // Check if date is valid\n                const targetDayKey = format(dateToFilterBy, 'yyyy-MM-dd');\n                const assignedOnTargetDay = new Set<string>();\n                const daySchedule = scheduleData[targetDayKey];\n                if (daySchedule && daySchedule.assignments) {\n                     Object.values(daySchedule.assignments).flat().forEach(assignment => {\n                         if (assignment.employee && assignment.employee.id) { // Check employee and id\n                             assignedOnTargetDay.add(assignment.employee.id);\n                         }\n                     });\n                }\n                potentiallyAvailable = potentiallyAvailable.filter(emp => emp.id && !assignedOnTargetDay.has(emp.id)); // Check emp.id\n             } else {\n                 console.warn(\"Available employees filter: No valid date found for filtering.\");\n             }\n        }\n        // } else { // Week view drag-drop list should show all employees for the location\n        //      // Show all employees for the location in the week view list\n        //      potentiallyAvailable = filteredEmployees;\n        // }\n\n\n        // Filter by department if the EmployeeSelectionModal is open and a department context exists\n        if (isEmployeeSelectionModalOpen && deptForFiltering) {\n             const deptExists = departments.some(d => d.id === deptForFiltering);\n             if (deptExists) {\n                 // Only show employees assigned to this department OR employees without any department assigned\n                potentiallyAvailable = potentiallyAvailable.filter(emp =>\n                    !emp.departmentIds || emp.departmentIds.length === 0 || emp.departmentIds.includes(deptForFiltering)\n                );\n             } else {\n                 console.warn(`Department ID ${deptForFiltering} not found, showing all available employees.`);\n             }\n        }\n\n        // Always sort alphabetically\n        potentiallyAvailable.sort((a, b) => (a.name || '').localeCompare(b.name || '')); // Add fallback for name\n\n        return potentiallyAvailable;\n\n    }, [\n        filteredEmployees,\n        scheduleData,\n        targetDate,\n        weekDates,\n        viewMode,\n        shiftRequestContext,\n        isEmployeeSelectionModalOpen, // Add dependency\n        departments, // Add departments as a dependency for the filter check\n    ]);\n\n\n    const handleLocationChange = (locationId: string) => {\n        setSelectedLocationId(locationId);\n        // Update default location for NEW departments/employees when location changes\n        setDepartmentFormData(prev => ({ ...prev, name: '', iconName: undefined, locationId: locationId })); // Reset name/icon too\n        setEmployeeFormData(prev => ({ ...prev, id: '', name: '', locationIds: [locationId], departmentIds: [] })); // Reset name/id too\n    };\n\n    const handleOpenEmployeeSelectionModal = (departmentId: string, date: Date) => {\n         setEditingShift(null);\n         setShiftRequestContext({ departmentId, date });\n         setTargetDate(date); // Ensure targetDate is set for filtering available employees\n         setIsEmployeeSelectionModalOpen(true);\n    };\n\n    const handleEmployeeSelectedForShift = (employee: Employee) => {\n        if (!shiftRequestContext) return;\n\n         // Check if employee is already assigned on this date in ANY department\n        const dateKey = format(shiftRequestContext.date, 'yyyy-MM-dd');\n        const daySchedule = scheduleData[dateKey];\n        const isAlreadyAssignedOnDate = daySchedule && Object.values(daySchedule.assignments)\n                                                .flat()\n                                                .some(a => a.employee.id === employee.id);\n\n        if (isAlreadyAssignedOnDate) {\n            toast({\n                title: 'Asignación Duplicada',\n                description: `${employee.name} ya tiene un turno asignado para el ${format(shiftRequestContext.date, 'PPP', { locale: es })}.`,\n                variant: 'destructive',\n            });\n            setIsEmployeeSelectionModalOpen(false); // Close the selection modal\n            return; // Stop the process\n        }\n\n         // Check for department mismatch\n         const employeeDepartments = employee.departmentIds || [];\n         const targetDepartment = departments.find(d => d.id === shiftRequestContext.departmentId);\n         if (targetDepartment && employeeDepartments.length > 0 && !employeeDepartments.includes(shiftRequestContext.departmentId)) {\n             setDepartmentMismatchWarning({\n                 employee,\n                 targetDepartment: targetDepartment,\n                 date: shiftRequestContext.date\n             });\n             setIsEmployeeSelectionModalOpen(false); // Close the selection modal for now\n             return; // Stop and show warning\n         }\n\n\n        setSelectedEmployee(employee);\n        setIsEmployeeSelectionModalOpen(false);\n        setIsShiftModalOpen(true);\n    };\n\n    const handleOpenShiftModalForDrop = (employee: Employee, departmentId: string, date: Date) => {\n        setEditingShift(null);\n        setSelectedEmployee(employee);\n        setShiftRequestContext({ departmentId, date });\n        setIsShiftModalOpen(true);\n    };\n\n    const handleShiftClick = (assignment: ShiftAssignment, date: Date, departmentId: string) => {\n        setEditingShift({ assignment, date, departmentId });\n        setSelectedEmployee(assignment.employee);\n        setShiftRequestContext({ departmentId, date });\n        setIsShiftModalOpen(true);\n    };\n\n    const handleAddOrUpdateShift = (details: ShiftDetails) => { // Updated to ShiftDetails\n        const context = editingShift || shiftRequestContext;\n        const employeeForShift = editingShift?.assignment.employee || selectedEmployee;\n\n        if (!employeeForShift || !context) return;\n\n        const { departmentId, date } = context;\n        const dateKey = format(date, 'yyyy-MM-dd');\n\n        const newAssignmentId = `shift_${employeeForShift.id}_${dateKey}_${details.startTime.replace(':', '')}`;\n\n        const assignmentPayload: ShiftAssignment = {\n            id: editingShift?.assignment.id || newAssignmentId,\n            employee: employeeForShift,\n            startTime: details.startTime,\n            endTime: details.endTime,\n            includeBreak: details.includeBreak || false,\n            breakStartTime: details.includeBreak ? details.breakStartTime : undefined,\n            breakEndTime: details.includeBreak ? details.breakEndTime : undefined,\n        };\n\n        setScheduleData(prevData => {\n            const currentDayData = getScheduleForDate(date);\n            const departmentAssignments = currentDayData.assignments[departmentId] || [];\n\n            let updatedAssignments;\n            if (editingShift) {\n                updatedAssignments = departmentAssignments.map(a =>\n                    a.id === editingShift.assignment.id ? assignmentPayload : a\n                );\n            } else {\n                 // Check if already assigned on this specific DATE in ANY department (redundant check if done in handleEmployeeSelectedForShift, but safe)\n                 const isAlreadyAssignedOnDate = Object.values(currentDayData.assignments)\n                                                .flat()\n                                                .some(a => a.employee.id === employeeForShift.id);\n\n                 if (isAlreadyAssignedOnDate) {\n                     toast({\n                         title: 'Asignación Duplicada',\n                         description: `${employeeForShift.name} ya tiene un turno asignado para el ${format(date, 'PPP', { locale: es })}.`,\n                         variant: 'destructive',\n                     });\n                     return prevData; // Do not update state if duplicate\n                 }\n                updatedAssignments = [...departmentAssignments, assignmentPayload];\n            }\n\n             const updatedDayData: ScheduleData = {\n                 ...currentDayData,\n                 date: date,\n                 assignments: {\n                     ...currentDayData.assignments,\n                     [departmentId]: updatedAssignments,\n                 },\n             };\n\n            return {\n                ...prevData,\n                [dateKey]: updatedDayData,\n            };\n        });\n        setIsShiftModalOpen(false);\n        setSelectedEmployee(null);\n        setShiftRequestContext(null);\n        setEditingShift(null);\n         toast({\n            title: editingShift ? 'Turno Actualizado' : 'Turno Agregado',\n            description: `Turno para ${employeeForShift.name} el ${format(date, 'PPP', { locale: es })} ${editingShift ? 'actualizado.' : 'agregado.'}`,\n        });\n    };\n\n    const handleRemoveShift = (dateKey: string, departmentId: string, assignmentId: string) => {\n        setScheduleData(prevData => {\n            const dayData = prevData[dateKey];\n            if (!dayData) return prevData;\n\n            const departmentAssignments = (dayData.assignments[departmentId] || []).filter(a => a.id !== assignmentId);\n\n            const newAssignments = { ...dayData.assignments, [departmentId]: departmentAssignments };\n\n            // Optional: Clean up empty department arrays\n            if (newAssignments[departmentId]?.length === 0) {\n                delete newAssignments[departmentId];\n            }\n\n             // Optional: Clean up day data if no assignments left\n             const remainingAssignmentsCount = Object.values(newAssignments).reduce((sum, dept) => sum + dept.length, 0);\n             if (remainingAssignmentsCount === 0) {\n                 const updatedData = { ...prevData };\n                 delete updatedData[dateKey];\n                 return updatedData;\n             }\n\n\n            return {\n                ...prevData,\n                [dateKey]: {\n                    ...dayData,\n                    assignments: newAssignments,\n                },\n            };\n        });\n         toast({ title: 'Turno Eliminado', variant: 'destructive' });\n    };\n\n    const handleDragEnd = (event: DragEndEvent) => {\n        const { over, active } = event;\n\n        if (isMobile || !isClient || !over || !active) return;\n\n        const employeeId = active.id as string;\n        const targetData = over.data.current as { type: string; id: string; date?: string };\n\n        if (!targetData || targetData.type !== 'department' || !targetData.date) {\n            console.warn(\"Invalid drop target data:\", targetData);\n            return;\n        }\n\n        const targetDepartmentId = targetData.id;\n        const dropDate = parseISO(targetData.date);\n\n        const employee = employees.find(emp => emp.id === employeeId);\n        const targetDepartment = departments.find(dept => dept.id === targetDepartmentId);\n        if (!employee || !targetDepartment || !isValid(dropDate)) {\n             console.error(\"Error finding employee, department, or date for drop.\");\n             return;\n        }\n\n\n        const dateKey = format(dropDate, 'yyyy-MM-dd');\n        const daySchedule = scheduleData[dateKey];\n        if (daySchedule && daySchedule.assignments) {\n             const isAlreadyAssignedOnDate = Object.values(daySchedule.assignments)\n                                            .flat()\n                                            .some(assignment => assignment.employee.id === employeeId);\n             if (isAlreadyAssignedOnDate) {\n                 toast({\n                     title: 'Asignación Duplicada',\n                     description: `${employee.name} ya tiene un turno asignado para el ${format(dropDate, 'PPP', { locale: es })}.`,\n                     variant: 'destructive',\n                 });\n                 return;\n             }\n        }\n\n        // Check for department mismatch\n        const employeeDepartments = employee.departmentIds || [];\n        if (employeeDepartments.length > 0 && !employeeDepartments.includes(targetDepartmentId)) {\n            setDepartmentMismatchWarning({\n                 employee,\n                 targetDepartment,\n                 date: dropDate\n             });\n             return; // Show warning and stop assignment for now\n        }\n\n        // If no mismatch or warning confirmed, proceed with opening the modal\n        handleOpenShiftModalForDrop(employee, targetDepartmentId, dropDate);\n    };\n\n\n     // --- CRUD Handlers for Config Modal ---\n     // Function to open the specific form within the modal\n     const openConfigForm = (type: 'location' | 'department' | 'employee' | 'template', item: Location | Department | Employee | ScheduleTemplate | null = null) => { // Added 'template'\n        setConfigFormType(type); // Keep track of the form type\n        setSelectedConfigItem(item); // Set the item being edited/viewed\n\n        // Populate form data based on the item type and whether it's new or existing\n        switch (type) {\n            case 'location':\n                setLocationFormData({ name: (item as Location)?.name || '' });\n                break;\n            case 'department':\n                 const dept = item as Department | null;\n                 const iconName = dept ? Object.keys(iconMap).find(key => iconMap[key] === dept.icon) : undefined;\n                 const deptLocationId = dept?.locationId || selectedLocationId || (locations.length > 0 ? locations[0].id : '');\n                setDepartmentFormData({\n                    name: dept?.name || '',\n                    locationId: deptLocationId,\n                    iconName: iconName\n                });\n                break;\n            case 'employee':\n                const emp = item as Employee | null;\n                 const initialLocationIds = Array.isArray(emp?.locationIds) ? emp.locationIds : (selectedLocationId ? [selectedLocationId] : []);\n                 const initialDepartmentIds = Array.isArray(emp?.departmentIds) ? emp.departmentIds : [];\n                setEmployeeFormData({\n                    id: emp?.id || '',\n                    name: emp?.name || '',\n                    locationIds: initialLocationIds.length > 0 ? initialLocationIds : (locations.length > 0 ? [locations[0].id] : []), // Ensure at least one location if possible\n                    departmentIds: initialDepartmentIds\n                });\n                break;\n            case 'template':\n                 console.log(\"Template viewing/editing form.\");\n                 break;\n        }\n    };\n\n    const handleSaveLocation = () => {\n        const name = locationFormData.name.trim();\n        if (!name) {\n            toast({ title: 'Nombre Inválido', description: 'El nombre de la sede no puede estar vacío.', variant: 'destructive' });\n            return;\n        }\n        // Use selectedConfigItem for editing check\n        const currentEditingLocation = selectedConfigItem as Location | null;\n        if (currentEditingLocation && configFormType === 'location') {\n            setLocations(locations.map(loc => loc.id === currentEditingLocation.id ? { ...loc, name } : loc));\n             toast({ title: 'Sede Actualizada', description: `Sede \"${name}\" actualizada.` });\n        } else {\n             const newLocation = { id: `loc-${Date.now()}`, name };\n            setLocations([...locations, newLocation]);\n            toast({ title: 'Sede Agregada', description: `Sede \"${name}\" agregada.` });\n            if (locations.length === 0 || !selectedLocationId) {\n                 setSelectedLocationId(newLocation.id);\n                 // Update default location for NEW departments/employees when the first location is added\n                 setDepartmentFormData(prev => ({ ...prev, locationId: newLocation.id }));\n                 setEmployeeFormData(prev => ({ ...prev, locationIds: [newLocation.id] }));\n            }\n        }\n        setConfigFormType(null); // Close form view after save\n        setSelectedConfigItem(null);\n        setLocationSearch(''); // Clear search\n    };\n\n    const handleSaveDepartment = () => {\n         const name = departmentFormData.name.trim();\n         const locationId = departmentFormData.locationId;\n         const iconName = departmentFormData.iconName;\n         if (!name) {\n             toast({ title: 'Nombre Inválido', description: 'El nombre del departamento no puede estar vacío.', variant: 'destructive' });\n             return;\n         }\n         if (!locationId) {\n             toast({ title: 'Sede Requerida', description: 'Debes seleccionar una sede para el departamento.', variant: 'destructive' });\n             return;\n         }\n         const icon = iconName ? iconMap[iconName] : Building;\n\n         const currentEditingDepartment = selectedConfigItem as Department | null;\n        if (currentEditingDepartment && configFormType === 'department') {\n            setDepartments(departments.map(dep => dep.id === currentEditingDepartment.id ? { ...dep, name, locationId, icon, iconName } : dep));\n             toast({ title: 'Departamento Actualizado', description: `Departamento \"${name}\" actualizado.` });\n        } else {\n             const newDepartment = { id: `dep-${Date.now()}`, name, locationId, icon, iconName };\n            setDepartments([...departments, newDepartment]);\n            toast({ title: 'Departamento Agregado', description: `Departamento \"${name}\" agregado.` });\n        }\n        setConfigFormType(null); // Close form view\n        setSelectedConfigItem(null);\n        setDepartmentSearch(''); // Clear search\n    };\n\n    const handleSaveEmployee = () => {\n         const id = employeeFormData.id.trim();\n         const name = employeeFormData.name.trim();\n         const locationIds = Array.isArray(employeeFormData.locationIds) && employeeFormData.locationIds.length > 0\n                             ? employeeFormData.locationIds\n                             : (selectedLocationId ? [selectedLocationId] : []);\n         const departmentIds = Array.isArray(employeeFormData.departmentIds) ? employeeFormData.departmentIds : [];\n\n          if (!id) {\n             toast({ title: 'ID Requerido', description: 'El ID del colaborador es requerido (Ej: Cédula).', variant: 'destructive' });\n             return;\n          }\n          if (!name) {\n             toast({ title: 'Nombre Requerido', description: 'El nombre del colaborador es requerido.', variant: 'destructive' });\n             return;\n          }\n           if (locationIds.length === 0) {\n               toast({ title: 'Sede Requerida', description: 'Debes asignar el colaborador al menos a una sede.', variant: 'destructive' });\n               return;\n           }\n\n          const currentEditingEmployee = selectedConfigItem as Employee | null;\n         // Only check for duplicate ID if adding a NEW employee\n         if (!currentEditingEmployee || configFormType !== 'employee') {\n             const isDuplicateId = employees.some(emp => emp.id === id);\n             if (isDuplicateId) {\n                 toast({ title: 'ID Duplicado', description: `El ID \"${id}\" ya está en uso por otro colaborador.`, variant: 'destructive' });\n                 return;\n             }\n         }\n\n         const updatedEmployeeData: Employee = { id, name, locationIds, departmentIds };\n\n        if (currentEditingEmployee && configFormType === 'employee') {\n            setEmployees(employees.map(emp => emp.id === currentEditingEmployee.id ? updatedEmployeeData : emp));\n             toast({ title: 'Colaborador Actualizado', description: `Colaborador \"${name}\" (ID: ${id}) actualizado.` });\n             // Update employee details in existing schedule assignments\n             setScheduleData(prevSchedule => {\n                const updatedSchedule = { ...prevSchedule };\n                Object.keys(updatedSchedule).forEach(dateKey => {\n                    if (updatedSchedule[dateKey] && updatedSchedule[dateKey].assignments) { // Check if assignments exist\n                        Object.keys(updatedSchedule[dateKey].assignments).forEach(deptId => {\n                             const currentAssignments = updatedSchedule[dateKey].assignments[deptId] || [];\n                            updatedSchedule[dateKey].assignments[deptId] = currentAssignments.map(assignment => {\n                                if (assignment.employee.id === id) {\n                                    return { ...assignment, employee: updatedEmployeeData };\n                                }\n                                return assignment;\n                            });\n                        });\n                    }\n                });\n                return updatedSchedule;\n             });\n        } else {\n            const newEmployee = updatedEmployeeData;\n            setEmployees(prev => [...prev, newEmployee].sort((a, b) => (a.name || '').localeCompare(b.name || ''))); // Keep sorted, handle potential null names\n             toast({ title: 'Colaborador Agregado', description: `Colaborador \"${name}\" (ID: ${id}) agregado.` });\n        }\n        setConfigFormType(null); // Close form view\n        setSelectedConfigItem(null);\n        setEmployeeSearch(''); // Clear search\n    };\n\n    const handleToggleEmployeeLocation = (locationId: string) => {\n        setEmployeeFormData(prev => {\n            const currentIds = Array.isArray(prev.locationIds) ? prev.locationIds : [];\n            let newLocationIds;\n            if (currentIds.includes(locationId)) {\n                newLocationIds = currentIds.filter(id => id !== locationId);\n                 if (newLocationIds.length === 0) {\n                    toast({ title: \"Validación\", description: \"El colaborador debe estar asignado al menos a una sede.\", variant: \"destructive\" });\n                    return prev; // Prevent removal if it's the last one\n                }\n            } else {\n                newLocationIds = [...currentIds, locationId];\n            }\n             const validDepartmentIds = (prev.departmentIds || []).filter(deptId => {\n                 const dept = departments.find(d => d.id === deptId);\n                 return dept && newLocationIds.includes(dept.locationId);\n             });\n            return { ...prev, locationIds: newLocationIds, departmentIds: validDepartmentIds };\n        });\n    };\n\n    const handleToggleEmployeeDepartment = (departmentId: string) => {\n        setEmployeeFormData(prev => {\n            const currentIds = Array.isArray(prev.departmentIds) ? prev.departmentIds : [];\n            let newDepartmentIds;\n            if (currentIds.includes(departmentId)) {\n                newDepartmentIds = currentIds.filter(id => id !== departmentId);\n            } else {\n                newDepartmentIds = [...currentIds, departmentId];\n            }\n            return { ...prev, departmentIds: newDepartmentIds };\n        });\n    };\n\n     const availableDepartmentsForEmployee = useMemo(() => {\n        if (!employeeFormData.locationIds || employeeFormData.locationIds.length === 0) {\n            return [];\n        }\n        return departments.filter(dept => employeeFormData.locationIds.includes(dept.locationId));\n     }, [departments, employeeFormData.locationIds]);\n\n\n     const confirmDeleteItem = (type: 'location' | 'department' | 'employee' | 'template', id: string, name: string) => { // Added 'template'\n        setItemToDelete({ type, id, name });\n     };\n\n    const handleDeleteItem = () => {\n        if (!itemToDelete) return;\n\n        try {\n            let message = '';\n            switch (itemToDelete.type) {\n                case 'location':\n                    setLocations(prevLocs => {\n                        const remaining = prevLocs.filter(loc => loc.id !== itemToDelete.id);\n                        if (selectedLocationId === itemToDelete.id) {\n                           setSelectedLocationId(remaining.length > 0 ? remaining[0].id : '');\n                        }\n                        return remaining;\n                    });\n                    const depsToDeleteLoc = departments.filter(dep => dep.locationId === itemToDelete.id).map(d => d.id);\n                    setDepartments(prevDeps => prevDeps.filter(dep => dep.locationId !== itemToDelete.id));\n                    setEmployees(prevEmps => prevEmps.map(emp => ({\n                        ...emp,\n                        locationIds: (emp.locationIds || []).filter(locId => locId !== itemToDelete.id),\n                        departmentIds: (emp.departmentIds || []).filter(deptId => !depsToDeleteLoc.includes(deptId))\n                    })).filter(emp => emp.locationIds.length > 0));\n                      // Also remove templates associated with the deleted location\n                      setSavedTemplates(prevTpls => prevTpls.filter(tpl => tpl.locationId !== itemToDelete.id));\n                     setScheduleData(prevSchedule => {\n                         const updatedSchedule = { ...prevSchedule };\n                         Object.keys(updatedSchedule).forEach(dateKey => {\n                             if (updatedSchedule[dateKey]?.assignments) { // Check if day exists\n                                let dayHasOtherAssignments = false;\n                                const currentAssignments = updatedSchedule[dateKey].assignments;\n                                const newAssignments: { [deptId: string]: ShiftAssignment[] } = {};\n                                Object.keys(currentAssignments).forEach(deptId => {\n                                    if (!depsToDeleteLoc.includes(deptId)) {\n                                        newAssignments[deptId] = currentAssignments[deptId];\n                                        if (currentAssignments[deptId].length > 0) {\n                                            dayHasOtherAssignments = true;\n                                        }\n                                    }\n                                });\n                                if (Object.keys(newAssignments).length > 0) {\n                                    updatedSchedule[dateKey].assignments = newAssignments;\n                                } else {\n                                        delete updatedSchedule[dateKey]; // Delete day if no assignments left\n                                }\n                             }\n                         });\n                         return updatedSchedule;\n                     });\n                    message = `Sede \"${itemToDelete.name}\" y sus datos asociados eliminados.`;\n                    setLocationSearch(''); // Clear search\n                    break;\n                case 'department':\n                    setDepartments(prevDeps => prevDeps.filter(dep => dep.id !== itemToDelete.id));\n                     const updatedScheduleDept = { ...scheduleData };\n                     Object.keys(updatedScheduleDept).forEach(dateKey => {\n                          if (updatedScheduleDept[dateKey]?.assignments?.[itemToDelete.id]) { // Check if day and dept exist\n                              delete updatedScheduleDept[dateKey].assignments[itemToDelete.id];\n                              if (Object.keys(updatedScheduleDept[dateKey].assignments).length === 0) {\n                                   delete updatedScheduleDept[dateKey];\n                              }\n                          }\n                     });\n                     setScheduleData(updatedScheduleDept);\n                      // Also remove department references from templates\n                      setSavedTemplates(prevTpls => prevTpls.map(tpl => {\n                         if (tpl.assignments) {\n                             if (tpl.type === 'day' && (tpl.assignments as DailyAssignments)[itemToDelete.id]) {\n                                 delete (tpl.assignments as DailyAssignments)[itemToDelete.id];\n                             } else if (tpl.type === 'week') {\n                                 Object.keys(tpl.assignments).forEach(dateKey => {\n                                     const weeklyAssignments = tpl.assignments as WeeklyAssignments;\n                                     if (weeklyAssignments[dateKey] && weeklyAssignments[dateKey][itemToDelete.id]) {\n                                         delete weeklyAssignments[dateKey][itemToDelete.id];\n                                     }\n                                 });\n                             }\n                         }\n                         return tpl;\n                      }));\n                     setEmployees(prevEmps => prevEmps.map(emp => ({\n                        ...emp,\n                        departmentIds: (emp.departmentIds || []).filter(deptId => deptId !== itemToDelete.id)\n                     })));\n                     message = `Departamento \"${itemToDelete.name}\" eliminado.`;\n                    setDepartmentSearch(''); // Clear search\n                    break;\n                case 'employee':\n                    setEmployees(prevEmps => prevEmps.filter(emp => emp.id !== itemToDelete.id));\n                     const updatedScheduleEmp = { ...scheduleData };\n                     Object.keys(updatedScheduleEmp).forEach(dateKey => {\n                          if (updatedScheduleEmp[dateKey]?.assignments) { // Check if day exists\n                             let dayChanged = false;\n                             Object.keys(updatedScheduleEmp[dateKey].assignments).forEach(deptId => {\n                                 const originalLength = updatedScheduleEmp[dateKey].assignments[deptId].length;\n                                 updatedScheduleEmp[dateKey].assignments[deptId] = updatedScheduleEmp[dateKey].assignments[deptId].filter(a => a.employee.id !== itemToDelete.id);\n                                 if (updatedScheduleEmp[dateKey].assignments[deptId].length < originalLength) {\n                                     dayChanged = true;\n                                 }\n                                 if (updatedScheduleEmp[dateKey].assignments[deptId].length === 0) {\n                                     delete updatedScheduleEmp[dateKey].assignments[deptId];\n                                 }\n                             });\n                              if (dayChanged && Object.keys(updatedScheduleEmp[dateKey].assignments).length === 0) {\n                                  delete updatedScheduleEmp[dateKey];\n                              }\n                          }\n                     });\n                     setScheduleData(updatedScheduleEmp);\n                      // Also remove employee references from templates\n                      setSavedTemplates(prevTpls => prevTpls.map(tpl => {\n                         if (tpl.assignments) {\n                             const removeEmployee = (assignments: DailyAssignments | WeeklyAssignments) => {\n                                 Object.keys(assignments).forEach(key => { // key is deptId for day, dateKey for week\n                                     if (tpl.type === 'day') {\n                                         const dailyAssignments = assignments as DailyAssignments;\n                                         if (dailyAssignments[key]) {\n                                            dailyAssignments[key] = dailyAssignments[key].filter(a => a.employee.id !== itemToDelete.id);\n                                         }\n                                     } else { // week\n                                         const weeklyAssignments = assignments as WeeklyAssignments;\n                                         if (weeklyAssignments[key]) {\n                                            Object.keys(weeklyAssignments[key]).forEach(deptId => {\n                                                 if (weeklyAssignments[key][deptId]) {\n                                                    weeklyAssignments[key][deptId] = weeklyAssignments[key][deptId].filter(a => a.employee.id !== itemToDelete.id);\n                                                 }\n                                             });\n                                         }\n                                     }\n                                 });\n                             };\n                             removeEmployee(tpl.assignments);\n                         }\n                         return tpl;\n                      }));\n                     message = `Colaborador \"${itemToDelete.name}\" eliminado.`;\n                    setEmployeeSearch(''); // Clear search\n                    break;\n                  case 'template':\n                     setSavedTemplates(prevTpls => prevTpls.filter(tpl => tpl.id !== itemToDelete.id));\n                     message = `Template \"${itemToDelete.name}\" eliminado.`;\n                     setTemplateSearch(''); // Clear search\n                     break;\n             }\n             toast({ title: 'Elemento Eliminado', description: message, variant: 'destructive' });\n         } catch (error) {\n              console.error(`Error deleting item type ${itemToDelete.type}:`, error);\n              toast({ title: 'Error al Eliminar', description: 'No se pudo completar la eliminación.', variant: 'destructive' });\n         } finally {\n             setItemToDelete(null); // Close the dialog\n             // If the deleted item was the one being edited, clear the form\n             if (selectedConfigItem && selectedConfigItem.id === itemToDelete?.id) {\n                 setConfigFormType(null);\n                 setSelectedConfigItem(null);\n             }\n         }\n     };\n\n\n     const handlePreviousWeek = () => {\n         if (currentDate) setCurrentDate(prevDate => subWeeks(prevDate!, 1));\n     };\n\n     const handleNextWeek = () => {\n         if (currentDate) setCurrentDate(prevDate => addWeeks(prevDate!, 1));\n     };\n\n\n     const handleDuplicateDay = (sourceDate: Date) => {\n         const sourceDayKey = format(sourceDate, 'yyyy-MM-dd');\n         const nextDayDate = addDays(sourceDate, 1);\n         const nextDayKey = format(nextDayDate, 'yyyy-MM-dd');\n         const sourceSchedule = scheduleData[sourceDayKey];\n\n         if (!sourceSchedule || Object.keys(sourceSchedule.assignments).length === 0 || Object.values(sourceSchedule.assignments).every(dept => dept.length === 0)) {\n             toast({ title: 'Nada que Duplicar', description: `No hay turnos asignados para el ${format(sourceDate, 'PPP', { locale: es })}.`, variant: 'default' });\n             return;\n         }\n\n         const duplicatedAssignments = JSON.parse(JSON.stringify(sourceSchedule.assignments));\n         Object.keys(duplicatedAssignments).forEach(deptId => {\n             duplicatedAssignments[deptId].forEach((assign: ShiftAssignment) => {\n                 assign.id = `shift_${assign.employee.id}_${nextDayKey}_${assign.startTime.replace(':', '')}_${Math.random().toString(36).substring(2, 7)}`;\n                  const fullEmployee = employees.find(emp => emp.id === assign.employee.id);\n                  if (fullEmployee) {\n                      assign.employee = fullEmployee;\n                  } else {\n                       console.warn(`Employee ${assign.employee.id} not found during duplication.`);\n                       assign.employee = { id: assign.employee.id, name: `(ID: ${assign.employee.id})`, locationIds: [], departmentIds: [] };\n                  }\n             });\n         });\n\n         setScheduleData(prevData => ({\n             ...prevData,\n             [nextDayKey]: {\n                 date: nextDayDate,\n                 assignments: duplicatedAssignments,\n             },\n         }));\n\n         if (viewMode === 'day') {\n             setTargetDate(nextDayDate);\n         }\n\n         toast({ title: 'Horario Duplicado', description: `El horario del ${format(sourceDate, 'dd/MM')} se duplicó al ${format(nextDayDate, 'dd/MM')}.` });\n     };\n\n     const handleDuplicateWeek = useCallback(() => {\n          if (!currentDate || !weekDates || weekDates.length === 0) return; // Guard clause\n         const nextWeekStartDate = addWeeks(startOfWeek(currentDate, { weekStartsOn: 1 }), 1);\n         let updatedData = { ...scheduleData };\n         let duplicatedCount = 0;\n\n         weekDates.forEach(sourceDate => {\n             const sourceDayKey = format(sourceDate, 'yyyy-MM-dd');\n             const sourceDaySchedule = scheduleData[sourceDayKey];\n             if (sourceDaySchedule && Object.keys(sourceDaySchedule.assignments).length > 0 && Object.values(sourceDaySchedule.assignments).some(dept => dept.length > 0)) {\n                 const dayOfWeek = getDay(sourceDate);\n                 // Adjust index: Sunday (0) becomes 6, Monday (1) becomes 0, ..., Saturday (6) becomes 5\n                 const targetDateIndex = (dayOfWeek + 6) % 7; // Correct index mapping for Mon-Sun week\n\n                 if (targetDateIndex < 0 || targetDateIndex >= 7) {\n                     console.error(\"Invalid target date index calculated:\", targetDateIndex, \"for date:\", sourceDate);\n                     return;\n                 }\n                 const targetDate = addDays(nextWeekStartDate, targetDateIndex);\n                 const targetDayKey = format(targetDate, 'yyyy-MM-dd');\n                 const duplicatedAssignments = JSON.parse(JSON.stringify(sourceDaySchedule.assignments));\n\n                 Object.keys(duplicatedAssignments).forEach(deptId => {\n                     duplicatedAssignments[deptId].forEach((assign: ShiftAssignment) => {\n                         assign.id = `shift_${assign.employee.id}_${targetDayKey}_${assign.startTime.replace(':', '')}_${Math.random().toString(36).substring(2, 7)}`;\n                         const fullEmployee = employees.find(emp => emp.id === assign.employee?.id);\n                         assign.employee = fullEmployee || { id: assign.employee?.id || 'unknown', name: `(ID: ${assign.employee?.id || '??'})`, locationIds: [], departmentIds: [] };\n                     });\n                 });\n\n                 updatedData[targetDayKey] = { date: targetDate, assignments: duplicatedAssignments };\n                 duplicatedCount++;\n             }\n         });\n\n         if (duplicatedCount > 0) {\n             setScheduleData(updatedData);\n             setCurrentDate(nextWeekStartDate);\n             toast({ title: 'Semana Duplicada', description: `El horario de esta semana (${duplicatedCount} día(s)) se duplicó a la siguiente.` });\n         } else {\n             toast({ title: 'Nada que Duplicar', description: 'No hay turnos en la semana actual para duplicar.', variant: 'default' });\n         }\n     }, [currentDate, scheduleData, weekDates, employees, toast]);\n\n\n     const handleConfirmClearDay = (dateToClear: Date) => {\n         setClearingDate(dateToClear); // Set the date to be cleared, triggers the AlertDialog\n     };\n\n     const handleClearDay = () => {\n         if (!clearingDate) return;\n         const dateKey = format(clearingDate, 'yyyy-MM-dd');\n\n         setScheduleData(prevData => {\n             const updatedData = { ...prevData };\n             // Remove the assignments for the specific day, or remove the day entry entirely\n             if (updatedData[dateKey]) {\n                  delete updatedData[dateKey];\n             }\n             return updatedData;\n         });\n         // Also clear notes for the day being cleared\n         setScheduleNotes(prevNotes => prevNotes.filter(note => note.date !== dateKey));\n\n         setClearingDate(null); // Close the dialog\n         toast({ title: 'Horario Limpiado', description: `Se eliminaron todos los turnos y notas para el ${format(clearingDate, 'PPP', { locale: es })}.`, variant: 'destructive' });\n     };\n\n     // --- Clear Week Handler ---\n     const handleClearWeek = () => {\n         if (!currentDate || !weekDates || weekDates.length === 0) return; // Guard clause\n         const weekStartDate = startOfWeek(currentDate, { weekStartsOn: 1 });\n         const weekEndDate = endOfWeek(currentDate, { weekStartsOn: 1 });\n         const weekStartDateFormatted = format(weekStartDate, 'dd/MM/yy');\n         const weekEndDateFormatted = format(weekEndDate, 'dd/MM/yy');\n\n         setScheduleData(prevData => {\n             const updatedData = { ...prevData };\n             weekDates.forEach(date => {\n                 const dateKey = format(date, 'yyyy-MM-dd');\n                 if (updatedData[dateKey]) {\n                     delete updatedData[dateKey];\n                 }\n             });\n             return updatedData;\n         });\n          // Clear notes for the week being cleared\n         setScheduleNotes(prevNotes => {\n             const weekStartKey = format(weekStartDate, 'yyyy-MM-dd');\n             const weekEndKey = format(weekEndDate, 'yyyy-MM-dd');\n             return prevNotes.filter(note => note.date < weekStartKey || note.date > weekEndKey);\n         });\n\n         setClearingWeek(false); // Close the confirmation dialog\n         toast({\n             title: 'Semana Limpiada',\n             description: `Se eliminaron todos los turnos y notas de la semana del ${weekStartDateFormatted} al ${weekEndDateFormatted}.`,\n             variant: 'destructive'\n         });\n     };\n\n\n     // --- Template Handling ---\n     const handleOpenSaveTemplate = () => {\n         setIsSavingTemplate(true); // Opens a simple modal/dialog to get the template name\n     };\n\n     const handleSaveTemplate = (templateName: string) => {\n         if (!templateName.trim()) {\n             toast({ title: \"Nombre Requerido\", description: \"Por favor ingresa un nombre para el template.\", variant: \"destructive\" });\n             return;\n         }\n\n         let assignmentsToSave: DailyAssignments | WeeklyAssignments;\n         if (viewMode === 'day') {\n             if (!targetDate || !isValid(targetDate)) {\n                 toast({ title: \"Error\", description: \"Fecha inválida para guardar template diario.\", variant: \"destructive\" });\n                 setIsSavingTemplate(false);\n                 return;\n             }\n             const dayKey = format(targetDate, 'yyyy-MM-dd');\n             const daySchedule = scheduleData[dayKey];\n             const dailyAssignments: DailyAssignments = {};\n             if (daySchedule && daySchedule.assignments) {\n                 Object.keys(daySchedule.assignments).forEach(deptId => {\n                     if (daySchedule.assignments[deptId].length > 0) { // Only save if department has assignments\n                         dailyAssignments[deptId] = daySchedule.assignments[deptId].map(a => ({\n                             employee: { id: a.employee.id }, // Store only employee ID\n                             startTime: a.startTime,\n                             endTime: a.endTime,\n                             includeBreak: a.includeBreak,\n                             breakStartTime: a.breakStartTime,\n                             breakEndTime: a.breakEndTime,\n                         }));\n                     }\n                 });\n             }\n             assignmentsToSave = dailyAssignments;\n         } else { // week view\n              if (!weekDates || weekDates.length === 0) {\n                   toast({ title: \"Error\", description: \"No hay fechas de semana válidas para guardar el template.\", variant: \"destructive\" });\n                   setIsSavingTemplate(false);\n                   return;\n              }\n             const weeklyAssignments: WeeklyAssignments = {};\n             weekDates.forEach(date => {\n                 const dateKey = format(date, 'yyyy-MM-dd');\n                 const daySchedule = scheduleData[dateKey];\n                 if (daySchedule && daySchedule.assignments) {\n                     const dailyAssignmentsForWeek: DailyAssignments = {};\n                     Object.keys(daySchedule.assignments).forEach(deptId => {\n                         if (daySchedule.assignments[deptId].length > 0) {\n                              dailyAssignmentsForWeek[deptId] = daySchedule.assignments[deptId].map(a => ({\n                                 employee: { id: a.employee.id },\n                                 startTime: a.startTime,\n                                 endTime: a.endTime,\n                                 includeBreak: a.includeBreak,\n                                 breakStartTime: a.breakStartTime,\n                                 breakEndTime: a.breakEndTime,\n                             }));\n                         }\n                     });\n                      if (Object.keys(dailyAssignmentsForWeek).length > 0) {\n                          weeklyAssignments[dateKey] = dailyAssignmentsForWeek;\n                      }\n                 }\n             });\n             assignmentsToSave = weeklyAssignments;\n         }\n\n          // Check if there are any assignments to save\n         if (Object.keys(assignmentsToSave).length === 0) {\n             toast({ title: \"Template Vacío\", description: \"No hay turnos para guardar en este template.\", variant: \"default\" });\n             setIsSavingTemplate(false);\n             return;\n         }\n\n\n         const newTemplate: ScheduleTemplate = {\n             id: `tpl-${Date.now()}`,\n             name: templateName.trim(),\n             type: viewMode,\n             locationId: selectedLocationId,\n             assignments: assignmentsToSave,\n             createdAt: new Date(),\n         };\n\n         setSavedTemplates(prev => [...prev, newTemplate].sort((a, b) => a.name.localeCompare(b.name)));\n         toast({ title: \"Template Guardado\", description: `Template \"${newTemplate.name}\" guardado.` });\n         setIsSavingTemplate(false);\n     };\n\n     const handleLoadTemplate = (templateId: string) => {\n          console.log(\"Intentando cargar template con ID:\", templateId);\n          const templateToLoad = savedTemplates.find(t => t.id === templateId);\n\n          if (!templateToLoad) {\n              console.error(\"Template no encontrado en el estado:\", templateId);\n              toast({ title: \"Error\", description: \"No se encontró el template seleccionado.\", variant: \"destructive\" });\n              return;\n          }\n\n          // Check if template type matches view mode\n          if (templateToLoad.type !== viewMode) {\n                toast({\n                     title: \"Tipo Incorrecto\",\n                     description: `El template \"${templateToLoad.name}\" es ${templateToLoad.type === 'day' ? 'diario' : 'semanal'}. Cambia a la vista ${templateToLoad.type === 'day' ? 'diaria' : 'semanal'} para cargarlo.`,\n                     variant: \"destructive\",\n                     duration: 5000\n                });\n                return;\n          }\n\n          console.log(\"Template encontrado y tipo coincide:\", templateToLoad);\n          console.log(\"Assignments a cargar:\", templateToLoad.assignments);\n\n          setScheduleData(currentPlannerData => {\n              const updatedPlannerData = { ...currentPlannerData };\n               if (!templateToLoad.assignments || typeof templateToLoad.assignments !== 'object') {\n                   console.error(\"Formato inválido de asignaciones en template:\", templateToLoad.assignments);\n                   toast({ title: \"Error\", description: \"Formato de template inválido.\", variant: \"destructive\" });\n                   return currentPlannerData; // No cambiar el estado\n               }\n\n\n              if (templateToLoad.type === 'day') {\n                  if (!targetDate || !isValid(targetDate)) {\n                      console.error(\"Fecha objetivo inválida para template diario.\");\n                      toast({ title: \"Error\", description: \"Fecha objetivo inválida.\", variant: \"destructive\" });\n                      return currentPlannerData;\n                  }\n                  const dateKey = format(targetDate, 'yyyy-MM-dd');\n                  const dailyTemplateAssignments = templateToLoad.assignments as DailyAssignments;\n\n                  // Clear existing assignments for the target day first\n                  updatedPlannerData[dateKey] = { date: targetDate, assignments: {} };\n\n                  Object.keys(dailyTemplateAssignments).forEach(deptId => {\n                       if (!departments.some(d => d.id === deptId && d.locationId === selectedLocationId)) {\n                           console.warn(`Departamento ID ${deptId} del template no corresponde a la sede actual ${selectedLocationId}.`);\n                           return;\n                       }\n                      const newAssignmentsForDept: ShiftAssignment[] = [];\n                      dailyTemplateAssignments[deptId].forEach((tplAssign, index) => {\n                          const fullEmployee = employees.find(emp => emp.id === tplAssign.employee.id);\n                           if (!fullEmployee) {\n                               console.warn(`Empleado ID ${tplAssign.employee.id} del template no encontrado.`);\n                               return;\n                           }\n                           const isAlreadyAssigned = newAssignmentsForDept.some(existing => existing.employee.id === fullEmployee.id);\n                           if (isAlreadyAssigned) {\n                                console.warn(`Empleado ${fullEmployee.name} ya asignado este día por el template. Omitiendo duplicado.`);\n                                return;\n                           }\n                           newAssignmentsForDept.push({\n                               ...tplAssign,\n                               id: `shift_${fullEmployee.id}_${dateKey}_${deptId}_${index}_${Date.now()}`,\n                               employee: fullEmployee,\n                           });\n                      });\n                       if (newAssignmentsForDept.length > 0) {\n                           updatedPlannerData[dateKey].assignments[deptId] = newAssignmentsForDept;\n                       }\n                  });\n                   console.log(`Aplicado template DIARIO ${templateToLoad.name} a ${dateKey}`);\n\n              } else { // Weekly template\n                    if (!weekDates || weekDates.length !== 7) {\n                        console.error(\"Fechas de semana inválidas para template semanal.\");\n                        toast({ title: \"Error\", description: \"Fechas de semana inválidas.\", variant: \"destructive\" });\n                        return currentPlannerData;\n                    }\n                  const weeklyTemplateAssignments = templateToLoad.assignments as WeeklyAssignments;\n                  const templateDates = Object.keys(weeklyTemplateAssignments).sort();\n\n                   // Clear assignments for the entire target week first\n                   weekDates.forEach(targetWeekDate => {\n                       const targetDateKey = format(targetWeekDate, 'yyyy-MM-dd');\n                       updatedPlannerData[targetDateKey] = { date: targetWeekDate, assignments: {} };\n                   });\n\n                   // Apply template assignments day by day based on order (Mon->Sun)\n                    weekDates.forEach((targetWeekDate, weekDayIndex) => {\n                         const targetDateKey = format(targetWeekDate, 'yyyy-MM-dd');\n                         // Find the corresponding day in the template (assuming template also starts on Monday)\n                         const templateDateKey = templateDates[weekDayIndex]; // Match by index\n                         const templateDailyAssignments = templateDateKey ? weeklyTemplateAssignments[templateDateKey] : null;\n\n                         if (templateDailyAssignments) {\n                             Object.keys(templateDailyAssignments).forEach(deptId => {\n                                if (!departments.some(d => d.id === deptId && d.locationId === selectedLocationId)) {\n                                     console.warn(`Departamento ID ${deptId} del template (día ${templateDateKey}) no corresponde a la sede ${selectedLocationId}.`);\n                                     return;\n                                 }\n                                 const newAssignmentsForDept: ShiftAssignment[] = [];\n                                 templateDailyAssignments[deptId].forEach((tplAssign, assignIndex) => {\n                                     const fullEmployee = employees.find(emp => emp.id === tplAssign.employee.id);\n                                     if (!fullEmployee) {\n                                         console.warn(`Empleado ID ${tplAssign.employee.id} del template no encontrado.`);\n                                         return; // Skip\n                                     }\n                                      const isAlreadyAssigned = newAssignmentsForDept.some(existing => existing.employee.id === fullEmployee.id);\n                                     if (isAlreadyAssigned) {\n                                          console.warn(`Empleado ${fullEmployee.name} ya asignado este día (${targetDateKey}) por el template. Omitiendo duplicado.`);\n                                          return;\n                                     }\n                                     newAssignmentsForDept.push({\n                                         ...tplAssign,\n                                         id: `shift_${fullEmployee.id}_${targetDateKey}_${deptId}_${assignIndex}_${Date.now()}`,\n                                         employee: fullEmployee,\n                                     });\n                                 });\n                                 if (newAssignmentsForDept.length > 0) {\n                                      if (!updatedPlannerData[targetDateKey]) updatedPlannerData[targetDateKey] = { date: targetWeekDate, assignments: {} }; // Ensure day exists\n                                      updatedPlannerData[targetDateKey].assignments[deptId] = newAssignmentsForDept;\n                                 }\n                             });\n                         } else {\n                             console.log(`Sin asignaciones en el template para el índice ${weekDayIndex} (Fecha template: ${templateDateKey}, Fecha objetivo: ${targetDateKey})`);\n                         }\n                    });\n                    console.log(`Aplicado template SEMANAL ${templateToLoad.name} a la semana que empieza ${format(weekDates[0], 'yyyy-MM-dd')}`);\n              }\n\n              console.log(\"Nuevo estado del planificador:\", updatedPlannerData);\n              return updatedPlannerData;\n          });\n\n          toast({ title: \"Template Aplicado\", description: `Horario del template \"${templateToLoad.name}\" aplicado.` });\n          // Optionally close modal if open\n          // setIsTemplateModalOpen(false); // Assuming you might have a modal state\n      };\n\n\n    const handleDeleteTemplate = (templateId: string) => {\n        const template = savedTemplates.find(t => t.id === templateId);\n        if (template) {\n            confirmDeleteItem('template', template.id, template.name);\n        }\n    };\n\n\n     const isHoliday = useCallback((date: Date | null | undefined): boolean => {\n        if (!date || !isValid(date)) return false;\n        const dateStr = format(date, 'yyyy-MM-dd');\n        return holidaySet.has(dateStr);\n    }, [holidaySet]);\n\n    const handleNotesChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n        setNotes(event.target.value);\n    };\n\n    // Function to save notes to localStorage\n     const handleSaveNotes = () => {\n        if (isClient) {\n            try {\n                localStorage.setItem(SCHEDULE_NOTES_KEY, notes);\n                toast({ title: 'Notas Guardadas', description: 'Tus notas generales han sido guardadas localmente.' });\n            } catch (error) {\n                console.error(\"Error saving general notes:\", error);\n                toast({ title: 'Error', description: 'No se pudieron guardar las notas.', variant: 'destructive' });\n            }\n        }\n     };\n\n    // --- Handlers for Export/Import Configuration ---\n    const handleExportConfig = () => {\n        try {\n            const configData = {\n                locations,\n                departments: departments.map(({ icon, ...rest }) => ({ // Remove icon component before saving\n                    ...rest,\n                    iconName: Object.keys(iconMap).find(key => iconMap[key] === icon)\n                })),\n                employees,\n                 scheduleNotes, // Include calendar notes/events\n                 notes, // Include general notes\n                 savedTemplates, // Include templates in config export\n            };\n            const jsonString = JSON.stringify(configData, null, 2);\n            const blob = new Blob([jsonString], { type: 'application/json' });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = `configuracion_horarios_${format(new Date(), 'yyyyMMdd_HHmmss')}.json`;\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            URL.revokeObjectURL(url);\n            toast({ title: \"Configuración Exportada\", description: \"Los datos de configuración, notas, eventos y templates han sido exportados.\" });\n        } catch (error) {\n             console.error(\"Error exporting configuration:\", error);\n             toast({ title: \"Error al Exportar\", description: \"No se pudo exportar la configuración.\", variant: 'destructive' });\n        }\n    };\n\n    const handleImportConfig = (event: ChangeEvent<HTMLInputElement>) => {\n        const file = event.target.files?.[0];\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            try {\n                const jsonString = e.target?.result as string;\n                const configData = JSON.parse(jsonString);\n\n                // Basic validation (add more checks as needed)\n                if (!configData || typeof configData !== 'object') {\n                     throw new Error(\"El archivo JSON no tiene un formato válido.\");\n                }\n                // Validate required arrays exist\n                if (!Array.isArray(configData.locations) || !Array.isArray(configData.departments) || !Array.isArray(configData.employees)) {\n                    throw new Error(\"El archivo JSON no tiene la estructura esperada (locations, departments, employees).\");\n                }\n\n                // Restore icons for departments\n                const loadedDepartments = configData.departments.map((dep: any) => ({\n                    ...dep,\n                    icon: dep.iconName ? iconMap[dep.iconName] : Building,\n                }));\n\n\n                 // Load notes and events if present\n                 const loadedEvents = Array.isArray(configData.scheduleNotes) ? configData.scheduleNotes : [];\n                 const loadedNotesStr = typeof configData.notes === 'string' ? configData.notes : defaultNotesText;\n                 // Load templates if present\n                 let loadedTemplates: ScheduleTemplate[] = [];\n                 if (Array.isArray(configData.savedTemplates)) {\n                    loadedTemplates = configData.savedTemplates.map((tpl: any) => {\n                         // Revive createdAt date for templates\n                         let createdAtDate: Date | undefined = undefined;\n                         if (tpl.createdAt && typeof tpl.createdAt === 'string') {\n                             const parsed = parseISO(tpl.createdAt);\n                             if (isValid(parsed)) createdAtDate = parsed;\n                         } else if (tpl.createdAt instanceof Date) {\n                             createdAtDate = tpl.createdAt;\n                         }\n                         return { ...tpl, createdAt: createdAtDate };\n                     }).filter((tpl: ScheduleTemplate) => tpl.id && tpl.name); // Basic validation\n                 } else {\n                      console.warn(\"El archivo de configuración importado no contenía 'savedTemplates' o no era un array.\");\n                 }\n\n\n                // Update state with imported data\n                setLocations(configData.locations);\n                setDepartments(loadedDepartments);\n                setEmployees(configData.employees);\n                setSavedTemplates(loadedTemplates); // Load templates from config\n                setScheduleNotes(loadedEvents); // Load calendar notes/events\n                setNotes(loadedNotesStr); // Load general notes\n\n                 // Also update form defaults based on potentially new first location\n                 const firstLocId = configData.locations.length > 0 ? configData.locations[0].id : '';\n                 setSelectedLocationId(firstLocId);\n                 setDepartmentFormData(prev => ({ ...prev, name: '', locationId: firstLocId, iconName: undefined }));\n                 setEmployeeFormData(prev => ({ ...prev, id: '', name: '', locationIds: firstLocId ? [firstLocId] : [], departmentIds: [] }));\n\n                toast({ title: \"Configuración Importada\", description: \"Se cargaron los datos desde el archivo.\" });\n                setIsConfigModalOpen(false); // Close config modal after import\n                setActiveConfigTab('sedes'); // Reset tab\n\n            } catch (error) {\n                console.error(\"Error importing configuration:\", error);\n                const message = error instanceof Error ? error.message : \"No se pudo importar el archivo JSON.\";\n                toast({ title: \"Error al Importar\", description: message, variant: \"destructive\" });\n            } finally {\n                // Reset file input\n                if (fileInputRef.current) {\n                    fileInputRef.current.value = '';\n                }\n            }\n        };\n        reader.readAsText(file);\n    };\n\n\n     const DndWrapper: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n         // Render DndContext only on client-side\n         if (!isClient) {\n             return <>{children}</>; // Render children directly on server\n         }\n         // Render DndContext only on desktop and client-side\n         return (\n             <DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\n                 {children}\n             </DndContext>\n         );\n     };\n\n\n    const handleExportPDF = () => {\n         if (!currentDate || !weekDates || weekDates.length === 0) {\n            toast({ title: 'Error', description: 'Fechas de semana no disponibles para exportar.', variant: 'destructive' });\n            return;\n         }\n        const locationName = locations.find(l => l.id === selectedLocationId)?.name || selectedLocationId;\n        // Prepare data specifically for the PDF export function\n        const dataForPDF: ScheduleExportData = {\n            locationName,\n            weekDates,\n            departments: filteredDepartments, // Use filtered departments for the current location\n            employees: employees.filter(emp => Array.isArray(emp.locationIds) && emp.locationIds.includes(selectedLocationId)), // Ensure locationIds exists and filter\n            scheduleData,\n            getScheduleForDate: (date: Date) => getScheduleForDate(date),\n            calculateShiftDuration, // Pass the calculation function\n        };\n\n        try {\n            exportScheduleToPDF(dataForPDF); // Call the export function\n            toast({ title: 'Exportación PDF Exitosa', description: 'Se ha descargado el horario semanal.' });\n        } catch (error) {\n            console.error(\"Error exporting schedule to PDF:\", error);\n            toast({ title: 'Error al Exportar PDF', description: 'No se pudo generar el archivo PDF.', variant: 'destructive' });\n        }\n    };\n\n    // --- New Handler for Consolidated PDF ---\n    const handleExportConsolidatedPDF = () => {\n        if (!isClient || !currentDate || !weekDates || weekDates.length === 0) return; // Ensure client-side execution and valid dates\n\n        const allLocationData: ScheduleExportData[] = locations.map(location => {\n            const locDepartments = departments.filter(dept => dept.locationId === location.id);\n            const locEmployees = employees.filter(emp => Array.isArray(emp.locationIds) && emp.locationIds.includes(location.id)); // Ensure locationIds exists\n            // Filter scheduleData relevant to this location and week\n            const locScheduleData: { [dateKey: string]: ScheduleData } = {};\n             weekDates.forEach(date => {\n                 const dateKey = format(date, 'yyyy-MM-dd');\n                 if (scheduleData[dateKey]) {\n                     const dayData: ScheduleData = { date: scheduleData[dateKey].date, assignments: {} };\n                     locDepartments.forEach(dept => {\n                         if (scheduleData[dateKey].assignments[dept.id]) {\n                             dayData.assignments[dept.id] = scheduleData[dateKey].assignments[dept.id];\n                         }\n                     });\n                      if (Object.keys(dayData.assignments).length > 0) {\n                          locScheduleData[dateKey] = dayData;\n                      }\n                 }\n             });\n\n             return {\n                locationName: location.name,\n                weekDates,\n                departments: locDepartments,\n                employees: locEmployees,\n                scheduleData: locScheduleData,\n                getScheduleForDate: (date: Date) => { // Provide a specific getScheduleForDate for this location's data\n                    const key = format(date, 'yyyy-MM-dd');\n                    return locScheduleData[key] || { date, assignments: {} };\n                },\n                calculateShiftDuration,\n            };\n        }).filter(data => data.employees.length > 0); // Only include locations with employees\n\n        if (allLocationData.length === 0) {\n            toast({ title: 'Sin Datos', description: 'No hay datos de horario para ninguna sede en esta semana.', variant: 'default' });\n            return;\n        }\n\n        try {\n            exportConsolidatedScheduleToPDF(allLocationData); // Call the new export function\n            toast({ title: 'PDF Consolidado Generado', description: 'Se ha descargado el horario consolidado.' });\n        } catch (error) {\n            console.error(\"Error exporting consolidated schedule to PDF:\", error);\n            toast({ title: 'Error al Exportar PDF Consolidado', description: 'No se pudo generar el archivo PDF.', variant: 'destructive' });\n        }\n    };\n\n\n     const handleShareSchedule = async () => {\n        let textToCopy = \"\";\n        const locationName = locations.find(l => l.id === selectedLocationId)?.name || selectedLocationId;\n\n        if (viewMode === 'day') {\n            if (!targetDate) return; // Ensure targetDate is valid\n            const dateStr = format(targetDate, 'EEEE dd \\'de\\' MMMM', { locale: es });\n            textToCopy = `*Horario ${locationName} - ${dateStr}*\\n\\n`;\n            const daySchedule = getScheduleForDate(targetDate);\n            let dayHasAssignments = false;\n\n            filteredDepartments.forEach(dept => {\n                const assignments = daySchedule.assignments[dept.id] || [];\n                if (assignments.length > 0) {\n                    dayHasAssignments = true;\n                    textToCopy += `*${dept.name}*\\n`;\n                    assignments.forEach(a => {\n                         const employeeName = a.employee?.name || `(ID: ${a.employee?.id || '??'})`;\n                        // Format times using helper\n                        textToCopy += `- ${employeeName}: ${formatTo12Hour(a.startTime)} - ${formatTo12Hour(a.endTime)}`;\n                        if (a.includeBreak && a.breakStartTime && a.breakEndTime) {\n                             textToCopy += ` (D: ${formatTo12Hour(a.breakStartTime)}-${formatTo12Hour(a.breakEndTime)})`;\n                        }\n                        textToCopy += \"\\n\";\n                    });\n                    textToCopy += \"\\n\"; // Add space between departments\n                }\n            });\n             if (!dayHasAssignments) {\n                 textToCopy += \"_No hay turnos asignados para este día._\\n\";\n             }\n\n        } else { // Week View\n             if (!weekDates || weekDates.length === 0) {\n                  toast({ title: 'Error', description: 'Fechas de semana no disponibles.', variant: 'destructive' });\n                  return;\n             }\n            const weekStartFormatted = format(weekDates[0], 'dd MMM', { locale: es });\n            const weekEndFormatted = format(weekDates[6], 'dd MMM yyyy', { locale: es });\n            textToCopy = `*Horario ${locationName} - Semana ${weekStartFormatted} al ${weekEndFormatted}*\\n\\n`;\n            let weekHasAssignments = false;\n\n            weekDates.forEach(date => {\n                const dateStr = format(date, 'EEEE dd', { locale: es });\n                const daySchedule = getScheduleForDate(date);\n                let dayHasAssignments = false;\n                let dayText = `*${dateStr.charAt(0).toUpperCase() + dateStr.slice(1)}:*\\n`; // Capitalize day name\n\n                filteredDepartments.forEach(dept => {\n                     const assignments = daySchedule.assignments[dept.id] || [];\n                     if (assignments.length > 0) {\n                         dayHasAssignments = true;\n                         weekHasAssignments = true;\n                         dayText += `_${dept.name}_\\n`; // Italicize department name\n                         assignments.forEach(a => {\n                              const employeeName = a.employee?.name || `(ID: ${a.employee?.id || '??'})`;\n                              // Format times using helper\n                             dayText += `- ${employeeName}: ${formatTo12Hour(a.startTime)} - ${formatTo12Hour(a.endTime)}`;\n                            if (a.includeBreak && a.breakStartTime && a.breakEndTime) {\n                                // Format break times\n                                dayText += ` (D: ${formatTo12Hour(a.breakStartTime)}-${formatTo12Hour(a.breakEndTime)})`;\n                            }\n                             dayText += \"\\n\";\n                         });\n                     }\n                });\n\n                // Only add the day's text if it has assignments\n                if (dayHasAssignments) {\n                    textToCopy += dayText + \"\\n\"; // Add space between days\n                }\n            });\n             if (!weekHasAssignments) {\n                 textToCopy += \"_No hay turnos asignados para esta semana._\\n\";\n             }\n        }\n\n        // Prevent copying if no meaningful content generated\n        if (!textToCopy || textToCopy.trim() === `*Horario ${locationName} - Semana ${format(weekDates?.[0] ?? new Date(), 'dd MMM', { locale: es })} al ${format(weekDates?.[6] ?? new Date(), 'dd MMM yyyy', { locale: es })}*` || textToCopy.includes(\"_No hay turnos asignados\")) {\n            toast({ title: 'Sin Horario', description: 'No hay turnos asignados para compartir.', variant: 'default' });\n            return;\n        }\n\n\n        // Attempt to copy to clipboard\n        try {\n            await navigator.clipboard.writeText(textToCopy);\n            toast({ title: 'Horario Copiado', description: 'El horario ha sido copiado al portapapeles. Puedes pegarlo en WhatsApp.' });\n        } catch (err) {\n            console.error('Error al copiar al portapapeles:', err);\n            toast({ title: 'Error al Copiar', description: 'No se pudo copiar el horario.', variant: 'destructive' });\n        }\n     };\n\n     // Function to copy Employee ID\n     const handleCopyEmployeeId = async (employeeId: string) => {\n         try {\n             await navigator.clipboard.writeText(employeeId);\n             toast({ title: 'ID Copiado', description: `ID ${employeeId} copiado al portapapeles.` });\n         } catch (err) {\n             console.error('Error al copiar ID:', err);\n             toast({ title: 'Error al Copiar', description: 'No se pudo copiar el ID.', variant: 'destructive' });\n         }\n     };\n\n     // Function to handle confirmation of department mismatch assignment\n     const handleConfirmDepartmentMismatch = () => {\n         if (departmentMismatchWarning) {\n             const { employee, targetDepartment, date } = departmentMismatchWarning;\n             handleOpenShiftModalForDrop(employee, targetDepartment.id, date);\n             setDepartmentMismatchWarning(null); // Clear warning\n         }\n     };\n\n    // --- Logic to Calculate Employee Hours Summary ---\n    useEffect(() => {\n        if (!isClient || !currentDate) return; // Don't run on server or if currentDate is null\n\n        const calculateSummary = () => {\n            const summaryMap = new Map<string, { id: string, name: string, totalHours: number }>();\n            const datesInView = viewMode === 'day' ? [targetDate] : weekDates;\n\n            datesInView.forEach(date => {\n                if (!date || !isValid(date)) return; // Skip invalid dates\n\n                const dateKey = format(date, 'yyyy-MM-dd');\n                const daySchedule = scheduleData[dateKey];\n\n                if (daySchedule && daySchedule.assignments) {\n                    Object.values(daySchedule.assignments).flat().forEach(assignment => {\n                        const employee = assignment.employee;\n                        if (!employee || !employee.id) return; // Skip if employee info is missing\n\n                        const duration = calculateShiftDuration(assignment, date);\n\n                        if (summaryMap.has(employee.id)) {\n                            summaryMap.get(employee.id)!.totalHours += duration;\n                        } else {\n                            summaryMap.set(employee.id, {\n                                id: employee.id,\n                                name: employee.name || `(ID: ${employee.id})`, // Use name or fallback\n                                totalHours: duration,\n                            });\n                        }\n                    });\n                }\n            });\n\n            // Convert map to array and sort by total hours descending\n            const summaryArray = Array.from(summaryMap.values()).sort((a, b) => b.totalHours - a.totalHours);\n            setEmployeeHoursSummary(summaryArray);\n        };\n\n        calculateSummary();\n        // Recalculate whenever scheduleData, viewMode, targetDate, or currentDate changes\n    }, [scheduleData, viewMode, targetDate, currentDate, weekDates, isClient]); // Added isClient\n\n\n     // --- Filtered Data for Config Lists ---\n    const filteredLocationsData = useMemo(() =>\n        locations.filter(loc => loc.name.toLowerCase().includes(locationSearch.toLowerCase())),\n        [locations, locationSearch]\n    );\n    const filteredDepartmentsData = useMemo(() =>\n        departments.filter(dept => dept.name.toLowerCase().includes(departmentSearch.toLowerCase())),\n        [departments, departmentSearch]\n    );\n    const filteredEmployeesData = useMemo(() =>\n        employees.filter(emp => (emp.name || '').toLowerCase().includes(employeeSearch.toLowerCase()) || (emp.id || '').toLowerCase().includes(employeeSearch.toLowerCase())), // Add fallback for name and id\n        [employees, employeeSearch]\n    );\n     const filteredTemplatesData = useMemo(() =>\n        (Array.isArray(savedTemplates) ? savedTemplates : []).filter(tpl => (tpl.name || '').toLowerCase().includes(templateSearch.toLowerCase())), // Add fallback for name\n        [savedTemplates, templateSearch]\n     );\n\n    // Function to handle saving the current schedule\n    const handleSaveSchedule = () => {\n        // This function currently just saves the existing `scheduleData` state\n        // to localStorage. If you implement a backend, this is where you'd\n        // send the data to the server.\n        if (isClient) {\n            try {\n                const dataToSave = JSON.parse(JSON.stringify(scheduleData));\n                 Object.keys(dataToSave).forEach(key => {\n                     if (dataToSave[key] && dataToSave[key].date instanceof Date) {\n                         dataToSave[key].date = dataToSave[key].date.toISOString();\n                     }\n                     if (dataToSave[key] && dataToSave[key].assignments) {\n                         Object.keys(dataToSave[key].assignments).forEach(deptId => {\n                             (dataToSave[key].assignments[deptId] || []).forEach((assign: any) => {\n                                 if (assign.employee && typeof assign.employee === 'object') {\n                                     assign.employee = { id: assign.employee.id };\n                                 }\n                             });\n                         });\n                     }\n                 });\n                localStorage.setItem(SCHEDULE_DATA_KEY, JSON.stringify(dataToSave));\n                toast({ title: 'Horario Guardado', description: 'El horario actual ha sido guardado localmente.' });\n            } catch (error) {\n                console.error(\"Error saving schedule data to localStorage:\", error);\n                 toast({\n                     title: \"Error al Guardar Horario\",\n                     description: \"No se pudo guardar el horario en el almacenamiento local.\",\n                     variant: \"destructive\",\n                 });\n            }\n        }\n    };\n\n     // Helper function to open the config modal and set the active tab\n     const openConfigModalWithTab = (tabValue: string) => {\n         setActiveConfigTab(tabValue);\n         setIsConfigModalOpen(true);\n     };\n\n\n    // Render null or a loader during initial server render and hydration phase\n     if (!isClient) {\n         return (\n             <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-background/80 backdrop-blur-sm\">\n                 <Loader2 className=\"h-16 w-16 animate-spin text-primary\" />\n             </div>\n         );\n     }\n\n\n    return (\n        <main className=\"container mx-auto p-4 md:p-8 max-w-full relative\">\n            {/* Loading Indicator Overlay */}\n            {isLoadingPage && (\n                <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-background/80 backdrop-blur-sm\">\n                    <Loader2 className=\"h-16 w-16 animate-spin text-primary\" />\n                </div>\n            )}\n\n             {/* Decorative Image */}\n              <div className=\"absolute top-[-60px] left-8 -z-10 opacity-70 dark:opacity-30 pointer-events-none sm:opacity-70 md:opacity-70 lg:opacity-70 xl:opacity-70 2xl:opacity-70\" aria-hidden=\"true\"> {/* Adjust vertical position */}\n                <Image\n                    src=\"https://i.postimg.cc/PJVW7XZG/teclado.png\" // Left image source\n                    alt=\"Ilustración teclado\"\n                    width={255 * 1.7} // Scaled width\n                    height={255 * 1.7} // Scaled height\n                    className=\"object-contain transform -rotate-12\"\n                    data-ai-hint=\"keyboard illustration\"\n                />\n            </div>\n\n\n             {/* Title */}\n               <div className=\"text-center mb-6 md:mb-8\">\n                 <h1 className=\"text-2xl sm:text-3xl md:text-4xl font-bold tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-primary via-foreground/80 to-primary\">\n                    Planificador de Horarios\n                 </h1>\n                 <p className=\"text-sm sm:text-base text-muted-foreground mt-1 md:mt-2\">Gestiona turnos, sedes y colaboradores</p>\n             </div>\n\n\n             {/* Controls Section - Top Bar - Removed Card wrapper */}\n              <div className=\"bg-transparent p-0 mb-6 md:mb-8\">\n                 <div className=\"flex flex-col md:flex-row items-center justify-center gap-4 flex-wrap p-0\">\n                         {/* Location Selector & Config Button */}\n                         <div className=\"flex items-center gap-2 flex-shrink-0\">\n                             <Building className=\"h-5 w-5 text-primary flex-shrink-0\" />\n                             <LocationSelector\n                                 locations={locations}\n                                 selectedLocationId={selectedLocationId}\n                                 onLocationChange={handleLocationChange}\n                             />\n                              <Dialog open={isConfigModalOpen} onOpenChange={setIsConfigModalOpen}>\n                                   <DialogTrigger asChild>\n                                       <Button variant=\"ghost\" size=\"icon\" title=\"Configuración\">\n                                           <Settings className=\"h-5 w-5\"/>\n                                       </Button>\n                                   </DialogTrigger>\n                                    <DialogContent className=\"max-w-4xl h-[90vh] flex flex-col p-0\"> {/* Adjusted padding */}\n                                       <DialogHeader className=\"p-4 border-b flex-shrink-0 flex flex-row items-center justify-between space-x-4\"> {/* Added space-x */}\n                                         <div className=\"flex-1\"> {/* Take available space */}\n                                           <DialogTitle>Configuración General</DialogTitle>\n                                           <DialogDescription>Gestiona sedes, departamentos, colaboradores y templates.</DialogDescription>\n                                         </div>\n                                          <div className=\"flex items-center gap-2 flex-shrink-0 mr-8\"> {/* Added mr-8 */}\n                                              {/* Config Import Button */}\n                                              <input\n                                                  type=\"file\"\n                                                  accept=\".json\"\n                                                  ref={fileInputRef}\n                                                  onChange={handleImportConfig}\n                                                  className=\"hidden\"\n                                                  id=\"import-config-input\"\n                                              />\n                                              <Button\n                                                  variant=\"outline\"\n                                                  size=\"sm\"\n                                                  onClick={() => fileInputRef.current?.click()}\n                                                  title=\"Importar configuración (JSON)\"\n                                              >\n                                                  <UploadCloud className=\"mr-2 h-4 w-4\" /> Importar Conf.\n                                              </Button>\n                                             {/* Config Export Button */}\n                                              <Button\n                                                  variant=\"outline\"\n                                                  size=\"sm\"\n                                                  onClick={handleExportConfig}\n                                                  title=\"Exportar configuración (JSON)\"\n                                              >\n                                                  <Download className=\"mr-2 h-4 w-4\" /> Exportar Conf.\n                                              </Button>\n                                         </div>\n                                         <DialogClose asChild>\n                                            <Button variant=\"ghost\" size=\"icon\" className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n                                               <X className=\"h-4 w-4\" />\n                                               <span className=\"sr-only\">Cerrar</span>\n                                           </Button>\n                                         </DialogClose>\n                                        </DialogHeader>\n                                        <div className=\"flex-grow overflow-hidden p-4\"> {/* Main content area */}\n                                             <ConfigTabs\n                                                 locations={locations}\n                                                 departments={departments}\n                                                 employees={employees}\n                                                 templates={savedTemplates} // Pass savedTemplates here\n                                                 selectedLocationId={selectedLocationId}\n                                                 iconMap={iconMap}\n                                                 openConfigForm={openConfigForm}\n                                                 selectedConfigItem={selectedConfigItem}\n                                                 confirmDeleteItem={confirmDeleteItem}\n                                                 handleCopyEmployeeId={handleCopyEmployeeId}\n                                                 handleLoadTemplate={handleLoadTemplate}\n                                                 configFormType={configFormType}\n                                                 locationFormData={locationFormData}\n                                                 setLocationFormData={setLocationFormData}\n                                                 departmentFormData={departmentFormData}\n                                                 setDepartmentFormData={setDepartmentFormData}\n                                                 employeeFormData={employeeFormData}\n                                                 setEmployeeFormData={setEmployeeFormData}\n                                                 handleSaveLocation={handleSaveLocation}\n                                                 handleSaveDepartment={handleSaveDepartment}\n                                                 handleSaveEmployee={handleSaveEmployee}\n                                                 setConfigFormType={setConfigFormType}\n                                                 setSelectedConfigItem={setSelectedConfigItem}\n                                                 handleToggleEmployeeLocation={handleToggleEmployeeLocation} // Pass the correct function\n                                                 handleToggleEmployeeDepartment={handleToggleEmployeeDepartment} // Pass the correct function\n                                                 availableDepartmentsForEmployee={availableDepartmentsForEmployee}\n                                                 activeTab={activeConfigTab}\n                                                 setActiveTab={setActiveTabFn} // Pass state setter directly\n                                                 locationSearch={locationSearch}\n                                                 setLocationSearch={setLocationSearch}\n                                                 departmentSearch={departmentSearch}\n                                                 setDepartmentSearch={setDepartmentSearch}\n                                                 employeeSearch={employeeSearch}\n                                                 setEmployeeSearch={setEmployeeSearch}\n                                                 templateSearch={templateSearch}\n                                                 setTemplateSearch={setTemplateSearch}\n                                                 filteredLocationsData={filteredLocationsData}\n                                                 filteredDepartmentsData={filteredDepartmentsData}\n                                                 filteredEmployeesData={filteredEmployeesData}\n                                                 filteredTemplatesData={filteredTemplatesData}\n                                                 handleExportConfig={handleExportConfig} // Pass export handler prop\n                                                 handleImportConfig={handleImportConfig} // Pass import handler prop\n                                                 fileInputRef={fileInputRef}      // Pass ref prop\n                                             />\n                                       </div>\n                                   </DialogContent>\n                               </Dialog>\n                         </div>\n\n\n                        {/* Day/Week Navigation */}\n                         <div className=\"flex items-center justify-center gap-2 flex-grow md:flex-grow-0\"> {/* Added flex-grow */}\n                            {viewMode === 'day' ? (\n                                 <Popover>\n                                    <PopoverTrigger asChild>\n                                        <Button\n                                            variant={'outline'}\n                                            className={cn(\n                                                'w-[200px] sm:w-[280px] justify-start text-left font-normal',\n                                                !targetDate && 'text-muted-foreground',\n                                                 isHoliday(targetDate) && 'border-primary font-semibold border-2' // Keep primary border for holiday\n                                            )}\n                                            disabled={isCheckingHoliday}\n                                        >\n                                            {isCheckingHoliday ? (\n                                                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                                            ) : (\n                                                <CalendarModernIcon className=\"mr-2 h-4 w-4 text-primary\" />\n                                            )}\n                                            {targetDate ? format(targetDate, 'PPP', { locale: es }) : <span>Selecciona fecha</span>}\n                                            {isHoliday(targetDate) && !isCheckingHoliday && <span className=\"ml-auto text-xs font-semibold text-primary\">(Festivo)</span>}\n                                        </Button>\n                                    </PopoverTrigger>\n                                    <PopoverContent className=\"w-auto p-0\">\n                                        <Calendar\n                                            mode=\"single\"\n                                            selected={targetDate}\n                                            onSelect={(date) => { if (date) setTargetDate(date) }}\n                                            initialFocus\n                                            locale={es}\n                                            modifiers={{ holiday: (date) => isHoliday(date) }}\n                                            modifiersClassNames={{\n                                                 holiday: 'text-primary font-medium border border-primary',\n                                            }}\n                                        />\n                                    </PopoverContent>\n                                 </Popover>\n                            ) : (\n                                 <WeekNavigator\n                                    currentDate={currentDate}\n                                    onPreviousWeek={handlePreviousWeek}\n                                    onNextWeek={handleNextWeek}\n                                 />\n                            )}\n                        </div>\n\n                        {/* View Mode Toggle */}\n                         <div className=\"flex items-center justify-center gap-2 flex-shrink-0\"> {/* Added flex-shrink-0 */}\n                            <Select value={viewMode} onValueChange={(value) => setViewMode(value as 'day' | 'week')}>\n                                <SelectTrigger className=\"w-[120px]\">\n                                    <SelectValue placeholder=\"Vista\" />\n                                </SelectTrigger>\n                                <SelectContent>\n                                    <SelectItem value=\"day\">Día</SelectItem>\n                                    <SelectItem value=\"week\">Semana</SelectItem>\n                                </SelectContent>\n                            </Select>\n                        </div>\n\n                         {/* Summary Sheet Trigger */}\n                         <div className=\"flex items-center justify-center flex-shrink-0\">\n                             <SummaryDashboard\n                                isOpen={isSummarySheetOpen}\n                                onOpenChange={setIsSummarySheetOpen}\n                                viewMode={viewMode}\n                                targetDate={targetDate}\n                                weekDates={weekDates}\n                                summaryData={employeeHoursSummary}\n                              />\n                         </div>\n\n                     </div>\n             </div>\n\n\n               {/* Main content grid */}\n               <DndWrapper>\n                   <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-4 items-start mb-6\">\n\n                        {/* Employee List - Render only on desktop */}\n                        {!isMobile && (\n                             <div className=\"lg:col-span-2 space-y-4\">\n                                 <EmployeeList employees={availableEmployees} />\n                             </div>\n                        )}\n\n\n                       <div className={cn(\n                           \"lg:col-span-10\", // Takes 10 columns on large screens\n                           isMobile && \"lg:col-span-12\", // Takes full width on mobile\n                           \"overflow-x-auto\" // Always allow horizontal scroll if needed\n                        )}>\n                           <ScheduleView\n                              departments={filteredDepartments}\n                              scheduleData={scheduleData}\n                              onRemoveShift={handleRemoveShift}\n                              viewMode={viewMode}\n                              weekDates={weekDates}\n                              currentDate={targetDate} // Use targetDate for day view consistency\n                              onAddShiftRequest={handleOpenEmployeeSelectionModal} // Pass updated handler\n                              onShiftClick={handleShiftClick}\n                              getScheduleForDate={getScheduleForDate}\n                              onDuplicateDay={handleDuplicateDay}\n                              onClearDay={handleConfirmClearDay}\n                              isHoliday={isHoliday}\n                              isMobile={isMobile}\n                              getNotesForDate={getNotesForDate}\n                              onOpenNotesModal={handleOpenNotesModalForDate} // Pass the new handler\n                              employees={employees} // Pass employees to render tooltip content correctly\n                              setNoteToDeleteId={setNoteToDeleteId} // Pass the setter function\n                          />\n                       </div>\n                   </div>\n               </DndWrapper>\n\n                 {/* --- Bottom Actions Row --- */}\n                  <div className=\"flex flex-wrap justify-end gap-2 mt-6\">\n                     {/* Notes Button */}\n                     <Button onClick={() => { setNotesModalForDate(null); setIsNotesModalOpen(true); }} variant=\"outline\" className=\"hover:bg-primary hover:text-primary-foreground\">\n                         <NotebookText className=\"mr-2 h-4 w-4\" /> Anotaciones {/* Changed Icon */}\n                     </Button>\n                     {/* Templates Button */}\n                     <Button onClick={() => openConfigModalWithTab('templates')} variant=\"outline\" className=\"hover:bg-primary hover:text-primary-foreground\">\n                         <LibraryBig className=\"mr-2 h-4 w-4\" /> Templates\n                     </Button>\n\n                    <Button onClick={handleShareSchedule} variant=\"outline\" className=\"hover:bg-primary hover:text-primary-foreground\">\n                        <Share2 className=\"mr-2 h-4 w-4\" /> Compartir (Texto)\n                    </Button>\n                     {/* PDF Export Dropdown */}\n                     <DropdownMenu>\n                         <DropdownMenuTrigger asChild>\n                             <Button variant=\"outline\" className=\"hover:bg-red-600 hover:text-white\">\n                                 <FileDown className=\"mr-2 h-4 w-4\" /> PDF\n                             </Button>\n                         </DropdownMenuTrigger>\n                         <DropdownMenuContent>\n                             <DropdownMenuLabel>Exportar Horario PDF</DropdownMenuLabel>\n                             <DropdownMenuSeparator />\n                             <DropdownMenuItem onClick={handleExportPDF}>\n                                 <User className=\"mr-2 h-4 w-4\" /> Solo Sede Actual ({locations.find(l => l.id === selectedLocationId)?.name || 'N/A'})\n                             </DropdownMenuItem>\n                             <DropdownMenuItem onClick={handleExportConsolidatedPDF}>\n                                 <Building2 className=\"mr-2 h-4 w-4\" /> Consolidado Todas las Sedes\n                             </DropdownMenuItem>\n                         </DropdownMenuContent>\n                     </DropdownMenu>\n\n\n                    {viewMode === 'week' && (\n                        <Button\n                            variant=\"outline\"\n                            onClick={handleDuplicateWeek}\n                            title=\"Duplicar semana completa a la siguiente\"\n                            className=\"hover:bg-primary hover:text-primary-foreground\"\n                            disabled={!currentDate || weekDates.length === 0} // Disable if no date\n                        >\n                            <CopyPlus className=\"mr-2 h-4 w-4\" /> Duplicar Semana\n                        </Button>\n                    )}\n                    {/* Clear Week Button */}\n                     {viewMode === 'week' && (\n                        <AlertDialog>\n                           <AlertDialogTrigger asChild>\n                             <Button variant=\"outline\" size=\"sm\" className=\"hover:bg-destructive hover:text-destructive-foreground\" disabled={!currentDate || weekDates.length === 0}>\n                                <CalendarX className=\"mr-2 h-4 w-4\" /> Limpiar Semana\n                             </Button>\n                           </AlertDialogTrigger>\n                           <AlertDialogContent>\n                             <AlertDialogHeader>\n                               <AlertDialogTitle>¿Limpiar Semana Completa?</AlertDialogTitle>\n                               <AlertDialogDescription>\n                                 Esta acción eliminará todos los turnos y notas de la semana del{' '}\n                                 {currentDate && weekDates.length > 0 ? format(startOfWeek(currentDate, { weekStartsOn: 1 }), 'dd/MM/yy', { locale: es }) : '?'} al{' '}\n                                 {currentDate && weekDates.length > 0 ? format(endOfWeek(currentDate, { weekStartsOn: 1 }), 'dd/MM/yy', { locale: es }) : '?'}\n                                 . No se puede deshacer.\n                               </AlertDialogDescription>\n                             </AlertDialogHeader>\n                             <AlertDialogFooter>\n                               <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                               <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={handleClearWeek}>Limpiar Semana</AlertDialogAction>\n                             </AlertDialogFooter>\n                           </AlertDialogContent>\n                        </AlertDialog>\n                     )}\n                     {/* Save Template Button */}\n                      <Button onClick={handleOpenSaveTemplate} variant=\"outline\" className=\"hover:bg-primary hover:text-primary-foreground\">\n                         <Save className=\"mr-2 h-4 w-4\" /> Guardar Template\n                      </Button>\n                     {/* Save Schedule Button */}\n                      <Button onClick={handleSaveSchedule} variant=\"default\" className=\"hover:bg-primary/90\">\n                          <Save className=\"mr-2 h-4 w-4\" /> Guardar Horario\n                      </Button>\n                </div>\n\n\n\n            {/* Editable Notes Section */}\n             <Card className=\"mt-8 bg-transparent border-none shadow-none p-0\"> {/* Removed card styling */}\n                 <CardHeader className=\"px-0 pt-0 pb-2\">\n                     <CardTitle className=\"text-lg font-semibold text-foreground mb-2\">Notas Generales</CardTitle>\n                     <CardDescription className=\"text-sm text-muted-foreground\">\n                        Agrega notas importantes sobre horarios, eventos especiales o cualquier información relevante para la semana.\n                     </CardDescription>\n                 </CardHeader>\n                 <CardContent className=\"px-0 pb-0\">\n                    <Textarea\n                        value={notes}\n                        onChange={handleNotesChange}\n                        placeholder=\"Ej: Cierre anticipado el jueves por fumigación...\"\n                        rows={4}\n                        className=\"w-full bg-card border border-border rounded-md shadow-sm\" // Added card-like styling to textarea\n                    />\n                 </CardContent>\n                  <CardFooter className=\"flex justify-end mt-4 px-0 pb-0\">\n                     <Button onClick={handleSaveNotes}>Guardar Notas</Button> {/* Simplified save */}\n                 </CardFooter>\n             </Card>\n\n             {/* --- Modals --- */}\n\n             {/* Schedule Notes Modal (for adding and general viewing) */}\n             <ScheduleNotesModal\n                 isOpen={isNotesModalOpen} // Controlled by isNotesModalOpen state\n                 onClose={() => { setIsNotesModalOpen(false); setNotesModalForDate(null); }} // Clear date context on close\n                 notes={scheduleNotes}\n                 employees={employees} // Pass employees for the dropdown\n                 onAddNote={addScheduleNote}\n                 onDeleteNote={(id) => setNoteToDeleteId(id)} // Trigger confirmation\n                 initialDate={notesModalForDate || undefined} // Pass specific date if set\n                 viewMode={viewMode}\n                 currentDate={currentDate || new Date()} // Pass a valid date\n                 weekDates={weekDates}\n             />\n             {/* Note Delete Confirmation Dialog */}\n              <AlertDialog open={!!noteToDeleteId} onOpenChange={(open) => !open && setNoteToDeleteId(null)}>\n                  <AlertDialogContent>\n                      <AlertDialogHeader>\n                          <AlertDialogTitle>¿Eliminar esta anotación?</AlertDialogTitle>\n                          <AlertDialogDescription>\n                              \"{scheduleNotes.find(note => note.id === noteToDeleteId)?.note || ''}\"\n                              <br />\n                              Esta acción no se puede deshacer.\n                          </AlertDialogDescription>\n                      </AlertDialogHeader>\n                      <AlertDialogFooter>\n                          <AlertDialogCancel onClick={() => setNoteToDeleteId(null)}>Cancelar</AlertDialogCancel>\n                          <AlertDialogAction\n                              onClick={() => noteToDeleteId && deleteScheduleNote(noteToDeleteId)} // Call direct delete function\n                              className=\"bg-destructive hover:bg-destructive/90\">\n                              Eliminar Anotación\n                          </AlertDialogAction>\n                      </AlertDialogFooter>\n                  </AlertDialogContent>\n              </AlertDialog>\n\n             {/* Template Delete Confirmation Dialog - Moved to ConfigTabs */}\n\n             {/* Save Template Dialog */}\n              <Dialog open={isSavingTemplate} onOpenChange={setIsSavingTemplate}>\n                  <DialogContent className=\"sm:max-w-[425px]\">\n                      <DialogHeader>\n                          <DialogTitle>Guardar Template ({viewMode === 'day' ? 'Diario' : 'Semanal'})</DialogTitle>\n                          <DialogDescription>Ingresa un nombre para el template actual.</DialogDescription>\n                      </DialogHeader>\n                       {/* Simple form to get the name */}\n                       <form id=\"save-template-form\" onSubmit={(e) => {\n                           e.preventDefault();\n                           const form = e.target as HTMLFormElement;\n                           const input = form.elements.namedItem('templateName') as HTMLInputElement;\n                           handleSaveTemplate(input.value);\n                       }}>\n                           <div className=\"grid gap-4 py-4\">\n                               <div className=\"grid grid-cols-4 items-center gap-4\">\n                                   <Label htmlFor=\"templateName\" className=\"text-right\">Nombre</Label>\n                                   <Input id=\"templateName\" name=\"templateName\" required className=\"col-span-3\" placeholder=\"Ej: Semana Base, Fin de Semana\"/>\n                               </div>\n                           </div>\n                       </form>\n                      <DialogFooter>\n                           <DialogClose asChild>\n                              <Button type=\"button\" variant=\"outline\">Cancelar</Button>\n                           </DialogClose>\n                           <Button type=\"submit\" form=\"save-template-form\">Guardar Template</Button>\n                       </DialogFooter>\n                  </DialogContent>\n              </Dialog>\n\n\n            {/* Employee Selection Modal */}\n             <EmployeeSelectionModal\n                 isOpen={isEmployeeSelectionModalOpen}\n                 onClose={() => setIsEmployeeSelectionModalOpen(false)}\n                 employees={availableEmployees}\n                 onSelectEmployee={handleEmployeeSelectedForShift}\n                 departmentName={departments.find(d => d.id === shiftRequestContext?.departmentId)?.name || ''}\n                 date={shiftRequestContext?.date || new Date()}\n             />\n\n             {/* Shift Detail Modal */}\n             <ShiftDetailModal\n                 isOpen={isShiftModalOpen}\n                 onClose={() => {\n                     setIsShiftModalOpen(false);\n                     setSelectedEmployee(null);\n                     setShiftRequestContext(null);\n                     setEditingShift(null);\n                 }}\n                 onSave={handleAddOrUpdateShift}\n                 employeeName={selectedEmployee?.name || ''}\n                 departmentName={departments.find(d => d.id === shiftRequestContext?.departmentId)?.name || ''}\n                 initialDetails={editingShift?.assignment}\n                 isEditing={!!editingShift}\n             />\n\n             {/* Main Delete Confirmation Dialog */}\n             <AlertDialog open={!!itemToDelete} onOpenChange={(open) => !open && setItemToDelete(null)}>\n                 <AlertDialogContent>\n                     <AlertDialogHeader>\n                         <AlertDialogTitle>¿Estás seguro?</AlertDialogTitle>\n                         <AlertDialogDescription>\n                             Eliminar {itemToDelete?.type} \"{itemToDelete?.name}\"? Se eliminarán todos los datos asociados. Esta acción no se puede deshacer.\n                         </AlertDialogDescription>\n                     </AlertDialogHeader>\n                     <AlertDialogFooter>\n                         <AlertDialogCancel onClick={() => setItemToDelete(null)}>Cancelar</AlertDialogCancel>\n                         <AlertDialogAction\n                             onClick={handleDeleteItem}\n                             className=\"bg-destructive hover:bg-destructive/90\">\n                             Eliminar\n                         </AlertDialogAction>\n                     </AlertDialogFooter>\n                 </AlertDialogContent>\n             </AlertDialog>\n\n\n            {/* Clear Day Confirmation */}\n            <AlertDialog open={!!clearingDate} onOpenChange={(open) => !open && setClearingDate(null)}>\n                 <AlertDialogContent>\n                     <AlertDialogHeader>\n                         <AlertDialogTitle>¿Limpiar Turnos del Día?</AlertDialogTitle>\n                         <AlertDialogDescription>\n                            Esta acción eliminará todos los turnos y anotaciones para el{' '}\n                            <strong>{clearingDate ? format(clearingDate, 'PPP', { locale: es }) : ''}</strong>. No se puede deshacer.\n                         </AlertDialogDescription>\n                     </AlertDialogHeader>\n                     <AlertDialogFooter>\n                         <AlertDialogCancel onClick={() => setClearingDate(null)}>Cancelar</AlertDialogCancel>\n                         <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={handleClearDay}>Limpiar Día</AlertDialogAction>\n                     </AlertDialogFooter>\n                 </AlertDialogContent>\n            </AlertDialog>\n\n            {/* Clear Week Confirmation */}\n             <AlertDialog open={clearingWeek} onOpenChange={setClearingWeek}>\n                 <AlertDialogContent>\n                     <AlertDialogHeader>\n                         <AlertDialogTitle>¿Limpiar Semana Completa?</AlertDialogTitle>\n                         <AlertDialogDescription>\n                            Esta acción eliminará todos los turnos y notas de la semana del{' '}\n                            {currentDate && weekDates.length > 0 ? format(startOfWeek(currentDate, { weekStartsOn: 1 }), 'dd/MM/yy', { locale: es }) : '?'} al{' '}\n                            {currentDate && weekDates.length > 0 ? format(endOfWeek(currentDate, { weekStartsOn: 1 }), 'dd/MM/yy', { locale: es }) : '?'}\n                            . No se puede deshacer.\n                         </AlertDialogDescription>\n                     </AlertDialogHeader>\n                     <AlertDialogFooter>\n                         <AlertDialogCancel onClick={() => setClearingWeek(false)}>Cancelar</AlertDialogCancel>\n                         <AlertDialogAction className=\"bg-destructive hover:bg-destructive/90\" onClick={handleClearWeek}>Limpiar Semana</AlertDialogAction>\n                     </AlertDialogFooter>\n                 </AlertDialogContent>\n             </AlertDialog>\n\n             {/* Department Mismatch Warning Dialog */}\n             <AlertDialog open={!!departmentMismatchWarning} onOpenChange={() => setDepartmentMismatchWarning(null)}>\n                  <AlertDialogContent>\n                      <AlertDialogHeader>\n                          <AlertDialogTitle>Advertencia de Departamento</AlertDialogTitle>\n                          <AlertDialogDescription>\n                              El colaborador <strong>{departmentMismatchWarning?.employee.name}</strong> no está asignado principalmente al departamento <strong>{departmentMismatchWarning?.targetDepartment.name}</strong>.\n                              <br /><br />\n                              ¿Deseas asignarlo de todas formas?\n                          </AlertDialogDescription>\n                      </AlertDialogHeader>\n                      <AlertDialogFooter>\n                          <AlertDialogCancel onClick={() => setDepartmentMismatchWarning(null)}>Cancelar</AlertDialogCancel>\n                          <AlertDialogAction onClick={handleConfirmDepartmentMismatch}>Asignar Igualmente</AlertDialogAction>\n                      </AlertDialogFooter>\n                  </AlertDialogContent>\n              </AlertDialog>\n\n\n        </main>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}